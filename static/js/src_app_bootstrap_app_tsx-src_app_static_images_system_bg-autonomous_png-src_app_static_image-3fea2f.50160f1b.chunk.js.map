{"version":3,"file":"static/js/src_app_bootstrap_app_tsx-src_app_static_images_system_bg-autonomous_png-src_app_static_image-3fea2f.50160f1b.chunk.js","mappings":"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","sources":["app/static/images/logo.svg","app/static.app.tsx","app/view/dao/hero/banner.tsx","app/view/dao/hero/infoCard.tsx","app/view/dao/hero/index.tsx","app/components/statisticCard.tsx","app/components/regimeTag.tsx","app/helpers/metaplex.ts","app/hooks/useNftMetaData.ts","app/components/avatarNFT.tsx","app/components/gradientAvatar/index.tsx","app/hooks/usePDB.ts","app/hooks/useMetaData.ts","app/hooks/useOwnerNFT.ts","app/hooks/dao/useValidDaoMember.ts","app/components/dao/daoMember.tsx","app/view/dao/publicDaos/daoCard.tsx","app/view/dao/publicDaos/search/index.tsx","app/view/createDao/components/cardRegime.tsx","app/view/createDao/setRule/flexible/regimeInput.tsx","app/view/dao/publicDaos/mechanisms.tsx","app/view/dao/publicDaos/typeOfDao.tsx","app/view/dao/publicDaos/search/daoProvider.ts","app/hooks/useSearchDao.ts","app/hooks/daos/usePublicDaos.ts","app/view/dao/publicDaos/index.tsx","app/view/dao/publicDaos/yourDao.tsx","app/hooks/daos/useAvailableDaos.ts","app/view/dao/availabelDaos/index.tsx","app/components/withdrawNotificationModal/proposalItem.tsx","app/hooks/proposal/useWithdrawableReceipt.ts","app/components/withdrawNotificationModal/index.tsx","app/view/dao/index.tsx","app/static/images/templates/solana.svg","app/templates/hooks/useTemplateWithProposal.ts","app/templates/templateLoader.tsx","app/view/templates/spl.tsx","app/static/images/sentre_logo.svg","app/view/templates/blank.tsx","app/view/templates/index.tsx","app/view/proposal/proposalList/index.tsx","app/view/dao/daoDetails/members.tsx","app/view/dao/daoDetails/daoInfo.tsx","app/helpers/distributor.ts","app/view/dao/daoDetails/joinDao.tsx","app/view/dao/daoDetails/daoOwnerAssets/nftsTreasury/index.tsx","app/hooks/useBalance.ts","shared/hooks/useMintDecimals.ts","app/view/dao/daoDetails/daoOwnerAssets/tokenTreasury/mintBalance.tsx","app/view/dao/daoDetails/daoOwnerAssets/tokenTreasury/index.tsx","app/view/dao/daoDetails/daoOwnerAssets/index.tsx","app/view/dao/daoDetails/index.tsx","app/view/proposal/index.tsx","app/view/proposal/proposalInitialization/consensusMechanismInput.tsx","app/components/consensusQuorumInput.tsx","app/view/proposal/proposalInitialization/durationInput.tsx","app/view/proposal/proposalInitialization/proposalPreview.tsx","app/view/proposal/proposalInitialization/index.tsx","app/view/createDao/initDAOHeader.tsx","app/model/createDao.controller.tsx","app/view/createDao/chooseType/index.tsx","app/components/formInputDetail.tsx","app/view/createDao/daoInputDetail/index.tsx","app/view/createDao/review/flexibleDaoReview.tsx","app/view/createDao/review/multisigDaoReview.tsx","app/hooks/dao/useFlexibleDao.ts","app/helpers/mutisigWallet.ts","app/hooks/dao/useMultisigDao.ts","app/view/createDao/review/confirmButton.tsx","app/view/createDao/review/index.tsx","app/components/cardNFT.tsx","app/view/createDao/components/searchNftCollection.tsx","app/view/createDao/components/modalNftCollection.tsx","app/view/createDao/setRule/flexible/tokenAddressInput/voteInput/voteNftInput.tsx","app/view/createDao/setRule/flexible/tokenAddressInput/voteInput/voteTokenInput.tsx","app/view/createDao/setRule/flexible/tokenAddressInput/voteInput/index.tsx","app/view/createDao/setRule/flexible/tokenAddressInput/index.tsx","app/view/createDao/setRule/privacy.tsx","shared/hooks/useMintSupply.ts","app/view/createDao/setRule/flexible/circulatingSupply/circulatingSupplyInput.tsx","app/view/createDao/setRule/flexible/circulatingSupply/circulatingSupplyInputNFT.tsx","app/view/createDao/setRule/flexible/circulatingSupply/index.tsx","app/view/createDao/setRule/flexible/index.tsx","app/view/createDao/setRule/multisig/regime.tsx","app/view/createDao/setRule/multisig/memberInput.tsx","app/view/createDao/setRule/multisig/daoMembers.tsx","app/view/createDao/setRule/multisig/index.tsx","app/view/createDao/setRule/index.tsx","app/view/createDao/initDAOBody.tsx","app/view/createDao/index.tsx","app/hooks/proposal/useReceipts.ts","app/view/proposal/proposalDetails/cardStatus.tsx","app/hooks/proposal/useProposalFee.tsx","app/view/proposal/proposalDetails/cardVote/nft/modalVoteNFT.tsx","app/constant/index.ts","app/view/proposal/proposalDetails/history/columnType.tsx","app/view/proposal/proposalDetails/history/columnPower.tsx","app/view/proposal/proposalDetails/withdraw.tsx","app/helpers/countDown.ts","app/hooks/proposal/useProposal.ts","app/view/proposal/proposalDetails/cardVote/lockedVoting.tsx","app/hooks/useOwnerNftByCollection.ts","app/view/proposal/proposalDetails/cardVote/nft/index.tsx","shared/hooks/useAccountBalance.ts","app/model/voteBid.controller.tsx","app/view/proposal/proposalDetails/cardVote/token/actionVote.tsx","app/view/proposal/proposalDetails/cardVote/token/index.tsx","app/view/proposal/proposalDetails/cardVote/index.tsx","app/view/proposal/modalTemplateInfo/index.tsx","app/hooks/proposal/useParseQuorumText.ts","app/view/proposal/proposalDetails/cardInfo.tsx","app/view/proposal/proposalDetails/cardProgress.tsx","app/view/proposal/proposalDetails/history/columnName.tsx","app/view/proposal/proposalDetails/history/column.tsx","app/view/proposal/proposalDetails/history/index.tsx","app/view/proposal/proposalDetails/index.tsx","app/view/dao/editDao/actionButton.tsx","app/view/dao/editDao/editDaoDetail.tsx","app/view/dao/editDao/rule/editMultisigDaoRule/daoMembers.tsx","app/view/dao/editDao/rule/editMultisigDaoRule/index.tsx","app/view/dao/editDao/rule/editFlexibleDaoRule.tsx","app/view/dao/editDao/rule/index.tsx","app/view/dao/editDao/transferAuthority.tsx","app/view/dao/editDao/editSupply.tsx","app/view/dao/editDao/index.tsx","app/components/loading/index.tsx","app/model/loading.controller.tsx","app/watcher/evens.watch.tsx","app/watcher/dao.watcher.tsx","app/watcher/proposal.watcher.tsx","app/model/receipt.controller.tsx","app/watcher/receipt.watcher.tsx","app/watcher/metadata.watcher.tsx","app/view/index.tsx","app/model/devTools.ts","app/model/index.ts","app/bootstrap.app.tsx","app/components/proposalStatus.tsx","app/components/rowSpaceBetween.tsx","app/components/rowSpaceVertical.tsx","app/configs/manifest.config.ts","app/configs/sol.config.ts","app/configs/index.ts","app/helpers/index.ts","app/helpers/ipfs.ts","app/helpers/safeWallet.ts","app/hooks/dao/useDaoMembers.ts","app/hooks/dao/useDaoData.ts","app/hooks/proposal/useProposalMetaData.ts","app/hooks/proposal/useProposalStatus.ts","app/model/daos.controller.tsx","app/model/proposal.controller.tsx","app/model/template.controller.tsx","app/model/tokenHolder.controller.tsx","app/templates/index.ts","shared/antd/mint/mintAvatar.tsx","shared/antd/mint/mintName.tsx","shared/antd/mint/mintSymbol.tsx","shared/antd/mint/mintSelection/mintTag.tsx","shared/antd/mint/mintSelection/mintCard.tsx","shared/antd/mint/mintSelection/loadMore.tsx","shared/antd/mint/mintSelection/hooks/useAllMintAddresses.ts","shared/hooks/useSortMints.ts","shared/antd/mint/mintSelection/hooks/useRecommendedMints.ts","shared/antd/mint/mintSelection/hooks/useSearchedMints.ts","shared/antd/mint/mintSelection/index.tsx","shared/antd/numericInput.tsx","shared/dataloader/constant.ts","shared/dataloader/request.ts","shared/dataloader/cache.ts","shared/dataloader/index.ts","shared/pdb/index.ts","shared/pdb/ipfs.ts","shared/runtime.ts","shared/storage.ts","shared/util.ts","app/templates|lazy|/^/.//.*//create$/|groupOptions: {}|namespace object","app/templates|lazy|/^/.//.*//info$/|groupOptions: {}|namespace object","app/templates|lazy|/^/.//.*//proposal$/|groupOptions: {}|namespace object"],"sourcesContent":["var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.9183 4.85506L23.3679 5.05527L20.2655 6.20646L16.8629 7.48279C16.6627 7.55787 16.4626 7.35766 16.5376 7.15746L17.8136 3.75391L18.9645 0.675704L19.1647 0.12513C18.7894 0.0500521 18.4141 0 18.0138 0H6.00459C5.60429 0 5.229 0.0500521 4.85371 0.100104L5.05386 0.650678L6.20474 3.75391L7.48072 7.18248C7.55578 7.38269 7.35562 7.5829 7.15547 7.50782L3.75287 6.20646L0.675517 5.05527L0.125096 4.85506C0.0250191 5.23045 0 5.60584 0 6.00626V18.0188C0 18.4192 0.0250191 18.7946 0.100077 19.17L0.650497 18.9698L3.75287 17.8186L7.15547 16.5422C7.35562 16.4672 7.55578 16.6674 7.48072 16.8676L6.20474 20.2711L5.05386 23.3493L4.85371 23.8999C5.229 23.975 5.60429 24 6.00459 24H18.0138C18.4141 24 18.7894 23.9499 19.1647 23.8999L18.9645 23.3493L17.8136 20.2711L16.5376 16.8676C16.4626 16.6674 16.6627 16.4672 16.8629 16.5422L20.2655 17.8186L23.3428 18.9698L23.8933 19.17C23.9683 18.7946 23.9933 18.4192 23.9933 18.0188V6.00626C24.0184 5.60584 23.9683 5.23045 23.9183 4.85506ZM14.336 14.0396C14.1358 13.9645 13.9357 14.1648 14.0107 14.365L15.9122 19.4953C14.8864 18.5693 13.5103 18.0188 12.0092 18.0188C10.508 18.0188 9.13198 18.5693 8.08118 19.4703L9.98263 14.3399C10.0577 14.1397 9.85754 13.9395 9.65738 14.0146L4.52846 15.9166C5.45417 14.8905 6.00459 13.5141 6.00459 12.0125C6.00459 10.5109 5.45417 9.13451 4.52846 8.08342L9.65738 10.0104C9.85754 10.0855 10.0577 9.8853 9.98263 9.68509L8.08118 4.55474C9.13198 5.45568 10.508 6.00626 12.0092 6.00626C13.5103 6.00626 14.8864 5.45568 15.9372 4.52972L14.0357 9.66006C13.9607 9.86027 14.1608 10.0605 14.361 9.9854L19.4899 8.05839C18.5642 9.13452 18.0138 10.5109 18.0138 12.0125C18.0138 13.5141 18.5642 14.8905 19.4899 15.9416L14.336 14.0396Z\",\n    fill: \"#F9DEB0\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.4429 3.45417L20.2655 4.65542L19.3648 5.00579C19.1647 5.08086 18.9645 4.88066 19.0396 4.68045L19.3898 3.75448L20.5908 0.576172C21.8417 1.15177 22.8675 2.20287 23.4429 3.45417Z\",\n    fill: \"#F9DEB0\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.65429 4.98076L3.7536 4.65542L0.576172 3.45417C1.15161 2.20287 2.20242 1.15177 3.45337 0.576172L4.65429 3.75448L5.00456 4.68045C5.0546 4.88066 4.87946 5.05584 4.65429 4.98076Z\",\n    fill: \"#F9DEB0\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.97819 19.3707L4.65294 20.2716L3.45202 23.475C2.17605 22.8743 1.15026 21.8483 0.549805 20.5719L3.75225 19.3707L4.65294 19.0203C4.87811 18.9703 5.05325 19.1454 4.97819 19.3707Z\",\n    fill: \"#F9DEB0\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.4426 20.5701C22.8421 21.8464 21.8163 22.8725 20.5403 23.4731L19.3644 20.2698L19.0142 19.3688C18.9391 19.1686 19.1393 18.9684 19.3394 19.0435L20.2401 19.3938L23.4426 20.5701Z\",\n    fill: \"#F9DEB0\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.0346 14.3665L15.9361 19.4968C14.8853 18.5709 13.5092 18.0203 12.0081 18.0203C10.5069 18.0203 9.13086 18.5709 8.08006 19.4718L9.98151 14.3415C10.0566 14.1413 9.85642 13.9411 9.65626 14.0161L4.52734 15.9181C5.45305 14.892 6.00347 13.5156 6.00347 12.014C6.00347 10.5125 5.45305 9.13605 4.52734 8.08495L9.65626 10.012C9.85642 10.087 10.0566 9.88683 9.98151 9.68662L8.08006 4.55628C9.13086 5.45721 10.5069 6.00779 12.0081 6.00779C13.5092 6.00779 14.8853 5.45721 15.9361 4.53125L14.0346 9.66159C13.9596 9.8618 14.1597 10.062 14.3599 9.98693L19.4888 8.05993C18.5631 9.13605 18.0127 10.5125 18.0127 12.014C18.0127 13.5156 18.5631 14.892 19.4888 15.9431L14.3599 14.0412C14.1347 13.9661 13.9596 14.1413 14.0346 14.3665Z\",\n    fill: \"#1A1311\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.9173 4.85688L23.3669 5.05709L20.2645 6.20829L16.8619 7.48462C16.6617 7.5597 16.4616 7.35949 16.5366 7.15928L17.8126 3.75573L18.9635 0.677527L19.1637 0.126953C19.664 0.227057 20.1144 0.377214 20.5647 0.577422L19.3638 3.75573L19.0135 4.6817C18.9385 4.88191 19.1386 5.08211 19.3388 5.00704L20.2395 4.65667L23.4169 3.45542C23.6671 3.90589 23.8172 4.38138 23.9173 4.85688Z\",\n    fill: \"#1A1311\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.1544 7.48462L3.7518 6.20829L0.674444 5.05709L0.124023 4.85688C0.2241 4.35636 0.374215 3.90589 0.574368 3.45542L3.7518 4.65667L4.65249 5.00704C4.85264 5.08211 5.05279 4.88191 4.97773 4.6817L4.65249 3.75573L3.45157 0.577422C3.90191 0.377214 4.35226 0.227057 4.85264 0.126953L5.05279 0.677527L6.20367 3.75573L7.47965 7.1843C7.55471 7.38451 7.37957 7.5597 7.1544 7.48462Z\",\n    fill: \"#1A1311\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.47965 16.8684L6.20367 20.2719L5.05279 23.3501L4.85264 23.9007C4.35226 23.8006 3.90191 23.6504 3.45157 23.4502L4.65249 20.2719L5.00275 19.371C5.07781 19.1708 4.87766 18.9706 4.67751 19.0456L3.7518 19.371L0.574368 20.5722C0.374215 20.1218 0.2241 19.6713 0.124023 19.1708L0.674444 18.9706L3.7518 17.8194L7.1544 16.543C7.37957 16.4679 7.55471 16.6431 7.47965 16.8684Z\",\n    fill: \"#1A1311\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.0386 19.3714L19.3888 20.2724L20.5897 23.4507C20.1394 23.6509 19.6891 23.8261 19.1887 23.9011L18.9885 23.3506L17.8126 20.2724L16.5366 16.8688C16.4616 16.6686 16.6617 16.4684 16.8619 16.5435L20.2645 17.8198L23.3418 18.971L23.8923 19.1712C23.7922 19.6717 23.6421 20.1222 23.4419 20.5727L20.2645 19.3714L19.3638 19.0211C19.1386 18.971 18.9635 19.1462 19.0386 19.3714Z\",\n    fill: \"#1A1311\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.b14551bd17f53fea785636a049f9dae9.svg\";\nexport { ForwardRef as ReactComponent };","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"logo\", {\n  enumerable: true,\n  get: function () {\n    return _logo.default;\n  }\n});\nexports.panels = void 0;\nObject.defineProperty(exports, \"readme\", {\n  enumerable: true,\n  get: function () {\n    return _README.default;\n  }\n});\n\nvar _panel = _interopRequireDefault(require(\"./static/images/panel.png\"));\n\nvar _panel2 = _interopRequireDefault(require(\"./static/images/panel1.png\"));\n\nvar _panel3 = _interopRequireDefault(require(\"./static/images/panel2.png\"));\n\nvar _logo = _interopRequireDefault(require(\"./static/images/logo.svg\"));\n\nvar _README = _interopRequireDefault(require(\"./static/docs/README.md\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst panels = [_panel.default, _panel2.default, _panel3.default];\nexports.panels = panels;","import { Col, Row, Space, Typography } from 'antd'\n\nconst Banner = () => {\n  return (\n    <Row gutter={[16, 16]} justify=\"center\">\n      <Col>\n        <Space direction=\"vertical\" size={0}>\n          <Typography.Title\n            level={1}\n            style={{ fontSize: 72, textAlign: 'center' }}\n          >\n            Let’s build\n          </Typography.Title>\n          <Typography.Title\n            level={1}\n            style={{ fontSize: 72, textAlign: 'center' }}\n            className=\"title-underline\"\n          >\n            YOUR OWN DAO.\n          </Typography.Title>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Typography.Paragraph\n          type=\"secondary\"\n          style={{ fontSize: 20, textAlign: 'center' }}\n        >\n          Customize the DAO to your purpose - No coding needed.\n        </Typography.Paragraph>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Banner\n","import { ReactNode } from 'react'\n\nimport { Card, Col, Row, Space, Typography } from 'antd'\n\nexport type InfoCardProps = {\n  icon?: ReactNode\n  title?: string\n  value?: string\n}\n\nconst InfoCard = ({ icon, title, value }: InfoCardProps) => {\n  return (\n    <Card\n      bordered={false}\n      style={{\n        background: 'transparent',\n        borderLeft: '1px solid',\n        borderRadius: 'unset',\n      }}\n      bodyStyle={{\n        padding: '0 24px',\n      }}\n    >\n      <Row gutter={[5, 5]}>\n        <Col span={24}>\n          <Space>\n            {icon}\n            <Typography.Text type=\"secondary\">{title}</Typography.Text>\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Typography.Title level={4}>{value}</Typography.Title>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default InfoCard\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Col, Row } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport Banner from './banner'\nimport InfoCard from './infoCard'\n\nimport { numeric } from 'shared/util'\nimport { AppState } from 'app/model'\n\nimport './index.less'\n\nconst Hero = () => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const proposal = useSelector((state: AppState) => state.proposal)\n\n  const executeProposal = useMemo(() => {\n    let total = 0\n    for (const proposalAddr in proposal) {\n      const { executed } = proposal[proposalAddr]\n      if (executed) total++\n      continue\n    }\n    return total\n  }, [proposal])\n\n  return (\n    <Row className=\"interdao-banner\" justify=\"center\">\n      <Col xs={24} lg={18}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Banner />\n          </Col>\n          <Col xs={24} sm={12} lg={8}>\n            <InfoCard\n              icon={<IonIcon name=\"earth-outline\" />}\n              title=\"Total DAOs\"\n              value={numeric(Object.keys(daos).length).format('0,0')}\n            />\n          </Col>\n          <Col xs={24} sm={12} lg={8}>\n            <InfoCard\n              icon={<IonIcon name=\"pencil-outline\" />}\n              title=\"Total Proposals\"\n              value={numeric(Object.keys(proposal).length).format('0,0')}\n            />\n          </Col>\n          <Col xs={24} sm={12} lg={8}>\n            <InfoCard\n              icon={<IonIcon name=\"thumbs-up-outline\" />}\n              title=\"Total Executed Proposals\"\n              value={numeric(executeProposal).format('0,0')}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Hero\n","import { ReactNode } from 'react'\n\nimport { Space, Typography } from 'antd'\n\nexport type StatisticCardProps = {\n  title: string\n  value: string | number | ReactNode\n}\nconst StatisticCard = ({ title, value }: StatisticCardProps) => {\n  return (\n    <Space direction=\"vertical\">\n      <Typography.Text className=\"caption\" type=\"secondary\">\n        {title}\n      </Typography.Text>\n      {['number', 'string'].includes(typeof value) ? (\n        <Typography.Text>{value}</Typography.Text>\n      ) : (\n        value\n      )}\n    </Space>\n  )\n}\n\nexport default StatisticCard\n","import { useMemo } from 'react'\nimport { DaoRegime, DaoRegimes } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\n\nimport { Tag } from 'antd'\n\nexport type RegimeTagProps = { regime: DaoRegime; special?: boolean }\n\nconst RegimeTag = ({ regime, special }: RegimeTagProps) => {\n  const tag = useMemo(() => {\n    if (isEqual(regime, DaoRegimes.Dictatorial)) return 'Dictatorial'\n    if (isEqual(regime, DaoRegimes.Democratic)) return 'Democratic'\n    if (isEqual(regime, DaoRegimes.Autonomous)) return 'Autonomous'\n    return 'DAO Regime'\n  }, [regime])\n\n  const className = special ? 'regime-tag dao-tag' : 'dao-tag'\n\n  return (\n    <Tag className={className} style={{ margin: 0 }}>\n      {tag}\n    </Tag>\n  )\n}\n\nexport default RegimeTag\n","import axios from 'axios'\nimport { Connection, programs } from '@metaplex/js'\nimport { PublicKey } from '@solana/web3.js'\n\nimport { rpc } from 'shared/runtime'\n\nconst {\n  metadata: { Metadata, MetadataData },\n} = programs\n\nconst TOKEN_METADATA_PROGRAM_ID = new PublicKey(\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\n)\n\nconst connection = new Connection(rpc)\n\nexport type MetadataType = InstanceType<typeof Metadata>\nexport type MetadataDataType = InstanceType<typeof MetadataData>\n\nexport const fetchListNTFs = async (\n  walletAddress: string,\n): Promise<Record<string, MetadataDataType[]>> => {\n  const ownerPublickey = walletAddress\n  const nftsmetadata = await Metadata.findDataByOwner(\n    connection,\n    ownerPublickey,\n  )\n  let listNFTs: Record<string, MetadataDataType[]> = {}\n  nftsmetadata.forEach((nft: MetadataDataType) => {\n    if (nft.collection) {\n      listNFTs[nft.collection.key] = listNFTs[nft.collection.key]\n        ? [...listNFTs[nft.collection.key], nft]\n        : [nft]\n    }\n  })\n  return listNFTs\n}\n\nexport const fetchYourOwnerNTFs = async (\n  ownerAddress: string,\n): Promise<MetadataDataType[]> => {\n  const nftsmetadata = await Metadata.findDataByOwner(connection, ownerAddress)\n  return nftsmetadata\n}\n\nexport const getNftMetaData = async (\n  tokenMint: string,\n): Promise<MetadataType> => {\n  const tokenMetadata = await Metadata.findByMint(connection, tokenMint)\n  return tokenMetadata\n}\n\nexport const getNftPDA = async (tokenMint: string) => {\n  const metadataPDA = await Metadata.getPDA(new PublicKey(tokenMint))\n  return metadataPDA\n}\n\nexport const getInfoNFT = async (address: string) => {\n  const nftInfo = await Metadata.getInfo(connection, new PublicKey(address))\n  return nftInfo\n}\n\nexport const deserializeData = async (dataBuffer: Buffer) => {\n  return MetadataData.deserialize(dataBuffer)\n}\n\nexport const fetchNftFromURI = async (URL: string) => {\n  const data = await axios.get(URL)\n  return data\n}\n\nexport const getListAccountNFTsBelongToCollection = async (\n  collectionAddress: string,\n) => {\n  const accounts = await connection.getProgramAccounts(\n    TOKEN_METADATA_PROGRAM_ID,\n    {\n      commitment: 'confirmed',\n      filters: [\n        { dataSize: 679 },\n        {\n          memcmp: {\n            offset: 368,\n            bytes: collectionAddress,\n          },\n        },\n      ],\n    },\n  )\n  return accounts\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport axios from 'axios'\n\nimport { DataLoader } from 'shared/dataloader'\nimport { getNftMetaData, MetadataType } from 'app/helpers/metaplex'\n\nconst useNftMetaData = (mintAddress: string) => {\n  const [metaData, setMetaData] = useState<MetadataType>()\n  const [nftInfo, setNftInfo] = useState<any>()\n  const [loading, setLoading] = useState(false)\n\n  const getMetaData = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) {\n      setMetaData(undefined)\n      return setNftInfo(undefined)\n    }\n    setLoading(true)\n    try {\n      const metadata = await DataLoader.load(\n        'getNftMetadata' + mintAddress,\n        () => getNftMetaData(mintAddress),\n        { cache: { ttl: 99999999 } },\n      )\n      setMetaData(metadata)\n\n      const url = metadata.data.data.uri\n      const response = await DataLoader.load(\n        'getNftMetadataUrl' + mintAddress,\n        () => axios.get(url),\n        { cache: { ttl: 99999999 } },\n      )\n      setNftInfo(response.data)\n    } catch (error: any) {\n      setMetaData(undefined)\n      setNftInfo(undefined)\n    } finally {\n      setLoading(false)\n    }\n  }, [mintAddress])\n\n  useEffect(() => {\n    getMetaData()\n  }, [getMetaData])\n\n  return { metadata: metaData, nftInfo, loading }\n}\n\nexport default useNftMetaData\n","import { ReactNode } from 'react'\n\nimport { Avatar, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport useNftMetaData from 'app/hooks/useNftMetaData'\nimport IMAGE_DEFAULT from 'app/static/images/system/nft.jpeg'\n\ntype AvatarNFTProps = {\n  mintAddress: string\n  size?: number\n  icon?: ReactNode\n}\n\nconst AvatarNFT = ({\n  mintAddress,\n  size = 24,\n  icon = <IonIcon name=\"diamond-outline\" />,\n}: AvatarNFTProps) => {\n  const { nftInfo } = useNftMetaData(mintAddress)\n  return (\n    <Space>\n      <Avatar shape=\"square\" size={size} src={nftInfo?.image || IMAGE_DEFAULT}>\n        {icon}\n      </Avatar>\n      <Typography.Text style={{ fontSize: size > 24 ? 38 : undefined }}>\n        {' '}\n        NFT\n      </Typography.Text>\n    </Space>\n  )\n}\n\nexport default AvatarNFT\n","import BN from 'bn.js'\n\nimport { Avatar, AvatarProps } from 'antd'\n\nimport gradients from './gradients.json'\n\nconst string2Number = (seed: string, limit: number) => {\n  const buf = Buffer.from(seed)\n  const index = new BN(buf).mod(new BN(limit))\n  return Number(index)\n}\n\nexport type GradientAvatarProps = { seed?: string; avatarProps?: AvatarProps }\n\nconst GradientAvatar = ({\n  seed = Math.random().toString(),\n  avatarProps = {},\n}: GradientAvatarProps) => {\n  const direction = string2Number(seed, 360)\n  const { name, colors } = gradients[string2Number(seed, gradients.length)]\n  return (\n    <Avatar\n      style={{\n        background: `linear-gradient(${direction}deg, ${colors.join(', ')})`,\n      }}\n      alt={name}\n      {...avatarProps}\n    />\n  )\n}\n\nexport default GradientAvatar\n","import { useMemo } from 'react'\nimport { useWallet } from '@senhub/providers'\n\nimport configs from 'app/configs'\nimport PDB from 'shared/pdb'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst usePDB = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const pdb = useMemo(() => {\n    return new PDB(walletAddress).createInstance(appId)\n  }, [walletAddress])\n\n  return pdb\n}\n\nexport default usePDB\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { DaoData } from '@interdao/core'\n\nimport usePDB from './usePDB'\nimport IPFS from 'app/helpers/ipfs'\nimport { AppState } from 'app/model'\nimport { getCID } from 'app/helpers'\nimport { LocalMetadata } from 'app/watcher/metadata.watcher'\nimport { MetaData } from 'app/model/createDao.controller'\n\nconst ipfs = new IPFS()\n\nconst useMetaData = (daoAddress: string) => {\n  const [metaData, setMetaData] = useState<MetaData>()\n  const [loading, setLoading] = useState(false)\n  const daos = useSelector((state: AppState) => state.daos)\n  const pdb = usePDB()\n\n  const getMetaData = useCallback(async () => {\n    if (!account.isAddress(daoAddress)) return setMetaData(undefined)\n    setLoading(true)\n    const data = (await pdb.getItem(daoAddress)) as LocalMetadata\n    const { metadata: digest } = daos[daoAddress] || ({} as DaoData)\n    if (!digest) return setLoading(false)\n    const cid = getCID(digest)\n    if (data && cid === data.cid) {\n      setMetaData(data)\n      return setLoading(false)\n    }\n\n    const metadata: MetaData = await ipfs.get(cid)\n    if (!metadata) return setLoading(false)\n\n    const localMetadata = { ...metadata, cid }\n    await pdb.setItem(daoAddress, localMetadata)\n\n    setMetaData(metadata)\n    return setLoading(false)\n  }, [daoAddress, daos, pdb])\n\n  useEffect(() => {\n    getMetaData()\n  }, [getMetaData])\n\n  return { metaData, loading }\n}\n\nexport default useMetaData\n","import { useCallback, useEffect, useState } from 'react'\nimport { useAccount } from '@senhub/providers'\nimport { utils, web3, BN } from '@project-serum/anchor'\n\nimport { fetchYourOwnerNTFs, MetadataDataType } from 'app/helpers/metaplex'\nimport { DataLoader } from 'shared/dataloader'\n\nconst useOwnerNFT = (ownerPublickey: string) => {\n  const [nfts, setNfts] = useState<MetadataDataType[]>([])\n  const [nftsFiltered, setNftFiltered] = useState<MetadataDataType[]>()\n  const { accounts } = useAccount()\n\n  const fetchNFTs = useCallback(async () => {\n    if (!ownerPublickey) return setNfts([])\n    const nftsFetching = await DataLoader.load(\n      'fetchYourOwnerNTFs' + ownerPublickey,\n      () => fetchYourOwnerNTFs(ownerPublickey),\n    )\n    setNfts(nftsFetching)\n  }, [ownerPublickey])\n\n  useEffect(() => {\n    fetchNFTs()\n  }, [fetchNFTs])\n\n  const filterNFTs = useCallback(async () => {\n    let nftsFiltered: MetadataDataType[] = []\n    await Promise.all(\n      nfts.map(async (nft: MetadataDataType) => {\n        const nftTokenAccount = await utils.token.associatedAddress({\n          mint: new web3.PublicKey(nft.mint),\n          owner: new web3.PublicKey(ownerPublickey),\n        })\n        let nftAccountData = accounts[nftTokenAccount.toBase58()]\n        if (new BN(nftAccountData?.amount.toString()).eq(new BN(1))) {\n          nftsFiltered.push(nft)\n        }\n      }),\n    )\n    return setNftFiltered(nftsFiltered)\n  }, [accounts, nfts, ownerPublickey])\n\n  useEffect(() => {\n    filterNFTs()\n  }, [filterNFTs])\n\n  return { nfts: nftsFiltered }\n}\n\nexport default useOwnerNFT\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useAccount, useWallet } from '@senhub/providers'\n\nimport useMetaData from 'app/hooks/useMetaData'\nimport useOwnerNFT from '../useOwnerNFT'\nimport { useDaoData } from './useDaoData'\n\nconst useValidDaoMember = (daoAddress: string) => {\n  const [validMember, setValidMember] = useState(false)\n  const [checking, setChecking] = useState(true)\n  const { accounts } = useAccount()\n  const daoData = useDaoData(daoAddress)\n  const { metaData } = useMetaData(daoAddress)\n  const {\n    wallet: { address: myAddress },\n  } = useWallet()\n\n  const { nfts } = useOwnerNFT(myAddress)\n\n  const isMemberOnlyNFT = useMemo(() => {\n    if (!nfts || !daoData?.mint) return false\n    for (const nft of nfts)\n      if (nft.collection?.key === daoData.mint.toBase58()) return true\n\n    return false\n  }, [daoData?.mint, nfts])\n\n  const isMemberTokenDAO = useMemo(() => {\n    if (!daoData?.mint) return false\n    const mints = []\n    for (const { mint } of Object.values(accounts)) mints.push(mint)\n    return mints.includes(daoData?.mint.toBase58())\n  }, [daoData?.mint, accounts])\n\n  const isMemberMultisig = useMemo(() => {\n    if (!metaData) return false\n    const { members } = metaData\n    let valid = false\n    for (const { walletAddress } of members)\n      if (walletAddress === myAddress) {\n        valid = true\n        break\n      }\n    return valid\n  }, [metaData, myAddress])\n\n  const checkDaoMember = useCallback(() => {\n    if (!metaData || !daoData?.mint) return setChecking(true)\n    const { daoType } = metaData\n    let valid = false\n    if (daoType === 'flexible-dao' && daoData?.isNft) valid = isMemberOnlyNFT\n\n    if (daoType === 'flexible-dao' && !daoData?.isNft) valid = isMemberTokenDAO\n\n    if (daoType === 'multisig-dao') valid = isMemberMultisig\n\n    setValidMember(valid)\n    setChecking(false)\n  }, [\n    daoData?.isNft,\n    daoData?.mint,\n    isMemberMultisig,\n    isMemberOnlyNFT,\n    isMemberTokenDAO,\n    metaData,\n  ])\n\n  useEffect(() => {\n    checkDaoMember()\n  }, [checkDaoMember])\n\n  return { validMember, checking }\n}\n\nexport default useValidDaoMember\n","import { Spin } from 'antd'\nimport { useDaoMembers } from 'app/hooks/dao'\nimport useMetaData from 'app/hooks/useMetaData'\nimport { useMemo } from 'react'\nimport { numeric } from 'shared/util'\n\nconst DaoMember = ({ daoAddress }: { daoAddress: string }) => {\n  const members = useDaoMembers(daoAddress)\n  const { metaData } = useMetaData(daoAddress)\n  const isMultisig = metaData?.daoType === 'multisig-dao'\n\n  const amountMembers = useMemo(() => {\n    if (!isMultisig) return members\n    const { members: daoMembers } = metaData\n    return daoMembers.length\n  }, [isMultisig, members, metaData])\n\n  return (\n    <Spin spinning={!amountMembers} size=\"small\">\n      <span>{numeric(amountMembers).format('0,0')}</span>\n    </Spin>\n  )\n}\n\nexport default DaoMember\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { useUI } from '@senhub/providers'\n\nimport {\n  Avatar,\n  Button,\n  Card,\n  Col,\n  Image,\n  Row,\n  Space,\n  Spin,\n  Tag,\n  Tooltip,\n  Typography,\n} from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport StatisticCard from 'app/components/statisticCard'\nimport RegimeTag from 'app/components/regimeTag'\nimport AvatarNFT from 'app/components/avatarNFT'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport GradientAvatar from 'app/components/gradientAvatar'\n\nimport { AppState } from 'app/model'\nimport { numeric, shortenAddress } from 'shared/util'\nimport useMetaData from 'app/hooks/useMetaData'\nimport useValidDaoMember from 'app/hooks/dao/useValidDaoMember'\nimport { getIcon, validURL } from 'app/helpers'\n\nimport autonomous from 'app/static/images/system/bg-autonomous.png'\nimport democratic from 'app/static/images/system/bg-democratic.png'\nimport dictatorial from 'app/static/images/system/bg-dictatorial.png'\nimport DaoMember from 'app/components/dao/daoMember'\n\nexport type DaoCardProps = { daoAddress: string }\nexport type DaoCardBackground = 'autonomous' | 'democratic' | 'dictatorial'\nconst DAO_CARD_BG = {\n  autonomous,\n  democratic,\n  dictatorial,\n}\nconst PAGE_PADDING = 24\nconst HEIGHT_RATIO = 1.777777\nconst MAX_WIDTH_RATE = 24 / 18 // full screen is 24 col, max width is 18 col\n\nconst DaoCard = ({ daoAddress }: DaoCardProps) => {\n  const history = useHistory()\n  const { regime, nonce, mint, isPublic, isNft } = useSelector(\n    (state: AppState) => state.daos[daoAddress],\n  )\n  const {\n    ui: { width },\n  } = useUI()\n\n  const { metaData, loading } = useMetaData(daoAddress)\n  const { validMember } = useValidDaoMember(daoAddress)\n  const parseRegime = Object.keys(regime)?.[0]\n\n  const heightRatio = useMemo(() => {\n    if (width < 768) return HEIGHT_RATIO\n    if (width < 1200) return HEIGHT_RATIO * 2\n    return HEIGHT_RATIO * 3\n  }, [width])\n\n  const handleClick = async () => {\n    if (loading)\n      return window.notify({\n        type: 'warning',\n        description: 'Data is loading',\n      })\n    if (!validMember && !isPublic)\n      return window.notify({\n        type: 'warning',\n        description: 'You are not a member of this DAO',\n      })\n\n    history.push(`dao/${daoAddress}`)\n  }\n\n  const isMobile = width < 768\n  const desktopWidth = width > 992 ? width / MAX_WIDTH_RATE : width\n\n  return (\n    <Row gutter={[0, 0]} className=\"dao-card-wrapper\" onClick={handleClick}>\n      <Col\n        span={24}\n        className=\"dao-card-img\"\n        style={{\n          height: !isMobile\n            ? (desktopWidth - PAGE_PADDING * 2) / heightRatio\n            : (width - PAGE_PADDING) / heightRatio,\n        }}\n      >\n        <Image\n          preview={false}\n          src={DAO_CARD_BG[parseRegime as DaoCardBackground]}\n        />\n      </Col>\n      <Col className=\"regime-tag-wrapper\">\n        <RegimeTag regime={regime} special />\n      </Col>\n      <Col span={24}>\n        <Spin spinning={loading} tip=\"Loading...\">\n          <Card bordered={false}>\n            <Row gutter={[20, 20]}>\n              <Col span={24} style={{ minHeight: 88 }}>\n                <Row gutter={[16, 16]} wrap={false} align=\"top\">\n                  <Col>\n                    {!metaData?.image ? (\n                      <GradientAvatar\n                        seed={daoAddress}\n                        avatarProps={{ shape: 'square', size: 68 }}\n                      />\n                    ) : (\n                      <Avatar shape=\"square\" size={68} src={metaData?.image} />\n                    )}\n                  </Col>\n                  <Col flex=\"auto\">\n                    <Space direction=\"vertical\" size={0}>\n                      <Tooltip\n                        title={\n                          metaData?.daoName ? metaData.daoName : daoAddress\n                        }\n                      >\n                        <Typography.Title\n                          style={{ marginTop: -6 }}\n                          level={4}\n                          ellipsis={{ rows: 2 }}\n                        >\n                          {metaData?.daoName\n                            ? metaData.daoName\n                            : shortenAddress(daoAddress)}\n                        </Typography.Title>\n                      </Tooltip>\n                      <Tag className=\"dao-tag\" style={{ margin: 0 }}>\n                        {isPublic ? 'Public' : 'Member Only'}\n                      </Tag>\n                      <Space size={2} style={{ marginLeft: -3 }}>\n                        {metaData?.optionals?.map(\n                          (url, idx) =>\n                            validURL(url) && (\n                              <Button\n                                size=\"small\"\n                                type=\"text\"\n                                onClick={() => window.open(url, '_blank')}\n                                icon={<IonIcon name={getIcon(url)} />}\n                                key={idx}\n                              />\n                            ),\n                        )}\n                      </Space>\n                    </Space>\n                  </Col>\n                </Row>\n              </Col>\n              <Col span={24}>\n                <Row gutter={[16, 16]}>\n                  <Col span={8}>\n                    <StatisticCard\n                      title=\"Vote By\"\n                      value={\n                        isNft ? (\n                          <AvatarNFT mintAddress={mint.toBase58()} />\n                        ) : (\n                          <Space>\n                            <MintAvatar mintAddress={mint.toBase58()} />\n                            <MintSymbol mintAddress={mint.toBase58()} />\n                          </Space>\n                        )\n                      }\n                    />\n                  </Col>\n                  <Col span={8}>\n                    <StatisticCard\n                      title=\"Proposals\"\n                      value={numeric(Number(nonce)).format('0,0')}\n                    />\n                  </Col>\n                  <Col span={8}>\n                    <StatisticCard\n                      title=\"Members\"\n                      value={<DaoMember daoAddress={daoAddress} />}\n                    />\n                  </Col>\n                </Row>\n              </Col>\n              <Col span={24} style={{ minHeight: 44 }}>\n                <Typography.Paragraph\n                  style={{ margin: 0 }}\n                  type=\"secondary\"\n                  ellipsis={{ rows: 2 }}\n                >\n                  {metaData?.description}\n                </Typography.Paragraph>\n              </Col>\n            </Row>\n          </Card>\n        </Spin>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoCard\n","import { Button, Input, Spin } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport { LoadingOutlined } from '@ant-design/icons'\n\ntype SearchDaoProps = {\n  onSearch: (keyword: string) => void\n  loading?: boolean\n}\n\nconst SearchDao = ({ onSearch, loading = false }: SearchDaoProps) => {\n  return (\n    <Input\n      prefix={\n        <Button\n          type=\"text\"\n          size=\"small\"\n          icon={\n            loading ? (\n              <Spin indicator={<LoadingOutlined style={{ fontSize: 14 }} />} />\n            ) : (\n              <IonIcon name=\"search-outline\" />\n            )\n          }\n        />\n      }\n      placeholder=\"Search by name, address\"\n      style={{ width: '100%' }}\n      onChange={(e) => onSearch(e.target.value)}\n    />\n  )\n}\nexport default SearchDao\n","import { DaoRegime } from '@interdao/core'\n\nimport { Card, Image, Typography } from 'antd'\n\nimport autonomous from 'app/static/images/system/bg-autonomous.png'\nimport democratic from 'app/static/images/system/bg-democratic.png'\nimport dictatorial from 'app/static/images/system/bg-dictatorial.png'\nimport { DaoCardBackground } from '../../dao/publicDaos/daoCard'\n\nconst DAO_CARD_BG = {\n  autonomous,\n  democratic,\n  dictatorial,\n}\n\nconst CardRegime = ({\n  regime,\n  onChange = () => {},\n  active = true,\n}: {\n  regime: DaoRegime\n  onChange?: (regime: DaoRegime) => void\n  active?: boolean\n}) => {\n  return (\n    <Card\n      bordered={false}\n      style={{ overflow: 'hidden', cursor: 'pointer' }}\n      bodyStyle={{ padding: 0 }}\n      onClick={() => onChange(regime)}\n      className={`card-regime ${active ? 'active' : ''}`}\n    >\n      <Image\n        src={DAO_CARD_BG[Object.keys(regime)[0] as DaoCardBackground]}\n        preview={false}\n      />\n      <Typography.Text\n        style={{\n          position: 'absolute',\n          bottom: 0,\n          left: 0,\n          textAlign: 'center',\n          width: '100%',\n          padding: 4,\n          backdropFilter: 'blur(4px)',\n          color: '#fff',\n          textTransform: 'capitalize',\n          fontWeight: 400,\n        }}\n      >\n        {Object.keys(regime)[0]}\n      </Typography.Text>\n    </Card>\n  )\n}\n\nexport default CardRegime\n","import isEqual from 'react-fast-compare'\nimport { DaoRegime, DaoRegimes } from '@interdao/core'\n\nimport { Button, Row, Col, Space, Typography, Popover } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport CardRegime from 'app/view/createDao/components/cardRegime'\n\nexport const REGIME_LIST = [\n  DaoRegimes.Dictatorial,\n  DaoRegimes.Democratic,\n  DaoRegimes.Autonomous,\n]\n\ntype RegimeInputProps = {\n  value: DaoRegime\n  onChangeRegime: (regime: DaoRegime) => void\n}\n\nconst RegimeInput = ({ value, onChangeRegime }: RegimeInputProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space>\n          <Typography.Text>DAO Regime</Typography.Text>\n          <Popover\n            overlayStyle={{ maxWidth: 300 }}\n            trigger=\"click\"\n            content={\n              <Row gutter={[16, 16]}>\n                <Col span={24}>\n                  <Typography.Title level={5}>\n                    What is DAO Regime?\n                  </Typography.Title>\n                </Col>\n                <Col span={24}>\n                  <Space direction=\"vertical\">\n                    <Typography.Text>\n                      <strong>Dictatorial:</strong> Only DAO owner can create\n                      and execute proposals.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Democratic:</strong> Community can create\n                      proposals, DAO owner execute proposals.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Autonomous:</strong> Community can create and\n                      execute proposals.\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            }\n          >\n            <Button\n              type=\"text\"\n              size=\"small\"\n              icon={<IonIcon name=\"information-circle-outline\" />}\n            />\n          </Popover>\n        </Space>\n      </Col>\n      {REGIME_LIST.map((regime, idx) => (\n        <Col xs={24} md={8} key={idx}>\n          <CardRegime\n            regime={regime}\n            onChange={onChangeRegime}\n            active={isEqual(value, regime)}\n          />\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default RegimeInput\n","import { Select } from 'antd'\nimport { REGIME_LIST } from 'app/view/createDao/setRule/flexible/regimeInput'\n\ntype MechanismsProps = { value: string; onSort: (value: string) => void }\n\nconst Mechanisms = ({ onSort, value }: MechanismsProps) => {\n  return (\n    <Select\n      value={value}\n      style={{ textTransform: 'capitalize', width: '100%' }}\n      onChange={onSort}\n    >\n      <Select.Option value=\"all\">All mechanisms</Select.Option>\n      {REGIME_LIST.map((regime, idx) => {\n        const value = Object.keys(regime)[0]\n        return (\n          <Select.Option\n            key={idx}\n            value={value}\n            style={{ textTransform: 'capitalize' }}\n          >\n            {value}\n          </Select.Option>\n        )\n      })}\n    </Select>\n  )\n}\n\nexport default Mechanisms\n","import { Select } from 'antd'\n\ntype TypeOfDAOProps = {\n  value: string\n  setType: (type: string) => void\n}\n\nconst TypeOfDAO = ({ value, setType }: TypeOfDAOProps) => {\n  return (\n    <Select value={value} style={{ width: '100%' }} onChange={setType}>\n      <Select.Option value=\"all\">All Type of DAO</Select.Option>\n      <Select.Option value=\"flexible-dao\">Flexible DAO</Select.Option>\n      <Select.Option value=\"multisig-dao\">Multisig DAO</Select.Option>\n    </Select>\n  )\n}\n\nexport default TypeOfDAO\n","import { MetaData } from 'app/model/createDao.controller'\nimport lunr, { Index } from 'lunr'\n\nexport type SearchData = { daoAddress: string } & MetaData\nexport type RegisterDaoData = Record<string, SearchData>\nclass DaoProvider {\n  private daoMap: Map<string, SearchData>\n  private engine: Index | undefined\n  register: RegisterDaoData\n\n  constructor(register: RegisterDaoData) {\n    this.register = register\n    this.daoMap = new Map<string, SearchData>()\n    this.engine = lunr(function () {\n      this.ref('daoAddress')\n      this.field('daoAddress')\n      this.field('daoName')\n      this.field('description')\n      Object.keys(register).forEach((address: string) => {\n        const doc = register[address]\n        if (doc) this.add(doc)\n      })\n    })\n    // build dao map\n    this._setDaoMap()\n  }\n\n  private _setDaoMap = async (): Promise<[Map<string, SearchData>]> => {\n    Object.keys(this.register).forEach((daoAddress) =>\n      this.daoMap.set(daoAddress, this.register[daoAddress]),\n    )\n    return [this.daoMap]\n  }\n\n  all = async (): Promise<SearchData[]> => {\n    const [daoMap] = await this._setDaoMap()\n    return Array.from(daoMap.values())\n  }\n\n  findByAddress = async (addr: string): Promise<string[] | undefined> => {\n    const [daoMap] = await this._setDaoMap()\n    if (daoMap.has(addr)) return [addr]\n    return\n  }\n\n  find = async (keyword: string, limit = 10): Promise<string[] | undefined> => {\n    const [daoMap] = await this._setDaoMap()\n    const engine = this.engine\n    if (!engine) return\n    let daos: SearchData[] = []\n    if (!keyword) return\n\n    const fuzzy = keyword + '~1'\n    engine.search(fuzzy).forEach(({ ref }) => {\n      if (daos.findIndex(({ daoAddress }) => daoAddress === ref) < 0) {\n        const dao = daoMap.get(ref)\n        if (dao) daos.push(dao)\n      }\n    })\n    const nextDaos: string[] = []\n    daos.slice(0, limit).forEach(({ daoAddress }) => {\n      if (daoAddress) nextDaos.push(daoAddress)\n    })\n    return nextDaos\n  }\n}\n\nexport default DaoProvider\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\n\nimport DaoProvider, {\n  RegisterDaoData,\n} from 'app/view/dao/publicDaos/search/daoProvider'\nimport usePDB from './usePDB'\nimport { MetaData } from 'app/model/createDao.controller'\n\nconst useSearchDao = (keyword: string, daoAddresses: string[]) => {\n  const [metaData, setMetaData] = useState<RegisterDaoData>()\n  const [searchData, setSearchData] = useState<string[]>()\n  const [loading, setLoading] = useState(false)\n  const pdb = usePDB()\n\n  const getMetaData = useCallback(async () => {\n    const nextData: RegisterDaoData = {}\n    for (const daoAddress of daoAddresses) {\n      const data = (await pdb.getItem(daoAddress)) as MetaData\n      if (!data) continue\n      nextData[daoAddress] = { ...data, daoAddress }\n    }\n    return setMetaData(nextData)\n  }, [daoAddresses, pdb])\n\n  const onSearch = useCallback(async () => {\n    if (!keyword || keyword.length < 3 || keyword === 'all-regime' || !metaData)\n      return setSearchData(undefined)\n    try {\n      const daoProvider = new DaoProvider(metaData)\n      if (account.isAddress(keyword)) {\n        const data = await daoProvider.findByAddress(keyword)\n        return setSearchData(data)\n      }\n      const data = await daoProvider.find(keyword)\n      return setSearchData(data)\n    } catch (err) {\n      setSearchData(undefined)\n    }\n  }, [keyword, metaData])\n\n  useEffect(() => {\n    getMetaData()\n  }, [getMetaData])\n\n  useEffect(() => {\n    if (keyword && keyword.length >= 3) setLoading(true)\n    const delayToSearch = setTimeout(async () => {\n      //  delay to waiting keyboard typing\n      await onSearch()\n      setLoading(false)\n    }, 500)\n    return () => clearTimeout(delayToSearch)\n  }, [keyword, onSearch])\n\n  return { searchData, loading }\n}\n\nexport default useSearchDao\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'app/model'\nimport { DaoState } from 'app/model/daos.controller'\nimport { MetaData } from 'app/model/createDao.controller'\nimport usePDB from '../usePDB'\n\nconst usePublicDaos = (daoType: string, mechanismsType: string): DaoState => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const [filteredDaos, setFilteredDaos] = useState<DaoState>({})\n  const pdb = usePDB()\n\n  const filterDaos = useCallback(async () => {\n    const filteredDaos: DaoState = {}\n    for (const addr in daos) {\n      const daoData = daos[addr]\n      const { isPublic, regime } = daoData\n      if (!isPublic) continue\n      // Validate type\n      if (daoType !== 'all') {\n        const metaData = (await pdb.getItem(addr)) as MetaData\n        if (metaData?.daoType !== daoType) continue\n      }\n      // Validate Regime\n      if (mechanismsType !== 'all') {\n        const parseRegime = Object.keys(regime)[0]\n        if (parseRegime !== mechanismsType) continue\n      }\n      filteredDaos[addr] = daoData\n    }\n    return setFilteredDaos(filteredDaos)\n  }, [daoType, daos, mechanismsType, pdb])\n\n  useEffect(() => {\n    filterDaos()\n  }, [filterDaos])\n\n  return filteredDaos\n}\nexport default usePublicDaos\n","import { useMemo, useState } from 'react'\nimport LazyLoad from '@sentre/react-lazyload'\n\nimport { Col, Empty, Row } from 'antd'\nimport DaoCard from './daoCard'\nimport SearchDao from './search'\nimport Mechanisms from './mechanisms'\nimport TypeOfDAO from './typeOfDao'\n\nimport useSearchDao from 'app/hooks/useSearchDao'\nimport usePublicDaos from 'app/hooks/daos/usePublicDaos'\n\nimport './index.less'\n\nconst PublicDaos = () => {\n  const [mechanisms, setMechanisms] = useState('all')\n  const [searchKey, setSearchKey] = useState('')\n  const [type, setType] = useState('all')\n  const publicDaos = usePublicDaos(type, mechanisms)\n\n  const daos = useMemo(() => Object.keys(publicDaos), [publicDaos])\n  const { searchData, loading } = useSearchDao(searchKey, daos)\n\n  return (\n    <Row gutter={[24, 16]}>\n      <Col xs={24} md={16}>\n        <Row gutter={[12, 12]}>\n          <Col xs={12} md={6}>\n            <TypeOfDAO value={type} setType={setType} />\n          </Col>\n          <Col xs={12} md={6}>\n            <Mechanisms onSort={setMechanisms} value={mechanisms} />\n          </Col>\n          <Col xs={24} md={12}>\n            <SearchDao onSearch={setSearchKey} loading={loading} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24} />\n      {searchKey.length >= 3 && (!searchData || !searchData.length) ? (\n        <Col span={24} style={{ textAlign: 'center' }}>\n          <Empty />\n        </Col>\n      ) : (\n        (searchData || Object.keys(publicDaos)).map((daoAddress) => (\n          <Col key={daoAddress} xs={24} md={12} xl={8}>\n            <LazyLoad height={479.75} offset={2}>\n              <DaoCard daoAddress={daoAddress} />\n            </LazyLoad>\n          </Col>\n        ))\n      )}\n    </Row>\n  )\n}\n\nexport default PublicDaos\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport LazyLoad from '@sentre/react-lazyload'\nimport { useWallet } from '@senhub/providers'\nimport { account } from '@senswap/sen-js'\nimport { DaoData } from '@interdao/core'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport DaoCard from './daoCard'\n\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst YourDaos = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const daos = useSelector((state: AppState) => state.daos)\n  const history = useHistory()\n\n  const filteredDaos = useMemo(\n    () =>\n      Object.keys(daos).filter((daoAddr) => {\n        const { authority } = daos[daoAddr] || ({} as DaoData)\n        const authAddress = authority.toBase58()\n        return account.isAddress(authAddress) && authAddress === walletAddress\n      }),\n    [daos, walletAddress],\n  )\n\n  if (!!filteredDaos.length)\n    return (\n      <Row gutter={[24, 24]}>\n        {filteredDaos.map((daoAddress) => (\n          <Col xs={24} md={12} xl={8} key={daoAddress}>\n            <LazyLoad height={191.5}>\n              <DaoCard daoAddress={daoAddress} />\n            </LazyLoad>\n          </Col>\n        ))}\n      </Row>\n    )\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Card bordered={false} bodyStyle={{ padding: 45, textAlign: 'center' }}>\n          <Space direction=\"vertical\" align=\"center\">\n            <Typography.Text type=\"secondary\">\n              You have no DAO yet!\n            </Typography.Text>\n            <Button\n              onClick={() => history.push(`/app/${appId}/dao/create-dao`)}\n            >\n              Build your DAO\n            </Button>\n          </Space>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default YourDaos\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAccount, useWallet } from '@senhub/providers'\nimport { utils, web3 } from '@project-serum/anchor'\n\nimport usePDB from '../usePDB'\nimport { AppState } from 'app/model'\nimport { DaoState } from 'app/model/daos.controller'\nimport { MetaData } from 'app/model/createDao.controller'\nimport useOwnerNFT from '../useOwnerNFT'\n\nconst useAvailableDaos = () => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const [filteredDaos, setFilteredDaos] = useState<DaoState>({})\n  const { accounts } = useAccount()\n  const { wallet } = useWallet()\n  const { nfts } = useOwnerNFT(wallet.address)\n  const pdb = usePDB()\n\n  const filterDaos = useCallback(async () => {\n    const filteredDaos: DaoState = {}\n    try {\n      for (const addr in daos) {\n        const daoData = daos[addr]\n        const { mint, isNft } = daoData\n        let valid = true\n\n        // Validate MultisigDAO\n        const { daoType, members } = (await pdb.getItem(addr)) as MetaData\n\n        if (daoType === 'multisig-dao') {\n          const listMember = members.map(({ walletAddress }) => walletAddress)\n          if (!listMember.includes(wallet.address)) valid = false\n        }\n\n        if (daoType === 'flexible-dao' && !isNft) {\n          const tokenAccount = await utils.token.associatedAddress({\n            mint,\n            owner: new web3.PublicKey(wallet.address),\n          })\n          if (!accounts[tokenAccount.toBase58()]) valid = false\n        }\n        if (daoType === 'flexible-dao' && isNft) {\n          const myCollections = nfts?.map((nft) => nft.collection?.key)\n          if (!myCollections || !myCollections.includes(mint.toBase58()))\n            valid = false\n        }\n\n        if (valid) filteredDaos[addr] = daoData\n      }\n    } catch (error) {}\n    return setFilteredDaos(filteredDaos)\n  }, [accounts, daos, nfts, pdb, wallet.address])\n\n  useEffect(() => {\n    filterDaos()\n  }, [filterDaos])\n\n  return filteredDaos\n}\n\nexport default useAvailableDaos\n","import { useMemo } from 'react'\nimport LazyLoad from '@sentre/react-lazyload'\n\nimport { Empty, Col, Row } from 'antd'\nimport DaoCard from '../publicDaos/daoCard'\n\nimport useAvailableDaos from 'app/hooks/daos/useAvailableDaos'\n\nconst AvailableDaos = () => {\n  const availableDaos = useAvailableDaos()\n  const daos = useMemo(() => Object.keys(availableDaos), [availableDaos])\n\n  if (!daos.length) return <Empty />\n\n  return (\n    <Row gutter={[24, 24]}>\n      {daos.map((daoAddress) => (\n        <Col xs={24} md={12} xl={8} key={daoAddress}>\n          <LazyLoad height={191.5}>\n            <DaoCard daoAddress={daoAddress} />\n          </LazyLoad>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default AvailableDaos\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Space, Typography, Avatar } from 'antd'\nimport GradientAvatar from '../gradientAvatar'\n\nimport useProposalMetaData from 'app/hooks/proposal/useProposalMetaData'\nimport { AppState } from 'app/model'\nimport useMetaData from 'app/hooks/useMetaData'\n\ntype ProposalItemProps = {\n  proposalAddress: string\n}\n\nconst ProposalItem = ({ proposalAddress }: ProposalItemProps) => {\n  const proposals = useSelector((state: AppState) => state.proposal)\n  const { metaData: proposalMetaData } = useProposalMetaData(proposalAddress)\n  const { metaData: daoMetaData } = useMetaData(\n    proposals[proposalAddress].dao.toBase58(),\n  )\n\n  return (\n    <Space size={8} style={{ width: '100%' }}>\n      {!daoMetaData?.image ? (\n        <GradientAvatar\n          seed={proposals[proposalAddress].dao.toBase58()}\n          avatarProps={{ shape: 'square', size: 49 }}\n        />\n      ) : (\n        <Avatar shape=\"square\" size={49} src={daoMetaData?.image} />\n      )}\n      <Space size={4} direction=\"vertical\">\n        <Typography.Title level={5}>{proposalMetaData?.title}</Typography.Title>\n        <Typography.Text style={{ color: '#A08D70' }}>\n          {proposalMetaData?.description}\n        </Typography.Text>\n      </Space>\n    </Space>\n  )\n}\n\nexport default ProposalItem\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { ReceiptData } from '@interdao/core'\nimport { useWallet } from '@senhub/providers'\n\nimport { AppState } from 'app/model'\nimport { ProposalState } from 'app/model/proposal.controller'\n\nconst useWithdrawable = () => {\n  const receipts = useSelector((state: AppState) => state.receipt)\n  const proposals = useSelector((state: AppState) => state.proposal)\n  const [withdrawableProposals, setWithdrawableProposals] =\n    useState<ProposalState>({})\n  const [withdrawableReceipts, setWithdrawableReceipts] = useState<\n    (ReceiptData & { address: string })[]\n  >([])\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const filterWithdrawable = useCallback(async () => {\n    let filteredReceipts: (ReceiptData & { address: string })[] = []\n    let filteredProposals: ProposalState = {}\n    for (const receiptAddr in receipts) {\n      const proposalAddress = receipts[receiptAddr].proposal.toBase58()\n      if (\n        receipts[receiptAddr].authority.toBase58() === walletAddress &&\n        Number(proposals[proposalAddress].endDate) < Date.now() / 1000 &&\n        proposals[proposalAddress] &&\n        receipts[receiptAddr].amount.toNumber() > 0\n      ) {\n        filteredReceipts.push({\n          ...receipts[receiptAddr],\n          address: receiptAddr,\n        })\n        const proposalAddress = receipts[receiptAddr].proposal.toBase58()\n        if (!filteredProposals[proposalAddress]) {\n          filteredProposals[proposalAddress] = proposals[proposalAddress]\n        }\n      }\n    }\n    setWithdrawableProposals(filteredProposals)\n    setWithdrawableReceipts(filteredReceipts)\n  }, [proposals, receipts, walletAddress])\n\n  useEffect(() => {\n    filterWithdrawable()\n  }, [filterWithdrawable])\n\n  return { withdrawableReceipts, withdrawableProposals }\n}\n\nexport default useWithdrawable\n","import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport IonIcon from '@sentre/antd-ionicon'\nimport { Button, Col, Image, Modal, Row, Space, Typography } from 'antd'\nimport ProposalItem from './proposalItem'\n\nimport useWithdrawableReceipt from 'app/hooks/proposal/useWithdrawableReceipt'\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\nimport { explorer } from 'shared/util'\n\nimport BG_JOIN_DAO from 'app/static/images/system/bg-join-dao.png'\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst WithdrawNotificationModal = () => {\n  const proposals = useSelector((state: AppState) => state.proposal)\n  const daos = useSelector((state: AppState) => state.daos)\n  const [visible, setVisible] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const { withdrawableReceipts, withdrawableProposals } =\n    useWithdrawableReceipt()\n\n  useEffect(() => {\n    if (withdrawableReceipts.length > 0) return setVisible(true)\n    setVisible(false)\n  }, [withdrawableReceipts])\n\n  const handleWithdrawReceipts = async () => {\n    if (!withdrawableReceipts.length) return\n    setLoading(true)\n    try {\n      for (const receipt of withdrawableReceipts) {\n        let response: { txId: string; receiptAddress: string }\n        const { isNft } =\n          daos[proposals[receipt.proposal.toBase58()].dao.toBase58()]\n        if (isNft) response = await interDao.closeNftVoting(receipt.address)\n        else response = await interDao.close(receipt.address)\n        window.notify({\n          type: 'success',\n          description: 'Successful withdrawal. Click to view details!',\n          onClick: () => window.open(explorer(response.txId), '_blank'),\n        })\n      }\n    } catch (er: any) {\n      window.notify({\n        type: 'error',\n        description: er.message,\n      })\n    } finally {\n      setLoading(false)\n      setVisible(false)\n    }\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={() => {\n        setVisible(false)\n      }}\n      closeIcon={<IonIcon name=\"close-outline\" />}\n      footer={null}\n      bodyStyle={{ padding: '72px 24px 24px 24px' }}\n      className=\"join-dao\"\n    >\n      <Image preview={false} src={BG_JOIN_DAO} />\n      <Row gutter={[32, 32]} className=\"join-dao_content\">\n        <Col span={24}>\n          <Space\n            direction=\"vertical\"\n            size={12}\n            align=\"center\"\n            style={{ width: '100%' }}\n          >\n            <Typography.Title className=\"join-dao_title\" level={2}>\n              Voting is over!\n            </Typography.Title>\n            <Typography.Text type=\"secondary\">\n              Your tokens and NFTs can be withdrawn from the proposals below.\n            </Typography.Text>\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[24, 24]}>\n            {Object.keys(withdrawableProposals).map((value) => {\n              return (\n                <Col span={24} key={value}>\n                  <ProposalItem proposalAddress={value} />\n                </Col>\n              )\n            })}\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Button\n            type=\"primary\"\n            block\n            onClick={handleWithdrawReceipts}\n            loading={loading}\n            style={{ height: 40 }}\n          >\n            Withdraw\n          </Button>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default WithdrawNotificationModal\n","import { useHistory } from 'react-router-dom'\n\nimport { Row, Col, Button, Tabs } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport Hero from './hero'\nimport PublicDaos from './publicDaos'\nimport YourDaos from './publicDaos/yourDao'\nimport AvailableDaos from './availabelDaos'\nimport WithdrawNotificationModal from 'app/components/withdrawNotificationModal'\n\nimport configs from 'app/configs'\n\nimport './index.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst Dao = () => {\n  const history = useHistory()\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Hero />\n      </Col>\n      <Col span={24}>\n        <Row justify=\"center\">\n          <Col xs={24} lg={18}>\n            <Tabs\n              style={{ overflow: 'visible' }}\n              className=\"dao-tabs\"\n              tabBarExtraContent={\n                <Button\n                  type=\"primary\"\n                  onClick={() => history.push(`/app/${appId}/dao/create-dao`)}\n                  icon={<IonIcon name=\"add-outline\" />}\n                >\n                  Create a DAO\n                </Button>\n              }\n            >\n              <Tabs.TabPane tab=\"Public DAOs\" key=\"public-daos\">\n                <PublicDaos />\n              </Tabs.TabPane>\n              <Tabs.TabPane tab=\"Available DAOs\" key=\"available-daos\">\n                <AvailableDaos />\n              </Tabs.TabPane>\n              <Tabs.TabPane tab=\"Your DAOs\" key=\"your-daos\">\n                <YourDaos />\n              </Tabs.TabPane>\n            </Tabs>\n          </Col>\n        </Row>\n      </Col>\n      <WithdrawNotificationModal />\n    </Row>\n  )\n}\n\nexport default Dao\n","var _path, _path2, _path3, _defs;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgSolana(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.09822 38.7451C9.43613 38.4072 9.90075 38.2101 10.3935 38.2101H55.082C55.8986 38.2101 56.3069 39.1956 55.7297 39.7729L46.9018 48.6008C46.5639 48.9387 46.0993 49.1358 45.6065 49.1358H0.918008C0.101395 49.1358 -0.306912 48.1502 0.270349 47.573L9.09822 38.7451Z\",\n    fill: \"url(#paint0_linear_514_9086)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.09822 5.78502C9.45021 5.44711 9.91483 5.25 10.3935 5.25L55.082 5.25C55.8986 5.25 56.3069 6.23557 55.7297 6.81283L46.9018 15.6407C46.5639 15.9786 46.0993 16.1757 45.6065 16.1757H0.918008C0.101395 16.1757 -0.306912 15.1902 0.270349 14.6129L9.09822 5.78502Z\",\n    fill: \"url(#paint1_linear_514_9086)\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.9018 22.1596C46.5639 21.8217 46.0993 21.6246 45.6065 21.6246H0.918008C0.101395 21.6246 -0.306912 22.6101 0.270349 23.1874L9.09822 32.0153C9.43613 32.3532 9.90075 32.5503 10.3935 32.5503H55.082C55.8986 32.5503 56.3069 31.5647 55.7297 30.9875L46.9018 22.1596Z\",\n    fill: \"url(#paint2_linear_514_9086)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_514_9086\",\n    x1: 50.8129,\n    y1: -0.023655,\n    x2: 19.885,\n    y2: 59.2159,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#00FFA3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DC1FFF\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear_514_9086\",\n    x1: 37.2896,\n    y1: -7.08387,\n    x2: 6.36157,\n    y2: 52.1556,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#00FFA3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DC1FFF\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint2_linear_514_9086\",\n    x1: 44.0082,\n    y1: -3.57611,\n    x2: 13.0802,\n    y2: 55.6634,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#00FFA3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DC1FFF\"\n  })))));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSolana);\nexport default __webpack_public_path__ + \"static/media/solana.6db9bd9600699ad1fc2b302acd0731be.svg\";\nexport { ForwardRef as ReactComponent };","import { useCallback, useEffect, useState } from 'react'\n\nimport useProposalMetaData from 'app/hooks/proposal/useProposalMetaData'\nimport { TemplateNames } from '../index'\n\nexport const useTemplateWithProposal = (proposalAddress: string) => {\n  const [templateName, setTemplateName] = useState<TemplateNames>()\n  const { metaData, loading } = useProposalMetaData(proposalAddress)\n\n  const getTemplateName = useCallback(() => {\n    if (!metaData || loading) return setTemplateName(undefined)\n    // @ts-ignore\n    return setTemplateName(metaData.templateName)\n  }, [loading, metaData])\n  useEffect(() => {\n    getTemplateName()\n  }, [getTemplateName])\n\n  return templateName\n}\n","import { Component, ErrorInfo, lazy, ReactNode, Suspense } from 'react'\n\nimport { useTemplateWithProposal } from './hooks/useTemplateWithProposal'\nimport { TemplateNames } from './index'\n\nexport type PropsTemplateCreateLoader = {\n  name: TemplateNames\n  daoAddress: string\n}\nexport const TemplateCreateLoader = ({\n  name,\n  daoAddress,\n}: PropsTemplateCreateLoader) => {\n  const Component = lazy(() => import(`./${name}/create`))\n  return (\n    <ErrorBoundary>\n      <Suspense fallback={<div />}>\n        <Component daoAddress={daoAddress} />\n      </Suspense>\n    </ErrorBoundary>\n  )\n}\n\nexport type PropsTemplateProposalLoader = { proposalAddress: string }\nexport const TemplateProposalLoader = ({\n  proposalAddress,\n}: PropsTemplateProposalLoader) => {\n  const template = useTemplateWithProposal(proposalAddress)\n  const Component = lazy(() => import(`./${template}/proposal`))\n  return (\n    <ErrorBoundary>\n      <Suspense fallback={<div />}>\n        <Component proposalAddress={proposalAddress} />\n      </Suspense>\n    </ErrorBoundary>\n  )\n}\n\nexport type PropsTemplateInfoLoader = { proposalAddress: string }\nexport const TemplateInfoLoader = ({\n  proposalAddress,\n}: PropsTemplateInfoLoader) => {\n  const template = useTemplateWithProposal(proposalAddress)\n  const Component = lazy(() => import(`./${template}/info`))\n  return (\n    <ErrorBoundary>\n      <Suspense fallback={<div />}>\n        <Component proposalAddress={proposalAddress} />\n      </Suspense>\n    </ErrorBoundary>\n  )\n}\n\ninterface Props {\n  children?: ReactNode\n}\ninterface State {\n  hasError: boolean\n}\nclass ErrorBoundary extends Component<Props, State> {\n  public state: State = {\n    hasError: false,\n  }\n\n  public static getDerivedStateFromError(_: Error): State {\n    // Update state so the next render will show the fallback UI.\n    return { hasError: true }\n  }\n\n  public componentDidCatch(error: Error, errorInfo: ErrorInfo) {\n    console.error('Uncaught error:', error, errorInfo)\n  }\n\n  public render() {\n    if (this.state.hasError) {\n      return <h1>Sorry.. there was an error</h1>\n    }\n\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","import { Button, Col, Image, Radio, Row, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport SOLANA_LOGO from 'app/static/images/templates/solana.svg'\nimport { TemplateCreateLoader } from 'app/templates/templateLoader'\nimport { TemplateNames } from 'app/templates'\nimport { useState } from 'react'\n\ntype CardOptionProps = {\n  label: string\n  description: string\n  icon: string\n}\n\nconst CardOption = ({ label, description, icon }: CardOptionProps) => {\n  return (\n    <Row>\n      <Col span={24}>\n        <Row>\n          <Col flex=\"auto\">\n            <Typography.Title level={5}>{label}</Typography.Title>\n          </Col>\n          <Col>\n            <IonIcon style={{ fontSize: 24 }} name={icon} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Typography.Text type=\"secondary\">{description}</Typography.Text>\n      </Col>\n    </Row>\n  )\n}\n\nconst SPL = ({ daoAddress }: { daoAddress: string }) => {\n  const [template, setTemplate] = useState(TemplateNames.SplTransfer)\n  return (\n    <Row>\n      <Col xs={24} md={16} className=\"wrap-spl-info\">\n        <Row gutter={[16, 16]} className=\"spl-info\">\n          <Col span={24}>\n            <Space size={24}>\n              <Image preview={false} src={SOLANA_LOGO} />\n              <Space size={0} direction=\"vertical\">\n                <Typography.Text>Solana Program Library</Typography.Text>\n                <Space size={2} style={{ marginLeft: -8 }}>\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-discord\" />}\n                    onClick={() => {\n                      window.open('https://discord.com/invite/pquxPsq', 'blank')\n                    }}\n                  />\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-twitter\" />}\n                    onClick={() => {\n                      window.open('https://twitter.com/solana', 'blank')\n                    }}\n                  />\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-telegram\" />}\n                    onClick={() => {\n                      window.open('https://t.me/solana', 'blank')\n                    }}\n                  />\n                </Space>\n              </Space>\n            </Space>\n          </Col>\n          <Col span={24}>\n            <Typography.Paragraph\n              type=\"secondary\"\n              ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n            >\n              The Solana Program Library (SPL) is a collection of on-chain\n              programs targeting the Sealevel parallel runtime. These programs\n              are tested against Solana's implementation of Sealevel,\n              solana-runtime, and deployed to its mainnet. As others implement\n              Sealevel, we will graciously accept patches to ensure the programs\n              here are portable across all implementations.\n            </Typography.Paragraph>\n          </Col>\n          <Col span={24}>\n            <Space direction=\"vertical\" style={{ width: '100%' }}>\n              <Typography.Text>Templates</Typography.Text>\n              <Radio.Group\n                value={template}\n                style={{ width: '100%' }}\n                className=\"select-spl-option\"\n                onChange={(e) => setTemplate(e.target.value)}\n              >\n                <Row gutter={[24, 24]}>\n                  <Col xs={24} sm={12} md={12} lg={12}>\n                    <Radio.Button value={TemplateNames.SplTransfer}>\n                      <CardOption\n                        label=\"Transfer\"\n                        description=\"Transfer token to another wallet address\"\n                        icon=\"paper-plane-outline\"\n                      />\n                    </Radio.Button>\n                  </Col>\n                  <Col xs={24} sm={12} md={12} lg={12}>\n                    <Radio.Button value={TemplateNames.SplApprove}>\n                      <CardOption\n                        label=\"Approve\"\n                        description=\"Allow this wallet to use money in another wallet.\"\n                        icon=\"thumbs-up-outline\"\n                      />\n                    </Radio.Button>\n                  </Col>\n                </Row>\n              </Radio.Group>\n            </Space>\n          </Col>\n        </Row>\n      </Col>\n      <Col xs={24} md={8} className=\"spl-option-transfer\">\n        <TemplateCreateLoader name={template} daoAddress={daoAddress} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default SPL\n","var _path, _path2, _defs;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgSentreLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.768 55.9817L12.5827 40.7706C7.72759 35.9073 5 29.3111 5 22.433C5 15.5553 7.72759 8.95908 12.5827 4.09566L16.6642 0.00732422L31.8581 15.227C36.7094 20.0912 39.4338 26.6861 39.4322 33.5621C39.4307 40.4377 36.7032 47.0314 31.8495 51.8931L27.768 55.9817Z\",\n    fill: \"url(#paint0_linear_1922_23080)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.6882 15.2282L38.8908 0L42.9722 4.08834C45.3787 6.49678 47.2877 9.35667 48.5903 12.5046C49.8929 15.6526 50.5634 19.0267 50.5634 22.4344C50.5634 25.8421 49.8929 29.2163 48.5903 32.3643C47.2877 35.5121 45.3787 38.3718 42.9722 40.7804L27.7781 56L23.6882 51.9033C18.8331 47.0397 16.1055 40.4435 16.1055 33.5658C16.1055 26.6878 18.8331 20.0916 23.6882 15.2282Z\",\n    fill: \"url(#paint1_linear_1922_23080)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_1922_23080\",\n    x1: 39.4465,\n    y1: 27.9987,\n    x2: 4.99439,\n    y2: 27.9987,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F9575E\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.27,\n    stopColor: \"#F8555B\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.49,\n    stopColor: \"#F44F51\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.68,\n    stopColor: \"#EE4540\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.87,\n    stopColor: \"#E63728\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DE2A13\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear_1922_23080\",\n    x1: -103322,\n    y1: 86628.3,\n    x2: -104246,\n    y2: 86401.8,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F9575E\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.27,\n    stopColor: \"#F8555B\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.49,\n    stopColor: \"#F44F51\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.68,\n    stopColor: \"#EE4540\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.87,\n    stopColor: \"#E63728\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DE2A13\"\n  })))));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSentreLogo);\nexport default __webpack_public_path__ + \"static/media/sentre_logo.dcb32c96bb5ed68090fdb2ec32c50aa3.svg\";\nexport { ForwardRef as ReactComponent };","import IonIcon from '@sentre/antd-ionicon'\nimport { Col, Row, Space, Image, Typography, Button } from 'antd'\nimport { TemplateNames } from 'app/templates'\nimport { TemplateCreateLoader } from 'app/templates/templateLoader'\n\nimport SENTRE_LOGO from 'app/static/images/sentre_logo.svg'\n\nconst Blank = ({ daoAddress }: { daoAddress: string }) => {\n  return (\n    <Row>\n      <Col span={24} className=\"wrap-spl-info\">\n        <Row gutter={[16, 16]} className=\"spl-info\">\n          <Col span={24}>\n            <Space size={24}>\n              <Image preview={false} src={SENTRE_LOGO} />\n              <Space size={0} direction=\"vertical\">\n                <Typography.Text>The Blank Template</Typography.Text>\n                <Space size={2} style={{ marginLeft: -8 }}>\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-discord\" />}\n                    onClick={() => {\n                      window.open(\n                        'https://discord.com/invite/VD7UBAp2HN',\n                        'blank',\n                      )\n                    }}\n                  />\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-twitter\" />}\n                    onClick={() => {\n                      window.open('https://twitter.com/SentreProtocol', 'blank')\n                    }}\n                  />\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-telegram\" />}\n                    onClick={() => {\n                      window.open('https://t.me/Sentre', 'blank')\n                    }}\n                  />\n                </Space>\n              </Space>\n            </Space>\n          </Col>\n          <Col span={24}>\n            <Typography.Paragraph\n              type=\"secondary\"\n              ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n            >\n              Create a proposal with a blank template without making a\n              transaction.\n            </Typography.Paragraph>\n          </Col>\n          <Col span={24}>\n            <TemplateCreateLoader\n              name={TemplateNames.BlankTemplate}\n              daoAddress={daoAddress}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Blank\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { Col, Modal, Row, Tabs, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport SPL from './spl'\nimport Blank from './blank'\nimport { AppDispatch, AppState } from 'app/model'\nimport { clearTemplate } from 'app/model/template.controller'\n\nimport './index.less'\n\nconst Template = ({ daoAddress }: { daoAddress: string }) => {\n  const visible = useSelector((state: AppState) => state.template.visible)\n  const dispatch = useDispatch<AppDispatch>()\n\n  return (\n    <Modal\n      visible={visible}\n      footer={false}\n      closeIcon={<IonIcon name=\"close-outline\" />}\n      className=\"template-card template-modal\"\n      onCancel={() => dispatch(clearTemplate())}\n    >\n      <Row>\n        <Col span={24} className=\"template-header\">\n          <Typography.Title level={4}>Choose a template</Typography.Title>\n        </Col>\n        <Col className=\"template-body\" span={24}>\n          <Tabs>\n            <Tabs.TabPane tab=\"Blank\" key=\"blank\">\n              <Blank daoAddress={daoAddress} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"SPL\" key=\"spl\">\n              <SPL daoAddress={daoAddress} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Atrix\" key=\"atrix\" disabled />\n            <Tabs.TabPane tab=\"Quarry\" key=\"quarry\" disabled />\n            <Tabs.TabPane tab=\"Advanced\" key=\"advanced\" disabled />\n          </Tabs>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default Template\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport LazyLoad from '@sentre/react-lazyload'\nimport { useUI, useWallet } from '@senhub/providers'\nimport { DaoRegimes } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\nimport { SystemProgram } from '@solana/web3.js'\n\nimport { Button, Col, Empty, Row, Select, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport Template from 'app/view/templates'\nimport { setVisible } from 'app/model/template.controller'\nimport { TemplateProposalLoader } from 'app/templates/templateLoader'\n\nexport type ProposalListProps = { daoAddress: string }\n\nconst currentDate = Math.floor(Number(new Date()) / 1000)\n\nconst ProposalList = ({ daoAddress }: ProposalListProps) => {\n  const [status, setStatus] = useState('all-status')\n  const daos = useSelector((state: AppState) => state.daos)\n  const proposal = useSelector((state: AppState) => state.proposal)\n  const dispatch = useDispatch<AppDispatch>()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const {\n    ui: { width },\n  } = useUI()\n\n  const { regime, authority } = daos[daoAddress] || {\n    regime: DaoRegimes.Dictatorial,\n    authority: SystemProgram.programId,\n  }\n  const mobileScreen = width < 768\n\n  const isSuccess = useCallback(\n    (quorum: string, votingPower: number, numSupply: number) => {\n      if (votingPower <= 0) return false\n      if (quorum === 'half' && votingPower >= numSupply / 2) return true\n      if (quorum === 'oneThird' && votingPower >= numSupply / 3) return true\n      if (quorum === 'twoThird' && votingPower >= (numSupply * 2) / 3)\n        return true\n      return false\n    },\n    [],\n  )\n\n  const authorized = useMemo(() => {\n    if (isEqual(regime, DaoRegimes.Autonomous)) return true\n    if (isEqual(regime, DaoRegimes.Democratic)) return true\n    if (authority.toBase58() === walletAddress) return true\n    return false\n  }, [regime, authority, walletAddress])\n\n  const proposalAddresses = useMemo(() => {\n    const expandedProposal = Object.keys(proposal).map((address) => ({\n      address,\n      ...proposal[address],\n    }))\n    return expandedProposal\n      .filter(({ dao }) => dao.toBase58() === daoAddress)\n      .map(({ address }) => address)\n  }, [proposal, daoAddress])\n\n  const filterProposalAddresses = useMemo(() => {\n    if (!proposalAddresses.length) return []\n    const filteredAddress = []\n\n    for (const address of proposalAddresses) {\n      let valid = false\n      const {\n        endDate,\n        startDate,\n        executed,\n        supply,\n        votingForPower,\n        consensusQuorum,\n        consensusMechanism,\n        votingAgainstPower,\n      } = proposal[address] || {}\n\n      const quorum = consensusQuorum ? Object.keys(consensusQuorum)[0] : ''\n      const votingPower = Number(votingForPower) - Number(votingAgainstPower)\n      const stakeSupply = Number(supply) || 0\n      const lockSupply = Number(supply) * (Number(endDate) - Number(startDate))\n      const mechanism = consensusMechanism\n        ? Object.keys(consensusMechanism)[0]\n        : ''\n      const actualSupply =\n        mechanism === 'StakedTokenCounter' ? stakeSupply : lockSupply\n\n      switch (status) {\n        case 'preparing':\n          valid = currentDate < Number(startDate)\n          break\n        case 'voting':\n          valid =\n            currentDate <= Number(endDate) && currentDate >= Number(startDate)\n          break\n        case 'executed':\n          valid = executed\n          break\n        case 'succeeded':\n          valid =\n            isSuccess(quorum, votingPower, actualSupply) &&\n            !executed &&\n            currentDate > Number(endDate)\n          break\n        case 'failed':\n          valid =\n            !isSuccess(quorum, votingPower, actualSupply) &&\n            currentDate > Number(endDate)\n          break\n        default:\n          valid = true\n          break\n      }\n      if (valid) filteredAddress.push(address)\n    }\n    return filteredAddress\n  }, [isSuccess, proposal, proposalAddresses, status])\n\n  useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0)\n  }, [])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row gutter={[16, 16]} align=\"bottom\">\n          <Col\n            span={mobileScreen ? 24 : undefined}\n            flex={mobileScreen ? undefined : 'auto'}\n          >\n            <Typography.Title level={4}>Proposals</Typography.Title>\n          </Col>\n          <Col span={mobileScreen ? 12 : undefined}>\n            <Select\n              className=\"select-filter-proposal\"\n              defaultValue=\"all-status\"\n              onChange={setStatus}\n              style={{ width: '100%', minWidth: 150 }}\n            >\n              <Select.Option value=\"all-status\">All Status</Select.Option>\n              <Select.Option value=\"preparing\">Preparing</Select.Option>\n              <Select.Option value=\"voting\">Voting</Select.Option>\n              <Select.Option value=\"succeeded\">Succeeded</Select.Option>\n              <Select.Option value=\"executed\">Executed</Select.Option>\n              <Select.Option value=\"failed\">Failed</Select.Option>\n            </Select>\n          </Col>\n          <Col span={mobileScreen ? 12 : undefined}>\n            <Button\n              type=\"primary\"\n              icon={<IonIcon name=\"add-outline\" />}\n              onClick={() => dispatch(setVisible(true))}\n              disabled={!authorized}\n              block\n            >\n              New Proposal\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row>\n          {filterProposalAddresses.length ? (\n            filterProposalAddresses.map((proposalAddress) => (\n              <Col key={proposalAddress} span={24}>\n                <LazyLoad height={176}>\n                  <TemplateProposalLoader proposalAddress={proposalAddress} />\n                </LazyLoad>\n              </Col>\n            ))\n          ) : (\n            <Col span={24} style={{ textAlign: 'center' }}>\n              <Empty description=\"No Proposals\" />\n            </Col>\n          )}\n        </Row>\n      </Col>\n      <Template daoAddress={daoAddress} />\n    </Row>\n  )\n}\n\nexport default ProposalList\n","import { useState } from 'react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\nimport { Col, Row, Space, Tooltip, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport useMetaData from 'app/hooks/useMetaData'\nimport { asyncWait, shortenAddress } from 'shared/util'\nimport DaoMember from 'app/components/dao/daoMember'\n\nconst InfoMember = ({ daoAddress }: { daoAddress: string }) => {\n  const [copied, setCopied] = useState('address')\n  const { metaData } = useMetaData(daoAddress)\n\n  const onCopy = async (address: string) => {\n    setCopied(address)\n    await asyncWait(1500)\n    setCopied('address')\n  }\n\n  return (\n    <Row gutter={[8, 8]}>\n      {metaData?.members.map(({ name, walletAddress }, index) => (\n        <Col span={24} key={walletAddress + index}>\n          <Row>\n            <Col flex=\"auto\">\n              <Typography.Text key={index} className=\"t-16\">\n                {name}\n              </Typography.Text>\n            </Col>\n            <Col>\n              <Space>\n                <Typography.Text type=\"secondary\">\n                  {shortenAddress(walletAddress)}\n                </Typography.Text>\n                <Tooltip title=\"Copied\" visible={copied === walletAddress}>\n                  <CopyToClipboard\n                    text={walletAddress}\n                    onCopy={() => onCopy(walletAddress)}\n                  >\n                    <Typography.Text\n                      style={{ cursor: 'pointer' }}\n                      type=\"secondary\"\n                    >\n                      <IonIcon name=\"copy-outline\" />\n                    </Typography.Text>\n                  </CopyToClipboard>\n                </Tooltip>\n              </Space>\n            </Col>\n          </Row>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nconst AmountMembers = ({ daoAddress }: { daoAddress: string }) => {\n  const { metaData } = useMetaData(daoAddress)\n  const isMultisig = metaData?.daoType === 'multisig-dao'\n\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space align=\"baseline\">\n          <Typography.Text className=\"caption\" type=\"secondary\">\n            Members\n          </Typography.Text>\n          {isMultisig && (\n            <Tooltip\n              placement=\"bottomLeft\"\n              overlayClassName=\"info-member\"\n              title={<InfoMember daoAddress={daoAddress} />}\n            >\n              <IonIcon\n                style={{ cursor: 'pointer' }}\n                name=\"information-circle-outline\"\n              />\n            </Tooltip>\n          )}\n        </Space>\n      </Col>\n      <Col span={24}>\n        <DaoMember daoAddress={daoAddress} />\n      </Col>\n    </Row>\n  )\n}\nexport default AmountMembers\n","import { useHistory } from 'react-router-dom'\nimport { SystemProgram } from '@solana/web3.js'\nimport BN from 'bn.js'\nimport { useUI, useWallet } from '@senhub/providers'\n\nimport { Avatar, Button, Card, Col, Row, Space, Spin, Typography } from 'antd'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport IonIcon from '@sentre/antd-ionicon'\nimport StatisticCard from 'app/components/statisticCard'\nimport RegimeTag from 'app/components/regimeTag'\nimport AvatarNFT from 'app/components/avatarNFT'\nimport GradientAvatar from 'app/components/gradientAvatar'\nimport AmountMembers from './members'\n\nimport { numeric, shortenAddress } from 'shared/util'\nimport { getIcon, validURL } from 'app/helpers'\nimport useMetaData from 'app/hooks/useMetaData'\nimport { useDaoData } from 'app/hooks/dao'\nimport { DaoDetailsProps } from './index'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst DaoInfo = ({ daoAddress }: DaoDetailsProps) => {\n  const history = useHistory()\n  const { metaData, loading } = useMetaData(daoAddress)\n  const daoData = useDaoData(daoAddress)\n  const {\n    ui: { width },\n  } = useUI()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const { regime, nonce, mint, authority, isNft } = daoData || {\n    regime: {},\n    nonce: new BN(0),\n    mint: SystemProgram.programId,\n  }\n\n  const onEditDAO = () => history.push(`/app/${appId}/dao/${daoAddress}/edit`)\n\n  const mobileScreen = width < 768\n\n  return (\n    <Spin spinning={loading} tip=\"Loading...\">\n      <Card bordered={false}>\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Row justify=\"space-between\" wrap={false}>\n              <Col>\n                <Row gutter={[16, 16]} wrap={false}>\n                  <Col>\n                    {!metaData?.image ? (\n                      <GradientAvatar\n                        seed={daoAddress}\n                        avatarProps={{ shape: 'square', size: 56 }}\n                      />\n                    ) : (\n                      <Avatar shape=\"square\" size={56} src={metaData?.image} />\n                    )}\n                  </Col>\n                  <Col flex={mobileScreen ? 'auto' : undefined}>\n                    <Space direction=\"vertical\" size={0}>\n                      <Typography.Title level={4}>\n                        {metaData?.daoName\n                          ? metaData.daoName\n                          : shortenAddress(daoAddress)}\n                      </Typography.Title>\n                      <Space size={0} style={{ marginLeft: -3 }}>\n                        {(metaData?.optionals || []).map(\n                          (url, idx) =>\n                            validURL(url) && (\n                              <Button\n                                size=\"small\"\n                                type=\"text\"\n                                onClick={() => window.open(url, '_blank')}\n                                icon={<IonIcon name={getIcon(url)} />}\n                                key={idx}\n                              />\n                            ),\n                        )}\n                      </Space>\n                    </Space>\n                  </Col>\n                </Row>\n              </Col>\n              <Col>\n                <Button\n                  type=\"text\"\n                  size=\"large\"\n                  onClick={onEditDAO}\n                  disabled={authority && walletAddress !== authority.toBase58()}\n                  style={{\n                    marginRight: -10,\n                    marginTop: -20,\n                  }}\n                  icon={<IonIcon name=\"settings-outline\" />}\n                >\n                  Settings\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n          <Col span={24}>\n            <Row gutter={[36, 16]}>\n              <Col xs={12} sm={6}>\n                <StatisticCard\n                  title=\"Proposals\"\n                  value={numeric(Number(nonce)).format('0,0')}\n                />\n              </Col>\n              <Col xs={12} sm={6}>\n                <AmountMembers daoAddress={daoAddress} />\n              </Col>\n              <Col xs={12} sm={6}>\n                <StatisticCard\n                  title=\"Vote By\"\n                  value={\n                    isNft ? (\n                      <AvatarNFT mintAddress={mint.toBase58()} />\n                    ) : (\n                      <Space>\n                        <MintAvatar mintAddress={mint.toBase58()} />\n                        <MintSymbol mintAddress={mint.toBase58()} />\n                      </Space>\n                    )\n                  }\n                />\n              </Col>\n              <Col xs={12} sm={6}>\n                <StatisticCard\n                  title=\"Regime\"\n                  value={<RegimeTag regime={regime} />}\n                />\n              </Col>\n            </Row>\n          </Col>\n          <Col span={24} className=\"scrollbar\" style={{ height: 66 }}>\n            <Typography.Paragraph\n              type=\"secondary\"\n              ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n              style={{ margin: 0 }}\n            >\n              {metaData?.description}\n            </Typography.Paragraph>\n          </Col>\n        </Row>\n      </Card>\n    </Spin>\n  )\n}\n\nexport default DaoInfo\n","import { BN, utils, web3 } from '@project-serum/anchor'\nimport { PublicKey } from '@solana/web3.js'\nimport { Leaf, MerkleDistributor } from '@sentre/utility'\nimport IPFS from 'app/helpers/ipfs'\nimport { CID } from 'ipfs-core'\n\nimport configs from 'app/configs'\nimport { getCID } from './index'\n\nconst {\n  sol: { utility },\n} = configs\n\nconst ipfs = new IPFS()\n\nconst CURRENT_TIME = Number(new Date())\nconst ONE_DAY = 24 * 60 * 60 * 1000\nconst ENDED_AT = CURRENT_TIME + 15 * ONE_DAY\n\nclass Distributor {\n  getTreeData = (pubkeys: PublicKey[]) => {\n    const balanceTree: Leaf[] = pubkeys.map((pubkey, index) => {\n      return {\n        authority: pubkey,\n        amount: new BN(1),\n        startedAt: new BN(0),\n        salt: MerkleDistributor.salt(index.toString()),\n      }\n    })\n    const merkleDistributor = new MerkleDistributor(balanceTree)\n    const dataBuffer = merkleDistributor.toBuffer()\n    return dataBuffer\n  }\n\n  createDistributor = async (pubkeys: PublicKey[], mintAddress: string) => {\n    const treeData = this.getTreeData(pubkeys)\n    const merkleDistributor = MerkleDistributor.fromBuffer(treeData)\n\n    const cid = await ipfs.set(treeData.toJSON().data)\n    const {\n      multihash: { digest },\n    } = CID.parse(cid)\n\n    const metadata = Buffer.from(digest)\n\n    const { distributorAddress } = await utility.initializeDistributor({\n      tokenAddress: mintAddress,\n      total: merkleDistributor.getTotal(),\n      merkleRoot: merkleDistributor.deriveMerkleRoot(),\n      metadata,\n      endedAt: ENDED_AT / 1000,\n    })\n\n    return distributorAddress\n  }\n\n  createDistributorInstruction = async (\n    walletAddress: string,\n    pubkeys: PublicKey[],\n    mintAddress: string,\n  ) => {\n    const treeData = this.getTreeData(pubkeys)\n    const merkleDistributor = MerkleDistributor.fromBuffer(treeData)\n\n    const cid = await ipfs.set(treeData.toJSON().data)\n    const {\n      multihash: { digest },\n    } = CID.parse(cid)\n\n    const walletPublicKey = new PublicKey(walletAddress)\n    const tokenPublicKey = new PublicKey(mintAddress)\n    const metadata = Buffer.from(digest)\n    const distributor = web3.Keypair.generate()\n    const srcPublicKey = await utils.token.associatedAddress({\n      mint: tokenPublicKey,\n      owner: walletPublicKey,\n    })\n    const treasurer = await utility.deriveTreasurerAddress(\n      distributor.publicKey.toBase58(),\n    )\n    const treasury = await utils.token.associatedAddress({\n      mint: tokenPublicKey,\n      owner: new PublicKey(treasurer),\n    })\n    return utility.program.methods\n      .initializeDistributor(\n        Array.from(merkleDistributor.deriveMerkleRoot()),\n        merkleDistributor.getTotal(),\n        new BN(ENDED_AT / 1000),\n        Array.from(metadata),\n        new BN(0),\n      )\n      .accounts({\n        authority: new PublicKey(walletAddress),\n        distributor: distributor.publicKey,\n        src: srcPublicKey,\n        treasurer,\n        treasury,\n        feeCollector: new PublicKey(walletAddress),\n        mint: tokenPublicKey,\n        tokenProgram: utils.token.TOKEN_PROGRAM_ID,\n        associatedTokenProgram: utils.token.ASSOCIATED_PROGRAM_ID,\n        systemProgram: web3.SystemProgram.programId,\n        rent: web3.SYSVAR_RENT_PUBKEY,\n      })\n      .instruction()\n  }\n\n  getMintAddress = async (distributorAddress: string) => {\n    const distributor = await utility.program.account.distributor.fetch(\n      distributorAddress,\n    )\n    return distributor.mint.toBase58()\n  }\n\n  getMerkleDistributor = async (distributorAddress: string) => {\n    const distributor = await utility.program.account.distributor.fetch(\n      distributorAddress,\n    )\n    const cid = await getCID(distributor.metadata)\n    const data = await ipfs.get<any>(cid)\n    const merkleDistributor = MerkleDistributor.fromBuffer(Buffer.from(data))\n    return merkleDistributor\n  }\n\n  getRecipientData = async (\n    walletAddress: string,\n    distributorAddress: string,\n  ) => {\n    const merkleDistributor = await this.getMerkleDistributor(\n      distributorAddress,\n    )\n    for (const recipient of merkleDistributor.receipients) {\n      const authorityAddress = recipient.authority.toBase58()\n      if (walletAddress === authorityAddress) return recipient\n    }\n  }\n\n  getReceiptData = async (\n    walletAddress: string,\n    distributorAddress: string,\n  ) => {\n    const recipientData = await this.getRecipientData(\n      walletAddress,\n      distributorAddress,\n    )\n    if (!recipientData) return false\n    const { salt } = recipientData\n    const receiptAddress = await utility.deriveReceiptAddress(\n      salt,\n      distributorAddress,\n    )\n    const receiptData = await utility.getReceiptData(receiptAddress)\n\n    return receiptData\n  }\n\n  claimToken = async (walletAddress: string, distributorAddress: string) => {\n    const recipientData = await this.getRecipientData(\n      walletAddress,\n      distributorAddress,\n    )\n    if (!recipientData) throw new Error('You not on the list')\n\n    const merkleDistributor = await this.getMerkleDistributor(\n      distributorAddress,\n    )\n    const proof = merkleDistributor.deriveProof(recipientData)\n\n    const { txId } = await utility.claim({\n      distributorAddress,\n      proof,\n      data: recipientData,\n    })\n    return txId\n  }\n}\n\nexport default Distributor\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useAccount, useWallet } from '@senhub/providers'\n\nimport { Button, Col, Image, Modal, Row, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { DaoDetailsProps } from './index'\nimport useMetaData from 'app/hooks/useMetaData'\nimport Distributor from 'app/helpers/distributor'\nimport { explorer } from 'shared/util'\nimport BG_JOIN_DAO from 'app/static/images/system/bg-join-dao.png'\n\nconst JoinDao = ({ daoAddress }: DaoDetailsProps) => {\n  const [visible, setVisible] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const { metaData } = useMetaData(daoAddress)\n  const { accounts } = useAccount()\n\n  const listMint = useMemo(() => {\n    const mints = []\n    for (const accountAddr in accounts) {\n      mints.push(accounts[accountAddr].mint)\n    }\n    return mints\n  }, [accounts])\n\n  const isValidAccount = useCallback(async () => {\n    try {\n      if (!metaData || !metaData.distributorAddress) return setVisible(false)\n      const { distributorAddress, members } = metaData\n      const distributor = new Distributor()\n      const mintAddress = await distributor.getMintAddress(distributorAddress)\n      const membersAddress = members.map((member) => member.walletAddress)\n\n      if (\n        membersAddress.includes(walletAddress) &&\n        !listMint.includes(mintAddress)\n      )\n        return setVisible(true)\n\n      const recipientData = await distributor.getRecipientData(\n        walletAddress,\n        distributorAddress,\n      )\n      if (!recipientData) return setVisible(false) // not in list\n\n      const receiptData = await distributor.getReceiptData(\n        walletAddress,\n        distributorAddress,\n      )\n      if (receiptData) return setVisible(false) // claimed\n      return setVisible(false)\n    } catch (error) {\n      return setVisible(true) // Not claim\n    }\n  }, [listMint, metaData, walletAddress])\n\n  const onClaim = async () => {\n    if (!metaData || !metaData.distributorAddress) return\n    const { distributorAddress } = metaData\n    try {\n      setLoading(true)\n      const distributor = new Distributor()\n      const recipientData = await distributor.getRecipientData(\n        walletAddress,\n        distributorAddress,\n      )\n      if (!recipientData) return\n\n      const txId = await distributor.claimToken(\n        walletAddress,\n        distributorAddress,\n      )\n      return window.notify({\n        type: 'success',\n        description: 'Join the DAO successfully. Click here to view details.',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (er: any) {\n      return window.notify({\n        type: 'success',\n        description: er.message,\n      })\n    } finally {\n      setLoading(false)\n      setVisible(false)\n    }\n  }\n\n  useEffect(() => {\n    isValidAccount()\n  }, [isValidAccount])\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={() => setVisible(false)}\n      closeIcon={<IonIcon name=\"close-outline\" />}\n      footer={null}\n      className=\"join-dao\"\n      bodyStyle={{ padding: '72px 24px 24px 24px' }}\n    >\n      <Image preview={false} src={BG_JOIN_DAO} />\n      <Row\n        className=\"join-dao_content\"\n        gutter={[48, 48]}\n        style={{ textAlign: 'center' }}\n      >\n        <Col span={24}>\n          <Row gutter={[12, 12]}>\n            <Col span={24}>\n              <Typography.Title\n                style={{ fontSize: 32 }}\n                className=\"join-dao_title\"\n                level={2}\n              >\n                Welcome to the DAO\n              </Typography.Title>\n            </Col>\n            <Col span={24}>\n              <Typography.Text style={{ fontSize: 16 }}>\n                Click the button below to become <br /> an official member of\n                DAO\n              </Typography.Text>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Button\n            block\n            size=\"large\"\n            loading={loading}\n            onClick={onClaim}\n            type=\"primary\"\n          >\n            Get started\n          </Button>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default JoinDao\n","import { useCallback, useEffect, useState } from 'react'\nimport LazyLoad from '@sentre/react-lazyload'\nimport axios from 'axios'\n\nimport { Card, Col, Empty, Image, Row, Space, Spin, Typography } from 'antd'\n\nimport useNftMetaData from 'app/hooks/useNftMetaData'\nimport { fetchYourOwnerNTFs, MetadataDataType } from 'app/helpers/metaplex'\n\nimport IMAGE_DEFAULT from 'app/static/images/system/nft.jpeg'\nimport { useDaoData } from 'app/hooks/dao'\n\nconst NftTreasury = ({ daoAddress }: { daoAddress: string }) => {\n  const [listNFTs, setListNFTs] = useState<MetadataDataType[]>()\n  const daoData = useDaoData(daoAddress)\n\n  const getYourOwnerNFTs = useCallback(async () => {\n    if (!daoData?.master) return setListNFTs(undefined)\n    const nfts = await fetchYourOwnerNTFs(daoData.master.toBase58())\n    return setListNFTs(nfts)\n  }, [daoData?.master])\n\n  useEffect(() => {\n    getYourOwnerNFTs()\n  }, [getYourOwnerNFTs])\n\n  return (\n    <Spin spinning={!listNFTs} tip=\"Loading...\">\n      <Row gutter={[8, 8]} style={{ height: 160 }}>\n        <Col span={24}>\n          <Row align=\"middle\">\n            <Col flex=\"auto\">\n              <Space align=\"baseline\">\n                <Typography.Text type=\"secondary\">Total NFTs</Typography.Text>\n              </Space>\n            </Col>\n            <Col>\n              <Typography.Title level={4}>\n                {listNFTs?.length || 0}\n              </Typography.Title>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[8, 8]} className=\"scrollbar\">\n            {listNFTs?.length !== 0 ? (\n              listNFTs?.map((nft) => (\n                <Col xs={8} md={8} key={nft.mint}>\n                  <LazyLoad height={87}>\n                    <CardNFT mintAddress={nft.mint} />\n                  </LazyLoad>\n                </Col>\n              ))\n            ) : (\n              <Col span={24}>\n                <Empty description=\"No NFTs\" />\n              </Col>\n            )}\n          </Row>\n        </Col>\n      </Row>\n    </Spin>\n  )\n}\n\nexport default NftTreasury\n\nconst CardNFT = ({ mintAddress }: { mintAddress: string }) => {\n  const [nftImg, setNftImg] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const { metadata } = useNftMetaData(mintAddress)\n\n  const getNftInfoFromURI = useCallback(async () => {\n    if (!metadata) return setNftImg(IMAGE_DEFAULT)\n    try {\n      setLoading(true)\n      const url = metadata.data.data.uri\n      if (!url) return setNftImg(IMAGE_DEFAULT)\n\n      const response = await axios.get(url)\n      const img = response.data.image\n      return setNftImg(img)\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }, [metadata])\n\n  useEffect(() => {\n    getNftInfoFromURI()\n  }, [getNftInfoFromURI])\n\n  return (\n    <Card\n      bordered={false}\n      style={{ cursor: 'pointer' }}\n      bodyStyle={{ padding: 8 }}\n      loading={loading}\n    >\n      <Row gutter={[8, 8]}>\n        <Col span={24}>\n          <Image\n            src={nftImg}\n            preview={false}\n            style={{ borderRadius: 4 }}\n            width={87}\n            height={87}\n          />\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { AccountData, utils } from '@senswap/sen-js'\nimport { useMint } from '@senhub/providers'\n\nimport { fetchCGK } from 'shared/util'\nimport TokenProvider from 'shared/tokenProvider'\n\nconst DEFAULT_DATA = {\n  address: '',\n  icon: '',\n  name: 'TOKEN',\n  price: 0,\n  priceChange: 0,\n  rank: 0,\n  symbol: 'TOKEN',\n  totalVolume: 0,\n}\n\nexport const fetchCgkData = async (\n  tokenProvider: TokenProvider,\n  mintAddress: string,\n) => {\n  try {\n    const token = await tokenProvider.findByAddress(mintAddress)\n    const ticket = token?.extensions?.coingeckoId\n    const cgkData = await fetchCGK(ticket)\n    return cgkData\n  } catch (error) {\n    return DEFAULT_DATA\n  }\n}\n\nexport const getBalance = async (\n  inUSD: boolean,\n  tokenProvider: TokenProvider,\n  mintAddress: string,\n  decimals: number,\n  amount: bigint,\n) => {\n  const cgkData = await fetchCgkData(tokenProvider, mintAddress)\n  let balance = Number(utils.undecimalize(amount, decimals))\n  if (inUSD) balance = Number(balance) * cgkData.price\n\n  return balance\n}\n\nconst useTotalUSD = ({\n  inUSD = true,\n  accounts,\n}: {\n  inUSD?: boolean\n  accounts: AccountData[]\n}) => {\n  const { tokenProvider, getDecimals } = useMint()\n  const [totalUSD, setTotalUSD] = useState(0)\n\n  const clcTotalUSD = useCallback(async () => {\n    if (!accounts) return setTotalUSD(0)\n    let totalUSD = 0\n    for (const account of accounts) {\n      const { mint, amount } = account\n      const decimals = await getDecimals(mint)\n      const balance = await getBalance(\n        inUSD,\n        tokenProvider,\n        mint,\n        decimals,\n        amount,\n      )\n      totalUSD += balance\n    }\n    return setTotalUSD(totalUSD)\n  }, [accounts, getDecimals, tokenProvider, inUSD])\n\n  useEffect(() => {\n    clcTotalUSD()\n  }, [clcTotalUSD])\n\n  return totalUSD\n}\n\nexport default useTotalUSD\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\n\n/**\n * Get token decimals from multiple resources. This hook needs MintProvider for working.\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * @param mintAddress Mint address\n * @returns Decimals\n */\nconst useMintDecimals = (mintAddress: string) => {\n  const [decimals, setDecimals] = useState<number | undefined>(undefined)\n  const { getDecimals } = useMint()\n\n  const fetchDecimals = useCallback(async () => {\n    try {\n      const decimals = await getDecimals(mintAddress)\n      return setDecimals(decimals)\n    } catch (er: any) {\n      return setDecimals(undefined)\n    }\n  }, [mintAddress, getDecimals])\n\n  useEffect(() => {\n    fetchDecimals()\n  }, [fetchDecimals])\n\n  return decimals\n}\n\nexport default useMintDecimals\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\nimport { AccountData } from '@senswap/sen-js'\n\nimport { Col, Row, Space, Typography } from 'antd'\n\nimport { getBalance } from 'app/hooks/useBalance'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\n\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { numeric } from 'shared/util'\n\nconst MintBalance = ({ account }: { account: AccountData }) => {\n  const [usdBalance, setUSDBalance] = useState(0)\n  const [mintBalance, setMintBalance] = useState(0)\n\n  const { mint, amount } = account\n  const { tokenProvider } = useMint()\n  const decimals = useMintDecimals(mint) || 0\n\n  const fetchBalance = useCallback(async () => {\n    const mintBalance = await getBalance(\n      false,\n      tokenProvider,\n      mint,\n      decimals,\n      amount,\n    )\n    const usdBalance = await getBalance(\n      true,\n      tokenProvider,\n      mint,\n      decimals,\n      amount,\n    )\n    setMintBalance(mintBalance)\n    setUSDBalance(usdBalance)\n  }, [amount, decimals, mint, tokenProvider])\n\n  useEffect(() => {\n    fetchBalance()\n  }, [fetchBalance])\n\n  return (\n    <Row align=\"middle\">\n      <Col flex=\"auto\">\n        <Space>\n          <MintAvatar mintAddress={mint} />\n          <Space size={4}>\n            {numeric(mintBalance).format('0,0.[000]')}\n            <Typography.Text type=\"secondary\">\n              <MintSymbol mintAddress={mint} />\n            </Typography.Text>\n          </Space>\n        </Space>\n      </Col>\n      <Col>\n        <Typography.Text type=\"secondary\">\n          ${numeric(usdBalance).format('0,0.[000]')}\n        </Typography.Text>\n      </Col>\n    </Row>\n  )\n}\n\nexport default MintBalance\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { PublicKey } from '@solana/web3.js'\nimport { AccountData } from '@senswap/sen-js'\nimport { getMultipleAccounts } from 'sentre-web3/dist/rpc'\n\nimport { Col, Empty, Row, Space, Spin, Typography } from 'antd'\nimport MintBalance from './mintBalance'\n\nimport useTotalUSD from 'app/hooks/useBalance'\nimport { numeric } from 'shared/util'\nimport { useDaoData } from 'app/hooks/dao'\n\nconst TokenTreasury = ({ daoAddress }: { daoAddress: string }) => {\n  const [tokenAccounts, setTokenAccounts] = useState<AccountData[]>()\n  const daoData = useDaoData(daoAddress)\n  const totalUSD = useTotalUSD({ accounts: tokenAccounts || [] })\n\n  const daoMasterAddress = useMemo(\n    () => daoData?.master.toBase58(),\n    [daoData?.master],\n  )\n\n  const fetchTokenAccounts = useCallback(async () => {\n    if (!daoMasterAddress || !daoData?.master) return\n    const {\n      splt: { connection, spltProgramId, parseAccountData, parseMintData },\n    } = window.sentre\n\n    const { value } = await connection.getTokenAccountsByOwner(daoData.master, {\n      programId: spltProgramId,\n    })\n    const accounts = value.map(({ account }) => parseAccountData(account.data))\n    const mintAccounts = await getMultipleAccounts(\n      connection,\n      accounts.map((acc) => new PublicKey(acc.mint)),\n    )\n    const filteredAccounts = accounts.filter((acc, idx) => {\n      const mint = mintAccounts[idx]\n      if (!mint) return false\n      const mintData = parseMintData(mint.account.data)\n      const isNft =\n        mintData.decimals === 0 && Number(mintData.supply.toString()) === 1\n      return !isNft\n    })\n\n    return setTokenAccounts(filteredAccounts)\n  }, [daoData?.master, daoMasterAddress])\n\n  useEffect(() => {\n    fetchTokenAccounts()\n  }, [fetchTokenAccounts])\n\n  return (\n    <Spin spinning={!tokenAccounts} tip=\"Loading...\">\n      <Row gutter={[8, 8]}>\n        <Col span={24}>\n          <Row align=\"middle\">\n            <Col flex=\"auto\">\n              <Space align=\"baseline\">\n                <Typography.Text type=\"secondary\">\n                  Treasury Balance\n                </Typography.Text>\n              </Space>\n            </Col>\n            <Col>\n              <Typography.Title level={4}>\n                {numeric(totalUSD).format('$0,0.[000]')}\n              </Typography.Title>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[24, 24]} className=\"scrollbar\" style={{ height: 124 }}>\n            {tokenAccounts?.length !== 0 ? (\n              tokenAccounts?.map((account) => (\n                <Col span={24} key={account.mint}>\n                  <MintBalance account={account} />\n                </Col>\n              ))\n            ) : (\n              <Col span={24}>\n                <Empty description=\"No Tokens\" />\n              </Col>\n            )}\n          </Row>\n        </Col>\n      </Row>\n    </Spin>\n  )\n}\n\nexport default TokenTreasury\n","import { useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\nimport { Button, Card, Col, Row, Space, Tabs, Tooltip, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport QRcode from 'qrcode.react'\nimport NftTreasury from './nftsTreasury'\nimport TokenTreasury from './tokenTreasury'\nimport RowSpaceBetween from 'app/components/rowSpaceBetween'\n\nimport { asyncWait, shortenAddress } from 'shared/util'\nimport { AppState } from 'app/model'\n\nconst InfoDAOMaster = ({ daoAddress }: { daoAddress: string }) => {\n  const [copied, setCopied] = useState(false)\n\n  const onCopy = async () => {\n    setCopied(true)\n    await asyncWait(1500)\n    setCopied(false)\n  }\n\n  return (\n    <Row justify=\"center\" gutter={[16, 16]} style={{ padding: 12 }}>\n      <Col span={24}>\n        <Space size={8}>\n          <IonIcon\n            name=\"information-circle-outline\"\n            style={{ color: '#f9deb0' }}\n          />\n          <Typography.Text>You can deposit to this address</Typography.Text>\n        </Space>\n      </Col>\n      <Col style={{ background: '#f4f4f5', paddingTop: 8 }}>\n        <QRcode\n          value={daoAddress}\n          size={110}\n          bgColor=\"#ffffff\"\n          fgColor=\"#1f1f1f\"\n        />\n      </Col>\n      <Col span={24}>\n        <RowSpaceBetween\n          label=\"DAO Master Address:\"\n          value={\n            <Space>\n              <Typography.Text className=\"t-16\">\n                {shortenAddress(daoAddress)}\n              </Typography.Text>\n              <Tooltip title=\"Copied\" visible={copied}>\n                <CopyToClipboard text={daoAddress} onCopy={onCopy}>\n                  <Typography.Text\n                    style={{ cursor: 'pointer' }}\n                    className=\"t-16\"\n                  >\n                    <IonIcon name=\"copy-outline\" />\n                  </Typography.Text>\n                </CopyToClipboard>\n              </Tooltip>\n            </Space>\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n\nconst DaoOwnerAssets = ({ daoAddress }: { daoAddress: string }) => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const daoMasterAddress = useMemo(() => {\n    const { master } = daos[daoAddress] || {}\n    return master?.toBase58() || ''\n  }, [daos, daoAddress])\n\n  return (\n    <Card bordered={false}>\n      <Tabs\n        className=\"dao-assets\"\n        tabBarExtraContent={\n          <Tooltip\n            placement=\"bottomLeft\"\n            overlayClassName=\"info-member treasury-addr\"\n            title={<InfoDAOMaster daoAddress={daoMasterAddress} />}\n          >\n            <Button size=\"small\">Master Wallet</Button>\n          </Tooltip>\n        }\n      >\n        <Tabs.TabPane tab=\"Treasury\" key=\"treasury\">\n          <TokenTreasury daoAddress={daoAddress} />\n        </Tabs.TabPane>\n        <Tabs.TabPane tab=\"NFTs\" key=\"nft\">\n          <NftTreasury daoAddress={daoAddress} />\n        </Tabs.TabPane>\n      </Tabs>\n    </Card>\n  )\n}\n\nexport default DaoOwnerAssets\n","import { Col, Row } from 'antd'\nimport DaoInfo from './daoInfo'\nimport JoinDao from './joinDao'\nimport DaoOwnerAssets from './daoOwnerAssets'\n\nimport './index.less'\n\nexport type DaoDetailsProps = { daoAddress: string }\n\nconst DaoDetails = ({ daoAddress }: DaoDetailsProps) => {\n  return (\n    <Row gutter={[24, 24]}>\n      <Col xs={24} md={16}>\n        <DaoInfo daoAddress={daoAddress} />\n      </Col>\n      <Col xs={24} md={8}>\n        <DaoOwnerAssets daoAddress={daoAddress} />\n      </Col>\n      <JoinDao daoAddress={daoAddress} />\n    </Row>\n  )\n}\n\nexport default DaoDetails\n","import { useEffect } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { DaoData } from '@interdao/core'\n\nimport { Button, Col, Row } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport ProposalList from './proposalList'\nimport DaoDetails from '../dao/daoDetails'\n\nimport configs from 'app/configs'\nimport useValidDaoMember from 'app/hooks/dao/useValidDaoMember'\nimport { AppState } from 'app/model'\n\nimport './index.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst Proposal = () => {\n  const history = useHistory()\n  const { daoAddress } = useParams<{ daoAddress: string }>()\n  const daoData = useSelector((state: AppState) => state.daos[daoAddress])\n  const { isPublic } = daoData || ({} as DaoData)\n  const { validMember, checking } = useValidDaoMember(daoAddress)\n\n  useEffect(() => {\n    if (checking) return\n    if (!validMember && !isPublic) {\n      window.notify({\n        type: 'warning',\n        description: 'You are not a member of this DAO',\n      })\n      return history.push(`/app/${appId}/dao`)\n    }\n  }, [checking, daoAddress, history, isPublic, validMember])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\" align=\"middle\">\n      <Col xs={24} lg={18}>\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Button\n              icon={<IonIcon name=\"arrow-back-outline\" />}\n              type=\"text\"\n              onClick={() => history.push(`/app/${appId}/dao`)}\n              style={{ marginLeft: -8 }}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col span={24}>\n            <DaoDetails daoAddress={daoAddress} />\n          </Col>\n        </Row>\n      </Col>\n      <Col xs={24} lg={18}>\n        <ProposalList daoAddress={daoAddress} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Proposal\n","import { ConsensusMechanism, ConsensusMechanisms } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\nimport { useUI } from '@senhub/providers'\n\nimport { Button, Row, Col, Space, Typography, Popover } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nexport type ConsensusMechanismInputProps = {\n  value: ConsensusMechanism\n  onChange: (value: ConsensusMechanism) => void\n}\n\nconst ConsensusMechanismInput = ({\n  value = ConsensusMechanisms.StakedTokenCounter,\n  onChange = () => {},\n}: ConsensusMechanismInputProps) => {\n  const {\n    ui: { infix },\n  } = useUI()\n  const mobileScreen = infix === 'xs'\n  const mobileSpan = mobileScreen ? 12 : undefined\n\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space>\n          <Typography.Text>Voting Mechanism</Typography.Text>\n          <Popover\n            overlayStyle={{ maxWidth: 300 }}\n            trigger=\"click\"\n            content={\n              <Row gutter={[16, 16]}>\n                <Col span={24}>\n                  <Typography.Title level={5}>\n                    What are Voting Mechanisms?\n                  </Typography.Title>\n                </Col>\n                <Col span={24}>\n                  <Space direction=\"vertical\">\n                    <Typography.Text>\n                      <strong>Stake (Token) to Vote:</strong> The power of a\n                      vote is only counted based on the number of staked tokens.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Lock (Token) to Vote:</strong> The power of a vote\n                      is the product of the number of staked tokens and the lock\n                      time in seconds.\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            }\n          >\n            <Button\n              type=\"text\"\n              size=\"small\"\n              icon={<IonIcon name=\"information-circle-outline\" />}\n            />\n          </Popover>\n        </Space>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusMechanisms.StakedTokenCounter)\n              ? ''\n              : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusMechanisms.StakedTokenCounter)}\n          block\n        >\n          Stake to Vote\n        </Button>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusMechanisms.LockedTokenCounter)\n              ? ''\n              : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusMechanisms.LockedTokenCounter)}\n          block\n        >\n          Lock to Vote\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ConsensusMechanismInput\n","import { ConsensusQuorum, ConsensusQuorums } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\nimport { useUI } from '@senhub/providers'\n\nimport { Button, Row, Col, Typography } from 'antd'\n\nexport type ConsensusQuorumInputProps = {\n  value: ConsensusQuorum\n  onChange: (value: ConsensusQuorum) => void\n}\n\nconst ConsensusQuorumInput = ({\n  value = ConsensusQuorums.Half,\n  onChange = () => {},\n}: ConsensusQuorumInputProps) => {\n  const {\n    ui: { infix },\n  } = useUI()\n  const mobileScreen = infix === 'xs'\n  const mobileSpan = mobileScreen ? 8 : undefined\n\n  return (\n    <Row gutter={[12, 12]}>\n      <Col span={24}>\n        <Typography.Text>Consensus Quorum</Typography.Text>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusQuorums.OneThird) ? '' : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusQuorums.OneThird)}\n          block\n        >\n          1/3\n        </Button>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusQuorums.Half) ? '' : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusQuorums.Half)}\n          block\n        >\n          1/2\n        </Button>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusQuorums.TwoThird) ? '' : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusQuorums.TwoThird)}\n          block\n        >\n          2/3\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ConsensusQuorumInput\n","import moment from 'moment'\n\nimport { Col, DatePicker, Row, Typography } from 'antd'\n\nexport type DurationInputType = {\n  value: Array<number>\n  onChange: (value: Array<number>) => void\n}\n\nconst DurationInput = ({ value, onChange }: DurationInputType) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Typography.Text>Proposal Duration</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[12, 12]}>\n          <Col span={12}>\n            <DatePicker\n              placeholder=\"Start Date\"\n              value={moment(value[0])}\n              onChange={(e) => onChange([e?.valueOf() || value[0], value[1]])}\n              showTime\n              style={{ width: '100%' }}\n            />\n          </Col>\n          <Col span={12}>\n            <DatePicker\n              placeholder=\"End Date\"\n              value={moment(value[1])}\n              onChange={(e) => onChange([value[0], e?.valueOf() || value[1]])}\n              showTime\n              style={{ width: '100%' }}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DurationInput\n","import { useSelector } from 'react-redux'\nimport { DaoData } from '@interdao/core'\nimport { SystemProgram } from '@solana/web3.js'\n\nimport { Col, Row, Space } from 'antd'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport StatisticCard from 'app/components/statisticCard'\nimport RegimeTag from 'app/components/regimeTag'\nimport AvatarNFT from 'app/components/avatarNFT'\nimport DaoMember from 'app/components/dao/daoMember'\n\nimport { AppState } from 'app/model'\nimport { shortenAddress } from 'shared/util'\n\nexport type ProposalPreviewProps = {\n  daoAddress: string\n}\n\nconst ProposalPreview = ({ daoAddress }: ProposalPreviewProps) => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const { regime, mint, isNft } =\n    daos[daoAddress] ||\n    ({\n      regime: {},\n      mint: SystemProgram.programId,\n    } as DaoData)\n\n  return (\n    <Row gutter={[36, 16]}>\n      <Col xs={12} md={5}>\n        <StatisticCard title=\"DAO Address\" value={shortenAddress(daoAddress)} />\n      </Col>\n      <Col xs={12} md={5}>\n        <StatisticCard\n          title=\"Vote By\"\n          value={\n            isNft ? (\n              <AvatarNFT mintAddress={mint.toBase58()} />\n            ) : (\n              <Space>\n                <MintAvatar mintAddress={mint.toBase58()} />\n                <MintSymbol mintAddress={mint.toBase58()} />\n              </Space>\n            )\n          }\n        />\n      </Col>\n      <Col xs={12} md={5}>\n        <StatisticCard\n          title=\"Members\"\n          value={<DaoMember daoAddress={daoAddress} />}\n        />\n      </Col>\n      <Col xs={12} md={5}>\n        <StatisticCard title=\"Regime\" value={<RegimeTag regime={regime} />} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProposalPreview\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ConsensusMechanisms, ConsensusQuorums } from '@interdao/core'\nimport BN from 'bn.js'\nimport { CID } from 'ipfs-core'\n\nimport { Button, Card, Col, Divider, Input, Row, Space, Typography } from 'antd'\nimport ConsensusMechanismInput from './consensusMechanismInput'\nimport ConsensusQuorumInput from '../../../components/consensusQuorumInput'\nimport DurationInput from './durationInput'\nimport ProposalPreview from './proposalPreview'\n\nimport configs from 'app/configs'\nimport { explorer } from 'shared/util'\nimport IPFS from 'app/helpers/ipfs'\nimport { AppState } from 'app/model'\nimport { clearTx } from 'app/model/template.controller'\nimport useMetaData from 'app/hooks/useMetaData'\n\nconst {\n  sol: { interDao, taxman, fee },\n  manifest: { appId },\n} = configs\n\nexport type ProposalMetaData = {\n  title: string\n  description: string\n  templateName: string\n  templateData?: any\n}\n\nconst CURRENT_TIME = Number(new Date())\nconst ONE_DAY = 24 * 60 * 60 * 1000\nconst DEFAULT_DURATION = [CURRENT_TIME + ONE_DAY, CURRENT_TIME + 15 * ONE_DAY]\n\nconst ProposalInitialization = () => {\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const { daoAddress } = useParams<{ daoAddress: string }>()\n\n  const daos = useSelector((state: AppState) => state.daos)\n  const template = useSelector((state: AppState) => state.template)\n\n  const [consensusMechanism, setConsensusMechanism] = useState(\n    ConsensusMechanisms.StakedTokenCounter,\n  )\n  const [consensusQuorum, setConsensusQuorum] = useState(ConsensusQuorums.Half)\n  const [duration, setDuration] = useState([...DEFAULT_DURATION])\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const { metaData: daoMetaData } = useMetaData(daoAddress)\n\n  const disabled = !title || !description\n  const isMultisigDAO = daoMetaData?.daoType === 'multisig-dao'\n\n  const proposalMetaData: ProposalMetaData = useMemo(() => {\n    return {\n      title,\n      description,\n      templateName: template.templateName || '',\n      templateData: template.data,\n    }\n  }, [description, template, title])\n\n  const uploadMetaData = useCallback(async () => {\n    const ipfs = new IPFS()\n    const cid = await ipfs.set(proposalMetaData)\n    const {\n      multihash: { digest },\n    } = CID.parse(cid)\n    return digest\n  }, [proposalMetaData])\n\n  const newProposal = useCallback(async () => {\n    const { authority } = daos[daoAddress]\n    if (!template.tx) return\n    try {\n      setLoading(true)\n      const digest = await uploadMetaData()\n\n      const metadata = Buffer.from(digest)\n      const { programId, data, accounts } = template.tx\n      const valueAccounts = Object.values(accounts)\n\n      const { txId, proposalAddress } = await interDao.initializeProposal(\n        daoAddress,\n        programId.toBase58(),\n        data,\n        valueAccounts.map(({ pubkey }) => pubkey),\n        valueAccounts.map(({ isSigner }) => isSigner),\n        valueAccounts.map(({ isWritable }) => isWritable),\n        valueAccounts.map(({ isMaster }) => isMaster),\n        Math.floor(duration[0] / 1000),\n        Math.floor(duration[1] / 1000),\n        metadata,\n        consensusMechanism,\n        consensusQuorum,\n        {\n          revenue: new BN(fee),\n          revenuemanAddress: authority.toBase58(),\n          tax: new BN(fee),\n          taxmanAddress: taxman,\n        },\n      )\n      window.notify({\n        type: 'success',\n        description:\n          'Create a new proposal successfully. Click here to view details.',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n\n      //Clear tx in redux\n      dispatch(clearTx())\n      return history.push(\n        `/app/${appId}/dao/${daoAddress}/proposal/${proposalAddress}`,\n      )\n    } catch (er: any) {\n      return window.notify({\n        type: 'error',\n        description: er.message,\n      })\n    } finally {\n      return setLoading(false)\n    }\n  }, [\n    consensusMechanism,\n    consensusQuorum,\n    daoAddress,\n    daos,\n    dispatch,\n    duration,\n    history,\n    template.tx,\n    uploadMetaData,\n  ])\n\n  useEffect(() => {\n    if (!template.tx) return history.push(`/app/${appId}/dao/${daoAddress}`)\n  }, [daoAddress, history, template.tx])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col xs={24} md={14}>\n        <Card bordered={false}>\n          <Row gutter={[24, 24]}>\n            <Col span={24}>\n              <Typography.Title level={1}>\n                Input Proposal Information\n              </Typography.Title>\n            </Col>\n            <Col span={24} />\n            <Col span={24}>\n              <ProposalPreview daoAddress={daoAddress} />\n            </Col>\n            <Col span={24}>\n              <Divider className=\"proposal-initialize\" />\n            </Col>\n            <Col span={24}>\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <Typography.Text>Title</Typography.Text>\n                <Input\n                  value={title}\n                  placeholder=\"A short summary of your proposal.\"\n                  className=\"border-less\"\n                  onChange={(e) => setTitle(e.target.value)}\n                />\n              </Space>\n            </Col>\n            <Col span={24}>\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <Typography.Text>Description</Typography.Text>\n                <Input.TextArea\n                  placeholder=\"More detail about your proposal...\"\n                  name=\"description\"\n                  className=\"border-less\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </Space>\n            </Col>\n            <Col span={24}>\n              <DurationInput value={duration} onChange={setDuration} />\n            </Col>\n            {!isMultisigDAO && (\n              <Col span={24}>\n                <ConsensusMechanismInput\n                  value={consensusMechanism}\n                  onChange={setConsensusMechanism}\n                />\n              </Col>\n            )}\n            <Col span={24}>\n              <ConsensusQuorumInput\n                value={consensusQuorum}\n                onChange={setConsensusQuorum}\n              />\n            </Col>\n            <Col span={24} />\n            <Col flex=\"auto\">\n              <Button\n                type=\"text\"\n                onClick={() => history.push(`/app/${appId}/dao/${daoAddress}`)}\n                size=\"large\"\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col>\n              <Button\n                onClick={newProposal}\n                loading={loading}\n                type=\"primary\"\n                size=\"large\"\n                disabled={disabled}\n              >\n                Add New Proposal\n              </Button>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProposalInitialization\n","import { Progress, Space, Typography } from 'antd'\n\nexport type InitDAOHeaderProps = {\n  step: number\n  onHandleStep?: () => void\n  disabled?: boolean\n}\n\nconst DEFAULT_PERCENT = 25\nconst DAO_PROGRESS_TITLE = [\n  'Choose Type of DAO',\n  'Input DAO Information',\n  'Set The Rule',\n  'Review',\n]\n\nconst InitDAOHeader = ({ step }: InitDAOHeaderProps) => {\n  return (\n    <Space direction=\"vertical\" size={12}>\n      <Typography.Title level={1}>{DAO_PROGRESS_TITLE[step]}</Typography.Title>\n      <Progress\n        className=\"create-progress\"\n        percent={step * DEFAULT_PERCENT + DEFAULT_PERCENT}\n        steps={4}\n        showInfo={false}\n      />\n    </Space>\n  )\n}\n\nexport default InitDAOHeader\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { DaoRegime, DaoRegimes } from '@interdao/core'\nimport { web3 } from '@project-serum/anchor'\nimport BN from 'bn.js'\n\nexport const DEFAULT_META_DATA: MetaData = {\n  daoName: '',\n  description: '',\n  image: '',\n  optionals: [],\n  daoType: 'flexible-dao',\n  members: [],\n  distributorAddress: '',\n}\n\nexport const DEFAULT_DAO_DATA: CreateDaoData = {\n  mintAddress: '',\n  supply: new BN(0),\n  metadata: DEFAULT_META_DATA,\n  dao: undefined,\n  regime: DaoRegimes.Dictatorial,\n  isPublic: true,\n  isNft: false,\n}\n\n/**\n * Interface & Utility\n */\nexport type DaoType = 'flexible-dao' | 'multisig-dao'\n\nexport type CreateDaoData = {\n  mintAddress: string\n  supply: BN\n  metadata: MetaData\n  dao?: web3.Keypair\n  regime: DaoRegime\n  isPublic: boolean\n  isNft: boolean\n}\n\nexport type MetaData = {\n  daoName: string\n  description: string\n  image: string | ArrayBuffer | null\n  optionals: string[]\n  daoType: DaoType\n  members: DAOMember[]\n  distributorAddress: string\n}\n\nexport type DAOMember = {\n  name: string\n  walletAddress: string\n}\n\nexport enum CreateDaoSteps {\n  ChooseType,\n  InputDetails,\n  SetRule,\n  Review,\n}\n\nexport type CreateDaoState = {\n  step: CreateDaoSteps\n  data: CreateDaoData\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'createDao'\nconst initialState: CreateDaoState = {\n  step: CreateDaoSteps.ChooseType,\n  data: { ...DEFAULT_DAO_DATA },\n}\n\n/**\n * Actions\n */\n\nexport const submitStepChooseType = createAsyncThunk<\n  CreateDaoState,\n  { daoType: DaoType },\n  { state: { createDao: CreateDaoState } }\n>(`${NAME}/submitStepChooseType`, async ({ daoType }, { getState }) => {\n  const { createDao } = getState()\n  const { metadata } = createDao.data\n  const newState: CreateDaoState = {\n    step: CreateDaoSteps.InputDetails,\n    data: { ...createDao.data, metadata: { ...metadata, daoType } },\n  }\n  return newState\n})\n\nexport const submitStepDaoDetail = createAsyncThunk<\n  CreateDaoState,\n  { metadata: MetaData },\n  { state: { createDao: CreateDaoState } }\n>(`${NAME}/submitStepDaoDetail`, async ({ metadata }, { getState }) => {\n  const { createDao } = getState()\n\n  const newState: CreateDaoState = {\n    step: CreateDaoSteps.SetRule,\n    data: { ...createDao.data, metadata },\n  }\n  return newState\n})\n\nexport const submitStepSetRule = createAsyncThunk<\n  CreateDaoState,\n  { rule: Partial<CreateDaoData> },\n  { state: { createDao: CreateDaoState } }\n>(`${NAME}/submitStepSetRule`, async ({ rule }, { getState }) => {\n  const { createDao } = getState()\n  if (!rule) return createDao\n  const newState: CreateDaoState = {\n    step: CreateDaoSteps.Review,\n    data: { ...createDao.data, ...rule },\n  }\n  return newState\n})\n\nexport const revertPrevStep = createAsyncThunk<\n  CreateDaoState,\n  void,\n  { state: { createDao: CreateDaoState } }\n>(`${NAME}/prevStep`, async (_, { getState }) => {\n  const { createDao } = getState()\n  let prevStep = createDao.step\n  switch (prevStep) {\n    case CreateDaoSteps.Review:\n      prevStep = CreateDaoSteps.SetRule\n      break\n    case CreateDaoSteps.SetRule:\n      prevStep = CreateDaoSteps.InputDetails\n      break\n    case CreateDaoSteps.InputDetails:\n      prevStep = CreateDaoSteps.ChooseType\n      break\n    default:\n      prevStep = CreateDaoSteps.ChooseType\n      break\n  }\n  const newState: CreateDaoState = {\n    step: prevStep,\n    data: { ...createDao.data },\n  }\n  return newState\n})\n\nexport const clearCreateDao = createAsyncThunk<CreateDaoState>(\n  `${NAME}/clearCreateDao`,\n  async () => {\n    return {\n      step: CreateDaoSteps.ChooseType,\n      data: { ...DEFAULT_DAO_DATA },\n    }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        submitStepChooseType.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        submitStepDaoDetail.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        submitStepSetRule.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        revertPrevStep.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        clearCreateDao.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Col,\n  Radio,\n  RadioChangeEvent,\n  Row,\n  Typography,\n} from 'antd'\n\nimport { AppDispatch } from 'app/model'\nimport { DaoType, submitStepChooseType } from 'app/model/createDao.controller'\nimport configs from 'app/configs'\n\nconst DAO_TYPE = [\n  {\n    key: 'flexible-dao',\n    label: 'Flexible DAO',\n    description:\n      'The Flexible DAO has 3 regimes that allow you to create a DAO customized for your individual requirements, community structure, and governance token setup.',\n  },\n  {\n    key: 'multisig-dao',\n    label: 'MultiSig DAO (Coming Soon)',\n    description:\n      'The Multisig DAO allows you to create an organization for your team members with Autonomous regime and jointly own, manage shared assets such as treasury accounts, NFTs or mints.',\n    disabled: true,\n  },\n]\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst ChooseDaoType = () => {\n  const [daoType, setDaoType] = useState<DaoType>('flexible-dao')\n  const history = useHistory()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const cardBorder = (key: string) =>\n    daoType !== key ? { borderColor: 'transparent' } : {}\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <Radio.Group\n          defaultValue={daoType}\n          onChange={(e: RadioChangeEvent) => setDaoType(e.target.value)}\n          className=\"btn-radio-card\"\n        >\n          <Row gutter={[24, 24]}>\n            {DAO_TYPE.map(({ key, label, description, disabled }) => (\n              <Col xs={24} md={12} key={key}>\n                <Radio.Button\n                  value={key}\n                  style={{ border: 'none' }}\n                  disabled={disabled}\n                >\n                  <Card\n                    style={{ ...cardBorder(key) }}\n                    className={`group-btn-card ${key} ${\n                      daoType === key ? 'active' : ''\n                    }`}\n                    bordered={false}\n                  >\n                    <Row gutter={[12, 12]}>\n                      <Col span={24}>\n                        <Typography.Title level={4}>{label}</Typography.Title>\n                      </Col>\n                      <Col span={24}>\n                        <Typography.Text type=\"secondary\">\n                          {description}\n                        </Typography.Text>\n                      </Col>\n                    </Row>\n                  </Card>\n                </Radio.Button>\n              </Col>\n            ))}\n          </Row>\n        </Radio.Group>\n      </Col>\n      <Col span={24}>\n        <Row>\n          <Col flex=\"auto\">\n            <Button\n              type=\"text\"\n              onClick={() => history.push(`/app/${appId}/dao`)}\n              size=\"large\"\n            >\n              Cancel\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              type=\"primary\"\n              onClick={() => dispatch(submitStepChooseType({ daoType }))}\n              size=\"large\"\n            >\n              Continue\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ChooseDaoType\n","import { ChangeEvent } from 'react'\n\nimport {\n  Button,\n  Card,\n  Col,\n  Image,\n  Input,\n  Row,\n  Space,\n  Typography,\n  Upload,\n} from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { UploadChangeParam } from 'antd/lib/upload'\nimport { fileToBase64 } from 'app/helpers'\nimport { MetaData } from 'app/model/createDao.controller'\n\ntype FormInputDetailProps = {\n  metadata: MetaData\n  setMetadata: (metadata: MetaData) => void\n}\n\nconst FormInputDetail = ({ metadata, setMetadata }: FormInputDetailProps) => {\n  const formatMetaData = async (imgBase64: string | ArrayBuffer | null) => {\n    const nextMetaData: MetaData = {\n      ...metadata,\n      image: imgBase64,\n    }\n    return setMetadata(nextMetaData)\n  }\n\n  const onFileChange = (file: UploadChangeParam) => {\n    const { fileList } = file\n    const originFile = fileList[0].originFileObj as File\n    fileToBase64(originFile, formatMetaData)\n  }\n\n  const onChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) =>\n    setMetadata({ ...metadata, [e.target.name]: e.target.value })\n\n  const onOptionalChange = (e: ChangeEvent<HTMLInputElement>, idx: number) => {\n    const socials: string[] = [...metadata.optionals]\n    socials[idx] = e.target.value\n    return setMetadata({ ...metadata, optionals: socials })\n  }\n\n  const addLink = () => {\n    const socials: string[] = [...metadata.optionals]\n    socials.push('')\n    return setMetadata({ ...metadata, optionals: socials })\n  }\n\n  const removeLink = (index: number) => {\n    const socials: string[] = [...metadata.optionals]\n    socials.splice(index, 1)\n    return setMetadata({ ...metadata, optionals: socials })\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          <Typography.Text>DAO Name</Typography.Text>\n          <Input\n            placeholder=\"Input DAO name\"\n            onChange={onChange}\n            name=\"daoName\"\n            className=\"border-less\"\n            value={metadata.daoName}\n          />\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          <Typography.Text>DAO Description</Typography.Text>\n          <Input.TextArea\n            placeholder=\"Input DAO description\"\n            name=\"description\"\n            onChange={onChange}\n            className=\"border-less\"\n            value={metadata.description}\n          />\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Text>Avatar</Typography.Text>\n          {metadata.image ? (\n            <Card\n              className=\"img-card-preview-upload\"\n              bodyStyle={{\n                padding: 0,\n                position: 'relative',\n                height: '100%',\n              }}\n            >\n              <Image src={metadata.image?.toString() || ''} preview={false} />\n              <IonIcon\n                className=\"ico-action-upload\"\n                name=\"trash-outline\"\n                onClick={() => setMetadata({ ...metadata, image: '' })}\n              />\n            </Card>\n          ) : (\n            <Upload\n              className={`interdao-upload-metadata ${\n                !!metadata.image ? 'uploaded' : ''\n              }`}\n              accept=\"image/png,image/jpg,image/webp\"\n              name=\"avatar\"\n              listType=\"picture-card\"\n              maxCount={1}\n              onChange={onFileChange}\n              onRemove={() => {\n                setMetadata({ ...metadata, image: '' })\n                return true\n              }}\n            >\n              <Space direction=\"vertical\" size={0}>\n                <Typography.Text style={{ fontSize: 24 }}>\n                  <IonIcon name=\"cloud-upload-outline\" />\n                </Typography.Text>\n                <Typography.Text type=\"secondary\" style={{ fontSize: 10 }}>\n                  Support JPG, PNG\n                </Typography.Text>\n              </Space>\n            </Upload>\n          )}\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          <Typography.Text>Social Media (Optional)</Typography.Text>\n          <Row gutter={[8, 8]}>\n            {metadata.optionals.map((social, index) => (\n              <Col span={24} key={index}>\n                <Row gutter={[12, 12]}>\n                  <Col span={22}>\n                    <Input\n                      placeholder=\"Input link\"\n                      onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                        onOptionalChange(e, index)\n                      }\n                      className=\"border-less\"\n                      value={social}\n                    />\n                  </Col>\n                  <Col span={2}>\n                    <Button\n                      type=\"text\"\n                      icon={<IonIcon name=\"trash-outline\" />}\n                      onClick={() => removeLink(index)}\n                    />\n                  </Col>\n                </Row>\n              </Col>\n            ))}\n            <Col span={24}>\n              <Button\n                type=\"dashed\"\n                icon={<IonIcon name=\"add-outline\" />}\n                onClick={addLink}\n              >\n                Add\n              </Button>\n            </Col>\n          </Row>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default FormInputDetail\n","import { useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Col, Row } from 'antd'\n\nimport { validURL } from 'app/helpers'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport {\n  MetaData,\n  revertPrevStep,\n  submitStepDaoDetail,\n} from 'app/model/createDao.controller'\nimport FormInputDetail from '../../../components/formInputDetail'\n\nconst DaoInputDetails = () => {\n  const defaultMetadata = useSelector(\n    (state: AppState) => state.createDao.data.metadata,\n  )\n  const [metadata, setMetadata] = useState<MetaData>(defaultMetadata)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const validLink = useMemo(() => {\n    const { optionals } = metadata\n    if (!optionals.length) return true\n    for (const link of optionals) if (!validURL(link)) return false\n    return true\n  }, [metadata])\n\n  const disabled = useMemo(() => {\n    const { daoName, description, image } = metadata\n    return !daoName || !description || !image || !validLink\n  }, [metadata, validLink])\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <FormInputDetail metadata={metadata} setMetadata={setMetadata} />\n      </Col>\n      <Col span={24}>\n        <Row>\n          <Col flex=\"auto\">\n            <Button\n              type=\"text\"\n              size=\"large\"\n              onClick={() => dispatch(revertPrevStep())}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              disabled={disabled}\n              onClick={() => dispatch(submitStepDaoDetail({ metadata }))}\n            >\n              Continue\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoInputDetails\n","import { useSelector } from 'react-redux'\nimport { useUI } from '@senhub/providers'\n\nimport { Col, Image, Row, Space, Typography } from 'antd'\nimport CardRegime from '../components/cardRegime'\nimport AvatarNFT from 'app/components/avatarNFT'\n\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport { AppState } from 'app/model'\nimport { numeric } from 'shared/util'\n\nconst MAX_WIDTH_RATIO = 24 / 16\nconst PAGE_SPACING = 24\nconst HEIGHT_RATIO = 1.777777\n\nconst FlexibleDaoReview = () => {\n  const regime = useSelector((state: AppState) => state.createDao.data.regime)\n  const isNft = useSelector((state: AppState) => state.createDao.data.isNft)\n  const mintAddress = useSelector(\n    (state: AppState) => state.createDao.data.mintAddress,\n  )\n  const supply = useSelector((state: AppState) => state.createDao.data.supply)\n  const daoName = useSelector(\n    (state: AppState) => state.createDao.data.metadata.daoName,\n  )\n  const description = useSelector(\n    (state: AppState) => state.createDao.data.metadata.description,\n  )\n  const image = useSelector(\n    (state: AppState) => state.createDao.data.metadata.image,\n  )\n  const {\n    ui: { width },\n  } = useUI()\n\n  const isMobile = width < 768\n  const desktopWidth = width > 992 ? width / MAX_WIDTH_RATIO : width\n  const logoSize = isMobile\n    ? '100%'\n    : (desktopWidth - 6 - PAGE_SPACING * 4) / HEIGHT_RATIO / 2 + 3\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col xs={24} md={12}>\n        <Space direction=\"vertical\" size={24} style={{ width: '100%' }}>\n          <Space direction=\"vertical\">\n            <Typography.Text type=\"secondary\">Name of DAO</Typography.Text>\n            <Typography.Title level={1}>{daoName}</Typography.Title>\n          </Space>\n          <Space direction=\"vertical\" style={{ width: '100%' }}>\n            <Typography.Text>DAO Regime</Typography.Text>\n            <CardRegime regime={regime} />\n          </Space>\n        </Space>\n      </Col>\n      <Col xs={24} md={12}>\n        <Space direction=\"vertical\" size={24}>\n          <Space direction=\"vertical\">\n            <Typography.Text type=\"secondary\">Vote By</Typography.Text>\n            {isNft ? (\n              <AvatarNFT mintAddress={mintAddress} size={48} />\n            ) : (\n              <Space>\n                <MintAvatar mintAddress={mintAddress} size={48} />\n                <Typography.Title level={1}>\n                  <MintSymbol mintAddress={mintAddress} />\n                </Typography.Title>\n              </Space>\n            )}\n          </Space>\n          <Space direction=\"vertical\" className=\"dao-logo-img\">\n            <Typography.Text>DAO Logo</Typography.Text>\n            <Image\n              style={{ width: logoSize, height: logoSize }}\n              src={image?.toString()}\n              preview={false}\n            />\n          </Space>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Text type=\"secondary\">Total Power</Typography.Text>\n          <Space direction=\"horizontal\">\n            <Typography.Title level={1}>\n              {numeric(supply?.toString()).format('0,0.[00]')}\n            </Typography.Title>\n            <Typography.Title level={1}>\n              <MintSymbol mintAddress={mintAddress} />\n            </Typography.Title>\n          </Space>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Text type=\"secondary\">Description</Typography.Text>\n          <Typography.Text>{description}</Typography.Text>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default FlexibleDaoReview\n","import { useSelector } from 'react-redux'\n\nimport { Col, Image, Row, Space, Typography } from 'antd'\nimport RowSpaceVertical from 'app/components/rowSpaceVertical'\nimport CardRegime from '../components/cardRegime'\n\nimport { AppState } from 'app/model'\nimport { useUI } from '@senhub/providers'\n\nconst PAGE_SPACING = 24\nconst HEIGHT_RATIO = 1.777777\nconst MAX_WIDTH_RATIO = 24 / 16\n\nconst MultisigDAOReview = () => {\n  const regime = useSelector((state: AppState) => state.createDao.data.regime)\n  const isPublic = useSelector(\n    (state: AppState) => state.createDao.data.isPublic,\n  )\n  const daoName = useSelector(\n    (state: AppState) => state.createDao.data.metadata.daoName,\n  )\n  const description = useSelector(\n    (state: AppState) => state.createDao.data.metadata.description,\n  )\n  const image = useSelector(\n    (state: AppState) => state.createDao.data.metadata.image,\n  )\n  const members = useSelector(\n    (state: AppState) => state.createDao.data.metadata.members,\n  )\n  const {\n    ui: { width },\n  } = useUI()\n\n  const isMobile = width < 768\n  const desktopWidth = width > 992 ? width / MAX_WIDTH_RATIO : width\n  const logoSize = isMobile\n    ? '100%'\n    : (desktopWidth - 6 - PAGE_SPACING * 4) / HEIGHT_RATIO / 2 + 3\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row justify=\"space-between\">\n          <Col>\n            <RowSpaceVertical\n              label=\"Name of DAO\"\n              value={<Typography.Title level={1}>{daoName}</Typography.Title>}\n            />\n          </Col>\n          <Col>\n            <RowSpaceVertical\n              label=\"DAO Privacy\"\n              value={\n                <Typography.Title level={1}>\n                  {isPublic ? 'Public' : 'Member'}\n                </Typography.Title>\n              }\n            />\n          </Col>\n        </Row>\n      </Col>\n      <Col xs={24} md={12}>\n        <RowSpaceVertical\n          label=\"DAO Regime\"\n          value={<CardRegime regime={regime} />}\n        />\n      </Col>\n      <Col xs={24} md={12}>\n        <RowSpaceVertical\n          label=\"DAO Regime\"\n          value={\n            <Image\n              style={{ width: logoSize, height: logoSize }}\n              src={image?.toString()}\n              preview={false}\n            />\n          }\n        />\n      </Col>\n      <Col span={24}>\n        <Row gutter={[8, 8]}>\n          <Col span={24}>\n            <Typography.Text type=\"secondary\">\n              {members.length} members\n            </Typography.Text>\n          </Col>\n          {members.map(({ walletAddress, name }) => (\n            <Col span={24} key={walletAddress}>\n              <Space>\n                <Typography.Title level={4}>{name}</Typography.Title>\n                <Typography.Title level={4} type=\"secondary\">\n                  {walletAddress}\n                </Typography.Title>\n              </Space>\n            </Col>\n          ))}\n        </Row>\n      </Col>\n      <Col span={24}>\n        <RowSpaceVertical\n          label=\"Description\"\n          value={\n            <Typography.Paragraph style={{ margin: 0 }}>\n              {description}\n            </Typography.Paragraph>\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default MultisigDAOReview\n","import { useCallback, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { CID } from 'ipfs-core'\nimport BN from 'bn.js'\n\nimport IPFS from 'app/helpers/ipfs'\nimport { explorer } from 'shared/util'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport configs from 'app/configs'\nimport { AppState } from 'app/model'\nimport usePDB from '../usePDB'\n\nconst {\n  sol: { interDao },\n  manifest: { appId },\n} = configs\n\nconst useFlexibleDao = () => {\n  const [loading, setLoading] = useState(false)\n  const createDaoData = useSelector((state: AppState) => state.createDao.data)\n\n  const { mintAddress } = createDaoData\n  const decimals = useMintDecimals(mintAddress) || 0\n  const pdb = usePDB()\n  const history = useHistory()\n\n  const createFlexDAO = useCallback(async () => {\n    try {\n      setLoading(true)\n      const { mintAddress, supply, regime, isPublic, isNft, metadata } =\n        createDaoData\n      const ipfs = new IPFS()\n      const cid = await ipfs.set(metadata)\n      const {\n        multihash: { digest },\n      } = CID.parse(cid)\n      const metadataBuff = Buffer.from(digest)\n      const totalSupply = supply.mul(new BN(10).pow(new BN(decimals)))\n\n      const { txId, daoAddress } = await interDao.initializeDao(\n        mintAddress,\n        totalSupply,\n        metadataBuff,\n        undefined, // Optional DAO's keypair\n        regime,\n        isNft,\n        isPublic,\n      )\n      const localMetadata = { ...metadata, cid }\n      await pdb.setItem(daoAddress, localMetadata) // to realtime\n      window.notify({\n        type: 'success',\n        description: 'A new DAO is created. Click here to view details.',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n      return history.push(`/app/${appId}/dao/${daoAddress}`)\n    } catch (er: any) {\n      window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }, [createDaoData, decimals, pdb, history])\n\n  return { createFlexDAO, loading }\n}\n\nexport default useFlexibleDao\n","import { DEFAULT_EMPTY_ADDRESS } from '@senswap/sen-js'\nimport { web3, BN } from '@project-serum/anchor'\nimport { PublicKey } from '@solana/web3.js'\nimport { createMintAndMintTo, getAnchorProvider } from 'sentre-web3'\n\nimport configs from 'app/configs'\nimport { rpc } from 'shared/runtime'\n\nconst {\n  sol: { utility },\n} = configs\n\nclass MultisigWallet {\n  private _mint: PublicKey\n\n  constructor(mintAddress: string) {\n    this._mint = new PublicKey(mintAddress)\n  }\n\n  getProvider = async () => {\n    const wallet = window.sentre.wallet\n    const walletAddress = await wallet.getAddress()\n    return getAnchorProvider(rpc, walletAddress, wallet)\n  }\n\n  createNewTokenAndMintTo = async (number: number) => {\n    const mint = new web3.Keypair()\n    const provider = await this.getProvider()\n    await createMintAndMintTo(provider, {\n      mint,\n      amount: new BN(number),\n      decimals: 0,\n    })\n    this._mint = mint.publicKey\n    return mint.publicKey\n  }\n\n  isValidMint = (): boolean => this._mint.toBase58() !== DEFAULT_EMPTY_ADDRESS\n\n  mintToAccount = async (dstAddress: string, amount: number) => {\n    if (!this.isValidMint()) throw new Error('Please create mint first!')\n    await utility.safeMintTo({\n      amount: new BN(amount),\n      tokenAddress: this._mint.toBase58(),\n      dstWalletAddress: dstAddress,\n    })\n  }\n\n  getMintAddress = (): string => {\n    if (!this.isValidMint()) return ''\n    return this._mint.toBase58()\n  }\n}\nexport default MultisigWallet\n","import { useCallback, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { CID } from 'ipfs-core'\nimport BN from 'bn.js'\nimport { account, DEFAULT_EMPTY_ADDRESS } from '@senswap/sen-js'\nimport { useWallet } from '@senhub/providers'\n\nimport IPFS from 'app/helpers/ipfs'\nimport { explorer } from 'shared/util'\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\nimport MultisigWallet from 'app/helpers/mutisigWallet'\nimport Distributor from 'app/helpers/distributor'\nimport usePDB from '../usePDB'\n\nconst {\n  sol: { interDao },\n  manifest: { appId },\n} = configs\n\nconst useMultisigDao = () => {\n  const [loading, setLoading] = useState(false)\n  const createDaoData = useSelector((state: AppState) => state.createDao.data)\n  const metadata = useSelector(\n    (state: AppState) => state.createDao.data.metadata,\n  )\n  const pdb = usePDB()\n  const history = useHistory()\n  const {\n    wallet: { address: myWallet },\n  } = useWallet()\n\n  const createVotingMint = useCallback(async () => {\n    const { members } = metadata\n    const multiSigWallet = new MultisigWallet(DEFAULT_EMPTY_ADDRESS)\n    const mintAddress = await multiSigWallet.createNewTokenAndMintTo(\n      members.length,\n    )\n    return mintAddress.toBase58()\n  }, [metadata])\n\n  const getDistributorAddress = useCallback(\n    async (mintAddress: string) => {\n      const { members, daoType } = metadata\n      if (daoType === 'flexible-dao') return ''\n      const distributor = new Distributor()\n      const pubKeys = members\n        .filter(({ walletAddress }) => walletAddress !== myWallet)\n        .map(({ walletAddress }) => account.fromAddress(walletAddress))\n\n      const distributorAddress = await distributor.createDistributor(\n        pubKeys,\n        mintAddress,\n      )\n      return distributorAddress\n    },\n    [metadata, myWallet],\n  )\n\n  const createMultisigDao = useCallback(async () => {\n    try {\n      setLoading(true)\n      const { regime, isPublic, isNft } = createDaoData\n      const mintAddress = await createVotingMint()\n      const distributorAddress = await getDistributorAddress(mintAddress)\n      const ipfs = new IPFS()\n      const cid = await ipfs.set({ ...metadata, distributorAddress })\n      const {\n        multihash: { digest },\n      } = CID.parse(cid)\n      const metadataBuff = Buffer.from(digest)\n      const { members } = metadata\n      const totalSupply = new BN(members.length)\n      const { txId, daoAddress } = await interDao.initializeDao(\n        mintAddress,\n        totalSupply,\n        metadataBuff,\n        undefined, // Optional DAO's keypair\n        regime,\n        isNft,\n        isPublic,\n      )\n\n      await pdb.setItem(daoAddress, {\n        ...metadata,\n        distributorAddress,\n        cid,\n      }) // to realtime\n      window.notify({\n        type: 'success',\n        description: 'A new DAO is created. Click here to view details.',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n      return history.push(`/app/${appId}/dao/${daoAddress}`)\n    } catch (er: any) {\n      window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }, [\n    createDaoData,\n    createVotingMint,\n    getDistributorAddress,\n    metadata,\n    pdb,\n    history,\n  ])\n\n  return { createMultisigDao, loading }\n}\n\nexport default useMultisigDao\n","import { Button } from 'antd'\nimport { useSelector } from 'react-redux'\n\nimport useFlexibleDao from 'app/hooks/dao/useFlexibleDao'\nimport useMultisigDao from 'app/hooks/dao/useMultisigDao'\nimport { AppState } from 'app/model'\n\nconst ButtonFlexDao = () => {\n  const { createFlexDAO, loading } = useFlexibleDao()\n\n  return (\n    <Button\n      onClick={createFlexDAO}\n      type=\"primary\"\n      size=\"large\"\n      loading={loading}\n    >\n      Confirm\n    </Button>\n  )\n}\n\nconst ButtonMultisigDao = () => {\n  const { createMultisigDao, loading } = useMultisigDao()\n\n  return (\n    <Button\n      onClick={createMultisigDao}\n      type=\"primary\"\n      size=\"large\"\n      loading={loading}\n    >\n      Confirm\n    </Button>\n  )\n}\n\nconst ConfirmButton = () => {\n  const daoType = useSelector(\n    (state: AppState) => state.createDao.data.metadata.daoType,\n  )\n  if (daoType === 'flexible-dao') return <ButtonFlexDao />\n\n  return <ButtonMultisigDao />\n}\n\nexport default ConfirmButton\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Col, Row } from 'antd'\nimport FlexibleDaoReview from './flexibleDaoReview'\nimport MultisigDAOReview from './multisigDaoReview'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { revertPrevStep } from 'app/model/createDao.controller'\nimport ConfirmButton from './confirmButton'\n\nconst Review = () => {\n  const daoType = useSelector(\n    (state: AppState) => state.createDao.data.metadata.daoType,\n  )\n  const dispatch = useDispatch<AppDispatch>()\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        {daoType === 'flexible-dao' ? (\n          <FlexibleDaoReview />\n        ) : (\n          <MultisigDAOReview />\n        )}\n      </Col>\n      <Col span={24}>\n        <Row>\n          <Col flex=\"auto\">\n            <Button\n              type=\"text\"\n              size=\"large\"\n              onClick={() => dispatch(revertPrevStep())}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col>\n            <ConfirmButton />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Review\n","import { useMemo } from 'react'\nimport { useUI } from '@senhub/providers'\n\nimport { Card, Row, Col, Typography, Image } from 'antd'\n\nimport useNftMetaData from 'app/hooks/useNftMetaData'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport IMAGE_DEFAULT from 'app/static/images/system/nft.jpeg'\n\nexport type CardNFTProps = {\n  mintAddress: string\n  onSelect: (mintAddress: string) => void\n  isSelected?: boolean\n}\n\nconst SIZE_DESKTOP = 198\nconst SIZE_MOBILE = 150\n\nconst CardNFT = ({ mintAddress, onSelect, isSelected }: CardNFTProps) => {\n  const {\n    ui: { width },\n  } = useUI()\n\n  const imageSize = useMemo(() => {\n    if (width < 768) return SIZE_MOBILE\n    return SIZE_DESKTOP\n  }, [width])\n\n  const { nftInfo, loading } = useNftMetaData(mintAddress)\n\n  return (\n    <Card\n      bordered={false}\n      style={{ cursor: 'pointer', textAlign: 'center' }}\n      bodyStyle={{ padding: 0 }}\n      loading={loading}\n      onClick={() => onSelect(mintAddress)}\n    >\n      <Row>\n        {isSelected && (\n          <IonIcon\n            name=\"checkbox\"\n            style={{\n              position: 'absolute',\n              top: -1,\n              right: -1,\n              fontSize: 20,\n              zIndex: 1,\n            }}\n          />\n        )}\n        <Col span={24} style={{ textAlign: 'center', width: imageSize }}>\n          <Image\n            src={nftInfo?.image || IMAGE_DEFAULT}\n            preview={false}\n            style={{ borderRadius: 4 }}\n            width={imageSize}\n            height={imageSize}\n          />\n        </Col>\n        <Col span={24} style={{ textAlign: 'center', paddingTop: '8px' }}>\n          <Typography.Text>{nftInfo?.name}</Typography.Text>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CardNFT\n","import IonIcon from '@sentre/antd-ionicon'\nimport { Button, Input, Spin } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\n\ntype SearchDaoProps = {\n  onSearch: (keyword: string) => void\n  loading?: boolean\n  searchText: string\n}\n\nconst SearchNftCollection = ({ onSearch, loading = false }: SearchDaoProps) => {\n  return (\n    <Input\n      prefix={\n        <Button\n          type=\"text\"\n          size=\"small\"\n          icon={\n            loading ? (\n              <Spin indicator={<LoadingOutlined style={{ fontSize: 14 }} />} />\n            ) : (\n              <IonIcon name=\"search-outline\" />\n            )\n          }\n        />\n      }\n      placeholder=\"Search by collection address\"\n      style={{ width: '100%' }}\n      onChange={(e) => onSearch(e.target.value)}\n    />\n  )\n}\nexport default SearchNftCollection\n","import { Fragment, useCallback, useEffect, useState } from 'react'\nimport { useWallet } from '@senhub/providers'\nimport { account } from '@senswap/sen-js'\n\nimport { Card, Col, Empty, Image, Modal, Row, Space, Typography } from 'antd'\nimport CardNFT from 'app/components/cardNFT'\nimport SearchNftCollection from './searchNftCollection'\n\nimport {\n  fetchListNTFs,\n  getNftMetaData,\n  MetadataDataType,\n} from 'app/helpers/metaplex'\nimport useNftMetaData from 'app/hooks/useNftMetaData'\n\nimport BG_BTN from 'app/static/images/system/select-dao.png'\nimport IMAGE_DEFAULT from 'app/static/images/system/nft.jpeg'\n\nconst SIZE_COLLECTION_IMAGE = 88\n\ntype ModalNftCollectionProps = {\n  onSelect: (mintAddress: string) => void\n  mintAddress: string\n}\n\nconst CardNftImageOnly = ({\n  mintAddress,\n  openNftModal,\n}: {\n  mintAddress: string\n  openNftModal: (visible: boolean) => void\n}) => {\n  const { nftInfo, loading } = useNftMetaData(mintAddress)\n\n  return (\n    <Card\n      bordered={false}\n      bodyStyle={{ padding: 0 }}\n      loading={loading}\n      className=\"card-nft-image-only\"\n      onClick={() => openNftModal(true)}\n    >\n      <Image\n        src={nftInfo?.image || IMAGE_DEFAULT}\n        preview={false}\n        style={{ borderRadius: 4 }}\n        width={SIZE_COLLECTION_IMAGE}\n        height={SIZE_COLLECTION_IMAGE}\n        className=\"nft-image\"\n      />\n    </Card>\n  )\n}\n\nconst ModalNftCollection = ({\n  onSelect,\n  mintAddress,\n}: ModalNftCollectionProps) => {\n  const [visible, setVisible] = useState(false)\n  const [listCollectionNFTs, setListCollectionNFTs] =\n    useState<Record<string, MetadataDataType[]>>()\n  const [searchText, setSearchText] = useState<string>('')\n  const [loading, setLoading] = useState(false)\n\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const getNftCollectionInfo = useCallback(async () => {\n    let collectionNFTs: Record<string, MetadataDataType[]> = {}\n    if (!account.isAddress(searchText)) return collectionNFTs\n    let collectionInfo = await getNftMetaData(searchText)\n    if (collectionInfo.data) {\n      collectionNFTs[collectionInfo.data.mint] = [collectionInfo.data]\n    } else {\n      collectionNFTs = {}\n    }\n    return collectionNFTs\n  }, [searchText])\n\n  const onSelectNFT = (mintAddress: string) => {\n    onSelect(mintAddress)\n    onCloseModal()\n  }\n\n  const onCloseModal = () => {\n    setSearchText('')\n    setVisible(false)\n  }\n\n  const getCollectionNFTs = useCallback(async () => {\n    setLoading(true)\n    let collectionNFTs: Record<string, MetadataDataType[]> = {}\n    try {\n      if (searchText.length > 0) {\n        collectionNFTs = await getNftCollectionInfo()\n      } else {\n        collectionNFTs = await fetchListNTFs(walletAddress)\n      }\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n    return setListCollectionNFTs(collectionNFTs)\n  }, [getNftCollectionInfo, searchText, walletAddress])\n\n  useEffect(() => {\n    getCollectionNFTs()\n  }, [getCollectionNFTs])\n\n  return (\n    <Fragment>\n      {!mintAddress ? (\n        <Card\n          className=\"btn-select-nft\"\n          style={{\n            background: `url(${BG_BTN})`,\n          }}\n          bodyStyle={{ padding: 10 }}\n          onClick={() => setVisible(true)}\n        >\n          <Space direction=\"vertical\" style={{ width: '100%' }} align=\"center\">\n            <Typography.Text style={{ color: '#f9deb0' }}>\n              Select\n            </Typography.Text>\n            <Typography.Text style={{ color: '#f9deb0' }}>\n              a NFT\n            </Typography.Text>\n            <Typography.Text style={{ color: '#f9deb0' }}>\n              collection\n            </Typography.Text>\n          </Space>\n        </Card>\n      ) : (\n        <CardNftImageOnly openNftModal={setVisible} mintAddress={mintAddress} />\n      )}\n\n      <Modal\n        className=\"modal-nft-selection\"\n        visible={visible}\n        footer={false}\n        onCancel={onCloseModal}\n      >\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Typography.Title level={4}>\n              Select a NFT collection\n            </Typography.Title>\n          </Col>\n          <Col span={24}>\n            <SearchNftCollection\n              loading={loading}\n              searchText={searchText}\n              onSearch={(value) => setSearchText(value)}\n            />\n          </Col>\n          <Col span={24}>\n            <Row\n              gutter={[24, 24]}\n              className=\"scrollbar\"\n              style={{ height: 500 }}\n            >\n              {listCollectionNFTs &&\n              Object.keys(listCollectionNFTs).length > 0 ? (\n                Object.keys(listCollectionNFTs).map((collectionAddress) => (\n                  <Col xs={12} md={8} key={collectionAddress}>\n                    <CardNFT\n                      mintAddress={collectionAddress}\n                      onSelect={onSelectNFT}\n                    />\n                  </Col>\n                ))\n              ) : (\n                <Col span={24}>\n                  <Empty />\n                </Col>\n              )}\n            </Row>\n          </Col>\n        </Row>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default ModalNftCollection\n","import { useState } from 'react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\nimport { Col, Row, Space, Tooltip, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport ModalNftCollection from 'app/view/createDao/components/modalNftCollection'\n\nimport { asyncWait, shortenAddress } from 'shared/util'\n\nconst Address = ({ address }: { address: string }) => {\n  const [copied, setCopied] = useState(false)\n\n  const onCopy = async () => {\n    setCopied(true)\n    await asyncWait(1500)\n    setCopied(false)\n  }\n\n  return (\n    <Space>\n      <Typography.Text className=\"t-16\">\n        NFT collection address: {shortenAddress(address)}\n      </Typography.Text>\n      <Tooltip title=\"Copied\" visible={copied}>\n        <CopyToClipboard text={address} onCopy={onCopy}>\n          <Typography.Text style={{ cursor: 'pointer' }} className=\"t-16\">\n            <IonIcon name=\"copy-outline\" />\n          </Typography.Text>\n        </CopyToClipboard>\n      </Tooltip>\n    </Space>\n  )\n}\n\ntype VoteNftInputProps = {\n  mintAddress: string\n  onMintAddressChange: (mintAddress: string) => void\n}\n\nconst VoteNftInput = ({\n  mintAddress,\n  onMintAddressChange,\n}: VoteNftInputProps) => {\n  return (\n    <Row gutter={[24, 24]}>\n      <Col>\n        <ModalNftCollection\n          mintAddress={mintAddress}\n          onSelect={onMintAddressChange}\n        />\n      </Col>\n      <Col flex={1}>\n        <Row align=\"bottom\" style={{ height: '100%' }}>\n          <Col span={24}>\n            {mintAddress && <Address address={mintAddress} />}\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default VoteNftInput\n","import { Col, Row, Input } from 'antd'\nimport { MintSelection } from 'shared/antd/mint'\n\ntype VoteTokenInputProps = {\n  mintAddress: string\n  onMintAddressChange: (mintAddress: string) => void\n}\n\nconst VoteTokenInput = ({\n  mintAddress,\n  onMintAddressChange,\n}: VoteTokenInputProps) => {\n  return (\n    <Col flex={1}>\n      <Row gutter={[24, 24]}>\n        <Col span={24}>\n          <Input\n            size=\"large\"\n            placeholder={'Input Token Address'}\n            value={mintAddress}\n            className=\"border-less\"\n            onChange={(e) => onMintAddressChange(e.target.value)}\n            suffix={\n              <MintSelection\n                value={mintAddress}\n                onChange={onMintAddressChange}\n                style={{ marginRight: -7 }}\n              />\n            }\n            autoFocus={true}\n          />\n        </Col>\n      </Row>\n    </Col>\n  )\n}\n\nexport default VoteTokenInput\n","import VoteNftInput from './voteNftInput'\nimport VoteTokenInput from './voteTokenInput'\n\ntype VoteInputProps = {\n  isNft: boolean\n  mintAddress: string\n  onMintAddressChange: (mintAddress: string) => void\n}\n\nconst VoteInput = ({\n  isNft,\n  mintAddress,\n  onMintAddressChange,\n}: VoteInputProps) => {\n  return isNft ? (\n    <VoteNftInput\n      mintAddress={mintAddress}\n      onMintAddressChange={onMintAddressChange}\n    />\n  ) : (\n    <VoteTokenInput\n      mintAddress={mintAddress}\n      onMintAddressChange={onMintAddressChange}\n    />\n  )\n}\n\nexport default VoteInput\n","import isEqual from 'react-fast-compare'\n\nimport { Button, Col, Row, Space, Typography } from 'antd'\nimport VoteInput from './voteInput'\n\nimport './index.less'\n\ntype TokenAddressInputProps = {\n  isNft: boolean\n  onNftChange: (isNft: boolean) => void\n  mintAddress: string\n  onMintAddressChange: (mintAddress: string) => void\n}\n\nconst TokenAddressInput = ({\n  isNft,\n  onNftChange,\n  mintAddress,\n  onMintAddressChange,\n}: TokenAddressInputProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space size={32}>\n          <Typography.Text>Vote By</Typography.Text>\n          <Space size={12}>\n            <Button\n              onClick={() => onNftChange(false)}\n              className={isEqual(isNft, false) ? '' : 'btn-unselect'}\n              size=\"small\"\n            >\n              Token\n            </Button>\n            <Button\n              onClick={() => onNftChange(true)}\n              className={isEqual(isNft, true) ? '' : 'btn-unselect'}\n              size=\"small\"\n            >\n              NFT\n            </Button>\n          </Space>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <VoteInput\n          isNft={isNft}\n          mintAddress={mintAddress}\n          onMintAddressChange={onMintAddressChange}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default TokenAddressInput\n","import isEqual from 'react-fast-compare'\n\nimport { Button, Col, Row, Typography } from 'antd'\n\ntype PrivacyProps = {\n  isPublic: boolean\n  setIsPublic: (isPublic: boolean) => void\n}\n\nconst Privacy = ({ isPublic, setIsPublic }: PrivacyProps) => {\n  return (\n    <Row gutter={[12, 12]}>\n      <Col span={24}>\n        <Typography.Text>DAO Privacy</Typography.Text>\n      </Col>\n      <Col>\n        <Button\n          onClick={() => setIsPublic(false)}\n          className={isEqual(isPublic, false) ? '' : 'btn-unselect'}\n          block\n        >\n          Member Only\n        </Button>\n      </Col>\n      <Col>\n        <Button\n          onClick={() => setIsPublic(true)}\n          className={isEqual(isPublic, true) ? '' : 'btn-unselect'}\n          block\n        >\n          Public\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Privacy\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\nimport BN from 'bn.js'\n\n/**\n * Get token's total supply. This hook needs MintProvider for working.\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * @param mintAddress Mint address\n * @returns Decimals\n */\nconst useMintSupply = (mintAddress: string) => {\n  const [supply, setSupply] = useState<BN | undefined>(undefined)\n  const { getMint } = useMint()\n\n  const fetchSupply = useCallback(async () => {\n    try {\n      const {\n        [mintAddress]: { supply },\n      } = await getMint({ address: mintAddress })\n      return setSupply(new BN(supply.toString()))\n    } catch (er: any) {\n      return setSupply(undefined)\n    }\n  }, [mintAddress, getMint])\n\n  useEffect(() => {\n    fetchSupply()\n  }, [fetchSupply])\n\n  return supply\n}\n\nexport default useMintSupply\n","import BN from 'bn.js'\n\nimport { Button, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport NumericInput from 'shared/antd/numericInput'\n\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport useMintSupply from 'shared/hooks/useMintSupply'\nimport { numeric } from 'shared/util'\n\nexport type CirculatingSupplyInputProps = {\n  mintAddress?: string\n  value: string\n  onChange: (value: string) => void\n}\n\nconst CirculatingSupplyInput = ({\n  mintAddress = '',\n  value,\n  onChange,\n}: CirculatingSupplyInputProps) => {\n  const decimals = useMintDecimals(mintAddress) || 0\n  const supply = useMintSupply(mintAddress)\n  const suggestion = String(supply?.div(new BN(10 ** decimals)) || new BN(0))\n\n  return (\n    <Row gutter={[8, 8]} justify=\"end\">\n      <Col span={24}>\n        <Typography.Text>Total DAO Power</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <NumericInput\n          value={value}\n          onValue={onChange}\n          className=\"border-less\"\n          size=\"large\"\n          placeholder=\"Input Total DAO Power\"\n          suffix={\n            <Button\n              type=\"text\"\n              onClick={() => onChange(suggestion)}\n              icon={<IonIcon name=\"copy-outline\" />}\n              style={{ marginRight: -7 }}\n            >\n              By Suggestion\n            </Button>\n          }\n        />\n      </Col>\n      <Col>\n        <Space>\n          <Typography.Text type=\"secondary\">\n            Suggestion Token Supply:\n          </Typography.Text>\n          <Typography.Text>{numeric(suggestion).format('0,0')}</Typography.Text>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CirculatingSupplyInput\n","import { account } from '@senswap/sen-js'\n\nimport { Button, Col, Row, Space, Spin, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport NumericInput from 'shared/antd/numericInput'\nimport { LoadingOutlined } from '@ant-design/icons'\n\nimport { numeric } from 'shared/util'\nimport { getListAccountNFTsBelongToCollection } from 'app/helpers/metaplex'\nimport { useCallback, useEffect, useState } from 'react'\n\nexport type CirculatingSupplyInputProps = {\n  mintAddress?: string\n  value: string\n  onChange: (value: string) => void\n}\n\nconst CirculatingSupplyInputNFT = ({\n  mintAddress = '',\n  value,\n  onChange,\n}: CirculatingSupplyInputProps) => {\n  const [suggestion, setSuggestion] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const getNftSuggestion = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setSuggestion('')\n    setLoading(true)\n    try {\n      let accounts = await getListAccountNFTsBelongToCollection(mintAddress)\n      setSuggestion(accounts.length.toString())\n    } catch (er: any) {\n      window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }, [mintAddress])\n\n  useEffect(() => {\n    getNftSuggestion()\n  }, [getNftSuggestion])\n\n  return (\n    <Row gutter={[8, 8]} justify=\"end\">\n      <Col span={24}>\n        <Typography.Text>Total DAO Power</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <NumericInput\n          value={value}\n          onValue={onChange}\n          className=\"border-less\"\n          size=\"large\"\n          placeholder=\"Input Total DAO Power\"\n          suffix={\n            <Button\n              type=\"text\"\n              onClick={() => onChange(suggestion)}\n              icon={<IonIcon name=\"copy-outline\" />}\n              style={{ marginRight: -7 }}\n            >\n              By Suggestion\n            </Button>\n          }\n        />\n      </Col>\n      <Col>\n        <Space>\n          <Typography.Text type=\"secondary\">\n            Suggestion NFT collection supply:\n          </Typography.Text>\n          {loading ? (\n            <Spin\n              spinning={loading}\n              indicator={<LoadingOutlined style={{ fontSize: 24 }} />}\n            />\n          ) : (\n            <Typography.Text>\n              {numeric(suggestion).format('0,0')}\n            </Typography.Text>\n          )}\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CirculatingSupplyInputNFT\n","import CirculatingSupplyInput from './circulatingSupplyInput'\nimport CirculatingSupplyInputNFT from './circulatingSupplyInputNFT'\n\ntype CirculatingSupplyProps = {\n  isNft: boolean\n  mintAddress: string\n  supply: string\n  onChangeSupply: (supply: string) => void\n}\n\nconst CirculatingSupply = ({\n  isNft,\n  mintAddress,\n  supply,\n  onChangeSupply,\n}: CirculatingSupplyProps) => {\n  return !isNft ? (\n    <CirculatingSupplyInput\n      mintAddress={mintAddress}\n      value={supply}\n      onChange={onChangeSupply}\n    />\n  ) : (\n    <CirculatingSupplyInputNFT\n      mintAddress={mintAddress}\n      value={supply}\n      onChange={onChangeSupply}\n    />\n  )\n}\n\nexport default CirculatingSupply\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport BN from 'bn.js'\n\nimport { Button, Col, Row } from 'antd'\nimport RegimeInput from './regimeInput'\nimport TokenAddressInput from './tokenAddressInput'\nimport Privacy from '../privacy'\nimport CirculatingSupply from './circulatingSupply'\n\nimport { AppDispatch, AppState } from 'app/model'\n\nimport {\n  revertPrevStep,\n  submitStepSetRule,\n} from 'app/model/createDao.controller'\n\nconst FlexibleDaoRule = () => {\n  const { isNft, isPublic, mintAddress, supply, regime } = useSelector(\n    (state: AppState) => state.createDao.data,\n  )\n  const [nextIsNft, setIsNft] = useState(isNft)\n  const [nextRegime, setRegime] = useState(regime)\n  const [nextMintAddress, setMintAddress] = useState(mintAddress)\n  const [nextSupply, setSupply] = useState(supply.toString())\n  const [nextIsPublic, setIsPublic] = useState(isPublic)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const disabled = !nextMintAddress || !nextRegime\n\n  const onNextStep = () => {\n    return dispatch(\n      submitStepSetRule({\n        rule: {\n          isNft: nextIsNft,\n          regime: nextRegime,\n          supply: new BN(nextSupply),\n          isPublic: nextIsPublic,\n          mintAddress: nextMintAddress,\n        },\n      }),\n    )\n  }\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <RegimeInput value={nextRegime} onChangeRegime={setRegime} />\n          </Col>\n          <Col span={24}>\n            <TokenAddressInput\n              onMintAddressChange={setMintAddress}\n              mintAddress={nextMintAddress}\n              isNft={nextIsNft}\n              onNftChange={(isNft: boolean) => {\n                setMintAddress('')\n                return setIsNft(isNft)\n              }}\n            />\n          </Col>\n          <Col span={24}>\n            <CirculatingSupply\n              isNft={nextIsNft}\n              mintAddress={nextMintAddress}\n              supply={nextSupply}\n              onChangeSupply={setSupply}\n            />\n          </Col>\n          <Col span={24}>\n            <Privacy isPublic={nextIsPublic} setIsPublic={setIsPublic} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row>\n          <Col flex=\"auto\">\n            <Button\n              type=\"text\"\n              size=\"large\"\n              onClick={() => dispatch(revertPrevStep())}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              disabled={disabled}\n              onClick={onNextStep}\n            >\n              Continue\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default FlexibleDaoRule\n","import { DaoRegime } from '@interdao/core'\n\nimport { Col, Row, Typography } from 'antd'\nimport CardRegime from '../../components/cardRegime'\n\ntype RegimeProps = {\n  regime: DaoRegime\n}\n\nconst Regime = ({ regime }: RegimeProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Typography.Text>DAO Regime</Typography.Text>\n      </Col>\n      <Col xs={24} md={8}>\n        <CardRegime regime={regime} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Regime\n","import { ChangeEvent } from 'react'\n\nimport { Button, Col, Input, Row } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { DAOMember } from 'app/model/createDao.controller'\n\ntype MemberInputProps = {\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void\n  disabledRemove?: boolean\n  disabledWalletInput?: boolean\n  disabledName?: boolean\n  remove?: () => void\n} & DAOMember\n\nconst MemberInput = ({\n  name = '',\n  walletAddress = '',\n  onChange,\n  disabledRemove: disabledBtn = false,\n  disabledWalletInput = false,\n  disabledName = false,\n  remove = () => {},\n}: MemberInputProps) => {\n  return (\n    <Row gutter={[12, 12]}>\n      <Col span={4}>\n        <Input\n          className=\"border-less\"\n          onChange={onChange}\n          value={name}\n          placeholder=\"Name\"\n          name=\"name\"\n          disabled={disabledName}\n        />\n      </Col>\n      <Col span={18}>\n        <Input\n          className=\"border-less\"\n          value={walletAddress}\n          placeholder=\"Input wallet address\"\n          disabled={disabledWalletInput}\n          name=\"walletAddress\"\n          onChange={onChange}\n        />\n      </Col>\n      <Col span={2}>\n        <Button\n          disabled={disabledBtn}\n          type=\"text\"\n          icon={<IonIcon name=\"trash-outline\" />}\n          onClick={remove}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default MemberInput\n","import { ChangeEvent } from 'react'\nimport { useWallet } from '@senhub/providers'\nimport isEqual from 'react-fast-compare'\n\nimport { Button, Col, Row, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport MemberInput from './memberInput'\n\nimport { DAOMember } from 'app/model/createDao.controller'\n\ntype DAOMembersProps = {\n  members: DAOMember[]\n  setMember: (members: DAOMember[]) => void\n}\n\nconst DAOMembers = ({ members, setMember }: DAOMembersProps) => {\n  const {\n    wallet: { address: myAddress },\n  } = useWallet()\n\n  const onAddNew = () => {\n    const nextMembers = [...members]\n    nextMembers.push({ name: '', walletAddress: '' })\n    return setMember(nextMembers)\n  }\n\n  const onRemove = (index: number) => {\n    const nextMembers = [...members]\n    nextMembers.splice(index, 1)\n    return setMember(nextMembers)\n  }\n\n  const onChange = (e: ChangeEvent<HTMLInputElement>, index: number) => {\n    // Valid input value\n    for (const { walletAddress } of members) {\n      if (isEqual(walletAddress, e.target.value))\n        return window.notify({\n          type: 'warning',\n          description: 'This wallet address already exists',\n        })\n    }\n    // Update member data\n    const nextMembers = [...members]\n    nextMembers[index] = {\n      ...nextMembers[index],\n      [e.target.name]: e.target.value,\n    }\n    return setMember(nextMembers)\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Typography.Title level={4}>\n          People who'll be part of your team.\n        </Typography.Title>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[12, 12]}>\n          {members.map(({ name, walletAddress }, idx) => {\n            const disabled = walletAddress === myAddress\n            return (\n              <Col span={24} key={idx}>\n                <MemberInput\n                  name={name}\n                  walletAddress={walletAddress}\n                  onChange={(e) => onChange(e, idx)}\n                  remove={() => onRemove(idx)}\n                  disabledRemove={disabled}\n                  disabledWalletInput={disabled}\n                />\n              </Col>\n            )\n          })}\n          <Col span={4}>\n            <Button\n              block\n              type=\"dashed\"\n              icon={<IonIcon name=\"add-outline\" />}\n              onClick={onAddNew}\n            >\n              Add\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DAOMembers\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { DaoRegimes } from '@interdao/core'\nimport { account } from '@senswap/sen-js'\nimport { useWallet } from '@senhub/providers'\n\nimport { Button, Col, Row } from 'antd'\nimport Regime from './regime'\nimport DAOMembers from './daoMembers'\nimport Privacy from '../privacy'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport {\n  DAOMember,\n  revertPrevStep,\n  submitStepSetRule,\n} from 'app/model/createDao.controller'\n\nconst MultiSigDAORule = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const metadata = useSelector(\n    (state: AppState) => state.createDao.data.metadata,\n  )\n  const [members, setMember] = useState<DAOMember[]>([])\n  const [isPublic, setIsPublic] = useState(false)\n  const { address: myAddress } = useWallet().wallet\n\n  const setDefaultValue = useCallback(() => {\n    if (members.length) return\n    if (metadata.members.length) return setMember(metadata.members)\n    const DEFAULT_MEMBER = [{ name: '', walletAddress: myAddress }]\n    return setMember(DEFAULT_MEMBER)\n  }, [members.length, metadata.members, myAddress])\n\n  const onSubmit = () => {\n    const nextMetadata = { ...metadata, members }\n    return dispatch(\n      submitStepSetRule({\n        rule: {\n          isPublic,\n          metadata: nextMetadata,\n          regime: DaoRegimes.Autonomous,\n        },\n      }),\n    )\n  }\n\n  const disabled = useMemo(() => {\n    for (const member of members) {\n      const { name, walletAddress } = member\n      if (!name || !account.isAddress(walletAddress)) return true\n    }\n    return false\n  }, [members])\n\n  useEffect(() => {\n    setDefaultValue()\n  }, [setDefaultValue])\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Regime regime={DaoRegimes.Autonomous} />\n          </Col>\n          <Col span={24}>\n            <Privacy isPublic={isPublic} setIsPublic={setIsPublic} />\n          </Col>\n          <Col span={24}>\n            <DAOMembers members={members} setMember={setMember} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row>\n          <Col flex=\"auto\">\n            <Button\n              type=\"text\"\n              size=\"large\"\n              onClick={() => dispatch(revertPrevStep())}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              disabled={disabled}\n              onClick={onSubmit}\n            >\n              Continue\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default MultiSigDAORule\n","import { useSelector } from 'react-redux'\n\nimport FlexibleDaoRule from './flexible'\nimport MultiSigDAORule from './multisig'\n\nimport { AppState } from 'app/model'\n\nconst DaoRule = () => {\n  const daoType = useSelector(\n    (state: AppState) => state.createDao.data.metadata.daoType,\n  )\n  return daoType === 'flexible-dao' ? <FlexibleDaoRule /> : <MultiSigDAORule />\n}\nexport default DaoRule\n","import { AppState } from 'app/model'\nimport { useSelector } from 'react-redux'\n\nimport ChooseDaoType from './chooseType'\nimport DaoInputDetails from './daoInputDetail'\nimport Review from './review'\nimport DaoRule from './setRule'\n\nimport { CreateDaoSteps } from 'app/model/createDao.controller'\n\nconst InitDAOBody = () => {\n  const step = useSelector((state: AppState) => state.createDao.step)\n  if (step === CreateDaoSteps.ChooseType) return <ChooseDaoType />\n  if (step === CreateDaoSteps.InputDetails) return <DaoInputDetails />\n  if (step === CreateDaoSteps.SetRule) return <DaoRule />\n  return <Review />\n}\n\nexport default InitDAOBody\n","import { useSelector } from 'react-redux'\n\nimport { Row, Col, Card } from 'antd'\nimport InitDAOHeader from './initDAOHeader'\nimport InitDAOBody from './initDAOBody'\n\nimport { AppState } from 'app/model'\n\nimport './index.less'\n\nconst CreateDao = () => {\n  const step = useSelector((state: AppState) => state.createDao.step)\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col xs={24} lg={16}>\n        <Card bordered={false}>\n          <Row gutter={[24, 32]}>\n            <Col span={24}>\n              <InitDAOHeader step={step} />\n            </Col>\n            <Col span={24}>\n              <InitDAOBody />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CreateDao\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { AccountInfo, PublicKey } from '@solana/web3.js'\n\nimport configs from 'app/configs'\nimport { ReceiptData } from '@interdao/core'\n\nconst {\n  sol: { interDao },\n} = configs\n\nexport const getReceipts = async (\n  proposalAddress: string,\n): Promise<Record<string, ReceiptData>> => {\n  if (!account.isAddress(proposalAddress)) throw new Error('Invalid address')\n  const {\n    provider: { connection },\n    programId,\n    account: { receipt },\n  } = interDao.program\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await connection.getProgramAccounts(programId, {\n      filters: [\n        { dataSize: receipt.size },\n        {\n          memcmp: {\n            offset: 48,\n            bytes: proposalAddress,\n          },\n        },\n      ],\n    })\n  let bulk: Record<string, ReceiptData> = {}\n\n  value.forEach(({ pubkey, account: { data: buf } }) => {\n    const data = interDao.parseReceiptData(buf)\n    bulk[pubkey.toBase58()] = data\n  })\n  return bulk\n}\n\nconst useReceipts = ({ proposalAddress }: { proposalAddress: string }) => {\n  const [receipts, setReceipts] = useState<Record<string, ReceiptData>>({})\n\n  const fetchReceipts = useCallback(async () => {\n    if (!account.isAddress(proposalAddress)) return setReceipts({})\n    const listReceipt = await getReceipts(proposalAddress)\n    return setReceipts(listReceipt)\n  }, [proposalAddress])\n\n  useEffect(() => {\n    fetchReceipts()\n  }, [fetchReceipts])\n\n  return { receipts }\n}\n\nexport default useReceipts\n","import { useCallback, useMemo, useState } from 'react'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport ProposalStatus from 'app/components/proposalStatus'\n\nimport { ProposalChildCardProps } from './index'\nimport { explorer, shortenAddress } from 'shared/util'\nimport useProposalStatus from 'app/hooks/proposal/useProposalStatus'\nimport useProposalMetaData from 'app/hooks/proposal/useProposalMetaData'\nimport useReceipts from 'app/hooks/proposal/useReceipts'\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst CardStatus = ({ proposalAddress }: ProposalChildCardProps) => {\n  const [loading, setLoading] = useState(false)\n  const { status } = useProposalStatus(proposalAddress)\n  const { metaData } = useProposalMetaData(proposalAddress)\n  const { receipts } = useReceipts({ proposalAddress })\n\n  const members = useMemo(() => {\n    if (!Object.values(receipts).length) return 0\n    const authorities: string[] = []\n    for (const receipt of Object.values(receipts)) {\n      const { authority } = receipt\n      if (authorities.includes(authority.toBase58())) continue\n      authorities.push(authority.toBase58())\n    }\n    return authorities.length\n  }, [receipts])\n\n  const execute = useCallback(async () => {\n    setLoading(true)\n    try {\n      const { txId } = await interDao.executeProposal(proposalAddress)\n      return window.notify({\n        type: 'success',\n        description: 'Execute successfully',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (error: any) {\n      return window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setLoading(false)\n    }\n  }, [proposalAddress])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Row gutter={[24, 24]} wrap={false}>\n            <Col flex=\"auto\">\n              <Space direction=\"vertical\">\n                <Space>\n                  <Typography.Title\n                    level={3}\n                    style={{ wordBreak: 'break-all' }}\n                  >\n                    {metaData?.title\n                      ? metaData.title\n                      : shortenAddress(proposalAddress)}\n                  </Typography.Title>\n\n                  <ProposalStatus status={status} />\n                </Space>\n                <Space>\n                  <Row>\n                    <Col span={24}>\n                      <Space size={5}>\n                        <IonIcon name=\"people-outline\" />\n                        <Typography.Text>Voter(s): {members}</Typography.Text>\n                      </Space>\n                    </Col>\n                  </Row>\n                </Space>\n              </Space>\n            </Col>\n            <Col>\n              <Button\n                size=\"large\"\n                type=\"primary\"\n                onClick={execute}\n                loading={loading}\n                disabled={status !== 'Succeeded'}\n              >\n                Execute\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph\n            type=\"secondary\"\n            ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n          >\n            {metaData?.description}\n          </Typography.Paragraph>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CardStatus\n","import { useMemo } from 'react'\nimport { FeeOptions } from '@interdao/core'\nimport { BN } from 'bn.js'\n\nimport configs from 'app/configs'\nimport { useDaoData } from '../dao'\n\ntype useProposalFeeProps = {\n  daoAddress: string\n}\n\nconst {\n  sol: { taxman, fee },\n} = configs\n\nconst useProposalFee = ({ daoAddress }: useProposalFeeProps) => {\n  const daoData = useDaoData(daoAddress)\n\n  const proposalFee = useMemo(() => {\n    if (!daoData?.regime || !daoData?.authority) return\n    const parseRegime = Object.keys(daoData.regime)[0]\n    const revenueFee = parseRegime === 'democratic' ? new BN(0) : new BN(fee)\n    const feeOption: FeeOptions = {\n      tax: new BN(fee),\n      taxmanAddress: taxman,\n      revenue: revenueFee,\n      revenuemanAddress: daoData.authority.toBase58(),\n    }\n\n    return feeOption\n  }, [daoData])\n\n  return proposalFee\n}\n\nexport default useProposalFee\n","import { useCallback, useState } from 'react'\nimport { account } from '@senswap/sen-js'\n\nimport { Button, Col, Modal, Row, Space, Typography } from 'antd'\nimport CardNFT from 'app/components/cardNFT'\n\nimport { MetadataDataType } from 'app/helpers/metaplex'\nimport configs from 'app/configs'\nimport { explorer } from 'shared/util'\nimport { VotingType } from './index'\nimport useProposalFee from 'app/hooks/proposal/useProposalFee'\n\nconst {\n  sol: { interDao },\n} = configs\n\ntype ModalVoteNFTProps = {\n  visible: boolean\n  setVisible: (visible: boolean) => void\n  collection: MetadataDataType[]\n  votingType: VotingType\n  proposalAddress: string\n  daoAddress: string\n}\n\nconst ModalVoteNFT = ({\n  visible,\n  setVisible,\n  collection,\n  votingType,\n  proposalAddress,\n  daoAddress,\n}: ModalVoteNFTProps) => {\n  const [nftVoting, setNftVoting] = useState<string>('')\n  const [loading, setLoading] = useState(false)\n  const proposalFee = useProposalFee({ daoAddress })\n\n  const onVoteNftFor = useCallback(async () => {\n    setLoading(true)\n    try {\n      if (!account.isAddress(proposalAddress) || !nftVoting) return\n\n      const { txId } = await interDao.voteNftFor(\n        proposalAddress,\n        nftVoting,\n        proposalFee,\n      )\n      setNftVoting('')\n      return window.notify({\n        type: 'success',\n        description: 'Voted successfully. Click to view details!',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (error: any) {\n      return window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setVisible(false)\n      setLoading(false)\n    }\n  }, [nftVoting, proposalAddress, proposalFee, setVisible])\n\n  const onVoteNftAgainst = useCallback(async () => {\n    setLoading(true)\n    try {\n      if (!account.isAddress(proposalAddress) || !nftVoting) return\n\n      const { txId } = await interDao.voteNftAgainst(\n        proposalAddress,\n        nftVoting,\n        proposalFee,\n      )\n      setNftVoting('')\n      return window.notify({\n        type: 'success',\n        description: 'Voted successfully. Click to view details!',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (error: any) {\n      return window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setLoading(false)\n      setVisible(false)\n    }\n  }, [nftVoting, proposalAddress, proposalFee, setVisible])\n\n  const onConfirm = () => {\n    switch (votingType) {\n      case VotingType.for:\n        onVoteNftFor()\n        break\n      case VotingType.against:\n        onVoteNftAgainst()\n        break\n    }\n  }\n\n  return (\n    <Modal\n      className=\"modal-nft-selection\"\n      visible={visible}\n      footer={false}\n      onCancel={() => setVisible(false)}\n    >\n      <Row gutter={[24, 24]}>\n        <Col span={24}>\n          <Typography.Title level={4}>Vote {votingType}</Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Typography.Text>Choose NFT to vote</Typography.Text>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[24, 24]} className=\"scrollbar\" style={{ height: 240 }}>\n            {collection.map((metadata) => (\n              <Col\n                xs={12}\n                md={8}\n                key={metadata.mint}\n                style={{ textAlign: 'center' }}\n              >\n                <CardNFT\n                  mintAddress={metadata.mint}\n                  isSelected={nftVoting === metadata.mint}\n                  onSelect={setNftVoting}\n                />\n              </Col>\n            ))}\n          </Row>\n        </Col>\n        <Col span={24} style={{ textAlign: 'right' }}>\n          <Space>\n            <Button onClick={() => setVisible(false)}>Cancel</Button>\n            <Button\n              disabled={!nftVoting}\n              type=\"primary\"\n              loading={loading}\n              onClick={onConfirm}\n            >\n              Confirm\n            </Button>\n          </Space>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default ModalVoteNFT\n","export const STROKE_COLOR = {\n  dark: { default: '#312B29', for: '#698033', against: '#F9575E' },\n  light: { default: '#F2EFE9', for: '#F9DEB0', against: '#F9575E' },\n}\n","import { useMemo } from 'react'\nimport { ReceiptData } from '@interdao/core'\nimport { useUI } from '@senhub/providers'\n\nimport { Typography } from 'antd'\n\nimport { STROKE_COLOR } from 'app/constant'\n\nconst VOTE_TYPE = {\n  default: 'DEFAULT',\n  for: 'VOTE FOR',\n  against: 'VOTE AGAINST',\n}\n\nconst ColumnType = ({ record }: { record: ReceiptData }) => {\n  const {\n    ui: { theme },\n  } = useUI()\n\n  const type = useMemo(() => {\n    const action = Object.keys(record.action || {})[0]\n    if (action === 'voteAgainst') {\n      return 'against'\n    }\n    if (action === 'voteFor') {\n      return 'for'\n    }\n    return 'default'\n  }, [record.action])\n\n  return (\n    <Typography.Text style={{ color: STROKE_COLOR[theme][type] }}>\n      {VOTE_TYPE[type]}\n    </Typography.Text>\n  )\n}\n\nexport default ColumnType\n","import { useSelector } from 'react-redux'\nimport { DaoData, ReceiptData } from '@interdao/core'\nimport { utils } from '@senswap/sen-js'\n\nimport { Typography } from 'antd'\n\nimport { AppState } from 'app/model'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { numeric } from 'shared/util'\n\nconst ColumnPower = ({ receipt }: { receipt: ReceiptData }) => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const proposal = useSelector((state: AppState) => state.proposal)\n  const { power, proposal: proposalPubkey } = receipt\n  const { dao: daoPubkey } = proposal[proposalPubkey.toBase58()] || {}\n  const { mint } = daos[daoPubkey?.toBase58() || ''] || ({} as DaoData)\n  const mintDecimal = useMintDecimals(mint?.toBase58()) || 0\n\n  return (\n    <Typography.Text>\n      {numeric(\n        utils.undecimalize(BigInt(power.toString()), mintDecimal),\n      ).format('0,0.[0000]a')}\n    </Typography.Text>\n  )\n}\n\nexport default ColumnPower\n","import { Fragment, useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useWallet } from '@senhub/providers'\nimport { DaoData, ReceiptData } from '@interdao/core'\nimport BN from 'bn.js'\nimport moment from 'moment'\n\nimport { Button, Col, Modal, Row, Typography, Table } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport ColumnType from './history/columnType'\nimport ColumnPower from './history/columnPower'\n\nimport { ProposalChildCardProps } from './index'\nimport useReceipts from 'app/hooks/proposal/useReceipts'\nimport configs from 'app/configs'\nimport { explorer } from 'shared/util'\nimport { AppState } from 'app/model'\n\nexport type Receipt = ReceiptData & { address: string }\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst Withdraw = ({ daoAddress, proposalAddress }: ProposalChildCardProps) => {\n  const [visible, setVisible] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [listReceipt, setListReceipt] = useState<Receipt[]>([])\n  const { receipts } = useReceipts({ proposalAddress })\n  const daos = useSelector((state: AppState) => state.daos)\n  const { isNft } = daos[daoAddress] || ({} as DaoData)\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const COLUMNS = [\n    {\n      title: 'TIME',\n      dataIndex: 'lockedDate',\n      render: (lockedDate: BN) => (\n        <Typography.Text>\n          {moment(lockedDate.toNumber() * 1000).format('DD/MM/YYYY HH:mm')}\n        </Typography.Text>\n      ),\n    },\n    {\n      title: 'POWER',\n      dataIndex: 'power',\n      render: (_: any, receipt: ReceiptData) => (\n        <ColumnPower receipt={receipt} />\n      ),\n    },\n    {\n      title: 'TYPE',\n      dataIndex: 'authority',\n      render: (_: any, receipt: ReceiptData) => <ColumnType record={receipt} />,\n    },\n    {\n      title: 'ACTION',\n      dataIndex: 'address',\n      render: (receiptAddress: string) => (\n        <Button\n          type=\"primary\"\n          onClick={() => onWithdraw(receiptAddress)}\n          size=\"small\"\n        >\n          Withdraw\n        </Button>\n      ),\n    },\n  ]\n\n  const filterReceipts = useCallback(() => {\n    const listRecept = Object.keys(receipts).map((address) => ({\n      address,\n      ...receipts[address],\n    }))\n\n    const myRecept: Receipt[] = listRecept.filter(\n      (receipt) =>\n        receipt.authority.toBase58() === walletAddress &&\n        receipt.amount.toNumber() > 0,\n    )\n\n    return setListReceipt(myRecept)\n  }, [receipts, walletAddress])\n\n  const onWithdraw = useCallback(\n    async (receiptAddress: string) => {\n      if (!receiptAddress.length) return\n      setLoading(true)\n      try {\n        let response: { txId: string; receiptAddress: string }\n        if (isNft) response = await interDao.closeNftVoting(receiptAddress)\n        else response = await interDao.close(receiptAddress)\n        window.notify({\n          type: 'success',\n          description: 'Successful withdrawal. Click to view details!',\n          onClick: () => window.open(explorer(response.txId), '_blank'),\n        })\n\n        //for real time\n        setListReceipt(\n          [...listReceipt].filter(\n            (receipt) => !receiptAddress.includes(receipt.address),\n          ),\n        )\n      } catch (er: any) {\n        window.notify({\n          type: 'error',\n          description: er.message,\n        })\n      } finally {\n        setLoading(false)\n      }\n    },\n    [isNft, listReceipt],\n  )\n\n  useEffect(() => {\n    filterReceipts()\n  }, [filterReceipts])\n\n  return (\n    <Fragment>\n      <Button\n        type=\"primary\"\n        onClick={() => setVisible(true)}\n        block\n        size=\"large\"\n        disabled={!listReceipt.length}\n      >\n        Withdraw\n      </Button>\n      <Modal\n        visible={visible}\n        footer={null}\n        closeIcon={<IonIcon name=\"close-outline\" />}\n        onCancel={() => setVisible(false)}\n      >\n        <Row gutter={[32, 32]}>\n          <Col span={24}>\n            <Typography.Title level={4}>Withdraw</Typography.Title>\n          </Col>\n          <Col span={24} style={{ maxHeight: 500 }} className=\"scrollbar\">\n            <Table\n              columns={COLUMNS}\n              dataSource={listReceipt}\n              pagination={false}\n              rowKey={({ index, lockedDate }) =>\n                index.toNumber() + lockedDate.toNumber()\n              }\n              loading={loading}\n            />\n          </Col>\n        </Row>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default Withdraw\n","import dayjs from 'dayjs'\n\nexport function getRemainingTime(timestampMs: number, finishTime?: number) {\n  const timestampDayjs = dayjs(timestampMs)\n  const nowDayjs = finishTime ? finishTime : dayjs()\n\n  // times of the past\n  if (timestampDayjs.isBefore(nowDayjs)) {\n    return {\n      minutes: '00',\n      hours: '00',\n      days: '00',\n      seconds: '00',\n    }\n  }\n\n  return {\n    minutes: getRemainingMinutes(nowDayjs, timestampDayjs),\n    hours: getRemainingHours(nowDayjs, timestampDayjs),\n    days: getRemainingDays(nowDayjs, timestampDayjs),\n    seconds: getRemainingSeconds(nowDayjs, timestampDayjs),\n  }\n}\n\n/** Get the difference function */\nfunction getRemainingSeconds(nowDayjs: any, timestampDayjs: any) {\n  const seconds = (timestampDayjs.diff(nowDayjs, 'seconds') % 60) % 60\n  return startWithZeros(seconds, 2)\n}\n\nfunction getRemainingMinutes(nowDayjs: any, timestampDayjs: any) {\n  const minutes = timestampDayjs.diff(nowDayjs, 'minutes') % 60\n  return startWithZeros(minutes, 2)\n}\n\nfunction getRemainingHours(nowDayjs: any, timestampDayjs: any) {\n  const hours = timestampDayjs.diff(nowDayjs, 'hours') % 24\n  return startWithZeros(hours, 2)\n}\n\nfunction getRemainingDays(nowDayjs: any, timestampDayjs: any) {\n  const days = timestampDayjs.diff(nowDayjs, 'days')\n  return days.toString()\n}\n\nfunction startWithZeros(number: number, minLength: number) {\n  const numberString = number.toString()\n  if (numberString.length >= minLength) return numberString\n  return '0'.repeat(minLength - numberString.length) + numberString\n}\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { ProposalData } from '@interdao/core'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { getProposal } from 'app/model/proposal.controller'\n\nconst useProposal = (proposalAddress: string) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const proposals = useSelector((state: AppState) => state.proposal)\n\n  const proposalData = useMemo(\n    () => proposals[proposalAddress] || ({} as ProposalData),\n    [proposals, proposalAddress],\n  )\n\n  useEffect(() => {\n    if (!proposalData && account.isAddress(proposalAddress))\n      dispatch(getProposal({ address: proposalAddress }))\n  }, [proposalData, dispatch, proposalAddress])\n\n  return { ...proposalData }\n}\n\nexport default useProposal\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Col, Row, Space, Tooltip, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { getRemainingTime } from 'app/helpers/countDown'\nimport useProposal from 'app/hooks/proposal/useProposal'\nimport useProposalStatus from 'app/hooks/proposal/useProposalStatus'\nimport { AppState } from 'app/model'\nimport { numeric } from 'shared/util'\n\ntype LockedVotingProps = {\n  proposalAddress: string\n  daoAddress: string\n}\n\nconst defaultRemainingTime = {\n  minutes: '00',\n  hours: '00',\n  days: '00',\n  seconds: '00',\n}\n\nconst LockedVoting = ({ proposalAddress, daoAddress }: LockedVotingProps) => {\n  const [remainingTime, setRemainingTime] = useState(defaultRemainingTime)\n  const { status } = useProposalStatus(proposalAddress)\n  const voteAmount = useSelector((state: AppState) => state.voteBid.amount)\n  const { endDate, startDate } = useProposal(proposalAddress)\n\n  const voteNow = new Date().getTime()\n  const endTime = Number(endDate) * 1000\n  const startTime = Number(startDate) * 1000\n\n  const remaining = voteNow < endTime ? endTime - voteNow : 0\n  const votePower = (Number(voteAmount) * remaining) / 1000\n\n  const updateRemainingTime = useCallback(\n    (countdown: number, startTime?: number) =>\n      setRemainingTime(getRemainingTime(countdown, startTime)),\n    [],\n  )\n\n  useEffect(() => {\n    if (status === 'Preparing') return updateRemainingTime(endTime, startTime)\n    const intervalId = setInterval(() => {\n      updateRemainingTime(endTime)\n    }, 1000)\n    return () => clearInterval(intervalId)\n  }, [endTime, startTime, status, updateRemainingTime])\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col flex=\"auto\">\n        <Space direction=\"vertical\">\n          <Typography.Text>Time remaining</Typography.Text>\n          <Typography.Title level={5}>\n            {remainingTime.days}d : {remainingTime.hours}h :{' '}\n            {remainingTime.minutes}m : {remainingTime.seconds}s\n          </Typography.Title>\n        </Space>\n      </Col>\n      <Col>\n        <Space direction=\"vertical\">\n          <Space>\n            <Tooltip title=\"Your power will be equal to the token amount multiplied by the remaining time (by seconds)\">\n              <IonIcon\n                style={{ cursor: 'pointer' }}\n                name=\"information-circle-outline\"\n              />\n            </Tooltip>\n            <Typography.Text>Power of your votes</Typography.Text>\n          </Space>\n\n          <Typography.Title level={5} style={{ textAlign: 'right' }}>\n            {numeric(votePower).format('0,0.[0000]')}\n          </Typography.Title>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default LockedVoting\n","import { useCallback, useEffect, useState } from 'react'\n\nimport { MetadataDataType } from 'app/helpers/metaplex'\nimport useOwnerNFT from './useOwnerNFT'\n\nconst useOwnerNftByCollection = (ownerPublickey: string) => {\n  const { nfts } = useOwnerNFT(ownerPublickey)\n  const [nftsFiltered, setNftsFiltered] =\n    useState<Record<string, MetadataDataType[]>>()\n\n  const filterNFTsByCollection = useCallback(async () => {\n    let listNFTs: Record<string, MetadataDataType[]> = {}\n    nfts?.forEach((nft: MetadataDataType) => {\n      if (nft.collection) {\n        listNFTs[nft.collection.key] = listNFTs[nft.collection.key]\n          ? [...listNFTs[nft.collection.key], nft]\n          : [nft]\n      }\n    })\n    return setNftsFiltered(listNFTs)\n  }, [nfts])\n\n  useEffect(() => {\n    filterNFTsByCollection()\n  }, [filterNFTsByCollection])\n\n  return { nfts: nftsFiltered }\n}\n\nexport default useOwnerNftByCollection\n","import { useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { DaoData } from '@interdao/core'\nimport { useWallet } from '@senhub/providers'\n\nimport { Button, Card, Col, Row, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport ModalVoteNFT from './modalVoteNFT'\nimport Withdraw from '../../withdraw'\nimport LockedVoting from '../lockedVoting'\n\nimport { AppState } from 'app/model'\nimport { ProposalChildCardProps } from '../../index'\nimport useProposalStatus from 'app/hooks/proposal/useProposalStatus'\nimport useOwnerNftByCollection from 'app/hooks/useOwnerNftByCollection'\nimport useProposal from 'app/hooks/proposal/useProposal'\n\nexport enum VotingType {\n  for = 'For',\n  against = 'Against',\n}\n\nconst CardVoteByNFT = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const [votingType, setVotingType] = useState<VotingType>(VotingType.for)\n  const [visible, setVisible] = useState(false)\n  const daos = useSelector((state: AppState) => state.daos)\n  const { mint } = daos[daoAddress] || ({} as DaoData)\n  const { status } = useProposalStatus(proposalAddress)\n  const { consensusMechanism } = useProposal(proposalAddress)\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const { nfts: collectionNFTs } = useOwnerNftByCollection(walletAddress)\n  const myCollection = collectionNFTs?.[mint.toBase58()] || []\n  const isLockedVote =\n    Object.keys(consensusMechanism || [])[0] === 'lockedTokenCounter'\n  const isComplete = useMemo(() => {\n    if (status === 'Preparing' || status === 'Voting') return false\n    return true\n  }, [status])\n  const disabled =\n    status !== 'Voting' ||\n    !account.isAddress(proposalAddress) ||\n    !myCollection.length\n\n  const onVoteNftFor = () => {\n    setVisible(true)\n    setVotingType(VotingType.for)\n  }\n\n  const onVoteNftAgainst = () => {\n    setVisible(true)\n    setVotingType(VotingType.against)\n  }\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Cast Your Votes</Typography.Title>\n        </Col>\n        {isLockedVote && (\n          <Col span={24}>\n            <LockedVoting\n              proposalAddress={proposalAddress}\n              daoAddress={daoAddress}\n            />\n          </Col>\n        )}\n        {isComplete ? (\n          <Col span={24}>\n            <Withdraw\n              daoAddress={daoAddress}\n              proposalAddress={proposalAddress}\n            />\n          </Col>\n        ) : (\n          <Col span={24}>\n            <Row gutter={[16, 16]}>\n              <Col span={12}>\n                <Button\n                  onClick={onVoteNftFor}\n                  type=\"primary\"\n                  disabled={disabled}\n                  block\n                  size=\"large\"\n                  icon={<IonIcon name=\"thumbs-up-outline\" />}\n                >\n                  Vote For\n                </Button>\n              </Col>\n              <Col span={12}>\n                <Button\n                  onClick={onVoteNftAgainst}\n                  type=\"primary\"\n                  disabled={disabled}\n                  block\n                  size=\"large\"\n                  icon={<IonIcon name=\"thumbs-down-outline\" />}\n                >\n                  Vote Against\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n        )}\n      </Row>\n      <ModalVoteNFT\n        visible={visible}\n        setVisible={setVisible}\n        collection={myCollection}\n        votingType={votingType}\n        proposalAddress={proposalAddress}\n        daoAddress={daoAddress}\n      />\n    </Card>\n  )\n}\nexport default CardVoteByNFT\n","import { useEffect, useState } from 'react'\nimport { account, DEFAULT_EMPTY_ADDRESS, utils } from '@senswap/sen-js'\nimport { useAccount, useWallet } from '@senhub/providers'\n\nimport useMintDecimals from './useMintDecimals'\n\nexport type AccountBalanceReturn = {\n  amount: bigint\n  decimals: number\n  balance: number\n  mintAddress: string\n}\n\nconst buildResult = (\n  mintAddress?: string,\n  amount?: bigint,\n  decimals?: number,\n) => {\n  if (\n    !account.isAddress(mintAddress) ||\n    amount === undefined ||\n    decimals === undefined\n  )\n    return { amount: BigInt(0), decimals: 0, balance: 0 }\n  return {\n    mintAddress,\n    amount,\n    decimals,\n    balance: Number(utils.undecimalize(amount, decimals)),\n  }\n}\n\n/**\n * Get account balance. This hook needs WalletProvider, MintProvider, and AccountProvider for working.\n * WalletProvider Ref: https://docs.sentre.io/senhub/development/providers/wallet-provider\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * AccountProvider Ref: https://docs.sentre.io/senhub/development/providers/account-provider\n * @param accountAddress Associated account address\n * @returns AccountBalanceReturn\n * - AccountBalanceReturn.amount: The amount with decimals\n * - AccountBalanceReturn.decimals: The corresponding mint decimals\n * - AccountBalanceReturn.balance: The human-readable balance (undecimalized amount)\n * - AccountBalanceReturn.mintAddress: The corresponding mint\n */\nconst useAccountBalance = (accountAddress: string) => {\n  const {\n    wallet: { address: walletAddress, lamports },\n  } = useWallet()\n  const { accounts } = useAccount()\n  const { amount, mint: mintAddress } = accounts[accountAddress] || {}\n  const decimals = useMintDecimals(mintAddress) || 0\n\n  if (!account.isAddress(walletAddress) || !account.isAddress(accountAddress))\n    return buildResult()\n  if (accountAddress === walletAddress)\n    return buildResult(DEFAULT_EMPTY_ADDRESS, lamports, 9)\n\n  return buildResult(mintAddress, amount, decimals)\n}\n\nexport default useAccountBalance\n\n/**\n * The same as useAccountBalance but the input is mint address\n * @param mintAddress Mint address\n * @returns AccountBalanceReturn\n */\nexport const useAccountBalanceByMintAddress = (mintAddress: string) => {\n  const [accountAddress, setAccountAddress] = useState('')\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const data = useAccountBalance(accountAddress)\n\n  useEffect(() => {\n    ;(async () => {\n      if (!account.isAddress(walletAddress) || !account.isAddress(mintAddress))\n        return setAccountAddress('')\n      const {\n        sentre: { splt },\n      } = window\n      try {\n        const address = await splt.deriveAssociatedAddress(\n          walletAddress,\n          mintAddress,\n        )\n        return setAccountAddress(address)\n      } catch (er) {\n        return setAccountAddress('')\n      }\n    })()\n  })\n\n  return data\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type VoteBidState = {\n  amount: string\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'voteBid'\nconst initialState: VoteBidState = {\n  amount: '',\n}\n\n/**\n * Actions\n */\n\nexport const setVoteBidAmount = createAsyncThunk(\n  `${NAME}/setVoteBidAmount`,\n  async (amount: string) => {\n    if (!amount) return { amount: '' }\n    return { amount }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      setVoteBidAmount.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account, utils } from '@senswap/sen-js'\nimport { DaoData } from '@interdao/core'\nimport { BN } from 'bn.js'\n\nimport { Button, Col, Row } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { AppState } from 'app/model'\nimport { ProposalChildCardProps } from '../../index'\nimport { explorer } from 'shared/util'\nimport configs from 'app/configs'\nimport { useAccountBalanceByMintAddress } from 'shared/hooks/useAccountBalance'\nimport useProposalStatus from 'app/hooks/proposal/useProposalStatus'\nimport useMetaData from 'app/hooks/useMetaData'\nimport useProposalFee from 'app/hooks/proposal/useProposalFee'\nimport { setVoteBidAmount } from 'app/model/voteBid.controller'\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst DEFAULT_VALUE_VOTE_MULTISIG = 1\n\nconst ActionVote = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const [loadingFor, setLoadingFor] = useState(false)\n  const [loadingAgainst, setLoadingAgainst] = useState(false)\n  const daos = useSelector((state: AppState) => state.daos)\n  const amount = useSelector((state: AppState) => state.voteBid.amount)\n  const dispatch = useDispatch()\n  const { mint } = daos[daoAddress] || ({} as DaoData)\n  const { balance, decimals } = useAccountBalanceByMintAddress(mint?.toBase58())\n  const { status } = useProposalStatus(proposalAddress)\n  const { metaData: daoMetaData } = useMetaData(daoAddress)\n  const proposalFee = useProposalFee({ daoAddress })\n  const isMultisigDAO = daoMetaData?.daoType === 'multisig-dao'\n\n  const disabled = useMemo(() => {\n    if (isMultisigDAO) return status !== 'Voting' || balance <= 0\n\n    return status !== 'Voting' || !amount || !account.isAddress(proposalAddress)\n  }, [amount, balance, isMultisigDAO, proposalAddress, status])\n\n  const onVoteFor = useCallback(async () => {\n    setLoadingFor(true)\n    try {\n      if ((!amount || !account.isAddress(proposalAddress)) && !isMultisigDAO)\n        return\n      const actualAmount = isMultisigDAO ? DEFAULT_VALUE_VOTE_MULTISIG : amount\n      const voteAmount = utils.decimalize(actualAmount, decimals)\n      const nextAmount = new BN(voteAmount.toString())\n      const { txId } = await interDao.voteFor(\n        proposalAddress,\n        nextAmount,\n        proposalFee,\n      )\n      dispatch(setVoteBidAmount(''))\n      window.notify({\n        type: 'success',\n        description: 'Voted successfully. Click to view details!',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (error: any) {\n      window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setLoadingFor(false)\n    }\n  }, [amount, decimals, dispatch, isMultisigDAO, proposalAddress, proposalFee])\n\n  const onVoteAgainst = useCallback(async () => {\n    setLoadingAgainst(true)\n    try {\n      if ((!amount || !account.isAddress(proposalAddress)) && !isMultisigDAO)\n        return\n      const actualAmount = isMultisigDAO ? DEFAULT_VALUE_VOTE_MULTISIG : amount\n      const voteAmount = utils.decimalize(actualAmount, decimals)\n      const nextAmount = new BN(voteAmount.toString())\n      const { txId } = await interDao.voteAgainst(\n        proposalAddress,\n        nextAmount,\n        proposalFee,\n      )\n      dispatch(setVoteBidAmount(''))\n      window.notify({\n        type: 'success',\n        description: 'Voted successfully. Click to view details!',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (error: any) {\n      window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setLoadingAgainst(false)\n    }\n  }, [amount, decimals, dispatch, isMultisigDAO, proposalAddress, proposalFee])\n\n  return (\n    <Fragment>\n      {balance ? (\n        <Row gutter={[16, 16]}>\n          <Col span={isMultisigDAO ? 24 : 12}>\n            <Button\n              onClick={onVoteFor}\n              type=\"primary\"\n              disabled={disabled}\n              loading={loadingFor}\n              block\n              size=\"large\"\n              icon={<IonIcon name=\"thumbs-up-outline\" />}\n            >\n              Vote For\n            </Button>\n          </Col>\n          <Col span={isMultisigDAO ? 24 : 12}>\n            <Button\n              onClick={onVoteAgainst}\n              type=\"primary\"\n              disabled={disabled}\n              loading={loadingAgainst}\n              block\n              size=\"large\"\n              icon={<IonIcon name=\"thumbs-down-outline\" />}\n            >\n              Vote Against\n            </Button>\n          </Col>\n        </Row>\n      ) : (\n        <Button block size=\"large\" type=\"primary\" disabled={true}>\n          Voted\n        </Button>\n      )}\n    </Fragment>\n  )\n}\n\nexport default ActionVote\n","import { useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { DaoData } from '@interdao/core'\n\nimport { Card, Col, Row, Typography } from 'antd'\nimport NumericInput from 'shared/antd/numericInput'\nimport Withdraw from '../../withdraw'\nimport LockedVoting from '../lockedVoting'\nimport ActionVote from './actionVote'\n\nimport { AppState } from 'app/model'\nimport { setVoteBidAmount } from 'app/model/voteBid.controller'\nimport { ProposalChildCardProps } from '../../index'\nimport { numeric } from 'shared/util'\nimport { useAccountBalanceByMintAddress } from 'shared/hooks/useAccountBalance'\nimport { MintSymbol } from 'shared/antd/mint'\nimport useProposalStatus from 'app/hooks/proposal/useProposalStatus'\nimport useMetaData from 'app/hooks/useMetaData'\nimport useProposal from 'app/hooks/proposal/useProposal'\n\nconst CardVoteToken = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const amount = useSelector((state: AppState) => state.voteBid.amount)\n  const dispatch = useDispatch()\n  const { mint } = daos[daoAddress] || ({} as DaoData)\n  const { balance } = useAccountBalanceByMintAddress(mint?.toBase58())\n  const { status } = useProposalStatus(proposalAddress)\n  const { metaData: daoMetaData } = useMetaData(daoAddress)\n  const { consensusMechanism } = useProposal(proposalAddress)\n  const isMultisigDAO = daoMetaData?.daoType === 'multisig-dao'\n  const isLockedVote =\n    Object.keys(consensusMechanism || [])[0] === 'lockedTokenCounter'\n  const isComplete = useMemo(() => {\n    if (status === 'Preparing' || status === 'Voting') return false\n    return true\n  }, [status])\n\n  const onChange = (value: string) => {\n    dispatch(setVoteBidAmount(value))\n  }\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Cast Your Votes</Typography.Title>\n        </Col>\n        {!isMultisigDAO && !isComplete && (\n          <Col span={24}>\n            <Card\n              className=\"numric-ip-card\"\n              bodyStyle={{ padding: '8px 12px' }}\n              bordered={false}\n            >\n              <Row gutter={[8, 8]}>\n                <Col flex=\"auto\">\n                  <Typography.Text>Amount Votes</Typography.Text>\n                </Col>\n                <Col>\n                  <Typography.Text>\n                    Available: {numeric(balance).format('0,0.[00]')}\n                  </Typography.Text>{' '}\n                  <MintSymbol mintAddress={mint?.toBase58()} />\n                </Col>\n                <Col span={24}>\n                  <NumericInput\n                    bordered={false}\n                    style={{ padding: 0 }}\n                    placeholder=\"0\"\n                    value={amount}\n                    onValue={onChange}\n                    suffix={\n                      <Typography.Text\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => onChange(balance.toString())}\n                      >\n                        MAX\n                      </Typography.Text>\n                    }\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        )}\n        {isLockedVote && (\n          <Col span={24}>\n            <LockedVoting\n              proposalAddress={proposalAddress}\n              daoAddress={daoAddress}\n            />\n          </Col>\n        )}\n        <Col span={24}>\n          {!isComplete ? (\n            <ActionVote\n              proposalAddress={proposalAddress}\n              daoAddress={daoAddress}\n            />\n          ) : (\n            <Withdraw\n              proposalAddress={proposalAddress}\n              daoAddress={daoAddress}\n            />\n          )}\n        </Col>\n      </Row>\n    </Card>\n  )\n}\nexport default CardVoteToken\n","import { useSelector } from 'react-redux'\nimport { DaoData } from '@interdao/core'\n\nimport CardVoteByNFT from './nft'\nimport CardVoteToken from './token'\n\nimport { AppState } from 'app/model'\nimport { ProposalChildCardProps } from '../index'\n\nconst CardVote = ({ proposalAddress, daoAddress }: ProposalChildCardProps) => {\n  const daos = useSelector((state: AppState) => state.daos)\n\n  const { isNft } = daos?.[daoAddress] || ({} as DaoData)\n\n  return isNft ? (\n    <CardVoteByNFT proposalAddress={proposalAddress} daoAddress={daoAddress} />\n  ) : (\n    <CardVoteToken proposalAddress={proposalAddress} daoAddress={daoAddress} />\n  )\n}\n\nexport default CardVote\n","import { Col, Modal, Row, Typography } from 'antd'\nimport { TemplateInfoLoader } from 'app/templates/templateLoader'\n\ntype TemplateInfoProps = {\n  visible: boolean\n  setVisible: (visible: boolean) => void\n  proposalAddress: string\n}\n\nconst ModalTemplateInfo = ({\n  proposalAddress,\n  visible,\n  setVisible,\n}: TemplateInfoProps) => {\n  return (\n    <Modal\n      className=\"template-card template-info\"\n      visible={visible}\n      footer={false}\n      onCancel={() => setVisible(false)}\n    >\n      <Row>\n        <Col\n          className=\"template-info-header\"\n          span={24}\n          style={{ textAlign: 'left' }}\n        >\n          <Typography.Title level={4}>Template information</Typography.Title>\n        </Col>\n        <Col span={24} className=\"template-info-body\">\n          <TemplateInfoLoader proposalAddress={proposalAddress} />\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default ModalTemplateInfo\n","import { useMemo } from 'react'\nimport { ConsensusQuorum } from '@interdao/core'\n\nconst useParseQuorumText = (quorum?: ConsensusQuorum) => {\n  const quorumText = useMemo(() => {\n    if (!quorum) return '-'\n    const mechanismQuorum = Object.keys(quorum)[0]\n    if (mechanismQuorum === 'half') return '1/2'\n    if (mechanismQuorum === 'oneThird') return '1/3'\n    if (mechanismQuorum === 'twoThird') return '2/3'\n  }, [quorum])\n\n  return quorumText\n}\nexport default useParseQuorumText\n","import { useMemo, useState } from 'react'\nimport moment from 'moment'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\nimport { Card, Col, Row, Space, Typography, Tooltip, Button } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport ModalTemplateInfo from '../modalTemplateInfo'\nimport RowSpaceBetween from 'app/components/rowSpaceBetween'\n\nimport useProposal from 'app/hooks/proposal/useProposal'\nimport { asyncWait, explorer, shortenAddress } from 'shared/util'\nimport { ProposalChildCardProps } from './index'\nimport useParseQuorumText from 'app/hooks/proposal/useParseQuorumText'\n\nconst CardInfo = ({ proposalAddress, daoAddress }: ProposalChildCardProps) => {\n  const [copied, setCopied] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const { consensusQuorum, startDate, endDate, consensusMechanism, creator } =\n    useProposal(proposalAddress)\n  const authProposalAddress = creator?.toBase58() || ''\n  const quorum = useParseQuorumText(consensusQuorum)\n\n  const onCopy = async () => {\n    setCopied(true)\n    await asyncWait(1500)\n    setCopied(false)\n  }\n\n  const consensus = useMemo(() => {\n    if (!consensusMechanism) return '-'\n    const _consensusMechanism = Object.keys(consensusMechanism)[0]\n    if (_consensusMechanism === 'stakedTokenCounter') return 'Staked counter'\n    if (_consensusMechanism === 'lockedTokenCounter') return 'Locked counter'\n  }, [consensusMechanism])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Row align=\"middle\">\n            <Col flex=\"auto\">\n              <Typography.Title level={5}>Information</Typography.Title>\n            </Col>\n            <Col>\n              <Button\n                type=\"text\"\n                icon={<IonIcon name=\"information-circle-outline\" />}\n                style={{ marginRight: -10 }}\n                onClick={() => setVisible(true)}\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Space style={{ width: '100%' }} direction=\"vertical\">\n            <RowSpaceBetween\n              label=\"Proposal ID\"\n              value={shortenAddress(proposalAddress, 3)}\n            />\n            <RowSpaceBetween\n              label=\"Start Time\"\n              value={moment(startDate?.toNumber() * 1000).format(\n                'MMM DD,yyyy HH:mm',\n              )}\n            />\n            <RowSpaceBetween\n              label=\"End Time\"\n              value={moment(endDate?.toNumber() * 1000).format(\n                'MMM DD,yyyy HH:mm',\n              )}\n            />\n            <RowSpaceBetween\n              label=\"Author\"\n              value={\n                <Space size={10}>\n                  <Typography.Text\n                    style={{ cursor: 'pointer', textDecoration: 'underline' }}\n                    onClick={() =>\n                      window.open(explorer(authProposalAddress), '_blank')\n                    }\n                  >\n                    {shortenAddress(authProposalAddress, 3)}\n                  </Typography.Text>\n                  <Tooltip title=\"Copied\" visible={copied}>\n                    <CopyToClipboard text={authProposalAddress} onCopy={onCopy}>\n                      <IonIcon\n                        style={{ cursor: 'pointer' }}\n                        name=\"copy-outline\"\n                        onClick={onCopy}\n                      />\n                    </CopyToClipboard>\n                  </Tooltip>\n                </Space>\n              }\n            />\n            <RowSpaceBetween label=\"Quorum\" value={quorum} />\n            <RowSpaceBetween label=\"Vote Method\" value={consensus} />\n          </Space>\n        </Col>\n      </Row>\n      <ModalTemplateInfo\n        setVisible={setVisible}\n        visible={visible}\n        proposalAddress={proposalAddress}\n      />\n    </Card>\n  )\n}\n\nexport default CardInfo\n","import { useSelector } from 'react-redux'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { DaoData } from '@interdao/core'\nimport { utils } from '@senswap/sen-js'\nimport { useUI } from '@senhub/providers'\nimport BN from 'bn.js'\n\nimport { Card, Col, Row, Space, Typography, Progress } from 'antd'\nimport RowSpaceVertical from 'app/components/rowSpaceVertical'\n\nimport { ProposalChildCardProps } from './index'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { AppState } from 'app/model'\nimport { numeric } from 'shared/util'\nimport useProposalStatus from 'app/hooks/proposal/useProposalStatus'\nimport useProposal from 'app/hooks/proposal/useProposal'\nimport { STROKE_COLOR } from 'app/constant'\n\nconst CardProgress = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const [backGroundColor, setBackGroundColor] = useState('')\n  const [successColor, setSuccessColor] = useState('')\n  const daos = useSelector((state: AppState) => state.daos)\n  const { votingAgainstPower, votingForPower, consensusQuorum } =\n    useProposal(proposalAddress)\n  const { mint } = daos[daoAddress] || ({} as DaoData)\n  const mintDecimal = useMintDecimals(mint?.toBase58()) || 0\n  const { status, actualSupply } = useProposalStatus(proposalAddress)\n  const {\n    ui: { theme },\n  } = useUI()\n\n  const noVote = Number(votingAgainstPower) || 0\n  const yesVote = Number(votingForPower) || 0\n  const totalVote = yesVote + noVote\n  const percentYes = (yesVote / totalVote) * 100\n  const percentNo = (noVote / totalVote) * 100\n  const defaultRequire = useMemo(\n    () => new BN(utils.decimalize(1, mintDecimal).toString()),\n    [mintDecimal],\n  )\n\n  const currentPower = useMemo(() => {\n    if (!consensusQuorum) return new BN(0)\n    const actualYesVote = votingForPower.sub(votingAgainstPower)\n    const mechanismQuorum = Object.keys(consensusQuorum)[0]\n\n    if (mechanismQuorum === 'half') {\n      const supplyNeed = actualSupply.div(new BN(2)).add(defaultRequire)\n      return actualYesVote.mul(new BN(100)).divRound(supplyNeed)\n    }\n\n    if (mechanismQuorum === 'oneThird') {\n      const supplyNeed = actualSupply.div(new BN(3)).add(defaultRequire)\n      return actualYesVote.mul(new BN(100)).divRound(supplyNeed)\n    }\n\n    if (mechanismQuorum === 'twoThird') {\n      const supplyNeed = actualSupply\n        .mul(new BN(2))\n        .div(new BN(3))\n        .add(defaultRequire)\n\n      return actualYesVote.mul(new BN(100)).divRound(supplyNeed)\n    }\n\n    return new BN(0)\n  }, [\n    actualSupply,\n    consensusQuorum,\n    defaultRequire,\n    votingAgainstPower,\n    votingForPower,\n  ])\n\n  const powerRequire = useMemo(() => {\n    if (!consensusQuorum || !actualSupply || currentPower.gte(new BN(100)))\n      return new BN(0)\n    const actualYesVote = votingForPower.sub(votingAgainstPower)\n    const mechanismQuorum = Object.keys(consensusQuorum)[0]\n\n    if (mechanismQuorum === 'half')\n      return actualSupply.div(new BN(2)).sub(actualYesVote).add(defaultRequire)\n\n    if (mechanismQuorum === 'oneThird')\n      return actualSupply.div(new BN(3)).sub(actualYesVote).add(defaultRequire)\n\n    if (mechanismQuorum === 'twoThird')\n      return actualSupply\n        .mul(new BN(2))\n        .div(new BN(3))\n        .add(defaultRequire)\n        .sub(actualYesVote)\n\n    return new BN(0)\n  }, [\n    actualSupply,\n    consensusQuorum,\n    currentPower,\n    defaultRequire,\n    votingAgainstPower,\n    votingForPower,\n  ])\n\n  const percentSuccess = useMemo(() => {\n    if (percentYes) return percentYes\n    if (percentNo) return 100 - percentNo\n    return 0\n  }, [percentNo, percentYes])\n\n  const getColors = useCallback(() => {\n    if (!percentNo && !percentYes)\n      return setBackGroundColor(STROKE_COLOR[theme].default)\n    if (!percentNo && percentYes)\n      return setSuccessColor(STROKE_COLOR[theme].for)\n    if (percentNo && !percentYes)\n      return setBackGroundColor(STROKE_COLOR[theme].against)\n\n    setBackGroundColor(STROKE_COLOR[theme].against)\n    return setSuccessColor(STROKE_COLOR[theme].for)\n  }, [percentNo, percentYes, theme])\n\n  const quorumText = useMemo(() => {\n    switch (status) {\n      case 'Failed':\n        return 'The proposal has been failed'\n      case 'Succeeded':\n        return 'The proposal has been approved'\n      default:\n        return `${numeric(\n          utils.undecimalize(BigInt(powerRequire.toString()), mintDecimal),\n        ).format('0,0.[0000]')} more Vote For required`\n    }\n  }, [mintDecimal, powerRequire, status])\n\n  useEffect(() => {\n    getColors()\n  }, [getColors])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Current Results</Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Space size={0} style={{ width: '100%' }} direction=\"vertical\">\n            <Typography.Text type=\"secondary\">Quorum</Typography.Text>\n            <Typography.Text>{quorumText}</Typography.Text>\n            <Progress\n              percent={100}\n              strokeColor={STROKE_COLOR[theme].default}\n              success={{\n                percent: currentPower.toNumber(),\n                strokeColor: STROKE_COLOR[theme].for,\n              }}\n              showInfo={false}\n            />\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[4, 4]}>\n            <Col flex=\"auto\">\n              <RowSpaceVertical\n                label=\"Voted For\"\n                size={0}\n                value={\n                  <Typography.Title level={4}>\n                    {numeric(\n                      utils.undecimalize(BigInt(yesVote), mintDecimal),\n                    ).format('0,0.[0000]')}\n                  </Typography.Title>\n                }\n              />\n            </Col>\n            <Col>\n              <RowSpaceVertical\n                label=\"Voted Against\"\n                size={0}\n                align=\"end\"\n                value={\n                  <Typography.Title level={4}>\n                    {numeric(\n                      utils.undecimalize(BigInt(noVote), mintDecimal),\n                    ).format('0,0.[0000]')}\n                  </Typography.Title>\n                }\n              />\n            </Col>\n            <Col span={24}>\n              <Progress\n                style={{ width: '100%' }}\n                percent={100}\n                strokeColor={backGroundColor}\n                success={{\n                  percent: percentSuccess,\n                  strokeColor: successColor,\n                }}\n                showInfo={false}\n              />\n            </Col>\n            <Col span={24}>\n              <Row>\n                <Col flex=\"auto\">\n                  <Typography.Text type=\"secondary\">\n                    {numeric(percentYes).format('0,0.[00]')}%\n                  </Typography.Text>\n                </Col>\n                <Col>\n                  <Typography.Text type=\"secondary\">\n                    {numeric(percentNo).format('0,0.[00]')}%\n                  </Typography.Text>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CardProgress\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport useMetaData from 'app/hooks/useMetaData'\nimport { AppState } from 'app/model'\nimport { Typography } from 'antd'\n\ntype ColumnNameProps = {\n  authority: string\n  proposalAddress: string\n}\n\nconst ColumnName = ({ authority, proposalAddress }: ColumnNameProps) => {\n  const { proposal } = useSelector((state: AppState) => state)\n  const { dao } = proposal?.[proposalAddress]\n  const { metaData } = useMetaData(dao.toBase58())\n\n  const name = useMemo(() => {\n    const members = metaData?.members || []\n    for (const { walletAddress, name } of members) {\n      if (walletAddress === authority) {\n        return name\n      }\n    }\n    return '--'\n  }, [authority, metaData])\n\n  return <Typography.Text className=\"t-16\">{name}</Typography.Text>\n}\n\nexport default ColumnName\n","import { PublicKey } from '@solana/web3.js'\nimport { ReceiptData } from '@interdao/core'\n\nimport { Typography } from 'antd'\nimport ColumnType from './columnType'\nimport ColumnPower from './columnPower'\n\nimport { shortenAddress } from 'shared/util'\nimport ColumnName from './columnName'\n\nexport const HISTORY_COLUMNS_FLEXIBLE = [\n  {\n    title: 'WALLET ADDRESS',\n    dataIndex: 'authority',\n    render: (walletAddress: PublicKey) => (\n      <Typography>{shortenAddress(walletAddress.toBase58())}</Typography>\n    ),\n  },\n  {\n    title: 'TYPE',\n    dataIndex: 'authority',\n    render: (_: any, receipt: ReceiptData) => <ColumnType record={receipt} />,\n  },\n  {\n    title: 'POWER',\n    dataIndex: 'power',\n    render: (_: any, receipt: ReceiptData) => <ColumnPower receipt={receipt} />,\n  },\n]\n\nexport const HISTORY_COLUMNS_MULTISIG = [\n  {\n    title: 'NAME',\n    dataIndex: 'authority',\n    render: (authority: PublicKey, receipt: ReceiptData) => (\n      <ColumnName\n        proposalAddress={receipt.proposal.toBase58()}\n        authority={authority.toBase58()}\n      />\n    ),\n  },\n  {\n    title: 'WALLET ADDRESS',\n    dataIndex: 'authority',\n    render: (walletAddress: PublicKey) => (\n      <Typography>{shortenAddress(walletAddress.toBase58())}</Typography>\n    ),\n  },\n  {\n    title: 'TYPE',\n    dataIndex: 'authority',\n    render: (_: any, receipt: ReceiptData) => <ColumnType record={receipt} />,\n  },\n]\n","import { useCallback, useEffect, useState } from 'react'\nimport { ReceiptData } from '@interdao/core'\n\nimport { Card, Col, Row, Typography, Table, Button } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { HISTORY_COLUMNS_MULTISIG, HISTORY_COLUMNS_FLEXIBLE } from './column'\nimport { getReceipts } from 'app/hooks/proposal/useReceipts'\n\nimport './index.less'\nimport useMetaData from 'app/hooks/useMetaData'\n\nconst DEFAULT_AMOUNT_HISTORY = 5\n\nconst History = ({\n  proposalAddress,\n  daoAddress,\n}: {\n  proposalAddress: string\n  daoAddress: string\n}) => {\n  const [amount, setAmount] = useState(DEFAULT_AMOUNT_HISTORY)\n  const [loading, setLoading] = useState(false)\n  const [listReceipt, setListReceipt] = useState<ReceiptData[]>([])\n  const { metaData } = useMetaData(daoAddress)\n  const isMultisigDAO = metaData?.daoType === 'multisig-dao'\n  const historyColum = isMultisigDAO\n    ? HISTORY_COLUMNS_MULTISIG\n    : HISTORY_COLUMNS_FLEXIBLE\n\n  const fetchReceipts = useCallback(async () => {\n    setLoading(true)\n    const receipts = await getReceipts(proposalAddress)\n    const nextReceipts: ReceiptData[] = []\n    Object.values(receipts).forEach((receipt) => {\n      const { authority, power, action } = receipt\n      const actionType = Object.keys(action || {})[0]\n      const owner = authority.toBase58()\n\n      const existReceipt = nextReceipts.find((_receipt) => {\n        const { action: _action, authority: _authority } = _receipt\n        const _actionType = Object.keys(_action || {})[0]\n        const _owner = _authority.toBase58()\n\n        return _owner === owner && actionType === _actionType\n      })\n      if (!existReceipt) return nextReceipts.push(receipt)\n\n      const { power: oldPower } = existReceipt\n      const index = nextReceipts.findIndex(\n        (_receipt) => _receipt === existReceipt,\n      )\n      if (index !== -1)\n        return (nextReceipts[index] = {\n          ...nextReceipts[index],\n          power: oldPower.add(power),\n        })\n    })\n    setLoading(false)\n    return setListReceipt(nextReceipts)\n  }, [proposalAddress])\n\n  useEffect(() => {\n    fetchReceipts()\n  }, [fetchReceipts])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Row>\n            <Col flex=\"auto\">\n              <Typography.Title level={5}> Votes</Typography.Title>\n            </Col>\n            <Col>\n              <Button onClick={fetchReceipts}>Refresh</Button>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Table\n            columns={historyColum}\n            dataSource={listReceipt.slice(0, amount)}\n            pagination={false}\n            loading={loading}\n            rowKey={({ index, lockedDate }) =>\n              index.toNumber() + lockedDate.toNumber()\n            }\n          />\n        </Col>\n        <Col span={24} style={{ textAlign: 'center' }}>\n          <Button\n            disabled={listReceipt.length <= amount}\n            onClick={() => setAmount(amount + DEFAULT_AMOUNT_HISTORY)}\n            icon={<IonIcon name=\"chevron-down-outline\" />}\n          >\n            View more\n          </Button>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\nexport default History\n","import { useParams, useHistory } from 'react-router-dom'\n\nimport { Button, Col, Row, Spin } from 'antd'\nimport CardStatus from './cardStatus'\nimport CardVote from './cardVote'\nimport CardInfo from './cardInfo'\nimport CardProgress from './cardProgress'\nimport History from './history'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport configs from 'app/configs'\nimport useProposalMetaData from 'app/hooks/proposal/useProposalMetaData'\n\nimport './index.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport type ProposalChildCardProps = {\n  proposalAddress: string\n  daoAddress: string\n}\n\nconst ProposalDetails = () => {\n  const history = useHistory()\n  const { proposalAddress, daoAddress } =\n    useParams<{ daoAddress: string; proposalAddress: string }>()\n  const { loading } = useProposalMetaData(proposalAddress)\n\n  return (\n    <Spin spinning={loading} tip=\"Loading Proposal Data...\">\n      <Row justify=\"center\">\n        <Col xs={24} lg={18}>\n          <Row gutter={[24, 24]}>\n            <Col span={24}>\n              <Button\n                type=\"text\"\n                icon={<IonIcon name=\"arrow-back-outline\" />}\n                onClick={() => history.push(`/app/${appId}/dao/${daoAddress}`)}\n              >\n                Back\n              </Button>\n            </Col>\n            <Col span={24}>\n              <Row gutter={[24, 24]}>\n                <Col xs={24} md={16}>\n                  <Row gutter={[24, 24]}>\n                    <Col span={24}>\n                      <CardStatus\n                        proposalAddress={proposalAddress}\n                        daoAddress={daoAddress}\n                      />\n                    </Col>\n                    <Col span={24}>\n                      <CardVote\n                        proposalAddress={proposalAddress}\n                        daoAddress={daoAddress}\n                      />\n                    </Col>\n                    <Col span={24}>\n                      <History\n                        proposalAddress={proposalAddress}\n                        daoAddress={daoAddress}\n                      />\n                    </Col>\n                  </Row>\n                </Col>\n                <Col xs={24} md={8}>\n                  <Row gutter={[24, 24]}>\n                    <Col span={24}>\n                      <CardInfo\n                        proposalAddress={proposalAddress}\n                        daoAddress={daoAddress}\n                      />\n                    </Col>\n                    <Col span={24}>\n                      <CardProgress\n                        proposalAddress={proposalAddress}\n                        daoAddress={daoAddress}\n                      />\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Spin>\n  )\n}\nexport default ProposalDetails\n","import { useHistory } from 'react-router-dom'\n\nimport { Row, Button, Col, ButtonProps } from 'antd'\n\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\ntype ActionButtonProps = {\n  daoAddress: string\n  onSave: () => void\n} & ButtonProps\n\nconst ActionButton = ({ daoAddress, onSave, ...rest }: ActionButtonProps) => {\n  const history = useHistory()\n\n  const onCancel = async () => {\n    history.push(`/app/${appId}/dao/${daoAddress}`)\n  }\n\n  return (\n    <Row>\n      <Col flex=\"auto\">\n        <Button size=\"large\" onClick={onCancel} type=\"text\">\n          Cancel\n        </Button>\n      </Col>\n      <Col>\n        <Button size=\"large\" {...rest} onClick={onSave} type=\"primary\">\n          Save\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ActionButton\n","import { useEffect, useMemo, useState } from 'react'\nimport { CID } from 'ipfs-core'\n\nimport { Col, Row } from 'antd'\nimport ActionButton from './actionButton'\n\nimport IPFS from 'app/helpers/ipfs'\nimport { explorer } from 'shared/util'\nimport configs from 'app/configs'\nimport useMetaData from 'app/hooks/useMetaData'\nimport usePDB from 'app/hooks/usePDB'\nimport FormInputDetail from 'app/components/formInputDetail'\nimport { DEFAULT_META_DATA } from 'app/model/createDao.controller'\nimport { validURL } from 'app/helpers'\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst Information = ({ daoAddress }: { daoAddress: string }) => {\n  const [loading, setLoading] = useState(false)\n  const { metaData } = useMetaData(daoAddress)\n  const [nextMetadata, setNextMetadata] = useState(metaData)\n  const pdb = usePDB()\n\n  const updateMetaData = async () => {\n    if (!nextMetadata) return\n    try {\n      setLoading(true)\n      const ipfs = new IPFS()\n      const cid = await ipfs.set(nextMetadata)\n      const {\n        multihash: { digest },\n      } = CID.parse(cid)\n      const daoMetaData = Buffer.from(digest)\n      const { txId } = await interDao.updateDaoMetadata(daoMetaData, daoAddress)\n      window.notify({\n        type: 'success',\n        description:\n          'Update information successfully. Click here to view details',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n\n      const localMetadata = { ...nextMetadata, cid } //update metadata for realtime\n      return pdb.setItem(daoAddress, localMetadata)\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const validLink = useMemo(() => {\n    if (!nextMetadata) return\n    const { optionals } = nextMetadata\n    if (!optionals.length) return true\n    for (const link of optionals) if (!validURL(link)) return false\n    return true\n  }, [nextMetadata])\n\n  useEffect(() => {\n    if (!nextMetadata && metaData) setNextMetadata(metaData)\n  }, [metaData, nextMetadata])\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <FormInputDetail\n          metadata={nextMetadata || DEFAULT_META_DATA}\n          setMetadata={setNextMetadata}\n        />\n      </Col>\n      <Col span={24}>\n        <ActionButton\n          onSave={updateMetaData}\n          daoAddress={daoAddress}\n          loading={loading}\n          disabled={!validLink}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Information\n","import { ChangeEvent, useCallback, useEffect, useState } from 'react'\nimport isEqual from 'react-fast-compare'\n\nimport { Button, Col, Row, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport MemberInput from 'app/view/createDao/setRule/multisig/memberInput'\n\nimport { DAOMember } from 'app/model/createDao.controller'\n\ntype DAOMembersProps = {\n  members: DAOMember[]\n  setMember: (members: DAOMember[]) => void\n}\n\nconst DAOMembers = ({ members, setMember }: DAOMembersProps) => {\n  const [oldMember, setOldMember] = useState<string[]>([])\n\n  const addMember = () => {\n    const nextMembers = [...members]\n    nextMembers.push({ name: '', walletAddress: '' })\n    return setMember(nextMembers)\n  }\n\n  const onChangeMember = (e: ChangeEvent<HTMLInputElement>, index: number) => {\n    const nextMembers = [...members]\n    for (const { walletAddress } of members) {\n      if (isEqual(walletAddress, e.target.value))\n        return window.notify({\n          type: 'warning',\n          description: 'This wallet address already exists',\n        })\n    }\n    nextMembers[index] = {\n      ...nextMembers[index],\n      [e.target.name]: e.target.value,\n    }\n    return setMember(nextMembers)\n  }\n\n  const remove = (index: number) => {\n    const nextMembers = [...members]\n    nextMembers.splice(index, 1)\n    return setMember(nextMembers)\n  }\n\n  const setDefaultMembers = useCallback(() => {\n    if (oldMember.length) return\n    const oldAddresses = []\n    for (const { walletAddress } of members) {\n      oldAddresses.push(walletAddress)\n    }\n    return setOldMember(oldAddresses)\n  }, [members, oldMember])\n\n  useEffect(() => {\n    setDefaultMembers()\n  }, [setDefaultMembers])\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Typography.Title level={4}>\n          People who'll be part of your team.\n        </Typography.Title>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[12, 12]}>\n          {members.length &&\n            members.map(({ name, walletAddress }, idx) => {\n              return (\n                <Col span={24} key={idx}>\n                  <MemberInput\n                    name={name}\n                    walletAddress={walletAddress}\n                    onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                      onChangeMember(e, idx)\n                    }\n                    remove={() => remove(idx)}\n                    disabledRemove={oldMember.includes(walletAddress)}\n                    disabledWalletInput={oldMember.includes(walletAddress)}\n                    disabledName={oldMember.includes(walletAddress)}\n                  />\n                </Col>\n              )\n            })}\n          <Col span={4}>\n            <Button\n              block\n              type=\"dashed\"\n              icon={<IonIcon name=\"add-outline\" />}\n              onClick={addMember}\n            >\n              Add\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DAOMembers\n","import { useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { CID } from 'ipfs-core'\nimport { DaoRegimes } from '@interdao/core'\n\nimport { Col, Row } from 'antd'\nimport ActionButton from '../../actionButton'\nimport DAOMembers from './daoMembers'\nimport Regime from 'app/view/createDao/setRule/multisig/regime'\n\nimport { AppState } from 'app/model'\nimport { explorer } from 'shared/util'\nimport configs from 'app/configs'\nimport IPFS from 'app/helpers/ipfs'\nimport MultisigWallet from 'app/helpers/mutisigWallet'\nimport usePDB from 'app/hooks/usePDB'\nimport { DAOMember, MetaData } from 'app/model/createDao.controller'\nimport useMetaData from 'app/hooks/useMetaData'\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst EditMultisigDaoRule = ({ daoAddress }: { daoAddress: string }) => {\n  const [loading, setLoading] = useState(false)\n  const { metaData } = useMetaData(daoAddress)\n  const [nextMetadata, setNextMetadata] = useState<MetaData>()\n  const daos = useSelector((state: AppState) => state.daos)\n\n  const pdb = usePDB()\n\n  const disabled = useMemo(() => {\n    if (!nextMetadata) return true\n    for (const { walletAddress } of nextMetadata.members) {\n      if (!account.isAddress(walletAddress)) return true\n    }\n    return false\n  }, [nextMetadata])\n\n  const validAccount = async (walletAddress: string, mintAddress: string) => {\n    try {\n      const { splt } = window.sentre\n      const associatedAddress = await splt.deriveAssociatedAddress(\n        walletAddress,\n        mintAddress,\n      )\n      const data = await splt.getAccountData(associatedAddress)\n      if (data) return false\n    } catch (error) {\n      return true\n    }\n  }\n\n  const updateMember = async () => {\n    if (!nextMetadata) return\n    const { mint } = daos?.[daoAddress]\n    const mintAddress = mint.toBase58()\n    try {\n      setLoading(true)\n      const ipfs = new IPFS()\n      const cid = await ipfs.set(nextMetadata)\n      const {\n        multihash: { digest },\n      } = CID.parse(cid)\n      const daoMetaData = Buffer.from(digest)\n      const { txId } = await interDao.updateDaoMetadata(daoMetaData, daoAddress)\n      const multisigWallet = new MultisigWallet(mintAddress)\n\n      for (const { walletAddress } of nextMetadata.members) {\n        const isValid = await validAccount(walletAddress, mintAddress)\n        if (!isValid) continue\n        await multisigWallet.mintToAccount(walletAddress, 1)\n      }\n\n      window.notify({\n        type: 'success',\n        description: 'Update members successfully. Click here to view details',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n\n      const localMetadata = { ...nextMetadata, cid } //update metadata for realtime\n      return pdb.setItem(daoAddress, localMetadata)\n    } catch (er: any) {\n      window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const onChangeMember = (members: DAOMember[]) => {\n    if (!nextMetadata) return\n    setNextMetadata({ ...nextMetadata, members })\n  }\n\n  useEffect(() => {\n    if (!nextMetadata && metaData) setNextMetadata(metaData)\n  }, [metaData, nextMetadata])\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <Regime regime={DaoRegimes.Autonomous} />\n      </Col>\n      <Col span={24}>\n        <DAOMembers\n          members={nextMetadata?.members || []}\n          setMember={onChangeMember}\n        />\n      </Col>\n      <Col span={24}>\n        <ActionButton\n          loading={loading}\n          onSave={updateMember}\n          daoAddress={daoAddress}\n          disabled={disabled}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default EditMultisigDaoRule\n","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DaoRegime } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\n\nimport { Col, Row } from 'antd'\nimport ActionButton from '../actionButton'\nimport RegimeInput from 'app/view/createDao/setRule/flexible/regimeInput'\n\nimport configs from 'app/configs'\nimport { AppState } from 'app/model'\nimport { explorer } from 'shared/util'\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst EditFlexibleDaoRule = ({ daoAddress }: { daoAddress: string }) => {\n  const { regime } = useSelector((state: AppState) => state.daos[daoAddress])\n  const [nextRegime, setRegime] = useState<DaoRegime>(regime)\n  const [loading, setLoading] = useState(false)\n\n  const updateRegime = async () => {\n    if (!nextRegime || isEqual(nextRegime, regime)) return\n    try {\n      setLoading(true)\n      const { txId } = await interDao.updateDaoRegime(nextRegime, daoAddress)\n      return window.notify({\n        type: 'success',\n        description: 'Update regime successfully. Click here to view details',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (er: any) {\n      window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <RegimeInput value={nextRegime} onChangeRegime={setRegime} />\n      </Col>\n      <Col span={24}>\n        <ActionButton\n          loading={loading}\n          onSave={updateRegime}\n          daoAddress={daoAddress}\n          disabled={!nextRegime || isEqual(nextRegime, regime)}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default EditFlexibleDaoRule\n","import EditMultisigDaoRule from './editMultisigDaoRule'\nimport EditFlexibleDaoRule from './editFlexibleDaoRule'\n\nimport useMetaData from 'app/hooks/useMetaData'\n\nconst Rule = ({ daoAddress }: { daoAddress: string }) => {\n  const { metaData } = useMetaData(daoAddress)\n\n  return metaData?.daoType === 'multisig-dao' ? (\n    <EditMultisigDaoRule daoAddress={daoAddress} />\n  ) : (\n    <EditFlexibleDaoRule daoAddress={daoAddress} />\n  )\n}\n\nexport default Rule\n","import { ChangeEvent, useState } from 'react'\nimport { account } from '@senswap/sen-js'\n\nimport { Col, Input, Row, Space, Typography } from 'antd'\nimport RowSpaceVertical from 'app/components/rowSpaceVertical'\nimport ActionButton from './actionButton'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport configs from 'app/configs'\nimport { explorer } from 'shared/util'\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst TransferAuthority = ({ daoAddress }: { daoAddress: string }) => {\n  const [authority, setAuthority] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const updateAuthority = async () => {\n    if (!account.isAddress(authority)) return\n    try {\n      setLoading(true)\n      const { txId } = await interDao.transferAuthority(authority, daoAddress)\n      return window.notify({\n        type: 'success',\n        description:\n          'Transfer authority successfully. Click here to view details',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space size={12}>\n          <IonIcon name=\"alert-circle-outline\" />\n          <Typography.Text type=\"secondary\" className=\"caption\">\n            Your current account will lose the DAO control when you transfer\n            authority.\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <RowSpaceVertical\n          style={{ width: '100%' }}\n          label=\"Transfer to author\"\n          value={\n            <Input\n              placeholder=\"E.g. Agt8...\"\n              onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                setAuthority(e.target.value)\n              }\n              className=\"border-less\"\n            />\n          }\n        />\n      </Col>\n      <Col span={24} />\n      <Col span={24}>\n        <ActionButton\n          loading={loading}\n          daoAddress={daoAddress}\n          onSave={updateAuthority}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default TransferAuthority\n","import { useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport BN from 'bn.js'\nimport isEqual from 'react-fast-compare'\n\nimport { Col, Row } from 'antd'\nimport CirculatingSupply from 'app/view/createDao/setRule/flexible/circulatingSupply'\nimport ActionButton from './actionButton'\n\nimport configs from 'app/configs'\nimport { AppState } from 'app/model'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { explorer } from 'shared/util'\nimport util from '@senswap/sen-js/dist/utils'\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst EditSupply = ({ daoAddress }: { daoAddress: string }) => {\n  const [nextSupply, setSupply] = useState('0')\n  const [loading, setLoading] = useState(false)\n  const { isNft, mint, supply } = useSelector(\n    (state: AppState) => state.daos[daoAddress],\n  )\n  const decimals = useMintDecimals(mint.toBase58()) || 0\n\n  const ok = useMemo(() => {\n    if (!nextSupply) return false\n    const supplyDecimal = util.decimalize(nextSupply, decimals).toString()\n    if (isEqual(new BN(supplyDecimal), supply)) return false\n    return true\n  }, [decimals, nextSupply, supply])\n\n  const updateSupply = async () => {\n    try {\n      setLoading(true)\n      const supplyDecimal = util.decimalize(nextSupply, decimals).toString()\n      const { txId: txIdSupply } = await interDao.updateDaoSupply(\n        new BN(supplyDecimal),\n        daoAddress,\n      )\n      return window.notify({\n        type: 'success',\n        description: 'Update supply successfully. Click here to view details',\n        onClick: () => window.open(explorer(txIdSupply), '_blank'),\n      })\n    } catch (er: any) {\n      window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    const defaultSupply = supply.div(new BN(10 ** decimals))\n    if (defaultSupply) setSupply(defaultSupply.toString())\n  }, [decimals, supply])\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <CirculatingSupply\n          isNft={isNft}\n          mintAddress={mint.toBase58()}\n          supply={nextSupply}\n          onChangeSupply={setSupply}\n        />\n      </Col>\n      <Col span={24}>\n        <ActionButton\n          loading={loading}\n          onSave={updateSupply}\n          daoAddress={daoAddress}\n          disabled={!ok}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default EditSupply\n","import { useParams } from 'react-router-dom'\n\nimport { Card, Col, Row, Tabs, Typography } from 'antd'\nimport Information from './editDaoDetail'\nimport Rule from './rule'\nimport TransferAuthority from './transferAuthority'\nimport EditSupply from './editSupply'\n\nimport './index.less'\n\nconst EditDAO = () => {\n  const { daoAddress } = useParams<{ daoAddress: string }>()\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col xs={24} lg={16}>\n        <Card bodyStyle={{ padding: 0 }} bordered={false} className=\"edit-dao\">\n          <Row>\n            <Col span={24} className=\"edit-dao_header\">\n              <Typography.Title level={4}>Settings DAO </Typography.Title>\n            </Col>\n            <Col span={24} className=\"edit-dao_body\">\n              <Tabs>\n                <Tabs.TabPane key=\"information\" tab=\"Information\">\n                  <Information daoAddress={daoAddress} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"regime\" tab=\"Regime\">\n                  <Rule daoAddress={daoAddress} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"supply\" tab=\"Supply\">\n                  <EditSupply daoAddress={daoAddress} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"transfer-authority\" tab=\"Transfer Authority\">\n                  <TransferAuthority daoAddress={daoAddress} />\n                </Tabs.TabPane>\n              </Tabs>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\nexport default EditDAO\n","import { Fragment, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Row, Col, Spin, Typography, Space } from 'antd'\nimport { AppState } from 'app/model'\n\nimport './index.less'\n\nconst Loading: React.FC = ({ children }) => {\n  const loading = useSelector((state: AppState) => state.loading)\n\n  const loadingElement = useMemo(() => {\n    return Object.values(loading).find((e) => e.loading === true)\n  }, [loading])\n\n  if (!loadingElement?.message) return <Fragment>{children}</Fragment>\n  return (\n    <div className=\"loading-screen\" style={{ display: 'block' }}>\n      <Row gutter={[24, 24]}>\n        <Col span={24} style={{ height: 256 }} />\n        <Col span={24}>\n          <Row gutter={[24, 24]} justify=\"center\">\n            <Col>\n              <Space direction=\"vertical\" align=\"center\" size={32}>\n                <Spin size=\"large\" />\n                <Typography.Title level={5}>\n                  {loadingElement?.message}\n                </Typography.Title>\n              </Space>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Loading\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type LoadingState = Record<string, { loading: boolean; message: string }>\n/**\n * Store constructor\n */\n\nconst NAME = 'voteBid'\nconst initialState: LoadingState = {}\n\n/**\n * Actions\n */\n\nexport const addLoading = createAsyncThunk<\n  LoadingState,\n  { id: string; message: string }\n>(`${NAME}/addLoading`, async ({ id, message }) => {\n  return { [id]: { loading: true, message } }\n})\n\nexport const clearLoading = createAsyncThunk(\n  `${NAME}/clearLoading`,\n  async (id: string) => {\n    return { [id]: { loading: false, message: '' } }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        addLoading.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        clearLoading.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useEffect } from 'react'\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n// Watch id\ntype WatchState = {\n  id: number\n  interval: NodeJS.Timer | undefined\n  callbacks: ((data: any) => void)[]\n}\n\nconst EVENTS = [\n  // Dao Event\n  'InitializeDAOEvent',\n  'UpdateDaoRegimeEvent',\n  'UpdateSupplyEvent',\n  'TransferAuthorityEvent',\n  'UpdateDaoMetadataEvent',\n  // Proposal Event\n  'InitializeProposalEvent',\n  'ExecuteProposalEvent',\n  //\n  'VoteForEvent',\n  'VoteAgainstEvent',\n  'CloseEvent',\n]\nconst TIME_RECHECK = 500\n\nconst watcherState: Record<string, WatchState> = {}\n\nconst reloadData = (event: string, data: any) => {\n  const callbacks = watcherState[event].callbacks\n  for (const callback of callbacks) {\n    callback(data)\n  }\n}\n\nexport const addEventListener = (\n  events: string[],\n  callback?: (data: any) => void,\n) => {\n  for (const event of events) {\n    if (!watcherState[event])\n      watcherState[event] = { id: 0, interval: undefined, callbacks: [] }\n    if (callback) watcherState[event].callbacks.push(callback)\n  }\n}\n\nconst EventsWatcher = () => {\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    for (const event of EVENTS) {\n      const state = watcherState[event] || {\n        id: 0,\n        interval: undefined,\n        callbacks: [],\n      }\n      if (state.interval || state.id) continue\n      state.interval = setInterval(async () => {\n        if (state.id) return clearInterval(state.interval)\n        state.id = await interDao.addListener(event as any, (data) =>\n          reloadData(event, data),\n        )\n      }, TIME_RECHECK)\n    }\n  }, [])\n\n  useEffect(() => {\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        for (const event of EVENTS) {\n          const state = watcherState[event]\n          try {\n            await interDao.removeListener(state.id)\n          } catch (er: any) {\n            console.warn(er.message)\n          } finally {\n            state.id = 0\n          }\n        }\n      })()\n    }\n  }, [watchData])\n\n  return <Fragment />\n}\nexport default EventsWatcher\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { useWallet } from '@senhub/providers'\nimport { PublicKey } from '@solana/web3.js'\n\nimport { AppDispatch } from 'app/model'\nimport { getDao, getDaos } from 'app/model/daos.controller'\nimport { addLoading, clearLoading } from 'app/model/loading.controller'\nimport { addEventListener } from './evens.watch'\n\nconst DaoWatcher = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadDaoData = useCallback(\n    ({ dao: daoPublicKey }: { dao: PublicKey }) => {\n      const daoAddress = daoPublicKey.toBase58()\n      return dispatch(getDao({ address: daoAddress, force: true }))\n    },\n    [dispatch],\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    dispatch(\n      addLoading({\n        id: 'fetch-daos',\n        message: 'Welcome to InterDAO. The application is loading...',\n      }),\n    )\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getDaos()).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of DAOs',\n      })\n    } finally {\n      setTimeout(() => {\n        dispatch(clearLoading('fetch-daos'))\n      }, 2000)\n    }\n  }, [dispatch, walletAddress])\n\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    addEventListener(\n      [\n        'InitializeDAOEvent',\n        'UpdateDaoRegimeEvent',\n        'UpdateSupplyEvent',\n        'TransferAuthorityEvent',\n        'UpdateDaoMetadataEvent',\n      ],\n      reloadDaoData,\n    )\n  }, [reloadDaoData])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default DaoWatcher\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { PublicKey } from '@solana/web3.js'\n\nimport { AppDispatch } from 'app/model'\nimport { getProposal, getProposals } from 'app/model/proposal.controller'\nimport { addLoading, clearLoading } from 'app/model/loading.controller'\nimport { addEventListener } from './evens.watch'\n\nconst ProposalWatcher = () => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadProposalData = useCallback(\n    ({ proposal: proposalPublicKey }: { proposal: PublicKey }) => {\n      const proposalAddress = proposalPublicKey.toBase58()\n      return dispatch(getProposal({ address: proposalAddress, force: true }))\n    },\n    [dispatch],\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      dispatch(\n        addLoading({\n          id: 'fetch-proposals',\n          message: 'Welcome to InterDAO. Loading proposal...',\n        }),\n      )\n      dispatch(getProposals()) //fetch all proposal\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of DAOs',\n      })\n    } finally {\n      setTimeout(() => {\n        dispatch(clearLoading('fetch-proposals'))\n      }, 2000)\n    }\n  }, [dispatch])\n\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    addEventListener(\n      [\n        'InitializeProposalEvent',\n        'VoteForEvent',\n        'VoteAgainstEvent',\n        'ExecuteProposalEvent',\n      ],\n      reloadProposalData,\n    )\n  }, [reloadProposalData])\n\n  useEffect(() => {\n    // I don't understand why but this fixes the watcher error\n    fetchData()\n    watchData()\n  }, [dispatch, fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default ProposalWatcher\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport {\n  ProposalData,\n  ReceiptData,\n  RECEIPT_DISCRIMINATOR,\n} from '@interdao/core'\nimport { account } from '@senswap/sen-js'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type ReceiptState = Record<string, ReceiptData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'receipt'\nconst initialState: ReceiptState = {}\n\n/**\n * Actions\n */\n\nexport const getReceipts = createAsyncThunk(\n  `${NAME}/getReceipts`,\n  async ({ authorityAddress }: { authorityAddress: string }) => {\n    if (!account.isAddress(authorityAddress)) throw new Error('Invalid address')\n    const {\n      provider: { connection },\n      programId,\n      account: { receipt },\n    } = interDao.program\n    const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n      await connection.getProgramAccounts(programId, {\n        filters: [\n          { dataSize: receipt.size },\n          {\n            memcmp: {\n              offset: 0,\n              bytes: RECEIPT_DISCRIMINATOR,\n            },\n          },\n          {\n            memcmp: {\n              offset: 16,\n              bytes: authorityAddress,\n            },\n          },\n        ],\n      })\n    let bulk: ReceiptState = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = interDao.parseReceiptData(buf)\n      bulk[address] = data\n    })\n    return bulk\n  },\n)\n\nexport const getReceipt = createAsyncThunk<\n  ReceiptState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getReceipt`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    receipt: { [address]: data },\n  } = getState()\n  if (data && !force) return { [address]: data }\n  const raw = await interDao.getReceiptData(address)\n  return { [address]: raw }\n})\n\nexport const upsetReceipt = createAsyncThunk<\n  ReceiptState,\n  { address: string; data: ProposalData },\n  { state: any }\n>(`${NAME}/upsetReceipt`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteReceipt = createAsyncThunk(\n  `${NAME}/deleteReceipt`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getReceipts.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { PublicKey } from '@solana/web3.js'\nimport { useWallet } from '@senhub/providers'\nimport { account } from '@senswap/sen-js'\n\nimport { AppDispatch } from 'app/model'\nimport { getReceipt, getReceipts } from 'app/model/receipt.controller'\nimport { addLoading, clearLoading } from 'app/model/loading.controller'\nimport { getProposal } from 'app/model/proposal.controller'\nimport { addEventListener } from './evens.watch'\n\nconst ReceiptWatcher = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadReceiptData = useCallback(\n    ({\n      receipt: receiptPublicKey,\n      proposal,\n    }: {\n      receipt: PublicKey\n      proposal?: PublicKey\n    }) => {\n      const receiptAddress = receiptPublicKey.toBase58()\n      if (proposal) {\n        const proposalAddress = proposal.toBase58()\n        dispatch(getProposal({ address: proposalAddress, force: true }))\n      }\n      return dispatch(\n        getReceipt({ address: receiptAddress, force: true }),\n      ).unwrap()\n    },\n    [dispatch],\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      dispatch(\n        addLoading({\n          id: 'fetch-receipt',\n          message: 'Welcome to InterDAO. Loading Receipts...',\n        }),\n      )\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getReceipts({ authorityAddress: walletAddress })).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of receipts',\n      })\n    } finally {\n      dispatch(clearLoading('fetch-receipt'))\n    }\n  }, [dispatch, walletAddress])\n\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    addEventListener(\n      ['VoteForEvent', 'VoteAgainstEvent', 'CloseEvent'],\n      reloadReceiptData,\n    )\n  }, [reloadReceiptData])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default ReceiptWatcher\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'app/model'\nimport { getCID } from 'app/helpers'\nimport IPFS from 'app/helpers/ipfs'\nimport usePDB from 'app/hooks/usePDB'\nimport { MetaData } from 'app/model/createDao.controller'\n\nconst ipfs = new IPFS()\n\nexport type LocalMetadata = {\n  cid: string\n} & MetaData\n\nconst MetadataWatcher = () => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const pdb = usePDB()\n\n  const loadAllMetaData = useCallback(async () => {\n    Object.keys(daos).map(async (daoAddress) => {\n      const metadata = (await pdb.getItem(daoAddress)) as LocalMetadata\n      const { metadata: digest } = daos[daoAddress]\n      const cid = getCID(digest)\n      if (metadata && metadata.cid === cid) return\n      const data: MetaData = await ipfs.get(cid)\n      if (!data) return\n      const localMetadata = { ...data, cid }\n      await pdb.setItem(daoAddress, localMetadata)\n    })\n  }, [daos, pdb])\n\n  useEffect(() => {\n    loadAllMetaData()\n  }, [loadAllMetaData])\n\n  return <Fragment />\n}\n\nexport default MetadataWatcher\n","import { useEffect } from 'react'\nimport { useUI } from '@senhub/providers'\nimport { Redirect, Route, Switch } from 'react-router-dom'\n\nimport { Row, Col } from 'antd'\nimport Dao from './dao'\nimport Proposal from './proposal'\nimport ProposalInitialization from './proposal/proposalInitialization'\nimport CreateDao from './createDao'\nimport ProposalDetails from './proposal/proposalDetails'\nimport EditDAO from './dao/editDao'\nimport Loading from 'app/components/loading'\n\nimport DaoWatcher from '../watcher/dao.watcher'\nimport ProposalWatcher from '../watcher/proposal.watcher'\nimport ReceiptWatcher from '../watcher/receipt.watcher'\nimport MetadataWatcher from '../watcher/metadata.watcher'\n\nimport BG from 'app/static/images/system/bg-dark.png'\nimport BG_LIGHT from 'app/static/images/system/bg-light.png'\nimport configs from 'app/configs'\n\nimport 'app/static/styles/dark.less'\nimport 'app/static/styles/light.less'\nimport EventsWatcher from 'app/watcher/evens.watch'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst View = () => {\n  const { setBackground } = useUI()\n\n  useEffect(() => {\n    setBackground({ light: BG_LIGHT, dark: BG })\n  }, [setBackground])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Loading>\n        <Col span={24}>\n          <Switch>\n            <Route exact path={`/app/${appId}/dao`} component={Dao} />\n            <Route\n              exact\n              path={`/app/${appId}/dao/create-dao`}\n              component={CreateDao}\n            />\n            <Route\n              exact\n              path={`/app/${appId}/dao/:daoAddress`}\n              component={Proposal}\n            />\n            <Route\n              exact\n              path={`/app/${appId}/dao/:daoAddress/edit`}\n              component={EditDAO}\n            />\n            <Route\n              exact\n              path={`/app/${appId}/dao/:daoAddress/new-proposal`}\n              component={ProposalInitialization}\n            />\n            <Route\n              exact\n              path={`/app/${appId}/dao/:daoAddress/proposal/:proposalAddress`}\n              component={ProposalDetails}\n            />\n            <Redirect from=\"*\" to={`/app/${appId}/dao`} />\n          </Switch>\n        </Col>\n      </Loading>\n      <Col span={24} />\n      <DaoWatcher />\n      <ProposalWatcher />\n      <ReceiptWatcher />\n      <EventsWatcher />\n      <MetadataWatcher />\n    </Row>\n  )\n}\n\nexport default View\n","import { PublicKey } from '@solana/web3.js'\nimport BN from 'bn.js'\n\n// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint' ||\n    val instanceof PublicKey ||\n    val instanceof BN ||\n    Buffer.isBuffer(val)\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\n\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'app/model/devTools'\n\nimport loading from 'app/model/loading.controller'\nimport daos from 'app/model/daos.controller'\nimport createDao from 'app/model/createDao.controller'\nimport tokenHolder from 'app/model/tokenHolder.controller'\nimport proposal from 'app/model/proposal.controller'\nimport receipt from 'app/model/receipt.controller'\nimport voteBid from 'app/model/voteBid.controller'\nimport template from 'app/model/template.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools(process.env.REACT_APP_ID as string),\n  reducer: {\n    createDao,\n    daos,\n    tokenHolder,\n    proposal,\n    receipt,\n    voteBid,\n    template,\n    loading,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { Provider } from 'react-redux'\nimport {\n  WalletProvider,\n  UIProvider,\n  AccountProvider,\n  PoolProvider,\n  MintProvider,\n} from '@senhub/providers'\n\nimport View from 'app/view'\nimport model from 'app/model'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <UIProvider appId={appId} antd={{ prefixCls: appId }}>\n      <WalletProvider>\n        <AccountProvider>\n          <PoolProvider>\n            <MintProvider>\n              <Provider store={model}>\n                <View />\n              </Provider>\n            </MintProvider>\n          </PoolProvider>\n        </AccountProvider>\n      </WalletProvider>\n    </UIProvider>\n  )\n}\n\nexport * from 'app/static.app'\n","import { Tag } from 'antd'\n\nexport type ProposalStatusType =\n  | 'Failed'\n  | 'Voting'\n  | 'Preparing'\n  | 'Succeeded'\n  | 'Executed'\n  | 'Loading'\n\nexport type ProposalStatusProps = {\n  status: ProposalStatusType\n}\n\nconst STATUS_COLOR: Record<string, string> = {\n  Succeeded: '#0CA1BF',\n  Failed: '#F9575E',\n  Preparing: '#D4B106',\n  Executed: '#03A326',\n  Voting: '#40A9FF',\n  Loading: '#1a1311',\n}\n\nconst ProposalStatus = ({ status }: ProposalStatusProps) => {\n  return (\n    <Tag\n      style={{ color: STATUS_COLOR[status], border: 'solid', margin: 0 }}\n      color={'transparent'}\n    >\n      {status}\n    </Tag>\n  )\n}\n\nexport default ProposalStatus\n","import { ReactNode } from 'react'\n\nimport { Col, Row, Typography } from 'antd'\n\ntype RowSpaceBetweenProps = {\n  label: string\n  value: ReactNode\n}\nconst RowSpaceBetween = ({ label = '', value = '' }: RowSpaceBetweenProps) => {\n  return (\n    <Row align=\"middle\" gutter={[24, 24]}>\n      <Col flex=\"auto\">\n        <Typography.Text type=\"secondary\">{label}</Typography.Text>\n      </Col>\n      <Col>{value}</Col>\n    </Row>\n  )\n}\n\nexport default RowSpaceBetween\n","import { ReactNode } from 'react'\n\nimport { Space, SpaceProps, Typography } from 'antd'\n\nconst RowSpaceVertical = ({\n  label = '',\n  value,\n  ...rest\n}: {\n  label?: string\n  value: ReactNode\n} & SpaceProps) => {\n  return (\n    <Space {...rest} direction=\"vertical\">\n      <Typography.Text type=\"secondary\">{label}</Typography.Text>\n      {value}\n    </Space>\n  )\n}\n\nexport default RowSpaceVertical\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import InterDAO from '@interdao/core'\nimport { Utility } from '@sentre/utility'\n\nimport SafeWallet from 'app/helpers/safeWallet'\nimport { Net, rpc } from 'shared/runtime'\n\n/**\n * Contructor\n */\ntype Conf = {\n  interDao: InterDAO\n  utility: Utility\n  fee: number\n  taxman: string\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    interDao: new InterDAO(\n      new SafeWallet(),\n      rpc,\n      'BND6UZZG2rLGtaYLioBtXFnrBtvtp5g6YXWKEc4LLqrJ',\n    ),\n    utility: new Utility(new SafeWallet(), rpc),\n    fee: 1000000, // 0.001 SOL\n    taxman: '8W6QginLcAydYyMYjxuyKQN56NzeakDE3aRFrAmocS6D',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    interDao: new InterDAO(new SafeWallet(), rpc),\n    utility: new Utility(new SafeWallet(), rpc),\n    fee: 1000000, // 0.001 SOL\n    taxman: '8W6QginLcAydYyMYjxuyKQN56NzeakDE3aRFrAmocS6D',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    interDao: new InterDAO(\n      new SafeWallet(),\n      rpc,\n      'Cf9aesANCGv35NsqtGpJ4d3M7wKrcPLiGDLUxYPtaEab',\n    ),\n    utility: new Utility(new SafeWallet(), rpc),\n    fee: 1000000, // 0.001 SOL\n    taxman: '8W6QginLcAydYyMYjxuyKQN56NzeakDE3aRFrAmocS6D',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from 'shared/runtime'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { CID } from 'ipfs-core'\n\nconst SOCIALS_MEDIA: Record<string, string> = {\n  t: 'logo-telegram',\n  twitter: 'logo-twitter',\n  facebook: 'logo-facebook',\n  discord: 'logo-discord',\n  global: 'globe',\n  medium: 'logo-medium',\n}\nexport const fileToBase64 = (\n  file: File,\n  callBack: (result: string | ArrayBuffer | null) => void,\n) => {\n  const reader = new FileReader()\n  reader.readAsDataURL(file)\n  reader.onload = async () => {\n    if (reader.result) callBack(reader.result)\n  }\n}\n\nexport const getCID = (digest: number[]) => {\n  const v0Prefix = new Uint8Array([18, 32])\n  const v0Digest = new Uint8Array(v0Prefix.length + digest?.length)\n  v0Digest.set(v0Prefix) // multicodec + length\n  v0Digest.set(digest, v0Prefix.length)\n  const cid = CID.decode(v0Digest)\n  return cid.toString()\n}\n\nexport const validURL = (value: string) => {\n  return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(\n    value,\n  )\n}\n\nexport const getIcon = (url: string) => {\n  if (!validURL(url)) return ''\n  let socialName = ''\n  const domain = new URL(url)\n  const host = domain.hostname.replace('www.', '')\n  for (const char of host) {\n    if (char === '.') break\n    socialName += char\n  }\n  const iconName = SOCIALS_MEDIA[socialName.toLowerCase()]\n  if (!iconName) return SOCIALS_MEDIA['global']\n  return iconName\n}\n","import { Web3Storage } from 'web3.storage'\n\nimport { DataLoader } from 'shared/dataloader'\n\nconst KEY =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDg4MzdCZUI2ODM5MTcwODZjQUI3OTU0MzI3ZTgwOWU1ZTlCZTc2NTEiLCJpc3MiOiJ3ZWIzLXN0b3JhZ2UiLCJpYXQiOjE2NTU0NTU5NzI5MjAsIm5hbWUiOiJTZW50cmUifQ.Jf7oQOKMrBxp5morvs7DR_As4EU9Y5WybyuvY1teFN8'\n\nclass IPFS {\n  private provider: Web3Storage\n  constructor() {\n    this.provider = new Web3Storage({\n      token: KEY,\n    })\n  }\n\n  set = async (data: object) => {\n    const file = new File([JSON.stringify(data)], 'file', {\n      type: 'application/json',\n    })\n    const cid = await this.provider.put([file])\n    return cid\n  }\n\n  get = async <T>(cid: string): Promise<T> => {\n    return DataLoader.load<T>(`ipfs^${cid}`, async () => {\n      const re = await this.provider.get(cid)\n      const file = ((await re?.files()) || [])[0]\n      const reader = new FileReader()\n      return new Promise((resolve, reject) => {\n        try {\n          if (!file) throw new Error('Cannot read empty file')\n          reader.onload = () => {\n            const contents = reader.result?.toString()\n            if (!contents) throw new Error('Cannot read empty file')\n            return resolve(JSON.parse(contents))\n          }\n          reader.readAsText(file)\n        } catch (er: any) {\n          return reject(er.message)\n        }\n      })\n    })\n  }\n}\n\nexport default IPFS\n","import { Transaction, PublicKey } from '@solana/web3.js'\nimport { AnchorWallet } from '@interdao/core'\nimport { WalletInterface } from '@senswap/sen-js'\n\nclass SafeWallet implements AnchorWallet {\n  private _publicKey: PublicKey = new PublicKey(\n    'GuestAccount11111111111111111111111111111111',\n  )\n\n  constructor() {\n    this._init()\n  }\n\n  private get _wallet(): WalletInterface {\n    return window.sentre?.wallet\n  }\n\n  private _init = async () => {\n    const address = await this._wallet?.getAddress()\n    if (address) this._publicKey = new PublicKey(address)\n  }\n\n  signTransaction = async (tx: Transaction): Promise<Transaction> => {\n    return this._wallet.signTransaction(tx)\n  }\n\n  signAllTransactions = async (txs: Transaction[]): Promise<Transaction[]> => {\n    let signedTxs: Transaction[] = []\n    for (const tx of txs) {\n      const signedTx = await this.signTransaction(tx)\n      signedTxs.push(signedTx)\n    }\n    return signedTxs\n  }\n\n  get publicKey() {\n    console.warn(\n      'This is an async getter for interface consistency. Please do not fully rely on this function.',\n    )\n    return this._publicKey\n  }\n}\n\nexport default SafeWallet\n","import { useDaoData } from 'app/hooks/dao'\nimport { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { AppDispatch } from 'app/model'\nimport { getTokenHolders } from 'app/model/tokenHolder.controller'\n\nexport const useDaoMembers = (daoAddress: string): number => {\n  const dispatch = useDispatch<AppDispatch>()\n  const daoData = useDaoData(daoAddress)\n  const [members, setMembers] = useState(0)\n\n  const fetchDaoMember = useCallback(async () => {\n    const data = await dispatch(getTokenHolders({ daoAddress })).unwrap()\n    const members = data[daoAddress] || 0\n    setMembers(members)\n  }, [daoAddress, dispatch])\n\n  useEffect(() => {\n    if (daoData) fetchDaoMember()\n  }, [daoData, fetchDaoMember])\n\n  return members\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { getDao } from 'app/model/daos.controller'\nimport { DaoData } from '@interdao/core'\n\nexport const useDaoData = (daoAddress: string): DaoData | undefined => {\n  const dispatch = useDispatch<AppDispatch>()\n  const daoData = useSelector((state: AppState) => state.daos[daoAddress])\n\n  useEffect(() => {\n    if (daoData) return\n    try {\n      dispatch(getDao({ address: daoAddress })).unwrap()\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    }\n  }, [daoAddress, daoData, dispatch])\n\n  return daoData\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { AppDispatch } from 'app/model'\nimport { getCID } from 'app/helpers'\nimport { ProposalMetaData } from 'app/view/proposal/proposalInitialization'\nimport IPFS from 'app/helpers/ipfs'\nimport { getProposal } from 'app/model/proposal.controller'\nimport { DataLoader } from 'shared/dataloader'\n\nconst useProposalMetaData = (proposalAddress: string) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const [metaData, setMetaData] = useState<ProposalMetaData>()\n  const [loading, setLoading] = useState(true)\n\n  const getMetaData = useCallback(async () => {\n    try {\n      setLoading(true)\n      const {\n        [proposalAddress]: { metadata: digest },\n      } = await DataLoader.load(`getProposal:${proposalAddress}`, () =>\n        dispatch(getProposal({ address: proposalAddress })).unwrap(),\n      )\n      if (!digest) return setMetaData(undefined)\n      const cid = getCID(digest)\n      const ipfs = new IPFS()\n      const data = await ipfs.get<any>(cid)\n      return setMetaData(data)\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }, [dispatch, proposalAddress])\n\n  useEffect(() => {\n    getMetaData()\n  }, [getMetaData])\n\n  return { metaData, loading }\n}\n\nexport default useProposalMetaData\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { ProposalData } from '@interdao/core'\nimport BN from 'bn.js'\n\nimport { ProposalStatusType } from 'app/components/proposalStatus'\n\nimport { AppState } from 'app/model'\n\nconst currentDate = Math.floor(Number(new Date()) / 1000)\n\nconst useProposalStatus = (proposalAddress: string) => {\n  const proposal = useSelector((state: AppState) => state.proposal)\n  const {\n    startDate,\n    endDate,\n    executed,\n    supply,\n    votingAgainstPower,\n    votingForPower,\n    consensusQuorum,\n    consensusMechanism,\n  } = proposal[proposalAddress] || ({} as ProposalData)\n\n  const actualSupply = useMemo(() => {\n    if (!supply) return new BN(0)\n    const mechanism = consensusMechanism\n      ? Object.keys(consensusMechanism)[0]\n      : ''\n    if (mechanism === 'stakedTokenCounter') return supply\n    return supply.mul(endDate.sub(startDate))\n  }, [consensusMechanism, endDate, startDate, supply])\n\n  const isSuccess = useMemo(() => {\n    const quorum = consensusQuorum ? Object.keys(consensusQuorum)[0] : ''\n    if (!votingAgainstPower || !votingAgainstPower) return false\n    const votingPower = votingForPower.sub(votingAgainstPower)\n\n    if (votingPower.lte(new BN(0))) return false\n    if (quorum === 'half' && votingPower.cmp(actualSupply.div(new BN(2))) === 1)\n      return true\n    if (\n      quorum === 'oneThird' &&\n      votingPower.cmp(actualSupply.div(new BN(3))) === 1\n    )\n      return true\n    if (\n      quorum === 'twoThird' &&\n      votingPower.cmp(actualSupply.mul(new BN(2)).div(new BN(3))) === 1\n    )\n      return true\n    return false\n  }, [actualSupply, consensusQuorum, votingAgainstPower, votingForPower])\n\n  const status: ProposalStatusType = useMemo(() => {\n    if (!proposal) return 'Loading'\n    if (currentDate < Number(startDate)) return 'Preparing'\n    if (currentDate < Number(endDate)) return 'Voting'\n    if (executed) return 'Executed'\n    if (isSuccess) return 'Succeeded'\n    return 'Failed'\n  }, [endDate, executed, isSuccess, proposal, startDate])\n\n  return { status, isSuccess, actualSupply }\n}\n\nexport default useProposalStatus\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\nimport { DaoData, DAO_DISCRIMINATOR } from '@interdao/core'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type DaoState = Record<string, DaoData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'dao'\nconst initialState: DaoState = {}\n\n/**\n * Actions\n */\n\nexport const getDaos = createAsyncThunk(`${NAME}/getDaos`, async () => {\n  const accounts = await interDao.program.account.dao.all([\n    {\n      memcmp: {\n        offset: 0,\n        bytes: DAO_DISCRIMINATOR,\n      },\n    },\n  ])\n  let bulk: Record<string, DaoData> = {}\n  accounts.forEach(({ publicKey, account }) => {\n    const address = publicKey.toBase58()\n    bulk[address] = account as any\n  })\n  return bulk\n})\n\nexport const getDao = createAsyncThunk<\n  Partial<DaoState>,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getDao`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    daos: { [address]: data },\n  } = getState()\n  if (data && !force) return { [address]: data }\n\n  const daoData: DaoData = await interDao.getDaoData(address)\n  return {\n    [address]: daoData,\n  }\n})\n\nexport const upsetDao = createAsyncThunk<\n  Partial<DaoState>,\n  { address: string; data: DaoData },\n  { state: any }\n>(`${NAME}/upsetDao`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return {\n    [address]: { ...data },\n  }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getDaos.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getDao.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetDao.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { ProposalData } from '@interdao/core'\nimport { account } from '@senswap/sen-js'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type ProposalState = Record<string, ProposalData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'proposal'\nconst initialState: ProposalState = {}\n\n/**\n * Actions\n */\n\nexport const getProposals = createAsyncThunk(\n  `${NAME}/getProposals`,\n  async () => {\n    const { account } = interDao.program\n    let bulk: ProposalState = {}\n\n    const proposals = await account.proposal.all()\n    for (const { publicKey, account: proposalData } of proposals) {\n      const address = publicKey.toBase58()\n      bulk[address] = proposalData as any\n    }\n    return bulk\n  },\n)\n\nexport const getProposal = createAsyncThunk<\n  ProposalState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getProposal`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    proposal: { [address]: data },\n  } = getState()\n  if (data && !force) return { [address]: data }\n  const raw = await interDao.getProposalData(address)\n  return { [address]: raw }\n})\n\nexport const upsetProposal = createAsyncThunk<\n  ProposalState,\n  { address: string; data: ProposalData },\n  { state: any }\n>(`${NAME}/upsetProposal`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteProposal = createAsyncThunk(\n  `${NAME}/deleteProposal`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getProposals.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { TemplateNames } from 'app/templates'\n\nimport { ProposalReturnType } from 'app/view/templates/types'\n\n/**\n * Interface & Utility\n */\n\nexport type TemplateState = {\n  visible: boolean\n  tx?: ProposalReturnType\n  templateName?: TemplateNames\n  data: Record<string, string>\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'template'\nconst initialState: TemplateState = {\n  visible: false,\n  tx: undefined,\n  templateName: undefined,\n  data: {},\n}\n\n/**\n * Actions\n */\n\nexport const setVisible = createAsyncThunk(\n  `${NAME}/setVisible`,\n  async (visible: boolean) => {\n    return { visible }\n  },\n)\n\nexport const setTx = createAsyncThunk(\n  `${NAME}/setTx`,\n  async (tx?: ProposalReturnType) => {\n    return { tx }\n  },\n)\n\nexport const clearTx = createAsyncThunk(`${NAME}/clearTx`, async () => {\n  return { tx: undefined }\n})\n\nexport const setTemplateName = createAsyncThunk(\n  `${NAME}/setTemplateName`,\n  async (name?: TemplateNames) => {\n    return { templateName: name }\n  },\n)\n\nexport const setTemplateData = createAsyncThunk(\n  `${NAME}/setTemplateData`,\n  async (templateData: Record<string, string>) => {\n    return templateData\n  },\n)\n\nexport const clearTemplate = createAsyncThunk(\n  `${NAME}/clearTemplate`,\n  async () => {\n    return { visible: false, tx: undefined, templateName: undefined, data: {} }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setTemplateData.fulfilled,\n        (state, { payload }) => void Object.assign(state.data, payload),\n      )\n      .addCase(\n        setVisible.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setTx.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setTemplateName.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        clearTx.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        clearTemplate.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\nimport { utils } from '@project-serum/anchor'\n\nimport configs from 'app/configs'\nimport { DataLoader } from 'shared/dataloader'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\ntype TokenHolderState = Record<string, number>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'tokenHolder'\nconst initialState: TokenHolderState = {}\n\n/**\n * Actions\n */\n\nexport const getTokenHolders = createAsyncThunk<\n  Partial<TokenHolderState>,\n  { daoAddress: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getTokenHolders`, async ({ daoAddress, force }, { getState }) => {\n  if (!account.isAddress(daoAddress)) throw new Error('Invalid address')\n  const {\n    daos: {\n      [daoAddress]: { mint },\n    },\n    tokenHolder: { [daoAddress]: amountHolder },\n  } = getState()\n\n  const mintAddress = mint.toBase58()\n  if (!account.isAddress(mintAddress)) return {}\n  if (amountHolder && !force) return { [daoAddress]: amountHolder }\n  const {\n    provider: { connection },\n  } = interDao.program\n\n  const accounts = await DataLoader.load(\n    'getTokenHolders' + mintAddress,\n    () => {\n      return connection.getProgramAccounts(utils.token.TOKEN_PROGRAM_ID, {\n        filters: [\n          { dataSize: 165 },\n          { memcmp: { bytes: mintAddress, offset: 0 } },\n        ],\n      })\n    },\n  )\n  return { [daoAddress]: accounts.length }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      getTokenHolders.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { RulesData, RulesName } from './core/rule'\n\n// Config\nexport enum TemplateNames {\n  'SplTransfer' = 'spl-transfer',\n  'SplApprove' = 'spl-approve',\n  'BlankTemplate' = 'blank',\n}\n\n// Component Type\nexport type PropsCreateComponent = {\n  daoAddress: string\n}\n// System type\nexport type TemplateIdl = {\n  name: TemplateNames\n  accounts: (TemplateAccount | TemplateAccountWithRule)[]\n  args: (TemplateArg | TemplateArgWithRule)[]\n  programId: string\n}\n\nexport type TemplateAccount = {\n  name: string\n  isMut: boolean\n  isSigner: boolean\n  isMaster: boolean\n}\nexport type TemplateAccountWithRule = TemplateAccount & {\n  rule: {\n    name: RulesName\n    configs: RulesData[TemplateAccountWithRule['rule']['name']]\n  }\n}\nexport const isTemplateAccountWithRule = (\n  idlAccount: TemplateAccount | TemplateAccountWithRule,\n): idlAccount is TemplateAccountWithRule => {\n  // @ts-ignore\n  return idlAccount.rule !== undefined\n}\n\nexport type TemplateArg = {\n  name: string\n  type: 'u8' | 'u64' | 'u32'\n}\nexport type TemplateArgWithRule = TemplateArg & {\n  rule: {\n    name: RulesName\n    configs: RulesData[TemplateAccountWithRule['rule']['name']]\n  }\n}\nexport const isTemplateArgWithRule = (\n  idlArg: TemplateArg | TemplateArgWithRule,\n): idlArg is TemplateArgWithRule => {\n  // @ts-ignore\n  return idlArg.rule !== undefined\n}\n","import { ReactNode, useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nimport { Avatar } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nconst DEFAULT_AVATARS: Array<string | undefined> = [undefined]\n\nexport type MintAvatarProps = {\n  mintAddress: string\n  size?: number\n  icon?: ReactNode\n  reversed?: boolean\n}\n\n/**\n * Mint/Token avatar, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param size - Avatar size. Default 24px.\n * @param icon - Fallback icon for unknown token\n * @param reversed - (Optional) The default LP token avatar is A-B. The reversed is to change it to B-A\n * @returns name\n */\nconst MintAvatar = ({\n  mintAddress,\n  size = 24,\n  icon = <IonIcon name=\"diamond-outline\" />,\n  reversed = false,\n  ...props\n}: MintAvatarProps) => {\n  const [avatars, setAvatars] = useState(DEFAULT_AVATARS)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveAvatar = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.logoURI) return token.logoURI\n      return undefined\n    },\n    [tokenProvider],\n  )\n\n  const deriveAvatars = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setAvatars(DEFAULT_AVATARS)\n    // LP mint\n    const poolData = Object.values(pools || {}).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const avatars = await Promise.all([mint_a, mint_b].map(deriveAvatar))\n      if (reversed) avatars.reverse()\n      return setAvatars(avatars)\n    }\n    // Normal mint\n    const avatar = await deriveAvatar(mintAddress)\n    return setAvatars([avatar])\n  }, [mintAddress, reversed, deriveAvatar, pools])\n\n  useEffect(() => {\n    deriveAvatars()\n  }, [deriveAvatars])\n\n  if (avatars.length === 1)\n    return (\n      <Avatar\n        src={avatars[0]}\n        size={size}\n        style={{ backgroundColor: '#2D3355', border: 'none' }}\n        {...props}\n      >\n        {icon}\n      </Avatar>\n    )\n  return (\n    <Avatar.Group style={{ display: 'block', whiteSpace: 'nowrap' }} {...props}>\n      {avatars.map((avatar, i) => (\n        <Avatar\n          key={i}\n          src={avatar}\n          size={size}\n          style={{ backgroundColor: '#2D3355', border: 'none' }}\n        >\n          {icon}\n        </Avatar>\n      ))}\n    </Avatar.Group>\n  )\n}\n\nexport default MintAvatar\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nconst DEFAULT_NAME = 'Unknown Token'\n\n/**\n * Mint/Token name, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param separator - (Optional) In case of LP tokens, the names is combined by 2 token names. The separator is to separate them.\n * @param reversed - (Optional) The default LP token names is A-B. The reversed is to change it to B-A\n * @returns name\n */\nconst MintName = ({\n  mintAddress,\n  separator = ' • ',\n  reversed = false,\n}: {\n  mintAddress: string\n  separator?: string\n  reversed?: boolean\n}) => {\n  const [name, setName] = useState(DEFAULT_NAME)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveName = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.name) return token.name\n      return DEFAULT_NAME\n    },\n    [tokenProvider],\n  )\n\n  const deriveNames = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setName(DEFAULT_NAME)\n    // LP mint\n    const poolData = Object.values(pools || {}).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const names = await Promise.all([mint_a, mint_b].map(deriveName))\n      if (reversed) names.reverse()\n      return setName(`${names.join(separator)} LP`)\n    }\n    // Normal mint\n    const name = await deriveName(mintAddress)\n    return setName(name)\n  }, [mintAddress, reversed, deriveName, pools, separator])\n\n  useEffect(() => {\n    deriveNames()\n  }, [deriveNames])\n\n  return <span>{name}</span>\n}\n\nexport default MintName\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nconst DEFAULT_SYMBOL = 'TOKN'\n\n/**\n * Mint/Token symbol, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param separator - (Optional) In case of LP tokens, the symbols is combined by 2 token symbols. The separator is to separate them.\n * @param reversed - (Optional) The default LP token symbol is A-B. The reversed is to change it to B-A\n * @returns symbol\n */\nconst MintSymbol = ({\n  mintAddress,\n  separator = ' • ',\n  reversed = false,\n}: {\n  mintAddress: string\n  separator?: string\n  reversed?: boolean\n}) => {\n  const [symbol, setSymbol] = useState(DEFAULT_SYMBOL)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveSymbol = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.symbol) return token.symbol\n      return address.substring(0, 4)\n    },\n    [tokenProvider],\n  )\n\n  const deriveSymbols = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setSymbol(DEFAULT_SYMBOL)\n    // LP mint\n    const poolData = Object.values(pools || {}).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const symbols = await Promise.all([mint_a, mint_b].map(deriveSymbol))\n      if (reversed) symbols.reverse()\n      return setSymbol(symbols.join(separator))\n    }\n    // Normal mint\n    const symbol = await deriveSymbol(mintAddress)\n    return setSymbol(symbol)\n  }, [mintAddress, reversed, deriveSymbol, pools, separator])\n\n  useEffect(() => {\n    deriveSymbols()\n  }, [deriveSymbols])\n\n  return <span>{symbol}</span>\n}\n\nexport default MintSymbol\n","import { Card, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport { MintAvatar } from 'shared/antd/mint'\nimport MintSymbol from '../mintSymbol'\n\nimport { randomColor } from 'shared/util'\n\nimport './index.less'\n\nexport type MintTagProps = {\n  mintAddress: string\n  onClick?: (mintAddress: string) => void\n  active?: boolean\n}\n\nconst MintTag = ({\n  mintAddress,\n  onClick = () => {},\n  active = false,\n}: MintTagProps) => {\n  return (\n    <Card\n      bodyStyle={{\n        padding: 8,\n        cursor: 'pointer',\n      }}\n      style={{\n        borderRadius: 8,\n        backgroundColor: randomColor(mintAddress, 0.2),\n      }}\n      className=\"mint-tag\"\n      bordered={Boolean(active)}\n      onClick={() => onClick(mintAddress)}\n    >\n      <Space size={8} style={{ width: '100%', justifyContent: 'center' }}>\n        <MintAvatar mintAddress={mintAddress} />\n        <Typography.Text\n          ellipsis={true}\n          style={{ color: randomColor(mintAddress) }}\n        >\n          <MintSymbol mintAddress={mintAddress} />\n        </Typography.Text>\n        {active && <IonIcon name=\"checkmark-outline\" />}\n      </Space>\n    </Card>\n  )\n}\nexport default MintTag\n","import { Card, Col, Row, Space, Typography } from 'antd'\nimport { MintAvatar, MintName, MintSymbol } from 'shared/antd/mint'\n\nexport type MintSelectionProps = {\n  mintAddress: string\n  onClick?: (mintAddress: string) => void\n}\n\nconst MintCard = ({ mintAddress, onClick = () => {} }: MintSelectionProps) => {\n  return (\n    <Card\n      bodyStyle={{ padding: 8 }}\n      style={{ boxShadow: 'unset', cursor: 'pointer' }}\n      bordered={false}\n      onClick={() => onClick(mintAddress)}\n    >\n      <Row gutter={[16, 16]} align=\"middle\">\n        <Col>\n          <MintAvatar mintAddress={mintAddress} size={36} />\n        </Col>\n        <Col>\n          <Space direction=\"vertical\" size={0}>\n            <Typography.Text>\n              <MintSymbol mintAddress={mintAddress} />\n            </Typography.Text>\n            <Typography.Text type=\"secondary\" className=\"caption\">\n              <MintName mintAddress={mintAddress} />\n            </Typography.Text>\n          </Space>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default MintCard\n","import { Fragment, useEffect } from 'react'\nimport LazyLoad from '@sentre/react-lazyload'\n\ntype PropsLoadMore = { callback: () => void }\n\nconst LoadMore = ({ callback }: PropsLoadMore) => {\n  useEffect(() => {\n    callback()\n  }, [callback])\n\n  return <Fragment />\n}\nconst WrapLoadMore = (props: PropsLoadMore) => {\n  return (\n    <LazyLoad overflow>\n      <LoadMore {...props} />\n    </LazyLoad>\n  )\n}\nexport default WrapLoadMore\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\n\nexport const useAllMintAddresses = () => {\n  const [allMintAddresses, setAllMintAddresses] = useState<string[]>([])\n  const { tokenProvider } = useMint()\n\n  const getRecommendedMintAddresses = useCallback(async () => {\n    const allMintAddresses = (await tokenProvider.all()).map(\n      ({ address }) => address,\n    )\n    const addresses = allMintAddresses.filter((mintAddress) =>\n      allMintAddresses.includes(mintAddress),\n    )\n    return setAllMintAddresses(addresses)\n  }, [tokenProvider])\n\n  useEffect(() => {\n    getRecommendedMintAddresses()\n  }, [getRecommendedMintAddresses])\n\n  return allMintAddresses\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useAccount } from '@senhub/providers'\n\nexport const useSortMints = (mints: string[]) => {\n  const [sortedMints, setSortedMints] = useState<string[]>([])\n  const { accounts } = useAccount()\n\n  const mapMintAmounts = useMemo(() => {\n    const mapMints: Record<string, number> = {}\n    for (const account of Object.values(accounts)) {\n      mapMints[account.mint] = Number(account.amount.toString())\n    }\n    return mapMints\n  }, [accounts])\n\n  const sortMints = useCallback(\n    async (mintAddresses: string[]) => {\n      const sortedMints = mintAddresses.sort((a, b) => {\n        let amountA = mapMintAmounts[a] || -1\n        let amountB = mapMintAmounts[b] || -1\n        return Number(amountB) - Number(amountA)\n      })\n      return setSortedMints(sortedMints)\n    },\n    [mapMintAmounts],\n  )\n  useEffect(() => {\n    sortMints(mints)\n  }, [mints, sortMints])\n\n  return { sortedMints, sortMints }\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nimport { useAllMintAddresses } from './useAllMintAddresses'\nimport { useSortMints } from 'shared/hooks/useSortMints'\nimport { net } from 'shared/runtime'\nimport localStorage from 'shared/storage'\n\nconst LIMIT_ITEM = 8\nconst LOCAL_STORAGE_ID = `${net}:selected_mints`\n\nexport const useRecommendedMints = () => {\n  const [recommendedMints, setRecommendedMints] = useState<string[]>([])\n  const allMintAddresses = useAllMintAddresses()\n  const { sortedMints } = useSortMints(allMintAddresses)\n\n  const getRecommendedMints = useCallback(async () => {\n    let mints: string[] = localStorage.get(LOCAL_STORAGE_ID) || []\n\n    for (const mint of sortedMints) {\n      if (mints.length >= LIMIT_ITEM) break\n      if (mints.includes(mint)) continue\n      mints.push(mint)\n    }\n    return setRecommendedMints(mints.slice(0, LIMIT_ITEM))\n  }, [sortedMints])\n\n  const addRecommendMint = useCallback(\n    async (mintAddress: string) => {\n      const mints = recommendedMints.filter((mint) => mint !== mintAddress)\n      const newMints = [mintAddress, ...mints].slice(0, LIMIT_ITEM)\n      localStorage.set(LOCAL_STORAGE_ID, newMints)\n\n      return setRecommendedMints(newMints)\n    },\n    [recommendedMints],\n  )\n\n  useEffect(() => {\n    getRecommendedMints()\n  }, [getRecommendedMints])\n\n  return {\n    recommendedMints,\n    addRecommendMint,\n  }\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\n\nimport { useAllMintAddresses } from './useAllMintAddresses'\n\nlet searching: NodeJS.Timeout\n\nexport const useSearchedMints = (keyword: string = '', limit: number) => {\n  const [loading, setLoading] = useState(false)\n  const [searchedMints, setSearchedMints] = useState<string[]>([])\n  const { tokenProvider } = useMint()\n  const mints = useAllMintAddresses()\n\n  const search = useCallback(async () => {\n    if (!keyword) {\n      setLoading(false)\n      return setSearchedMints(mints)\n    }\n    if (searching) clearTimeout(searching)\n    setLoading(true)\n    searching = setTimeout(async () => {\n      const addresses = (await tokenProvider.find(keyword, limit)).map(\n        ({ address }) => address,\n      )\n      setLoading(false)\n      return setSearchedMints(addresses)\n    }, 500)\n  }, [keyword, limit, mints, tokenProvider])\n\n  useEffect(() => {\n    search()\n  }, [search])\n\n  return { searchedMints, loading }\n}\n","import {\n  CSSProperties,\n  Fragment,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react'\nimport LazyLoad from '@sentre/react-lazyload'\n\nimport { Button, Empty, Col, Input, Modal, Row, Space } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport MintTag from './mintTag'\nimport MintCard from './mintCard'\nimport LoadMore from './loadMore'\n\nimport { useRecommendedMints } from './hooks/useRecommendedMints'\nimport { useSearchedMints } from './hooks/useSearchedMints'\nimport { useSortMints } from 'shared/hooks/useSortMints'\n\nconst LIMIT = 20\nconst AMOUNT_BEFORE_LOAD_MORE = 5\n\nexport type MintSelectionProps = {\n  value?: string\n  onChange?: (value: string) => void\n  style?: CSSProperties\n  disabled?: boolean\n}\n\nconst MintSelection = ({\n  value = '',\n  onChange = () => {},\n  style = {},\n  disabled = false,\n}: MintSelectionProps) => {\n  const [visible, setVisible] = useState(false)\n  const [keyword, setKeyword] = useState('')\n  const [offset, setOffset] = useState(LIMIT)\n  const { recommendedMints, addRecommendMint } = useRecommendedMints()\n  const { searchedMints, loading } = useSearchedMints(keyword, 0)\n  const { sortedMints } = useSortMints(searchedMints)\n\n  const onSelect = useCallback(\n    (mintAddress: string) => {\n      setVisible(false)\n      onChange(mintAddress)\n      addRecommendMint(mintAddress)\n    },\n    [onChange, addRecommendMint],\n  )\n\n  useEffect(() => {\n    setOffset(LIMIT)\n    const list = document.getElementById('sentre-token-selection-list')\n    if (list) list.scrollTop = 0\n  }, [keyword, visible])\n\n  useEffect(() => {\n    if (!visible) setKeyword('')\n  }, [visible])\n\n  return (\n    <Fragment>\n      <Button\n        type=\"text\"\n        onClick={() => setVisible(true)}\n        style={{ padding: 4, ...style }}\n        disabled={disabled}\n      >\n        <Space>\n          <MintAvatar mintAddress={value} />\n          <MintSymbol mintAddress={value} />\n          <IonIcon name=\"chevron-down-outline\" />\n        </Space>\n      </Button>\n      <Modal\n        visible={visible}\n        onCancel={() => setVisible(false)}\n        footer={null}\n        closable={false}\n        centered\n        className=\"mint-select-modal\"\n      >\n        <Row gutter={[32, 32]}>\n          <Col span={24}>\n            <Input\n              placeholder=\"Search token symbol, name, address, ...\"\n              suffix={\n                <Button\n                  type=\"text\"\n                  style={{ marginRight: -7 }}\n                  icon={\n                    <IonIcon\n                      name={keyword ? 'close-outline' : 'search-outline'}\n                    />\n                  }\n                  onClick={keyword ? () => setKeyword('') : () => {}}\n                  loading={loading}\n                />\n              }\n              value={keyword}\n              onChange={(e) => setKeyword(e.target.value || '')}\n            />\n          </Col>\n          {!keyword.length && (\n            <Col span={24}>\n              <Row gutter={[8, 8]}>\n                {recommendedMints.map((mintAddress) => (\n                  <Col xs={12} sm={8} md={6} key={mintAddress}>\n                    <MintTag\n                      mintAddress={mintAddress}\n                      onClick={onSelect}\n                      active={mintAddress === value}\n                    />\n                  </Col>\n                ))}\n              </Row>\n            </Col>\n          )}\n          <Col span={24}>\n            <Row\n              gutter={[8, 8]}\n              style={{ maxHeight: 360 }}\n              className=\"scrollbar\"\n              id=\"sentre-token-selection-list\"\n              justify=\"center\"\n            >\n              {sortedMints.length ? (\n                sortedMints.slice(0, offset).map((mintAddress, index) => (\n                  <Col span={24} key={mintAddress}>\n                    <LazyLoad height={60} overflow throttle={500}>\n                      <MintCard mintAddress={mintAddress} onClick={onSelect} />\n                    </LazyLoad>\n                    {index === offset - AMOUNT_BEFORE_LOAD_MORE && (\n                      <LoadMore callback={() => setOffset(offset + LIMIT)} />\n                    )}\n                  </Col>\n                ))\n              ) : (\n                <Col>\n                  <Empty style={{ padding: 40 }} />\n                </Col>\n              )}\n            </Row>\n          </Col>\n        </Row>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default MintSelection\n","import { ChangeEvent, useState, forwardRef, useCallback, useRef } from 'react'\n\nimport { Input, Tooltip, Space, InputProps } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nlet timeoutId: ReturnType<typeof setTimeout> | undefined\n\n/**\n * Numeric Input\n * - Check balance based on the max\n * - Only accept numeric characters\n * @remarks The props of input follows the same as https://ant.design/components/input/#API. Extra & Overrided props\n * @param max - Maximum\n * @param onValue - A triggerred function if a valid number\n */\nconst NumericInput = forwardRef(\n  (\n    {\n      max,\n      onValue = () => {},\n      onChange = () => {},\n      ...props\n    }: InputProps & {\n      onValue?: (val: string) => void\n      max?: string | number\n    },\n    ref: any,\n  ) => {\n    const [error, setError] = useState('')\n    const [cursor, setCursor] = useState<number | null>(null)\n    const innerRef = useRef(ref)\n\n    // Handle amount\n    const onAmount = useCallback(\n      (val: string) => {\n        const onError = (er: string) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId)\n            timeoutId = undefined\n          }\n          setError(er)\n          timeoutId = setTimeout(() => setError(''), 500)\n        }\n        const reg = /^\\d*(\\.\\d*)?$/\n        if (!reg.test(val)) return onError('Invalid character')\n        if (max && parseFloat(val) > parseFloat(max.toString()))\n          return onError('Not enough balance')\n        return onValue(val)\n      },\n      [max, onValue],\n    )\n\n    // Handle cursor jumping\n    // To prevent autofocus on mobile, we must strictly check cursor different from null\n    if (cursor !== null) innerRef?.current?.setSelectionRange(cursor, cursor)\n\n    return (\n      <Tooltip\n        title={\n          <Space>\n            <IonIcon name=\"warning\" />\n            {error}\n          </Space>\n        }\n        visible={!!error}\n      >\n        <Input\n          {...props}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => {\n            onChange(e)\n            setCursor(e.target.selectionStart)\n            onAmount(e.target.value || '')\n          }}\n          ref={innerRef}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nexport default NumericInput\n","export type LimitConfig = {\n  calls: number\n  time: number\n}\n\nexport type CacheConfig = {\n  ttl: number // millisecond\n}\n\nexport type SingleFlightConfig = {\n  limit?: LimitConfig\n  cache?: CacheConfig\n}\n\n// 10 request per 1 second\nexport const DEFAULT_LIMIT_CONFIG: LimitConfig = {\n  calls: 10,\n  time: 1000,\n}\n\n// 10 request per 1 second\nexport const DEFAULT_CACHE_CONFIG: CacheConfig = {\n  ttl: 30000,\n}\n\nexport const DEFAULT_SINGLE_FLIGHT_CONFIG: SingleFlightConfig = {\n  limit : DEFAULT_LIMIT_CONFIG,\n  cache: DEFAULT_CACHE_CONFIG\n}","export interface IRequestQueue {\n  key: string\n  add(resolve: any, reject: any): void\n  resolves(data: any): void\n  rejects(error: any): void\n}\n\nexport class RequestQueue implements IRequestQueue {\n  key = ''\n  private resolveQueue: any[] = []\n  private rejectQueue: any[] = []\n  constructor(key: string) {\n    this.key = key\n  }\n\n  add(resolve: any, reject: any) {\n    this.resolveQueue.push(resolve)\n    this.rejectQueue.push(reject)\n  }\n\n  resolves(data: any) {\n    while (this.resolveQueue.length > 0) {\n      const resolve = this.resolveQueue.shift()\n      resolve(data)\n    }\n  }\n\n  rejects(error: any) {\n    while (this.rejectQueue.length > 0) {\n      const reject = this.rejectQueue.shift()\n      reject(error)\n    }\n  }\n}\n","import { DEFAULT_CACHE_CONFIG } from './constant'\nimport { CacheConfig } from './constant'\n\nexport class SingleFlightCache {\n  private static mapCache = new Map<string, any>()\n\n  static set(\n    key: string,\n    value: any,\n    configs: CacheConfig = DEFAULT_CACHE_CONFIG,\n  ) {\n    this.mapCache.set(key, value)\n    setTimeout(() => {\n      this.mapCache.delete(key)\n    }, configs.ttl)\n  }\n\n  static get(key: string) {\n    return this.mapCache.get(key)\n  }\n}\n","import { DEFAULT_SINGLE_FLIGHT_CONFIG, SingleFlightConfig } from './constant'\n\nimport { IRequestQueue, RequestQueue } from './request'\nimport { SingleFlightCache } from './cache'\n\nexport class DataLoader {\n  static mapInstance = new Map<string, SingleFlight>()\n\n  private static getSingleFlight(configs: SingleFlightConfig): SingleFlight {\n    const instanceKey = JSON.stringify(configs)\n    if (this.mapInstance.has(instanceKey)) {\n      const instance = this.mapInstance.get(instanceKey)\n      if (instance) return instance\n    }\n\n    let newSingleFlight = new SingleFlight(configs)\n    this.mapInstance.set(instanceKey, newSingleFlight)\n    return newSingleFlight\n  }\n\n  static async load<T>(\n    requestKey: string | object,\n    callback: () => Promise<T>,\n    configs: SingleFlightConfig = {},\n  ): Promise<T> {\n    if (typeof requestKey === 'object') requestKey = JSON.stringify(requestKey)\n\n    let singleFlight = DataLoader.getSingleFlight(configs)\n    DataLoader.mapInstance.set(requestKey, singleFlight)\n    const newRequest = new RequestQueue(requestKey)\n    return singleFlight.load<T>(newRequest, callback)\n  }\n}\n\nclass SingleFlight {\n  private config: SingleFlightConfig\n  private intervalRequest: any\n  private timeLogs: number[] = []\n\n  private mapRequestCalling = new Map<string, IRequestQueue>()\n  private requestQueue: IRequestQueue[] = []\n\n  constructor(configs: SingleFlightConfig) {\n    this.config = Object.assign(DEFAULT_SINGLE_FLIGHT_CONFIG, configs)\n  }\n\n  async load<T>(newRequest: IRequestQueue, callback: () => Promise<T>) {\n    const cacheData = SingleFlightCache.get(newRequest.key)\n    if (cacheData) return Promise.resolve(cacheData)\n\n    let isFetch = false\n    let request = this.mapRequestCalling.get(newRequest.key)\n    if (!request) {\n      request = newRequest\n      isFetch = true\n      this.mapRequestCalling.set(request.key, request)\n    }\n\n    return new Promise((resolve, reject) => {\n      if (!request) return reject('Not found request!')\n      request.add(resolve, reject)\n      if (isFetch) {\n        this.fetch<T>(request, callback)\n      }\n    })\n  }\n\n  private fetch<T>(request: IRequestQueue, callback: () => Promise<T>) {\n    if (!this.validateLimit()) {\n      return this.addRequestQueue(request, callback)\n    }\n    this.createTimeLogs()\n\n    callback()\n      .then((response) => {\n        SingleFlightCache.set(request.key, response, this.config.cache)\n        request.resolves(response)\n      })\n      .catch((error) => {\n        request.rejects(error)\n      })\n      .finally(() => {\n        this.mapRequestCalling.delete(request.key)\n        this.fetchRequestQueue(callback)\n      })\n  }\n\n  private fetchRequestQueue(callback: () => Promise<any>) {\n    if (!this.validateLimit()) return\n    const request = this.requestQueue.shift()\n    if (request) this.load(request, callback)\n\n    if (this.requestQueue.length === 0 && this.intervalRequest) {\n      clearInterval(this.intervalRequest)\n    }\n  }\n\n  private addRequestQueue(\n    request: IRequestQueue,\n    callback: () => Promise<any>,\n  ) {\n    this.requestQueue.push(request)\n    this.intervalRequest = setInterval(() => {\n      this.fetchRequestQueue(callback)\n    }, this.config.limit?.time)\n  }\n\n  private validateLimit(): boolean {\n    return true\n  }\n\n  private createTimeLogs() {\n    if (!this.config.limit) return\n\n    const now = new Date().getTime()\n    this.timeLogs.push(now)\n    if (this.timeLogs.length > this.config.limit?.calls) {\n      this.timeLogs.shift()\n    }\n  }\n}\n","import localForage from 'localforage'\nimport { account } from '@senswap/sen-js'\nimport IPFS from './ipfs'\n\n/**\n * Persistent Database\n */\nclass PDB {\n  readonly dbName: string\n  private driver: any\n  private ipfs: IPFS\n\n  constructor(walletAddress: string) {\n    if (!account.isAddress(walletAddress)) throw new Error('Invalid address')\n    this.dbName = walletAddress\n    this.driver = [localForage.WEBSQL, localForage.LOCALSTORAGE]\n    this.ipfs = new IPFS()\n  }\n\n  /**\n   * Local\n   */\n\n  createInstance = (appId: string): LocalForage => {\n    return localForage.createInstance({\n      driver: this.driver,\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  dropInstance = async (appId: string): Promise<void> => {\n    const instance = this.createInstance(appId)\n    await instance.clear()\n    return await localForage.dropInstance({\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  all = async (): Promise<any> => {\n    let data: any = {}\n    const appIds = (\n      ((await this.createInstance('sentre').getItem('appIds')) as string[]) ||\n      []\n    )\n      .flat()\n      .concat(['sentre'])\n    for (const appId of appIds) {\n      data[appId] = {}\n      const instance = this.createInstance(appId)\n      await instance.iterate((value: string, key: string) => {\n        data[appId][key] = value\n      })\n    }\n    return data\n  }\n\n  /**\n   * Cloud\n   */\n\n  fetch = async (cid: string) => {\n    return await this.ipfs.get(cid)\n  }\n\n  backup = async () => {\n    const data = await this.all()\n    return await this.ipfs.set(data)\n  }\n\n  restore = async (cid: string) => {\n    // Download data\n    const data = await this.fetch(cid)\n    // Apply to storage\n    for (const appId in data) {\n      const instance = await this.createInstance(appId)\n      for (const key in data[appId]) {\n        const value = data[appId][key]\n        await instance.setItem(key, value)\n      }\n    }\n    return data\n  }\n}\n\nexport default PDB\n\n/**\n * High abtraction pdb for app\n */\nexport const createPDB = (walletArress: string, appId: string) => {\n  return account.isAddress(walletArress)\n    ? new PDB(walletArress).createInstance(appId)\n    : undefined\n}\n","import { create, isIPFS } from 'ipfs-core'\nimport { asyncWait } from 'shared/util'\n\nconst GET_CID_TIMEOUT = 15000\nclass IPFS {\n  private _ipfs: any = async () => {\n    try {\n      if (!window.ipfs) window.ipfs = await create()\n      return window.ipfs\n    } catch (er) {\n      await asyncWait(500)\n      return await this._ipfs()\n    }\n  }\n\n  static isCID = (cid: string | undefined | null): boolean => {\n    try {\n      if (!cid) return false\n      return isIPFS.multihash(cid)\n    } catch (er) {\n      return false\n    }\n  }\n\n  get = async (cid: string) => {\n    if (!IPFS.isCID(cid)) throw new Error('Invalid CID')\n    try {\n      const ipfs = await this._ipfs()\n      const stream = await ipfs.cat(cid, { timeout: GET_CID_TIMEOUT })\n      let raw = ''\n      for await (const chunk of stream) raw += Buffer.from(chunk).toString()\n      const data = JSON.parse(raw)\n      return data\n    } catch (err) {\n      // notthing\n    }\n  }\n\n  set = async (data: object): Promise<string> => {\n    if (!data) throw new Error('Empty data')\n    const raw = JSON.stringify(data)\n    const ipfs = await this._ipfs()\n    const { cid } = await ipfs.add(raw)\n    return cid.toString()\n  }\n}\n\nexport default IPFS\n","import storage from './storage'\n\n/**\n * Environment\n */\nconst getEnv = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'development':\n      return 'development'\n    case 'staging':\n      return 'staging'\n    case 'production':\n      return 'production'\n    default:\n      return 'development'\n  }\n}\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = getEnv()\n\n/**\n * Network\n */\nconst getNetwork = () => {\n  switch (storage.get('network')) {\n    case 'devnet':\n      return 'devnet'\n    case 'testnet':\n      return 'testnet'\n    case 'mainnet':\n      return 'mainnet'\n    default:\n      return 'mainnet'\n  }\n}\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = getNetwork()\n\nexport const onSwitchNetwork = (value: Net) => {\n  storage.set('network', value)\n  return window.location.reload()\n}\n\n/**\n * Chain ID\n */\nconst getChainId = () => {\n  switch (net) {\n    case 'devnet':\n      return 103\n    case 'testnet':\n      return 102\n    case 'mainnet':\n      return 101\n    default:\n      return 101\n  }\n}\nexport type ChainId = 101 | 102 | 103\nexport const chainId: ChainId = getChainId()\n\n/**\n * RPC Node\n */\nconst CLUSTERS: Record<Net, string> = {\n  devnet: 'https://api.devnet.solana.com',\n  testnet: 'https://api.testnet.solana.com',\n  mainnet:\n    env === 'development'\n      ? 'https://api.mainnet-beta.solana.com'\n      : 'https://solitary-autumn-water.solana-mainnet.quiknode.pro/dcbac9d444818a20ac583541dec35b44c6840888/',\n}\nexport const rpc: string = CLUSTERS[net]\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  try {\n    if (!value) return null\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n","import { account, utils } from '@senswap/sen-js'\nimport numbro from 'numbro'\n\nimport { net } from 'shared/runtime'\nimport { DataLoader } from './dataloader'\n\n/**\n * Delay by async/await\n * @param ms - milisenconds\n * @returns\n */\nexport const asyncWait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\n/**\n * Shorten a long address\n * @param address - The long address\n * @param num - The number of the heading and trailing characters\n * @param delimiter - The delimiter\n * @returns Shortened address\n */\nexport const shortenAddress = (address: string, num = 4, delimiter = '...') => {\n  return (\n    address.substring(0, num) +\n    delimiter +\n    address.substring(address.length - num, address.length)\n  )\n}\n\n/**\n * Build a explorer url by context including addresses or transaction ids\n * @param addressOrTxId - Address or TxId\n * @returns\n */\nexport const explorer = (addressOrTxId: string): string => {\n  if (account.isAddress(addressOrTxId)) {\n    return `https://solscan.io/account/${addressOrTxId}?cluster=${net}`\n  }\n  return `https://solscan.io/tx/${addressOrTxId}?cluster=${net}`\n}\n\n/**\n * Wrapped Numbro - https://numbrojs.com/old-format.html\n * @param value - value\n * @returns\n */\nexport const numeric = (\n  value?: number | string | BigInt,\n): ReturnType<typeof numbro> => {\n  if (!value) return numbro('0')\n  return numbro(value)\n}\n\n/**\n * Generate a random color\n * @param seed - Seed\n * @param opacity - Opacity\n * @returns\n */\nexport const randomColor = (seed?: string, opacity?: string | number) => {\n  let hash = Math.floor(Math.random() * 16777215)\n  if (seed) {\n    hash = 0\n    for (let i = 0; i < seed.length; i++) {\n      hash = seed.charCodeAt(i) + ((hash << 5) - hash)\n    }\n  }\n  var rgb = [0, 0, 0]\n  for (let i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 255\n    rgb[i] = value\n  }\n  return `rgba(${rgb[0]}, 100, ${rgb[1]},${opacity || 1})`\n}\n\n/**\n * Fetch coingecko data with cache\n * @param ticket - Token ticket\n * @returns\n */\nexport const fetchCGK = async (ticket = '') => {\n  return DataLoader.load('fetchCGK' + ticket, () => utils.parseCGK(ticket))\n}\n\n/**\n * Randomly choose an element in the input array\n * @param arr - Original array of elements\n * @returns\n */\nexport const randChoose = <T>(arr: T[]): T => {\n  const rand = Math.floor(Math.random() * arr.length)\n  return arr[rand]\n}\n\n/**\n * Randomize a subarray in the input array with a specific number of elements\n * @param arr - Original array of elements\n * @param num - Number of elements in randomized subarray\n * @returns\n */\nexport const randElements = <T>(arr: T[], num: number): T[] => {\n  if (arr.length < num) return [...arr]\n  const re: T[] = []\n  while (re.length < num) {\n    const el = randChoose(arr)\n    if (!re.includes(el)) re.push(el)\n  }\n  return re\n}\n","var map = {\n\t\"./blank/create\": [\n\t\t43319,\n\t\t\"src_app_templates_blank_create_tsx\"\n\t],\n\t\"./spl-approve/create\": [\n\t\t50067,\n\t\t\"src_app_templates_spl-approve_create_tsx\"\n\t],\n\t\"./spl-transfer/create\": [\n\t\t93062,\n\t\t\"src_app_templates_spl-transfer_create_tsx\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 2244;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./blank/info\": [\n\t\t61889,\n\t\t\"src_app_templates_blank_info_tsx\"\n\t],\n\t\"./spl-approve/info\": [\n\t\t30754,\n\t\t\"src_app_templates_spl-approve_info_tsx\"\n\t],\n\t\"./spl-transfer/info\": [\n\t\t60029,\n\t\t\"src_app_templates_spl-transfer_info_tsx\"\n\t],\n\t\"./undefined/info\": [\n\t\t18756,\n\t\t\"src_app_templates_undefined_info_tsx\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 58815;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./blank/proposal\": [\n\t\t39827,\n\t\t\"src_app_templates_blank_proposal_tsx\"\n\t],\n\t\"./spl-approve/proposal\": [\n\t\t91442,\n\t\t\"src_app_templates_spl-approve_proposal_tsx\"\n\t],\n\t\"./spl-transfer/proposal\": [\n\t\t42537,\n\t\t\"src_app_templates_spl-transfer_proposal_tsx\"\n\t],\n\t\"./undefined/proposal\": [\n\t\t21634,\n\t\t\"src_app_templates_undefined_proposal_tsx\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 79332;\nmodule.exports = webpackAsyncContext;"],"names":["_path","_path2","_path3","_path4","_path5","_path6","_path7","_path8","_path9","_path10","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgLogo","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","ForwardRef","defineProperty","exports","value","enumerable","get","_logo","default","_README","_panel","_interopRequireDefault","require","_panel2","_panel3","obj","__esModule","panels","Row","gutter","justify","Col","Space","direction","size","Typography","level","style","fontSize","textAlign","className","span","type","icon","Card","bordered","background","borderLeft","borderRadius","bodyStyle","padding","daos","useSelector","state","proposal","executeProposal","useMemo","total","proposalAddr","executed","xs","lg","sm","name","numeric","keys","format","includes","regime","special","tag","isEqual","DaoRegimes","Tag","margin","metadata","Metadata","MetadataData","programs","TOKEN_METADATA_PROGRAM_ID","PublicKey","connection","Connection","rpc","fetchYourOwnerNTFs","async","findDataByOwner","ownerAddress","getNftMetaData","findByMint","tokenMint","mintAddress","metaData","setMetaData","useState","nftInfo","setNftInfo","loading","setLoading","getMetaData","useCallback","account","undefined","DataLoader","cache","ttl","url","data","uri","response","axios","error","useEffect","useNftMetaData","Avatar","shape","src","image","IMAGE_DEFAULT","string2Number","seed","limit","buf","Buffer","from","index","BN","mod","Number","Math","random","toString","avatarProps","colors","gradients","join","alt","manifest","appId","configs","wallet","address","walletAddress","useWallet","PDB","createInstance","ipfs","IPFS","daoAddress","pdb","usePDB","getItem","digest","cid","getCID","localMetadata","setItem","ownerPublickey","nfts","setNfts","nftsFiltered","setNftFiltered","accounts","useAccount","fetchNFTs","nftsFetching","filterNFTs","Promise","all","map","nftTokenAccount","utils","mint","web3","nft","owner","nftAccountData","toBase58","amount","eq","push","validMember","setValidMember","checking","setChecking","daoData","useDaoData","useMetaData","myAddress","useOwnerNFT","isMemberOnlyNFT","collection","isMemberTokenDAO","mints","values","isMemberMultisig","members","valid","checkDaoMember","daoType","isNft","useDaoMembers","isMultisig","amountMembers","daoMembers","Spin","spinning","DAO_CARD_BG","autonomous","democratic","dictatorial","HEIGHT_RATIO","history","useHistory","nonce","isPublic","ui","useUI","useValidDaoMember","parseRegime","heightRatio","isMobile","desktopWidth","onClick","window","notify","description","PAGE_PADDING","Image","preview","tip","minHeight","wrap","align","flex","Tooltip","daoName","marginTop","ellipsis","rows","shortenAddress","marginLeft","optionals","idx","validURL","Button","open","getIcon","onSearch","Input","prefix","indicator","LoadingOutlined","placeholder","onChange","e","active","overflow","cursor","position","bottom","left","backdropFilter","color","textTransform","fontWeight","REGIME_LIST","onChangeRegime","Popover","overlayStyle","maxWidth","trigger","content","md","onSort","Select","setType","constructor","register","daoMap","engine","_setDaoMap","forEach","set","Array","findByAddress","has","addr","find","keyword","fuzzy","search","findIndex","dao","nextDaos","slice","Map","lunr","field","doc","add","daoAddresses","searchData","setSearchData","nextData","daoProvider","DaoProvider","err","delayToSearch","setTimeout","clearTimeout","mechanismsType","filteredDaos","setFilteredDaos","filterDaos","mechanisms","setMechanisms","searchKey","setSearchKey","publicDaos","usePublicDaos","useSearchDao","xl","offset","Empty","filter","daoAddr","authority","authAddress","tokenAccount","myCollections","availableDaos","useAvailableDaos","proposalAddress","proposals","proposalMetaData","useProposalMetaData","daoMetaData","receipts","receipt","withdrawableProposals","setWithdrawableProposals","withdrawableReceipts","setWithdrawableReceipts","filterWithdrawable","filteredReceipts","filteredProposals","receiptAddr","endDate","Date","now","toNumber","sol","interDao","visible","setVisible","useWithdrawableReceipt","Modal","onCancel","closeIcon","footer","BG_JOIN_DAO","block","closeNftVoting","close","explorer","txId","er","message","Tabs","tabBarExtraContent","tab","useTemplateWithProposal","templateName","setTemplateName","getTemplateName","TemplateCreateLoader","Component","lazy","ErrorBoundary","Suspense","fallback","TemplateProposalLoader","template","TemplateInfoLoader","hasError","_","componentDidCatch","errorInfo","console","render","children","CardOption","label","setTemplate","TemplateNames","SOLANA_LOGO","expandable","symbol","Radio","SENTRE_LOGO","dispatch","useDispatch","clearTemplate","disabled","currentDate","floor","status","setStatus","SystemProgram","mobileScreen","isSuccess","quorum","votingPower","numSupply","authorized","proposalAddresses","filterProposalAddresses","filteredAddress","startDate","supply","votingForPower","consensusQuorum","consensusMechanism","votingAgainstPower","stakeSupply","lockSupply","actualSupply","scrollTo","defaultValue","minWidth","InfoMember","copied","setCopied","text","onCopy","asyncWait","placement","overlayClassName","marginRight","utility","ENDED_AT","getTreeData","pubkeys","balanceTree","pubkey","startedAt","salt","MerkleDistributor","toBuffer","createDistributor","treeData","merkleDistributor","toJSON","multihash","CID","distributorAddress","initializeDistributor","tokenAddress","getTotal","merkleRoot","deriveMerkleRoot","endedAt","createDistributorInstruction","walletPublicKey","tokenPublicKey","distributor","srcPublicKey","treasurer","deriveTreasurerAddress","publicKey","treasury","program","methods","feeCollector","tokenProgram","associatedTokenProgram","systemProgram","rent","instruction","getMintAddress","fetch","getMerkleDistributor","getRecipientData","recipient","receipients","getReceiptData","recipientData","receiptAddress","deriveReceiptAddress","claimToken","Error","proof","deriveProof","claim","listMint","accountAddr","isValidAccount","Distributor","member","listNFTs","setListNFTs","getYourOwnerNFTs","master","CardNFT","nftImg","setNftImg","getNftInfoFromURI","img","DEFAULT_DATA","price","priceChange","rank","totalVolume","getBalance","inUSD","tokenProvider","decimals","cgkData","token","ticket","extensions","coingeckoId","fetchCGK","fetchCgkData","balance","getDecimals","useMint","totalUSD","setTotalUSD","clcTotalUSD","setDecimals","fetchDecimals","usdBalance","setUSDBalance","mintBalance","setMintBalance","useMintDecimals","fetchBalance","tokenAccounts","setTokenAccounts","useTotalUSD","daoMasterAddress","fetchTokenAccounts","splt","spltProgramId","parseAccountData","parseMintData","sentre","getTokenAccountsByOwner","programId","mintAccounts","getMultipleAccounts","acc","filteredAccounts","mintData","InfoDAOMaster","paddingTop","bgColor","fgColor","useParams","ConsensusMechanisms","infix","mobileSpan","ConsensusQuorums","DatePicker","moment","valueOf","showTime","taxman","fee","CURRENT_TIME","ONE_DAY","DEFAULT_DURATION","setConsensusMechanism","setConsensusQuorum","duration","setDuration","setTitle","setDescription","isMultisigDAO","templateData","uploadMetaData","newProposal","tx","valueAccounts","initializeProposal","isSigner","isWritable","isMaster","revenue","revenuemanAddress","tax","taxmanAddress","clearTx","Divider","DAO_PROGRESS_TITLE","step","Progress","percent","steps","showInfo","DEFAULT_META_DATA","DEFAULT_DAO_DATA","CreateDaoSteps","NAME","initialState","ChooseType","submitStepChooseType","createAsyncThunk","getState","createDao","InputDetails","submitStepDaoDetail","SetRule","submitStepSetRule","rule","Review","revertPrevStep","prevStep","clearCreateDao","createSlice","reducers","extraReducers","builder","addCase","fulfilled","payload","DAO_TYPE","setDaoType","cardBorder","borderColor","border","setMetadata","formatMetaData","nextMetaData","imgBase64","Upload","accept","listType","maxCount","file","fileList","originFile","originFileObj","fileToBase64","onRemove","social","socials","onOptionalChange","splice","removeLink","defaultMetadata","validLink","link","logoSize","PAGE_SPACING","createDaoData","createFlexDAO","metadataBuff","totalSupply","mul","pow","initializeDao","_mint","getProvider","getAddress","getAnchorProvider","createNewTokenAndMintTo","provider","createMintAndMintTo","number","isValidMint","DEFAULT_EMPTY_ADDRESS","mintToAccount","dstAddress","safeMintTo","dstWalletAddress","myWallet","createVotingMint","multiSigWallet","MultisigWallet","getDistributorAddress","pubKeys","createMultisigDao","ButtonFlexDao","useFlexibleDao","ButtonMultisigDao","useMultisigDao","onSelect","isSelected","imageSize","top","right","zIndex","CardNftImageOnly","openNftModal","listCollectionNFTs","setListCollectionNFTs","searchText","setSearchText","getNftCollectionInfo","collectionNFTs","collectionInfo","onSelectNFT","onCloseModal","getCollectionNFTs","nftsmetadata","fetchListNTFs","Fragment","collectionAddress","Address","onMintAddressChange","suffix","autoFocus","onNftChange","setIsPublic","setSupply","getMint","fetchSupply","useMintSupply","suggestion","String","div","onValue","setSuggestion","getNftSuggestion","getProgramAccounts","commitment","filters","dataSize","memcmp","bytes","getListAccountNFTsBelongToCollection","onChangeSupply","nextIsNft","setIsNft","nextRegime","setRegime","nextMintAddress","setMintAddress","nextSupply","nextIsPublic","disabledRemove","disabledBtn","disabledWalletInput","disabledName","remove","setMember","nextMembers","setDefaultValue","nextMetadata","getReceipts","bulk","parseReceiptData","setReceipts","fetchReceipts","listReceipt","useProposalStatus","useReceipts","authorities","execute","wordBreak","revenueFee","votingType","nftVoting","setNftVoting","proposalFee","useProposalFee","onVoteNftFor","voteNftFor","onVoteNftAgainst","voteNftAgainst","VotingType","against","STROKE_COLOR","dark","for","light","VOTE_TYPE","record","theme","action","power","proposalPubkey","daoPubkey","mintDecimal","BigInt","setListReceipt","COLUMNS","dataIndex","lockedDate","onWithdraw","filterReceipts","myRecept","maxHeight","Table","columns","dataSource","pagination","rowKey","getRemainingSeconds","nowDayjs","timestampDayjs","startWithZeros","diff","getRemainingMinutes","getRemainingHours","getRemainingDays","minLength","numberString","repeat","proposalData","getProposal","defaultRemainingTime","minutes","hours","days","seconds","remainingTime","setRemainingTime","voteAmount","voteBid","useProposal","voteNow","getTime","endTime","startTime","remaining","votePower","updateRemainingTime","countdown","timestampMs","finishTime","dayjs","isBefore","getRemainingTime","intervalId","setInterval","clearInterval","setNftsFiltered","filterNFTsByCollection","setVotingType","useOwnerNftByCollection","myCollection","isLockedVote","isComplete","buildResult","useAccountBalance","accountAddress","lamports","useAccountBalanceByMintAddress","setAccountAddress","deriveAssociatedAddress","setVoteBidAmount","loadingFor","setLoadingFor","loadingAgainst","setLoadingAgainst","onVoteFor","actualAmount","nextAmount","voteFor","onVoteAgainst","voteAgainst","mechanismQuorum","creator","authProposalAddress","useParseQuorumText","consensus","_consensusMechanism","textDecoration","backGroundColor","setBackGroundColor","successColor","setSuccessColor","noVote","yesVote","totalVote","percentYes","percentNo","defaultRequire","currentPower","actualYesVote","sub","supplyNeed","divRound","powerRequire","gte","percentSuccess","getColors","quorumText","strokeColor","success","HISTORY_COLUMNS_FLEXIBLE","HISTORY_COLUMNS_MULTISIG","setAmount","historyColum","nextReceipts","actionType","existReceipt","_receipt","_action","_authority","_actionType","oldPower","onSave","rest","setNextMetadata","updateDaoMetadata","oldMember","setOldMember","setDefaultMembers","oldAddresses","onChangeMember","validAccount","associatedAddress","getAccountData","multisigWallet","updateDaoRegime","setAuthority","transferAuthority","ok","supplyDecimal","util","defaultSupply","txIdSupply","updateDaoSupply","loadingElement","display","addLoading","clearLoading","EVENTS","watcherState","reloadData","event","callbacks","callback","addEventListener","events","interval","watchData","addListener","removeListener","warn","reloadDaoData","daoPublicKey","getDao","force","fetchData","getDaos","unwrap","reloadProposalData","proposalPublicKey","getProposals","authorityAddress","RECEIPT_DISCRIMINATOR","getReceipt","upsetReceipt","deleteReceipt","reloadReceiptData","receiptPublicKey","loadAllMetaData","setBackground","Switch","Route","exact","path","component","Dao","CreateDao","Proposal","EditDAO","ProposalInitialization","ProposalDetails","Redirect","to","bigintSerializationMiddleware","serializableCheck","isSerializable","val","isArray","proto","getPrototypeOf","isPlainObject","isBuffer","configureStore","middleware","getDefaultMiddleware","devTools","reducer","tokenHolder","Page","UIProvider","antd","prefixCls","WalletProvider","AccountProvider","PoolProvider","MintProvider","Provider","store","model","STATUS_COLOR","Succeeded","Failed","Preparing","Executed","Voting","Loading","shared","process","development","staging","production","devnet","InterDAO","SafeWallet","Utility","testnet","mainnet","env","net","SOCIALS_MEDIA","t","twitter","facebook","discord","global","medium","callBack","reader","FileReader","readAsDataURL","onload","result","v0Prefix","Uint8Array","v0Digest","test","socialName","host","URL","hostname","replace","char","iconName","toLowerCase","File","JSON","stringify","put","re","files","resolve","reject","contents","parse","readAsText","Web3Storage","_publicKey","_init","_wallet","signTransaction","signAllTransactions","signedTxs","txs","signedTx","setMembers","fetchDaoMember","getTokenHolders","lte","cmp","DAO_DISCRIMINATOR","getDaoData","upsetDao","getProposalData","upsetProposal","deleteProposal","setTx","setTemplateData","amountHolder","isTemplateAccountWithRule","idlAccount","isTemplateArgWithRule","idlArg","DEFAULT_AVATARS","reversed","avatars","setAvatars","pools","usePool","deriveAvatar","logoURI","deriveAvatars","poolData","mint_lpt","mint_a","mint_b","reverse","avatar","backgroundColor","whiteSpace","DEFAULT_NAME","separator","setName","deriveName","deriveNames","names","DEFAULT_SYMBOL","setSymbol","deriveSymbol","substring","deriveSymbols","symbols","randomColor","Boolean","justifyContent","boxShadow","LoadMore","useAllMintAddresses","allMintAddresses","setAllMintAddresses","getRecommendedMintAddresses","addresses","useSortMints","sortedMints","setSortedMints","mapMintAmounts","mapMints","sortMints","mintAddresses","sort","a","b","amountA","amountB","LOCAL_STORAGE_ID","searching","setKeyword","setOffset","recommendedMints","addRecommendMint","setRecommendedMints","getRecommendedMints","localStorage","newMints","useRecommendedMints","searchedMints","setSearchedMints","useSearchedMints","list","document","getElementById","scrollTop","closable","centered","throttle","timeoutId","forwardRef","max","setError","setCursor","innerRef","useRef","onAmount","onError","parseFloat","current","setSelectionRange","selectionStart","DEFAULT_CACHE_CONFIG","DEFAULT_SINGLE_FLIGHT_CONFIG","calls","time","RequestQueue","resolveQueue","rejectQueue","resolves","shift","rejects","SingleFlightCache","mapCache","delete","instanceKey","mapInstance","instance","newSingleFlight","SingleFlight","requestKey","singleFlight","getSingleFlight","newRequest","load","config","intervalRequest","timeLogs","mapRequestCalling","requestQueue","cacheData","isFetch","request","validateLimit","addRequestQueue","createTimeLogs","then","catch","finally","fetchRequestQueue","dbName","driver","localForage","storeName","dropInstance","clear","appIds","flat","concat","iterate","backup","restore","_ipfs","create","isCID","stream","cat","timeout","raw","chunk","isIPFS","storage","getNetwork","chainId","getChainId","KEY","convert","ms","num","delimiter","addressOrTxId","numbro","opacity","hash","charCodeAt","rgb","webpackAsyncContext","req","__webpack_require__","o","code","ids","module"],"sourceRoot":""}