{"version":3,"file":"static/js/658.bab35ad1.chunk.js","mappings":"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","sources":["../node_modules/@interdao/core/dist/app/constant.js","../node_modules/@interdao/core/dist/app/core.js","../node_modules/@interdao/core/dist/app/index.js","../node_modules/@interdao/core/dist/app/types.js","../node_modules/@interdao/core/dist/app/utils.js","../node_modules/@interdao/core/dist/target/types/inter_dao.js","../node_modules/@project-serum/anchor/node_modules/pako/dist/pako.esm.mjs","../../../../src/utils/bytes/hex.ts","../../../../src/utils/bytes/utf8.ts","../../../../src/utils/bytes/bs58.ts","../../../../src/utils/bytes/base64.ts","../../../../src/provider.ts","../../../../src/utils/features.ts","../../../../src/error.ts","../../../node_modules/snake-case/node_modules/tslib/tslib.es6.js","../../../node_modules/dot-case/node_modules/tslib/tslib.es6.js","../../../node_modules/lower-case/dist.es2015/index.js","../../../node_modules/no-case/dist.es2015/index.js","../../../node_modules/dot-case/dist.es2015/index.js","../../../../src/coder/borsh/idl.ts","../../../../src/coder/borsh/instruction.ts","../../../node_modules/snake-case/dist.es2015/index.js","../../../../src/coder/common.ts","../../../../src/coder/borsh/accounts.ts","../../../../src/coder/borsh/event.ts","../../../../src/coder/borsh/state.ts","../../../../src/coder/borsh/index.ts","../../../node_modules/buffer-layout/lib/Layout.js","../../../../src/coder/spl-token/instruction.ts","../../../../src/coder/spl-token/state.ts","../../../../src/coder/spl-token/buffer-layout.ts","../../../../src/coder/spl-token/accounts.ts","../../../../src/coder/spl-token/events.ts","../../../../src/coder/spl-token/index.ts","../../../../src/utils/sha256.ts","../../../../src/program/common.ts","../../../../src/utils/rpc.ts","../../../../src/utils/common.ts","../../../../src/utils/pubkey.ts","../../../../src/utils/token.ts","../../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../../../src/utils/registry.ts","../../../../src/idl.ts","../../../../src/program/context.ts","../../../../src/program/namespace/instruction.ts","../../../../src/program/namespace/rpc.ts","../../../../src/program/namespace/transaction.ts","../../../../src/program/namespace/state.ts","../../../../src/program/namespace/account.ts","../../../../src/program/event.ts","../../../../src/spl/token.ts","../../../../src/program/accounts-resolver.ts","../../../../src/program/namespace/methods.ts","../../../../src/program/index.ts","../../../../src/program/namespace/index.ts","../../../../src/program/namespace/simulate.ts","../../../../src/spl/index.ts","../node_modules/@project-serum/anchor/node_modules/camelcase/index.js","../../../src/index.ts","../node_modules/@senswap/sen-js/dist/index.js","../../src/util/to-buffer.ts","../../node_modules/minimalistic-assert/index.js","../../node_modules/inherits/inherits_browser.js","../../node_modules/hash.js/lib/hash/utils.js","../../node_modules/hash.js/lib/hash/common.js","../../node_modules/hash.js/lib/hash/sha/common.js","../../node_modules/hash.js/lib/hash/sha/1.js","../../node_modules/hash.js/lib/hash/sha/256.js","../../node_modules/hash.js/lib/hash/sha/224.js","../../node_modules/hash.js/lib/hash/sha/512.js","../../node_modules/hash.js/lib/hash/sha/384.js","../../node_modules/hash.js/lib/hash/sha.js","../../node_modules/hash.js/lib/hash/ripemd.js","../../node_modules/hash.js/lib/hash/hmac.js","../../node_modules/hash.js/lib/hash.js","../../node_modules/@ethersproject/logger/lib.esm/index.js","../../node_modules/@ethersproject/logger/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/_version.js","../../node_modules/@ethersproject/bytes/lib.esm/index.js","../../node_modules/@ethersproject/sha2/lib.esm/sha2.js","../../node_modules/@ethersproject/sha2/lib.esm/_version.js","../../src/util/borsh-schema.ts","../../src/publickey.ts","../../src/account.ts","../../src/bpf-loader-deprecated.ts","../../src/layout.ts","../../src/util/shortvec-encoding.ts","../../src/message.ts","../../src/util/assert.ts","../../src/transaction.ts","../../src/sysvar.ts","../../src/util/send-and-confirm-transaction.ts","../../src/util/sleep.ts","../../src/instruction.ts","../../src/fee-calculator.ts","../../src/nonce-account.ts","../../src/system-program.ts","../../src/loader.ts","../../src/bpf-loader.ts","../../node_modules/cross-fetch/dist/browser-ponyfill.js","../../src/epoch-schedule.ts","../../src/errors.ts","../../src/connection.ts","../../src/util/url.ts","../../src/util/promise-timeout.ts","../../src/keypair.ts","../../src/ed25519-program.ts","../../src/stake-program.ts","../../src/secp256k1-program.ts","../../src/validator-info.ts","../../src/vote-account.ts","../../src/vote-program.ts","../../src/util/send-and-confirm-raw-transaction.ts","../../src/util/cluster.ts","../../src/index.ts","../node_modules/assert/build/assert.js","../node_modules/assert/build/internal/assert/assertion_error.js","../node_modules/assert/build/internal/errors.js","../node_modules/assert/build/internal/util/comparisons.js","../node_modules/base64-js/index.js","../node_modules/buffer-layout/lib/Layout.js","../node_modules/define-properties/index.js","../node_modules/es6-object-assign/index.js","../node_modules/is-nan/implementation.js","../node_modules/is-nan/index.js","../node_modules/is-nan/polyfill.js","../node_modules/is-nan/shim.js","../node_modules/js-sha256/src/sha256.js","../node_modules/object-is/implementation.js","../node_modules/object-is/index.js","../node_modules/object-is/polyfill.js","../node_modules/object-is/shim.js","../node_modules/object-keys/implementation.js","../node_modules/object-keys/index.js","../node_modules/object-keys/isArguments.js","../node_modules/react/jsx-runtime.js","../node_modules/tweetnacl/nacl-fast.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.DEFAULT_INTERDAO_IDL = exports.DEFAULT_INTERDAO_PROGRAM_ID = exports.DEFAULT_RPC_ENDPOINT = void 0;\nconst inter_dao_1 = require(\"../target/types/inter_dao\");\nexports.DEFAULT_RPC_ENDPOINT = 'https://api.devnet.solana.com';\nexports.DEFAULT_INTERDAO_PROGRAM_ID = 'Bivu7zHQj6QP8E9nHV3Vt9tXmyqKe5hRQ5zKNoAASRhn';\nexports.DEFAULT_INTERDAO_IDL = inter_dao_1.IDL;\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst anchor_1 = require(\"@project-serum/anchor\");\nconst constant_1 = require(\"./constant\");\nconst types_1 = require(\"./types\");\nconst utils_1 = require(\"./utils\");\nclass InterDAO {\n    constructor(wallet, rpcEndpoint = constant_1.DEFAULT_RPC_ENDPOINT, programId = constant_1.DEFAULT_INTERDAO_PROGRAM_ID) {\n        /**\n         * Listen changes on an event\n         * @param eventName Event name\n         * @param callback Event handler\n         * @returns Listener id\n         */\n        this.addListener = (eventName, callback) => __awaiter(this, void 0, void 0, function* () {\n            return yield this.program.addEventListener(eventName, (data) => callback(data));\n        });\n        /**\n         * Remove listener by its id\n         * @param listenerId Listener id\n         * @returns\n         */\n        this.removeListener = (listenerId) => __awaiter(this, void 0, void 0, function* () {\n            try {\n                yield this.program.removeEventListener(listenerId);\n            }\n            catch (er) {\n                console.warn(er);\n            }\n        });\n        /**\n         * Parse dao buffer data.\n         * @param data Dao buffer data.\n         * @returns Dao readable data.\n         */\n        this.parseDaoData = (data) => {\n            return this.program.coder.accounts.decode('dao', data);\n        };\n        /**\n         * Get dao data.\n         * @param daoAddress Dao address.\n         * @returns Dao readable data.\n         */\n        this.getDaoData = (daoAddress) => __awaiter(this, void 0, void 0, function* () {\n            return this.program.account.dao.fetch(daoAddress);\n        });\n        /**\n         * Parse proposal buffer data.\n         * @param data Proposal buffer data.\n         * @returns Proposal readable data.\n         */\n        this.parseProposalData = (data) => {\n            return this.program.coder.accounts.decode('proposal', data);\n        };\n        /**\n         * Get proposal data.\n         * @param proposalAddress Proposal address.\n         * @returns Proposal readable data.\n         */\n        this.getProposalData = (proposalAddress) => __awaiter(this, void 0, void 0, function* () {\n            return this.program.account.proposal.fetch(proposalAddress);\n        });\n        /**\n         * Parse receipt buffer data.\n         * @param data Receipt buffer data.\n         * @returns Receipt readable data.\n         */\n        this.parseReceiptData = (data) => {\n            return this.program.coder.accounts.decode('receipt', data);\n        };\n        /**\n         * Get receipt data.\n         * @param receiptAddress Receipt address.\n         * @returns Receipt readable data.\n         */\n        this.getReceiptData = (receiptAddress) => __awaiter(this, void 0, void 0, function* () {\n            return this.program.account.receipt.fetch(receiptAddress);\n        });\n        /**\n         * Derive a proposal address by dao address and proposal's index.\n         * @param daoAddress Dao address.\n         * @param proposalIndex Proposal's index.\n         * @param strict (Optional) if true, a validation process will activate to make sure the proposal is safe.\n         * @returns Proposal address.\n         */\n        this.deriveProposalAddress = (daoAddress, proposalIndex, strict = false) => __awaiter(this, void 0, void 0, function* () {\n            if (!(0, utils_1.isAddress)(daoAddress))\n                throw new Error('Invalid DAO address');\n            if (proposalIndex.isNeg())\n                throw new Error('Invalid index must be greater than or equal to zero');\n            const proposalPublicKey = yield (0, utils_1.findProposal)(new anchor_1.BN(proposalIndex), new anchor_1.web3.PublicKey(daoAddress), this.program.programId);\n            const proposalAddress = proposalPublicKey.toBase58();\n            if (strict) {\n                let onchainDaoAddress;\n                let onchainIndex;\n                try {\n                    const { dao, index } = yield this.getProposalData(proposalAddress);\n                    onchainDaoAddress = dao.toBase58();\n                    onchainIndex = index;\n                }\n                catch (er) {\n                    throw new Error(`This proposal ${proposalAddress} is not initialized yet`);\n                }\n                if (daoAddress !== onchainDaoAddress)\n                    throw new Error('Violated DAO address');\n                if (!proposalIndex.eq(onchainIndex))\n                    throw new Error('Violated index');\n            }\n            return proposalAddress;\n        });\n        /**\n         * Derive my receipt address by proposal address and receipt's index.\n         * @param receiptIndex Receipt's index.\n         * @param proposalAddress Proposal address.\n         * @param strict (Optional) if true, a validation process will activate to make sure the receipt is safe.\n         * @returns Receipt address.\n         */\n        this.deriveReceiptAddress = (receiptIndex, proposalAddress, strict = false) => __awaiter(this, void 0, void 0, function* () {\n            if (receiptIndex.isNeg())\n                throw new Error('Invalid index must be greater than or equal to zero');\n            if (!(0, utils_1.isAddress)(proposalAddress))\n                throw new Error('Invalid proposal address');\n            const receiptPublicKey = yield (0, utils_1.findReceipt)(receiptIndex, new anchor_1.web3.PublicKey(proposalAddress), this._provider.wallet.publicKey, this.program.programId);\n            const receiptAddress = receiptPublicKey.toBase58();\n            if (strict) {\n                let onchainAuthorityAddress;\n                let onchainProposalAddress;\n                let onchainIndex;\n                try {\n                    const { authority, proposal, index } = yield this.getReceiptData(receiptAddress);\n                    onchainAuthorityAddress = authority.toBase58();\n                    onchainProposalAddress = proposal.toBase58();\n                    onchainIndex = index;\n                }\n                catch (er) {\n                    throw new Error(`This receipt ${receiptAddress} is not initialized yet`);\n                }\n                if (this._provider.wallet.publicKey.toBase58() !== onchainAuthorityAddress)\n                    throw new Error('Violated authority address');\n                if (proposalAddress !== onchainProposalAddress)\n                    throw new Error('Violated proposal address');\n                if (!receiptIndex.eq(onchainIndex))\n                    throw new Error('Violated index');\n            }\n            return receiptAddress;\n        });\n        /**\n         * Find an available receipt's index of a wallet for a proposal\n         * @param proposalAddress Proposal address\n         * @param authorityAddress Wallet address\n         * @returns\n         */\n        this.findAvailableReceiptIndex = (proposalAddress, authorityAddress) => __awaiter(this, void 0, void 0, function* () {\n            if (!(0, utils_1.isAddress)(proposalAddress))\n                throw new Error('Invalid proposal address');\n            if (!(0, utils_1.isAddress)(authorityAddress))\n                throw new Error('Invalid authority address');\n            let receiptIndex = new anchor_1.BN(0);\n            const one = new anchor_1.BN(1);\n            while (true) {\n                try {\n                    yield this.deriveReceiptAddress(receiptIndex, proposalAddress, true);\n                    receiptIndex = receiptIndex.add(one);\n                }\n                catch (er) {\n                    return receiptIndex;\n                }\n            }\n        });\n        /**\n         * Derive treasurer address of a proposal.\n         * @param proposalAddress Proposal address.\n         * @returns Treasurer address that holds the secure token treasuries of the printer.\n         */\n        this.deriveTreasurerAddress = (proposalAddress) => __awaiter(this, void 0, void 0, function* () {\n            if (!(0, utils_1.isAddress)(proposalAddress))\n                throw new Error('Invalid proposal address');\n            const proposalPublicKey = new anchor_1.web3.PublicKey(proposalAddress);\n            const [treasurerPublicKey] = yield anchor_1.web3.PublicKey.findProgramAddress([Buffer.from('treasurer'), proposalPublicKey.toBuffer()], this.program.programId);\n            return treasurerPublicKey.toBase58();\n        });\n        /**\n         * Derive master address of a dao.\n         * @param daoAddress Dao address.\n         * @returns Master address that's on behelf of the DAO to execute transactions.\n         */\n        this.deriveMasterAddress = (daoAddress) => __awaiter(this, void 0, void 0, function* () {\n            if (!(0, utils_1.isAddress)(daoAddress))\n                throw new Error('Invalid DAO address');\n            const daoPublicKey = new anchor_1.web3.PublicKey(daoAddress);\n            const [masterPublicKey] = yield anchor_1.web3.PublicKey.findProgramAddress([Buffer.from('master'), daoPublicKey.toBuffer()], this.program.programId);\n            return masterPublicKey.toBase58();\n        });\n        /**\n         * Initialize a DAO. This DAO will be empowered by the token.\n         * @param tokenAddress The token (mint) that be be accepted to vote in the DAO.\n         * @param tokenSupply The total number of tokens that is fairly distributed out to the community. Circulating amount could be acceptable definition.\n         * @param dao (Optional) The dao keypair. If it's not provided, a new one will be auto generated.\n         * @param daoMechanism (Optional) DAO mechanism. Default is Dictatorial.\n         * @returns { txId, daoAddress }\n         */\n        this.initializeDao = (tokenAddress, tokenSupply, dao = anchor_1.web3.Keypair.generate(), daoMechanism = types_1.DaoMechanisms.Dictatorial) => __awaiter(this, void 0, void 0, function* () {\n            if (!(0, utils_1.isAddress)(tokenAddress))\n                throw new Error('Invalid token address');\n            if (!tokenSupply.gt(new anchor_1.BN(0)))\n                throw new Error('Invalid token supply must be greater than zero');\n            const masterAddress = yield this.deriveMasterAddress(dao.publicKey.toBase58());\n            const masterPublicKey = new anchor_1.web3.PublicKey(masterAddress);\n            const tokenPublicKey = new anchor_1.web3.PublicKey(tokenAddress);\n            const txId = yield this.program.rpc.initializeDao(daoMechanism, tokenSupply, {\n                accounts: {\n                    dao: dao.publicKey,\n                    authority: this._provider.wallet.publicKey,\n                    master: masterPublicKey,\n                    mint: tokenPublicKey,\n                    systemProgram: anchor_1.web3.SystemProgram.programId,\n                    rent: anchor_1.web3.SYSVAR_RENT_PUBKEY,\n                },\n                signers: [dao],\n            });\n            return { txId, daoAddress: dao.publicKey.toBase58() };\n        });\n        /**\n         * Initialize a proposal for a DAO.\n         * @param daoAddress The token (mint) that be be accepted to vote in the DAO.\n         * @param data The tracsaction data for the action.\n         * @param pubkeys The involved account public keys for the action.\n         * @param prevIsSigners\n         * @param prevIsWritables\n         * @param nextIsSigners\n         * @param nextIsWritables\n         * @param startDate Start voting\n         * @param endDate End voting\n         * @param consensusMechanism (Optional) Consensus mechanism. Default is StakedTokenCounter.\n         * @returns { txId, proposalAddress }\n         */\n        this.initializeProposal = (daoAddress, invokedProgramAddress, data, pubkeys, prevIsSigners, prevIsWritables, nextIsSigners, nextIsWritables, startDate, endDate, consensusMechanism = types_1.ConsensusMechanisms.StakedTokenCounter, consensusQuorum = types_1.ConsensusQuorums.Half) => __awaiter(this, void 0, void 0, function* () {\n            if (!(0, utils_1.isAddress)(daoAddress))\n                throw new Error('Invalid DAO address');\n            if (pubkeys.length !== prevIsSigners.length ||\n                pubkeys.length !== prevIsWritables.length ||\n                pubkeys.length !== nextIsSigners.length ||\n                pubkeys.length !== nextIsWritables.length)\n                throw new Error('Invalid length of pubkeys and thier flags (signer, writable)');\n            const currentTime = Math.ceil(Number(new Date()) / 1000);\n            if (startDate <= currentTime)\n                throw new Error('Invalid start date');\n            if (endDate <= startDate)\n                throw new Error('Invalid end date');\n            const { nonce } = yield this.getDaoData(daoAddress);\n            const proposalAddress = yield this.deriveProposalAddress(daoAddress, nonce);\n            const proposalPublicKey = new anchor_1.web3.PublicKey(proposalAddress);\n            const daoPublicKey = new anchor_1.web3.PublicKey(daoAddress);\n            const invokedProgramPublicKey = new anchor_1.web3.PublicKey(invokedProgramAddress);\n            const txId = yield this.program.rpc.initializeProposal(data, pubkeys, prevIsSigners, prevIsWritables, nextIsSigners, nextIsWritables, consensusMechanism, consensusQuorum, new anchor_1.BN(startDate), new anchor_1.BN(endDate), {\n                accounts: {\n                    caller: this._provider.wallet.publicKey,\n                    proposal: proposalPublicKey,\n                    dao: daoPublicKey,\n                    invokedProgram: invokedProgramPublicKey,\n                    systemProgram: anchor_1.web3.SystemProgram.programId,\n                    rent: anchor_1.web3.SYSVAR_RENT_PUBKEY,\n                },\n            });\n            return { txId, proposalAddress };\n        });\n        /**\n         * Execute a proposal for a DAO.\n         * @param daoAddress The token (mint) that be be accepted to vote in the DAO.\n         * @returns { txId, proposalAddress }\n         */\n        this.executeProposal = (proposalAddress) => __awaiter(this, void 0, void 0, function* () {\n            if (!(0, utils_1.isAddress)(proposalAddress))\n                throw new Error('Invalid proposal address');\n            const { accounts, dao: daoPublicKey, invokedProgram, } = yield this.getProposalData(proposalAddress);\n            const remainingAccounts = accounts.map(({ pubkey, prevIsSigner, prevIsWritable }) => ({\n                pubkey,\n                isSigner: prevIsSigner,\n                isWritable: prevIsWritable,\n            }));\n            const proposalPublicKey = new anchor_1.web3.PublicKey(proposalAddress);\n            const masterPublicKey = yield this.deriveMasterAddress(daoPublicKey.toBase58());\n            const txId = yield this.program.rpc.executeProposal({\n                accounts: {\n                    caller: this._provider.wallet.publicKey,\n                    proposal: proposalPublicKey,\n                    dao: daoPublicKey,\n                    master: masterPublicKey,\n                    invokedProgram,\n                },\n                remainingAccounts,\n            });\n            return { txId };\n        });\n        /**\n         * Vote for a proposal.\n         * @param proposalAddress Proposal address.\n         * @param amount Amount of tokens to vote.\n         * @returns { txId, receiptAddress }\n         */\n        this.voteFor = (proposalAddress, amount) => __awaiter(this, void 0, void 0, function* () {\n            if (!(0, utils_1.isAddress)(proposalAddress))\n                throw new Error('Invalid proposal address');\n            if (amount.isNeg() || amount.isZero())\n                throw new Error('Invalid amount');\n            const proposalPublicKey = new anchor_1.web3.PublicKey(proposalAddress);\n            const { dao: daoPublicKey } = yield this.getProposalData(proposalAddress);\n            const { mint: mintPublicKey } = yield this.getDaoData(daoPublicKey.toBase58());\n            const authorityPublicKey = this._provider.wallet.publicKey;\n            const srcPublicKey = yield anchor_1.utils.token.associatedAddress({\n                mint: mintPublicKey,\n                owner: authorityPublicKey,\n            });\n            const index = yield this.findAvailableReceiptIndex(proposalAddress, authorityPublicKey.toBase58());\n            const receiptAddress = yield this.deriveReceiptAddress(index, proposalAddress);\n            const receiptPublicKey = new anchor_1.web3.PublicKey(receiptAddress);\n            const treasurerAddress = yield this.deriveTreasurerAddress(proposalAddress);\n            const treasurerPublicKey = new anchor_1.web3.PublicKey(treasurerAddress);\n            const treasuryPublicKey = yield anchor_1.utils.token.associatedAddress({\n                mint: mintPublicKey,\n                owner: treasurerPublicKey,\n            });\n            const txId = yield this.program.rpc.voteFor(index, amount, {\n                accounts: {\n                    authority: authorityPublicKey,\n                    src: srcPublicKey,\n                    treasurer: treasurerPublicKey,\n                    mint: mintPublicKey,\n                    treasury: treasuryPublicKey,\n                    proposal: proposalPublicKey,\n                    dao: daoPublicKey,\n                    receipt: receiptPublicKey,\n                    tokenProgram: anchor_1.utils.token.TOKEN_PROGRAM_ID,\n                    associatedTokenProgram: anchor_1.utils.token.ASSOCIATED_PROGRAM_ID,\n                    systemProgram: anchor_1.web3.SystemProgram.programId,\n                    rent: anchor_1.web3.SYSVAR_RENT_PUBKEY,\n                },\n            });\n            return { txId, receiptAddress };\n        });\n        /**\n         * Vote against a proposal.\n         * @param proposalAddress Proposal address.\n         * @param amount Amount of tokens to vote.\n         * @param unlockedDate Unlocked date of the tokens.\n         * @returns { txId, receiptAddress }\n         */\n        this.voteAgainst = (proposalAddress, amount) => __awaiter(this, void 0, void 0, function* () {\n            if (!(0, utils_1.isAddress)(proposalAddress))\n                throw new Error('Invalid proposal address');\n            if (amount.isNeg() || amount.isZero())\n                throw new Error('Invalid amount');\n            const proposalPublicKey = new anchor_1.web3.PublicKey(proposalAddress);\n            const { dao: daoPublicKey } = yield this.getProposalData(proposalAddress);\n            const { mint: mintPublicKey } = yield this.getDaoData(daoPublicKey.toBase58());\n            const authorityPublicKey = this._provider.wallet.publicKey;\n            const srcPublicKey = yield anchor_1.utils.token.associatedAddress({\n                mint: mintPublicKey,\n                owner: authorityPublicKey,\n            });\n            const index = yield this.findAvailableReceiptIndex(proposalAddress, authorityPublicKey.toBase58());\n            const receiptAddress = yield this.deriveReceiptAddress(index, proposalAddress);\n            const receiptPublicKey = new anchor_1.web3.PublicKey(receiptAddress);\n            const treasurerAddress = yield this.deriveTreasurerAddress(proposalAddress);\n            const treasurerPublicKey = new anchor_1.web3.PublicKey(treasurerAddress);\n            const treasuryPublicKey = yield anchor_1.utils.token.associatedAddress({\n                mint: mintPublicKey,\n                owner: treasurerPublicKey,\n            });\n            const txId = yield this.program.rpc.voteAgainst(index, amount, {\n                accounts: {\n                    authority: authorityPublicKey,\n                    src: srcPublicKey,\n                    treasurer: treasurerPublicKey,\n                    mint: mintPublicKey,\n                    treasury: treasuryPublicKey,\n                    proposal: proposalPublicKey,\n                    dao: daoPublicKey,\n                    receipt: receiptPublicKey,\n                    tokenProgram: anchor_1.utils.token.TOKEN_PROGRAM_ID,\n                    associatedTokenProgram: anchor_1.utils.token.ASSOCIATED_PROGRAM_ID,\n                    systemProgram: anchor_1.web3.SystemProgram.programId,\n                    rent: anchor_1.web3.SYSVAR_RENT_PUBKEY,\n                },\n            });\n            return { txId, receiptAddress };\n        });\n        /**\n         * Close receipts and collect tokens and lamports back.\n         * @param receiptAddress Receipt address.\n         * @param amount Amount of tokens to void.\n         * @returns { txId, receiptAddress }\n         */\n        this.close = (receiptAddress) => __awaiter(this, void 0, void 0, function* () {\n            if (!(0, utils_1.isAddress)(receiptAddress))\n                throw new Error('Invalid receipt address');\n            const { proposal: proposalPublicKey } = yield this.getReceiptData(receiptAddress);\n            const proposalAddress = proposalPublicKey.toBase58();\n            const { dao: daoPublicKey } = yield this.getProposalData(proposalAddress);\n            const { mint: mintPublicKey } = yield this.getDaoData(daoPublicKey.toBase58());\n            const authorityPublicKey = this._provider.wallet.publicKey;\n            const dstPublicKey = yield anchor_1.utils.token.associatedAddress({\n                mint: mintPublicKey,\n                owner: authorityPublicKey,\n            });\n            const receiptPublicKey = new anchor_1.web3.PublicKey(receiptAddress);\n            const treasurerAddress = yield this.deriveTreasurerAddress(proposalAddress);\n            const treasurerPublicKey = new anchor_1.web3.PublicKey(treasurerAddress);\n            const treasuryPublicKey = yield anchor_1.utils.token.associatedAddress({\n                mint: mintPublicKey,\n                owner: treasurerPublicKey,\n            });\n            const txId = yield this.program.rpc.close({\n                accounts: {\n                    authority: authorityPublicKey,\n                    dst: dstPublicKey,\n                    treasurer: treasurerPublicKey,\n                    mint: mintPublicKey,\n                    treasury: treasuryPublicKey,\n                    proposal: proposalPublicKey,\n                    dao: daoPublicKey,\n                    receipt: receiptPublicKey,\n                    tokenProgram: anchor_1.utils.token.TOKEN_PROGRAM_ID,\n                    associatedTokenProgram: anchor_1.utils.token.ASSOCIATED_PROGRAM_ID,\n                    systemProgram: anchor_1.web3.SystemProgram.programId,\n                    rent: anchor_1.web3.SYSVAR_RENT_PUBKEY,\n                },\n            });\n            return { txId, receiptAddress };\n        });\n        /**\n         * Update DAO's supply\n         * @param supply The new supply.\n         * @param daoAddress DAO address.\n         * @returns { txId }\n         */\n        this.updateDaoSupply = (supply, daoAddress) => __awaiter(this, void 0, void 0, function* () {\n            if (supply.isNeg() || supply.isZero())\n                throw new Error('Invalid supply');\n            if (!(0, utils_1.isAddress)(daoAddress))\n                throw new Error('Invalid DAO address');\n            const txId = yield this.program.rpc.updateSupply(supply, {\n                accounts: {\n                    authority: this._provider.wallet.publicKey,\n                    dao: new anchor_1.web3.PublicKey(daoAddress),\n                },\n            });\n            return { txId };\n        });\n        /**\n         * Update DAO's mechanism\n         * @param daoMechanism The new mechanism.\n         * @param daoAddress DAO address.\n         * @returns { txId }\n         */\n        this.updateDaoMechanism = (daoMechanism, daoAddress) => __awaiter(this, void 0, void 0, function* () {\n            if (!(0, utils_1.isAddress)(daoAddress))\n                throw new Error('Invalid DAO address');\n            const txId = yield this.program.rpc.updateDaoMechanism(daoMechanism, {\n                accounts: {\n                    authority: this._provider.wallet.publicKey,\n                    dao: new anchor_1.web3.PublicKey(daoAddress),\n                },\n            });\n            return { txId };\n        });\n        /**\n         * Transfer the DAO authority\n         * @param newAuthority The new taxman authority (the function will auto derive the taxman account for the authority).\n         * @param daoAddress DAO address.\n         * @returns { txId }\n         */\n        this.transferAuthority = (newAuthority, daoAddress) => __awaiter(this, void 0, void 0, function* () {\n            if (!(0, utils_1.isAddress)(newAuthority))\n                throw new Error('Invalid authority address');\n            if (!(0, utils_1.isAddress)(daoAddress))\n                throw new Error('Invalid DAO address');\n            const txId = yield this.program.rpc.transferAuthority({\n                accounts: {\n                    authority: this._provider.wallet.publicKey,\n                    newAuthority: new anchor_1.web3.PublicKey(newAuthority),\n                    dao: new anchor_1.web3.PublicKey(daoAddress),\n                },\n            });\n            return { txId };\n        });\n        if (!(0, utils_1.isAddress)(programId))\n            throw new Error('Invalid program id');\n        // Private\n        this._connection = new anchor_1.web3.Connection(rpcEndpoint, 'confirmed');\n        this._provider = new anchor_1.Provider(this._connection, wallet, {\n            skipPreflight: true,\n            commitment: 'confirmed',\n        });\n        // Public\n        this.program = new anchor_1.Program(constant_1.DEFAULT_INTERDAO_IDL, programId, this._provider);\n    }\n    /**\n     * Get list of event names\n     */\n    get events() {\n        return this.program.idl.events.map(({ name }) => name);\n    }\n}\nexports.default = InterDAO;\n","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst core_1 = __importDefault(require(\"./core\"));\n__exportStar(require(\"./constant\"), exports);\n__exportStar(require(\"./types\"), exports);\n__exportStar(require(\"./utils\"), exports);\n__exportStar(require(\"./core\"), exports);\nexports.default = core_1.default;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ConsensusQuorums = exports.ConsensusMechanisms = exports.DaoMechanisms = void 0;\nexports.DaoMechanisms = {\n    Dictatorial: { dictatorial: {} },\n    Democratic: { democratic: {} },\n    Autonomous: { autonomous: {} },\n};\nexports.ConsensusMechanisms = {\n    StakedTokenCounter: { stakedTokenCounter: {} },\n    LockedTokenCounter: { lockedTokenCounter: {} },\n};\nexports.ConsensusQuorums = {\n    OneThird: { oneThird: {} },\n    Half: { half: {} },\n    TwoThird: { twoThird: {} },\n};\n","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.findReceipt = exports.findProposal = exports.isAddress = void 0;\nconst anchor_1 = require(\"@project-serum/anchor\");\n/**\n * Validate an address\n * @param address Base58 string\n * @returns true/false\n */\nconst isAddress = (address) => {\n    if (!address)\n        return false;\n    try {\n        const publicKey = new anchor_1.web3.PublicKey(address);\n        if (!publicKey)\n            throw new Error('Invalid public key');\n        return true;\n    }\n    catch (er) {\n        return false;\n    }\n};\nexports.isAddress = isAddress;\n/**\n * Find the proposal of a dao based on canonical bump\n * @param index Proposal index\n * @param daoPublicKey Dao public key\n * @param programId InterDAO program public key\n * @returns Proposal public key\n */\nconst findProposal = (index, daoPublicKey, programId) => __awaiter(void 0, void 0, void 0, function* () {\n    const [proposalPublicKey] = yield anchor_1.web3.PublicKey.findProgramAddress([Buffer.from('proposal'), index.toBuffer('le', 8), daoPublicKey.toBuffer()], programId);\n    return proposalPublicKey;\n});\nexports.findProposal = findProposal;\n/**\n * Find the my receipt of an proposal based on canonical bump\n * @param index Receipt index\n * @param proposalPublicKey Proposal public key\n * @param authorityPublicKey Receipt authority public key\n * @param programId InterDAO program public key\n * @returns Receipt public key\n */\nconst findReceipt = (index, proposalPublicKey, authorityPublicKey, programId) => __awaiter(void 0, void 0, void 0, function* () {\n    const [receiptPublicKey] = yield anchor_1.web3.PublicKey.findProgramAddress([\n        Buffer.from('receipt'),\n        index.toBuffer('le', 8),\n        proposalPublicKey.toBuffer(),\n        authorityPublicKey.toBuffer(),\n    ], programId);\n    return receiptPublicKey;\n});\nexports.findReceipt = findReceipt;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.IDL = void 0;\nexports.IDL = {\n    \"version\": \"0.1.0\",\n    \"name\": \"inter_dao\",\n    \"instructions\": [\n        {\n            \"name\": \"initializeDao\",\n            \"accounts\": [\n                {\n                    \"name\": \"authority\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"dao\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"master\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"mint\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"systemProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"rent\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                }\n            ],\n            \"args\": [\n                {\n                    \"name\": \"daoMechanism\",\n                    \"type\": {\n                        \"defined\": \"DaoMechanism\"\n                    }\n                },\n                {\n                    \"name\": \"supply\",\n                    \"type\": \"u64\"\n                }\n            ]\n        },\n        {\n            \"name\": \"initializeProposal\",\n            \"accounts\": [\n                {\n                    \"name\": \"caller\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"proposal\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"dao\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"invokedProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"systemProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"rent\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                }\n            ],\n            \"args\": [\n                {\n                    \"name\": \"data\",\n                    \"type\": \"bytes\"\n                },\n                {\n                    \"name\": \"pubkeys\",\n                    \"type\": {\n                        \"vec\": \"publicKey\"\n                    }\n                },\n                {\n                    \"name\": \"prevIsSigners\",\n                    \"type\": {\n                        \"vec\": \"bool\"\n                    }\n                },\n                {\n                    \"name\": \"prevIsWritables\",\n                    \"type\": {\n                        \"vec\": \"bool\"\n                    }\n                },\n                {\n                    \"name\": \"nextIsSigners\",\n                    \"type\": {\n                        \"vec\": \"bool\"\n                    }\n                },\n                {\n                    \"name\": \"nextIsWritables\",\n                    \"type\": {\n                        \"vec\": \"bool\"\n                    }\n                },\n                {\n                    \"name\": \"consensusMechanism\",\n                    \"type\": {\n                        \"defined\": \"ConsensusMechanism\"\n                    }\n                },\n                {\n                    \"name\": \"consesusQuorum\",\n                    \"type\": {\n                        \"defined\": \"ConsensusQuorum\"\n                    }\n                },\n                {\n                    \"name\": \"startDate\",\n                    \"type\": \"i64\"\n                },\n                {\n                    \"name\": \"endDate\",\n                    \"type\": \"i64\"\n                }\n            ]\n        },\n        {\n            \"name\": \"voteFor\",\n            \"accounts\": [\n                {\n                    \"name\": \"authority\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"src\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"treasurer\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"mint\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"treasury\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"proposal\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"dao\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"receipt\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"tokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"associatedTokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"systemProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"rent\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                }\n            ],\n            \"args\": [\n                {\n                    \"name\": \"index\",\n                    \"type\": \"u64\"\n                },\n                {\n                    \"name\": \"amount\",\n                    \"type\": \"u64\"\n                }\n            ]\n        },\n        {\n            \"name\": \"voteAgainst\",\n            \"accounts\": [\n                {\n                    \"name\": \"authority\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"src\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"treasurer\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"mint\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"treasury\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"proposal\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"dao\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"receipt\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"tokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"associatedTokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"systemProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"rent\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                }\n            ],\n            \"args\": [\n                {\n                    \"name\": \"index\",\n                    \"type\": \"u64\"\n                },\n                {\n                    \"name\": \"amount\",\n                    \"type\": \"u64\"\n                }\n            ]\n        },\n        {\n            \"name\": \"executeProposal\",\n            \"accounts\": [\n                {\n                    \"name\": \"caller\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"proposal\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"dao\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"master\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"invokedProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                }\n            ],\n            \"args\": []\n        },\n        {\n            \"name\": \"close\",\n            \"accounts\": [\n                {\n                    \"name\": \"authority\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"dst\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"treasurer\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"mint\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"treasury\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"proposal\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"dao\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"receipt\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"tokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"associatedTokenProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"systemProgram\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"rent\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                }\n            ],\n            \"args\": []\n        },\n        {\n            \"name\": \"updateDaoMechanism\",\n            \"accounts\": [\n                {\n                    \"name\": \"authority\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"dao\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                }\n            ],\n            \"args\": [\n                {\n                    \"name\": \"daoMechanism\",\n                    \"type\": {\n                        \"defined\": \"DaoMechanism\"\n                    }\n                }\n            ]\n        },\n        {\n            \"name\": \"updateSupply\",\n            \"accounts\": [\n                {\n                    \"name\": \"authority\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"dao\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                }\n            ],\n            \"args\": [\n                {\n                    \"name\": \"supply\",\n                    \"type\": \"u64\"\n                }\n            ]\n        },\n        {\n            \"name\": \"transferAuthority\",\n            \"accounts\": [\n                {\n                    \"name\": \"authority\",\n                    \"isMut\": true,\n                    \"isSigner\": true\n                },\n                {\n                    \"name\": \"newAuthority\",\n                    \"isMut\": false,\n                    \"isSigner\": false\n                },\n                {\n                    \"name\": \"dao\",\n                    \"isMut\": true,\n                    \"isSigner\": false\n                }\n            ],\n            \"args\": []\n        }\n    ],\n    \"accounts\": [\n        {\n            \"name\": \"dao\",\n            \"type\": {\n                \"kind\": \"struct\",\n                \"fields\": [\n                    {\n                        \"name\": \"master\",\n                        \"type\": \"publicKey\"\n                    },\n                    {\n                        \"name\": \"authority\",\n                        \"type\": \"publicKey\"\n                    },\n                    {\n                        \"name\": \"mint\",\n                        \"type\": \"publicKey\"\n                    },\n                    {\n                        \"name\": \"mechanism\",\n                        \"type\": {\n                            \"defined\": \"DaoMechanism\"\n                        }\n                    },\n                    {\n                        \"name\": \"supply\",\n                        \"type\": \"u64\"\n                    },\n                    {\n                        \"name\": \"nonce\",\n                        \"type\": \"u64\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"proposal\",\n            \"type\": {\n                \"kind\": \"struct\",\n                \"fields\": [\n                    {\n                        \"name\": \"index\",\n                        \"type\": \"u64\"\n                    },\n                    {\n                        \"name\": \"creator\",\n                        \"type\": \"publicKey\"\n                    },\n                    {\n                        \"name\": \"dao\",\n                        \"type\": \"publicKey\"\n                    },\n                    {\n                        \"name\": \"invokedProgram\",\n                        \"type\": \"publicKey\"\n                    },\n                    {\n                        \"name\": \"dataLen\",\n                        \"type\": \"u64\"\n                    },\n                    {\n                        \"name\": \"data\",\n                        \"type\": \"bytes\"\n                    },\n                    {\n                        \"name\": \"accountsLen\",\n                        \"type\": \"u8\"\n                    },\n                    {\n                        \"name\": \"accounts\",\n                        \"type\": {\n                            \"vec\": {\n                                \"defined\": \"InvokedAccount\"\n                            }\n                        }\n                    },\n                    {\n                        \"name\": \"daoMechanism\",\n                        \"type\": {\n                            \"defined\": \"DaoMechanism\"\n                        }\n                    },\n                    {\n                        \"name\": \"consensusMechanism\",\n                        \"type\": {\n                            \"defined\": \"ConsensusMechanism\"\n                        }\n                    },\n                    {\n                        \"name\": \"consensusQuorum\",\n                        \"type\": {\n                            \"defined\": \"ConsensusQuorum\"\n                        }\n                    },\n                    {\n                        \"name\": \"executed\",\n                        \"type\": \"bool\"\n                    },\n                    {\n                        \"name\": \"votingForPower\",\n                        \"type\": \"u128\"\n                    },\n                    {\n                        \"name\": \"votingAgainstPower\",\n                        \"type\": \"u128\"\n                    },\n                    {\n                        \"name\": \"supply\",\n                        \"type\": \"u64\"\n                    },\n                    {\n                        \"name\": \"startDate\",\n                        \"type\": \"i64\"\n                    },\n                    {\n                        \"name\": \"endDate\",\n                        \"type\": \"i64\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"receipt\",\n            \"type\": {\n                \"kind\": \"struct\",\n                \"fields\": [\n                    {\n                        \"name\": \"index\",\n                        \"type\": \"u64\"\n                    },\n                    {\n                        \"name\": \"authority\",\n                        \"type\": \"publicKey\"\n                    },\n                    {\n                        \"name\": \"proposal\",\n                        \"type\": \"publicKey\"\n                    },\n                    {\n                        \"name\": \"amount\",\n                        \"type\": \"u64\"\n                    },\n                    {\n                        \"name\": \"power\",\n                        \"type\": \"u128\"\n                    },\n                    {\n                        \"name\": \"lockedDate\",\n                        \"type\": \"i64\"\n                    },\n                    {\n                        \"name\": \"unlockedDate\",\n                        \"type\": \"i64\"\n                    },\n                    {\n                        \"name\": \"action\",\n                        \"type\": {\n                            \"defined\": \"ReceiptAction\"\n                        }\n                    }\n                ]\n            }\n        }\n    ],\n    \"types\": [\n        {\n            \"name\": \"InvokedAccount\",\n            \"type\": {\n                \"kind\": \"struct\",\n                \"fields\": [\n                    {\n                        \"name\": \"pubkey\",\n                        \"type\": \"publicKey\"\n                    },\n                    {\n                        \"name\": \"prevIsSigner\",\n                        \"type\": \"bool\"\n                    },\n                    {\n                        \"name\": \"prevIsWritable\",\n                        \"type\": \"bool\"\n                    },\n                    {\n                        \"name\": \"nextIsSigner\",\n                        \"type\": \"bool\"\n                    },\n                    {\n                        \"name\": \"nextIsWritable\",\n                        \"type\": \"bool\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"DaoMechanism\",\n            \"type\": {\n                \"kind\": \"enum\",\n                \"variants\": [\n                    {\n                        \"name\": \"Dictatorial\"\n                    },\n                    {\n                        \"name\": \"Democratic\"\n                    },\n                    {\n                        \"name\": \"Autonomous\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"ConsensusMechanism\",\n            \"type\": {\n                \"kind\": \"enum\",\n                \"variants\": [\n                    {\n                        \"name\": \"StakedTokenCounter\"\n                    },\n                    {\n                        \"name\": \"LockedTokenCounter\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"ConsensusQuorum\",\n            \"type\": {\n                \"kind\": \"enum\",\n                \"variants\": [\n                    {\n                        \"name\": \"OneThird\"\n                    },\n                    {\n                        \"name\": \"Half\"\n                    },\n                    {\n                        \"name\": \"TwoThird\"\n                    }\n                ]\n            }\n        },\n        {\n            \"name\": \"ReceiptAction\",\n            \"type\": {\n                \"kind\": \"enum\",\n                \"variants\": [\n                    {\n                        \"name\": \"VoteFor\"\n                    },\n                    {\n                        \"name\": \"VoteAgainst\"\n                    }\n                ]\n            }\n        }\n    ],\n    \"events\": [\n        {\n            \"name\": \"CloseEvent\",\n            \"fields\": [\n                {\n                    \"name\": \"authority\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"receipt\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"mint\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"amount\",\n                    \"type\": \"u64\",\n                    \"index\": false\n                }\n            ]\n        },\n        {\n            \"name\": \"ExecuteProposalEvent\",\n            \"fields\": [\n                {\n                    \"name\": \"proposal\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"caller\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                }\n            ]\n        },\n        {\n            \"name\": \"InitializeDAOEvent\",\n            \"fields\": [\n                {\n                    \"name\": \"dao\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"authority\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"mint\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"mechanism\",\n                    \"type\": {\n                        \"defined\": \"DaoMechanism\"\n                    },\n                    \"index\": false\n                },\n                {\n                    \"name\": \"supply\",\n                    \"type\": \"u64\",\n                    \"index\": false\n                }\n            ]\n        },\n        {\n            \"name\": \"InitializeProposalEvent\",\n            \"fields\": [\n                {\n                    \"name\": \"proposal\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"dao\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"caller\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"quorum\",\n                    \"type\": {\n                        \"defined\": \"ConsensusQuorum\"\n                    },\n                    \"index\": false\n                },\n                {\n                    \"name\": \"invokedProgram\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"data\",\n                    \"type\": \"bytes\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"accounts\",\n                    \"type\": {\n                        \"vec\": {\n                            \"defined\": \"InvokedAccount\"\n                        }\n                    },\n                    \"index\": false\n                }\n            ]\n        },\n        {\n            \"name\": \"TransferAuthorityEvent\",\n            \"fields\": [\n                {\n                    \"name\": \"authority\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"newAuthority\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"dao\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                }\n            ]\n        },\n        {\n            \"name\": \"UpdateDaoMechanismEvent\",\n            \"fields\": [\n                {\n                    \"name\": \"dao\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"daoMechanism\",\n                    \"type\": {\n                        \"defined\": \"DaoMechanism\"\n                    },\n                    \"index\": false\n                }\n            ]\n        },\n        {\n            \"name\": \"UpdateSupplyEvent\",\n            \"fields\": [\n                {\n                    \"name\": \"dao\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"supply\",\n                    \"type\": \"u64\",\n                    \"index\": false\n                }\n            ]\n        },\n        {\n            \"name\": \"VoteAgainstEvent\",\n            \"fields\": [\n                {\n                    \"name\": \"authority\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"dao\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"proposal\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"receipt\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"amount\",\n                    \"type\": \"u64\",\n                    \"index\": false\n                }\n            ]\n        },\n        {\n            \"name\": \"VoteForEvent\",\n            \"fields\": [\n                {\n                    \"name\": \"authority\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"dao\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"proposal\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"receipt\",\n                    \"type\": \"publicKey\",\n                    \"index\": false\n                },\n                {\n                    \"name\": \"amount\",\n                    \"type\": \"u64\",\n                    \"index\": false\n                }\n            ]\n        }\n    ],\n    \"errors\": [\n        {\n            \"code\": 6000,\n            \"name\": \"Overflow\",\n            \"msg\": \"Operation overflowed\"\n        },\n        {\n            \"code\": 6001,\n            \"name\": \"InvalidDataLength\",\n            \"msg\": \"Invalid accounts length\"\n        },\n        {\n            \"code\": 6002,\n            \"name\": \"InconsistentProposal\",\n            \"msg\": \"Inconsistent proposal's accounts configuration\"\n        },\n        {\n            \"code\": 6003,\n            \"name\": \"NotConsentedProposal\",\n            \"msg\": \"The community isn't consenting on the proposal yet\"\n        },\n        {\n            \"code\": 6004,\n            \"name\": \"NotStartedProposal\",\n            \"msg\": \"The proposal isn't started yet\"\n        },\n        {\n            \"code\": 6005,\n            \"name\": \"NotEndedProposal\",\n            \"msg\": \"The proposal isn't ended yet\"\n        },\n        {\n            \"code\": 6006,\n            \"name\": \"EndedProposal\",\n            \"msg\": \"The proposal had been ended\"\n        },\n        {\n            \"code\": 6007,\n            \"name\": \"ExecutedProposal\",\n            \"msg\": \"The proposal had been executed\"\n        },\n        {\n            \"code\": 6008,\n            \"name\": \"NoPermission\",\n            \"msg\": \"No permission\"\n        },\n        {\n            \"code\": 6009,\n            \"name\": \"NoBump\",\n            \"msg\": \"Cannot derive the program address\"\n        },\n        {\n            \"code\": 6010,\n            \"name\": \"InvalidCurrentDate\",\n            \"msg\": \"Cannot get current date\"\n        },\n        {\n            \"code\": 6011,\n            \"name\": \"InvalidStartDate\",\n            \"msg\": \"Start date need to be greater than or equal to current date\"\n        },\n        {\n            \"code\": 6012,\n            \"name\": \"InvalidEndDate\",\n            \"msg\": \"End date need to be greater than start date and current date\"\n        }\n    ]\n};\n","\n/*! pako 2.0.4 https://github.com/nodeca/pako @license (MIT AND Zlib) */\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n/* eslint-disable space-unary-ops */\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\n\n//const Z_FILTERED          = 1;\n//const Z_HUFFMAN_ONLY      = 2;\n//const Z_RLE               = 3;\nconst Z_FIXED$1               = 4;\n//const Z_DEFAULT_STRATEGY  = 0;\n\n/* Possible values of the data_type field (though see inflate()) */\nconst Z_BINARY              = 0;\nconst Z_TEXT                = 1;\n//const Z_ASCII             = 1; // = Z_TEXT\nconst Z_UNKNOWN$1             = 2;\n\n/*============================================================================*/\n\n\nfunction zero$1(buf) { let len = buf.length; while (--len >= 0) { buf[len] = 0; } }\n\n// From zutil.h\n\nconst STORED_BLOCK = 0;\nconst STATIC_TREES = 1;\nconst DYN_TREES    = 2;\n/* The three kinds of block type */\n\nconst MIN_MATCH$1    = 3;\nconst MAX_MATCH$1    = 258;\n/* The minimum and maximum match lengths */\n\n// From deflate.h\n/* ===========================================================================\n * Internal compression state.\n */\n\nconst LENGTH_CODES$1  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\n\nconst LITERALS$1      = 256;\n/* number of literal bytes 0..255 */\n\nconst L_CODES$1       = LITERALS$1 + 1 + LENGTH_CODES$1;\n/* number of Literal or Length codes, including the END_BLOCK code */\n\nconst D_CODES$1       = 30;\n/* number of distance codes */\n\nconst BL_CODES$1      = 19;\n/* number of codes used to transfer the bit lengths */\n\nconst HEAP_SIZE$1     = 2 * L_CODES$1 + 1;\n/* maximum heap size */\n\nconst MAX_BITS$1      = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst Buf_size      = 16;\n/* size of bit buffer in bi_buf */\n\n\n/* ===========================================================================\n * Constants\n */\n\nconst MAX_BL_BITS = 7;\n/* Bit length codes must not exceed MAX_BL_BITS bits */\n\nconst END_BLOCK   = 256;\n/* end of block literal code */\n\nconst REP_3_6     = 16;\n/* repeat previous bit length 3-6 times (2 bits of repeat count) */\n\nconst REPZ_3_10   = 17;\n/* repeat a zero length 3-10 times  (3 bits of repeat count) */\n\nconst REPZ_11_138 = 18;\n/* repeat a zero length 11-138 times  (7 bits of repeat count) */\n\n/* eslint-disable comma-spacing,array-bracket-spacing */\nconst extra_lbits =   /* extra bits for each length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,0]);\n\nconst extra_dbits =   /* extra bits for each distance code */\n  new Uint8Array([0,0,0,0,1,1,2,2,3,3,4,4,5,5,6,6,7,7,8,8,9,9,10,10,11,11,12,12,13,13]);\n\nconst extra_blbits =  /* extra bits for each bit length code */\n  new Uint8Array([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,7]);\n\nconst bl_order =\n  new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]);\n/* eslint-enable comma-spacing,array-bracket-spacing */\n\n/* The lengths of the bit length codes are sent in order of decreasing\n * probability, to avoid transmitting the lengths for unused bit length codes.\n */\n\n/* ===========================================================================\n * Local data. These are initialized only once.\n */\n\n// We pre-fill arrays with 0 to avoid uninitialized gaps\n\nconst DIST_CODE_LEN = 512; /* see definition of array dist_code below */\n\n// !!!! Use flat array instead of structure, Freq = i*2, Len = i*2+1\nconst static_ltree  = new Array((L_CODES$1 + 2) * 2);\nzero$1(static_ltree);\n/* The static literal tree. Since the bit lengths are imposed, there is no\n * need for the L_CODES extra codes used during heap construction. However\n * The codes 286 and 287 are needed to build a canonical tree (see _tr_init\n * below).\n */\n\nconst static_dtree  = new Array(D_CODES$1 * 2);\nzero$1(static_dtree);\n/* The static distance tree. (Actually a trivial tree since all codes use\n * 5 bits.)\n */\n\nconst _dist_code    = new Array(DIST_CODE_LEN);\nzero$1(_dist_code);\n/* Distance codes. The first 256 values correspond to the distances\n * 3 .. 258, the last 256 values correspond to the top 8 bits of\n * the 15 bit distances.\n */\n\nconst _length_code  = new Array(MAX_MATCH$1 - MIN_MATCH$1 + 1);\nzero$1(_length_code);\n/* length code for each normalized match length (0 == MIN_MATCH) */\n\nconst base_length   = new Array(LENGTH_CODES$1);\nzero$1(base_length);\n/* First normalized length for each code (0 = MIN_MATCH) */\n\nconst base_dist     = new Array(D_CODES$1);\nzero$1(base_dist);\n/* First normalized distance for each code (0 = distance of 1) */\n\n\nfunction StaticTreeDesc(static_tree, extra_bits, extra_base, elems, max_length) {\n\n  this.static_tree  = static_tree;  /* static tree or NULL */\n  this.extra_bits   = extra_bits;   /* extra bits for each code or NULL */\n  this.extra_base   = extra_base;   /* base index for extra_bits */\n  this.elems        = elems;        /* max number of elements in the tree */\n  this.max_length   = max_length;   /* max bit length for the codes */\n\n  // show if `static_tree` has data or dummy - needed for monomorphic objects\n  this.has_stree    = static_tree && static_tree.length;\n}\n\n\nlet static_l_desc;\nlet static_d_desc;\nlet static_bl_desc;\n\n\nfunction TreeDesc(dyn_tree, stat_desc) {\n  this.dyn_tree = dyn_tree;     /* the dynamic tree */\n  this.max_code = 0;            /* largest code with non zero frequency */\n  this.stat_desc = stat_desc;   /* the corresponding static tree */\n}\n\n\n\nconst d_code = (dist) => {\n\n  return dist < 256 ? _dist_code[dist] : _dist_code[256 + (dist >>> 7)];\n};\n\n\n/* ===========================================================================\n * Output a short LSB first on the stream.\n * IN assertion: there is enough room in pendingBuf.\n */\nconst put_short = (s, w) => {\n//    put_byte(s, (uch)((w) & 0xff));\n//    put_byte(s, (uch)((ush)(w) >> 8));\n  s.pending_buf[s.pending++] = (w) & 0xff;\n  s.pending_buf[s.pending++] = (w >>> 8) & 0xff;\n};\n\n\n/* ===========================================================================\n * Send a value on a given number of bits.\n * IN assertion: length <= 16 and value fits in length bits.\n */\nconst send_bits = (s, value, length) => {\n\n  if (s.bi_valid > (Buf_size - length)) {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    put_short(s, s.bi_buf);\n    s.bi_buf = value >> (Buf_size - s.bi_valid);\n    s.bi_valid += length - Buf_size;\n  } else {\n    s.bi_buf |= (value << s.bi_valid) & 0xffff;\n    s.bi_valid += length;\n  }\n};\n\n\nconst send_code = (s, c, tree) => {\n\n  send_bits(s, tree[c * 2]/*.Code*/, tree[c * 2 + 1]/*.Len*/);\n};\n\n\n/* ===========================================================================\n * Reverse the first len bits of a code, using straightforward code (a faster\n * method would use a table)\n * IN assertion: 1 <= len <= 15\n */\nconst bi_reverse = (code, len) => {\n\n  let res = 0;\n  do {\n    res |= code & 1;\n    code >>>= 1;\n    res <<= 1;\n  } while (--len > 0);\n  return res >>> 1;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer, keeping at most 7 bits in it.\n */\nconst bi_flush = (s) => {\n\n  if (s.bi_valid === 16) {\n    put_short(s, s.bi_buf);\n    s.bi_buf = 0;\n    s.bi_valid = 0;\n\n  } else if (s.bi_valid >= 8) {\n    s.pending_buf[s.pending++] = s.bi_buf & 0xff;\n    s.bi_buf >>= 8;\n    s.bi_valid -= 8;\n  }\n};\n\n\n/* ===========================================================================\n * Compute the optimal bit lengths for a tree and update the total bit length\n * for the current block.\n * IN assertion: the fields freq and dad are set, heap[heap_max] and\n *    above are the tree nodes sorted by increasing frequency.\n * OUT assertions: the field len is set to the optimal bit length, the\n *     array bl_count contains the frequencies for each bit length.\n *     The length opt_len is updated; static_len is also updated if stree is\n *     not null.\n */\nconst gen_bitlen = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc;    /* the tree descriptor */\n{\n  const tree            = desc.dyn_tree;\n  const max_code        = desc.max_code;\n  const stree           = desc.stat_desc.static_tree;\n  const has_stree       = desc.stat_desc.has_stree;\n  const extra           = desc.stat_desc.extra_bits;\n  const base            = desc.stat_desc.extra_base;\n  const max_length      = desc.stat_desc.max_length;\n  let h;              /* heap index */\n  let n, m;           /* iterate over the tree elements */\n  let bits;           /* bit length */\n  let xbits;          /* extra bits */\n  let f;              /* frequency */\n  let overflow = 0;   /* number of elements with bit length too large */\n\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    s.bl_count[bits] = 0;\n  }\n\n  /* In a first pass, compute the optimal bit lengths (which may\n   * overflow in the case of the bit length tree).\n   */\n  tree[s.heap[s.heap_max] * 2 + 1]/*.Len*/ = 0; /* root of the heap */\n\n  for (h = s.heap_max + 1; h < HEAP_SIZE$1; h++) {\n    n = s.heap[h];\n    bits = tree[tree[n * 2 + 1]/*.Dad*/ * 2 + 1]/*.Len*/ + 1;\n    if (bits > max_length) {\n      bits = max_length;\n      overflow++;\n    }\n    tree[n * 2 + 1]/*.Len*/ = bits;\n    /* We overwrite tree[n].Dad which is no longer needed */\n\n    if (n > max_code) { continue; } /* not a leaf node */\n\n    s.bl_count[bits]++;\n    xbits = 0;\n    if (n >= base) {\n      xbits = extra[n - base];\n    }\n    f = tree[n * 2]/*.Freq*/;\n    s.opt_len += f * (bits + xbits);\n    if (has_stree) {\n      s.static_len += f * (stree[n * 2 + 1]/*.Len*/ + xbits);\n    }\n  }\n  if (overflow === 0) { return; }\n\n  // Trace((stderr,\"\\nbit length overflow\\n\"));\n  /* This happens for example on obj2 and pic of the Calgary corpus */\n\n  /* Find the first bit length which could increase: */\n  do {\n    bits = max_length - 1;\n    while (s.bl_count[bits] === 0) { bits--; }\n    s.bl_count[bits]--;      /* move one leaf down the tree */\n    s.bl_count[bits + 1] += 2; /* move one overflow item as its brother */\n    s.bl_count[max_length]--;\n    /* The brother of the overflow item also moves one step up,\n     * but this does not affect bl_count[max_length]\n     */\n    overflow -= 2;\n  } while (overflow > 0);\n\n  /* Now recompute all bit lengths, scanning in increasing frequency.\n   * h is still equal to HEAP_SIZE. (It is simpler to reconstruct all\n   * lengths instead of fixing only the wrong ones. This idea is taken\n   * from 'ar' written by Haruhiko Okumura.)\n   */\n  for (bits = max_length; bits !== 0; bits--) {\n    n = s.bl_count[bits];\n    while (n !== 0) {\n      m = s.heap[--h];\n      if (m > max_code) { continue; }\n      if (tree[m * 2 + 1]/*.Len*/ !== bits) {\n        // Trace((stderr,\"code %d bits %d->%d\\n\", m, tree[m].Len, bits));\n        s.opt_len += (bits - tree[m * 2 + 1]/*.Len*/) * tree[m * 2]/*.Freq*/;\n        tree[m * 2 + 1]/*.Len*/ = bits;\n      }\n      n--;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Generate the codes for a given tree and bit counts (which need not be\n * optimal).\n * IN assertion: the array bl_count contains the bit length statistics for\n * the given tree and the field len is set for all tree elements.\n * OUT assertion: the field code is set for all tree elements of non\n *     zero code length.\n */\nconst gen_codes = (tree, max_code, bl_count) =>\n//    ct_data *tree;             /* the tree to decorate */\n//    int max_code;              /* largest code with non zero frequency */\n//    ushf *bl_count;            /* number of codes at each bit length */\n{\n  const next_code = new Array(MAX_BITS$1 + 1); /* next code value for each bit length */\n  let code = 0;              /* running code value */\n  let bits;                  /* bit index */\n  let n;                     /* code index */\n\n  /* The distribution counts are first used to generate the code values\n   * without bit reversal.\n   */\n  for (bits = 1; bits <= MAX_BITS$1; bits++) {\n    next_code[bits] = code = (code + bl_count[bits - 1]) << 1;\n  }\n  /* Check that the bit counts in bl_count are consistent. The last code\n   * must be all ones.\n   */\n  //Assert (code + bl_count[MAX_BITS]-1 == (1<<MAX_BITS)-1,\n  //        \"inconsistent bit counts\");\n  //Tracev((stderr,\"\\ngen_codes: max_code %d \", max_code));\n\n  for (n = 0;  n <= max_code; n++) {\n    let len = tree[n * 2 + 1]/*.Len*/;\n    if (len === 0) { continue; }\n    /* Now reverse the bits */\n    tree[n * 2]/*.Code*/ = bi_reverse(next_code[len]++, len);\n\n    //Tracecv(tree != static_ltree, (stderr,\"\\nn %3d %c l %2d c %4x (%x) \",\n    //     n, (isgraph(n) ? n : ' '), len, tree[n].Code, next_code[len]-1));\n  }\n};\n\n\n/* ===========================================================================\n * Initialize the various 'constant' tables.\n */\nconst tr_static_init = () => {\n\n  let n;        /* iterates over tree elements */\n  let bits;     /* bit counter */\n  let length;   /* length value */\n  let code;     /* code value */\n  let dist;     /* distance index */\n  const bl_count = new Array(MAX_BITS$1 + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  // do check in _tr_init()\n  //if (static_init_done) return;\n\n  /* For some embedded targets, global variables are not initialized: */\n/*#ifdef NO_INIT_GLOBAL_POINTERS\n  static_l_desc.static_tree = static_ltree;\n  static_l_desc.extra_bits = extra_lbits;\n  static_d_desc.static_tree = static_dtree;\n  static_d_desc.extra_bits = extra_dbits;\n  static_bl_desc.extra_bits = extra_blbits;\n#endif*/\n\n  /* Initialize the mapping length (0..255) -> length code (0..28) */\n  length = 0;\n  for (code = 0; code < LENGTH_CODES$1 - 1; code++) {\n    base_length[code] = length;\n    for (n = 0; n < (1 << extra_lbits[code]); n++) {\n      _length_code[length++] = code;\n    }\n  }\n  //Assert (length == 256, \"tr_static_init: length != 256\");\n  /* Note that the length 255 (match length 258) can be represented\n   * in two different ways: code 284 + 5 bits or code 285, so we\n   * overwrite length_code[255] to use the best encoding:\n   */\n  _length_code[length - 1] = code;\n\n  /* Initialize the mapping dist (0..32K) -> dist code (0..29) */\n  dist = 0;\n  for (code = 0; code < 16; code++) {\n    base_dist[code] = dist;\n    for (n = 0; n < (1 << extra_dbits[code]); n++) {\n      _dist_code[dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: dist != 256\");\n  dist >>= 7; /* from now on, all distances are divided by 128 */\n  for (; code < D_CODES$1; code++) {\n    base_dist[code] = dist << 7;\n    for (n = 0; n < (1 << (extra_dbits[code] - 7)); n++) {\n      _dist_code[256 + dist++] = code;\n    }\n  }\n  //Assert (dist == 256, \"tr_static_init: 256+dist != 512\");\n\n  /* Construct the codes of the static literal tree */\n  for (bits = 0; bits <= MAX_BITS$1; bits++) {\n    bl_count[bits] = 0;\n  }\n\n  n = 0;\n  while (n <= 143) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  while (n <= 255) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 9;\n    n++;\n    bl_count[9]++;\n  }\n  while (n <= 279) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 7;\n    n++;\n    bl_count[7]++;\n  }\n  while (n <= 287) {\n    static_ltree[n * 2 + 1]/*.Len*/ = 8;\n    n++;\n    bl_count[8]++;\n  }\n  /* Codes 286 and 287 do not exist, but we must include them in the\n   * tree construction to get a canonical Huffman tree (longest code\n   * all ones)\n   */\n  gen_codes(static_ltree, L_CODES$1 + 1, bl_count);\n\n  /* The static distance tree is trivial: */\n  for (n = 0; n < D_CODES$1; n++) {\n    static_dtree[n * 2 + 1]/*.Len*/ = 5;\n    static_dtree[n * 2]/*.Code*/ = bi_reverse(n, 5);\n  }\n\n  // Now data ready and we can init static trees\n  static_l_desc = new StaticTreeDesc(static_ltree, extra_lbits, LITERALS$1 + 1, L_CODES$1, MAX_BITS$1);\n  static_d_desc = new StaticTreeDesc(static_dtree, extra_dbits, 0,          D_CODES$1, MAX_BITS$1);\n  static_bl_desc = new StaticTreeDesc(new Array(0), extra_blbits, 0,         BL_CODES$1, MAX_BL_BITS);\n\n  //static_init_done = true;\n};\n\n\n/* ===========================================================================\n * Initialize a new block.\n */\nconst init_block = (s) => {\n\n  let n; /* iterates over tree elements */\n\n  /* Initialize the trees. */\n  for (n = 0; n < L_CODES$1;  n++) { s.dyn_ltree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < D_CODES$1;  n++) { s.dyn_dtree[n * 2]/*.Freq*/ = 0; }\n  for (n = 0; n < BL_CODES$1; n++) { s.bl_tree[n * 2]/*.Freq*/ = 0; }\n\n  s.dyn_ltree[END_BLOCK * 2]/*.Freq*/ = 1;\n  s.opt_len = s.static_len = 0;\n  s.last_lit = s.matches = 0;\n};\n\n\n/* ===========================================================================\n * Flush the bit buffer and align the output on a byte boundary\n */\nconst bi_windup = (s) =>\n{\n  if (s.bi_valid > 8) {\n    put_short(s, s.bi_buf);\n  } else if (s.bi_valid > 0) {\n    //put_byte(s, (Byte)s->bi_buf);\n    s.pending_buf[s.pending++] = s.bi_buf;\n  }\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n};\n\n/* ===========================================================================\n * Copy a stored block, storing first the length and its\n * one's complement if requested.\n */\nconst copy_block = (s, buf, len, header) =>\n//DeflateState *s;\n//charf    *buf;    /* the input data */\n//unsigned len;     /* its length */\n//int      header;  /* true if block header must be written */\n{\n  bi_windup(s);        /* align on byte boundary */\n\n  if (header) {\n    put_short(s, len);\n    put_short(s, ~len);\n  }\n//  while (len--) {\n//    put_byte(s, *buf++);\n//  }\n  s.pending_buf.set(s.window.subarray(buf, buf + len), s.pending);\n  s.pending += len;\n};\n\n/* ===========================================================================\n * Compares to subtrees, using the tree depth as tie breaker when\n * the subtrees have equal frequency. This minimizes the worst case length.\n */\nconst smaller = (tree, n, m, depth) => {\n\n  const _n2 = n * 2;\n  const _m2 = m * 2;\n  return (tree[_n2]/*.Freq*/ < tree[_m2]/*.Freq*/ ||\n         (tree[_n2]/*.Freq*/ === tree[_m2]/*.Freq*/ && depth[n] <= depth[m]));\n};\n\n/* ===========================================================================\n * Restore the heap property by moving down the tree starting at node k,\n * exchanging a node with the smallest of its two sons if necessary, stopping\n * when the heap property is re-established (each father smaller than its\n * two sons).\n */\nconst pqdownheap = (s, tree, k) =>\n//    deflate_state *s;\n//    ct_data *tree;  /* the tree to restore */\n//    int k;               /* node to move down */\n{\n  const v = s.heap[k];\n  let j = k << 1;  /* left son of k */\n  while (j <= s.heap_len) {\n    /* Set j to the smallest of the two sons: */\n    if (j < s.heap_len &&\n      smaller(tree, s.heap[j + 1], s.heap[j], s.depth)) {\n      j++;\n    }\n    /* Exit if v is smaller than both sons */\n    if (smaller(tree, v, s.heap[j], s.depth)) { break; }\n\n    /* Exchange v with the smallest son */\n    s.heap[k] = s.heap[j];\n    k = j;\n\n    /* And continue down the tree, setting j to the left son of k */\n    j <<= 1;\n  }\n  s.heap[k] = v;\n};\n\n\n// inlined manually\n// const SMALLEST = 1;\n\n/* ===========================================================================\n * Send the block data compressed using the given Huffman trees\n */\nconst compress_block = (s, ltree, dtree) =>\n//    deflate_state *s;\n//    const ct_data *ltree; /* literal tree */\n//    const ct_data *dtree; /* distance tree */\n{\n  let dist;           /* distance of matched string */\n  let lc;             /* match length or unmatched char (if dist == 0) */\n  let lx = 0;         /* running index in l_buf */\n  let code;           /* the code to send */\n  let extra;          /* number of extra bits to send */\n\n  if (s.last_lit !== 0) {\n    do {\n      dist = (s.pending_buf[s.d_buf + lx * 2] << 8) | (s.pending_buf[s.d_buf + lx * 2 + 1]);\n      lc = s.pending_buf[s.l_buf + lx];\n      lx++;\n\n      if (dist === 0) {\n        send_code(s, lc, ltree); /* send a literal byte */\n        //Tracecv(isgraph(lc), (stderr,\" '%c' \", lc));\n      } else {\n        /* Here, lc is the match length - MIN_MATCH */\n        code = _length_code[lc];\n        send_code(s, code + LITERALS$1 + 1, ltree); /* send the length code */\n        extra = extra_lbits[code];\n        if (extra !== 0) {\n          lc -= base_length[code];\n          send_bits(s, lc, extra);       /* send the extra length bits */\n        }\n        dist--; /* dist is now the match distance - 1 */\n        code = d_code(dist);\n        //Assert (code < D_CODES, \"bad d_code\");\n\n        send_code(s, code, dtree);       /* send the distance code */\n        extra = extra_dbits[code];\n        if (extra !== 0) {\n          dist -= base_dist[code];\n          send_bits(s, dist, extra);   /* send the extra distance bits */\n        }\n      } /* literal or match pair ? */\n\n      /* Check that the overlay between pending_buf and d_buf+l_buf is ok: */\n      //Assert((uInt)(s->pending) < s->lit_bufsize + 2*lx,\n      //       \"pendingBuf overflow\");\n\n    } while (lx < s.last_lit);\n  }\n\n  send_code(s, END_BLOCK, ltree);\n};\n\n\n/* ===========================================================================\n * Construct one Huffman tree and assigns the code bit strings and lengths.\n * Update the total bit length for the current block.\n * IN assertion: the field freq is set for all tree elements.\n * OUT assertions: the fields len and code are set to the optimal bit length\n *     and corresponding code. The length opt_len is updated; static_len is\n *     also updated if stree is not null. The field max_code is set.\n */\nconst build_tree = (s, desc) =>\n//    deflate_state *s;\n//    tree_desc *desc; /* the tree descriptor */\n{\n  const tree     = desc.dyn_tree;\n  const stree    = desc.stat_desc.static_tree;\n  const has_stree = desc.stat_desc.has_stree;\n  const elems    = desc.stat_desc.elems;\n  let n, m;          /* iterate over heap elements */\n  let max_code = -1; /* largest code with non zero frequency */\n  let node;          /* new node being created */\n\n  /* Construct the initial heap, with least frequent element in\n   * heap[SMALLEST]. The sons of heap[n] are heap[2*n] and heap[2*n+1].\n   * heap[0] is not used.\n   */\n  s.heap_len = 0;\n  s.heap_max = HEAP_SIZE$1;\n\n  for (n = 0; n < elems; n++) {\n    if (tree[n * 2]/*.Freq*/ !== 0) {\n      s.heap[++s.heap_len] = max_code = n;\n      s.depth[n] = 0;\n\n    } else {\n      tree[n * 2 + 1]/*.Len*/ = 0;\n    }\n  }\n\n  /* The pkzip format requires that at least one distance code exists,\n   * and that at least one bit should be sent even if there is only one\n   * possible code. So to avoid special checks later on we force at least\n   * two codes of non zero frequency.\n   */\n  while (s.heap_len < 2) {\n    node = s.heap[++s.heap_len] = (max_code < 2 ? ++max_code : 0);\n    tree[node * 2]/*.Freq*/ = 1;\n    s.depth[node] = 0;\n    s.opt_len--;\n\n    if (has_stree) {\n      s.static_len -= stree[node * 2 + 1]/*.Len*/;\n    }\n    /* node is 0 or 1 so it does not have extra bits */\n  }\n  desc.max_code = max_code;\n\n  /* The elements heap[heap_len/2+1 .. heap_len] are leaves of the tree,\n   * establish sub-heaps of increasing lengths:\n   */\n  for (n = (s.heap_len >> 1/*int /2*/); n >= 1; n--) { pqdownheap(s, tree, n); }\n\n  /* Construct the Huffman tree by repeatedly combining the least two\n   * frequent nodes.\n   */\n  node = elems;              /* next internal node of the tree */\n  do {\n    //pqremove(s, tree, n);  /* n = node of least frequency */\n    /*** pqremove ***/\n    n = s.heap[1/*SMALLEST*/];\n    s.heap[1/*SMALLEST*/] = s.heap[s.heap_len--];\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n    /***/\n\n    m = s.heap[1/*SMALLEST*/]; /* m = node of next least frequency */\n\n    s.heap[--s.heap_max] = n; /* keep the nodes sorted by frequency */\n    s.heap[--s.heap_max] = m;\n\n    /* Create a new node father of n and m */\n    tree[node * 2]/*.Freq*/ = tree[n * 2]/*.Freq*/ + tree[m * 2]/*.Freq*/;\n    s.depth[node] = (s.depth[n] >= s.depth[m] ? s.depth[n] : s.depth[m]) + 1;\n    tree[n * 2 + 1]/*.Dad*/ = tree[m * 2 + 1]/*.Dad*/ = node;\n\n    /* and insert the new node in the heap */\n    s.heap[1/*SMALLEST*/] = node++;\n    pqdownheap(s, tree, 1/*SMALLEST*/);\n\n  } while (s.heap_len >= 2);\n\n  s.heap[--s.heap_max] = s.heap[1/*SMALLEST*/];\n\n  /* At this point, the fields freq and dad are set. We can now\n   * generate the bit lengths.\n   */\n  gen_bitlen(s, desc);\n\n  /* The field len is now set, we can generate the bit codes */\n  gen_codes(tree, max_code, s.bl_count);\n};\n\n\n/* ===========================================================================\n * Scan a literal or distance tree to determine the frequencies of the codes\n * in the bit length tree.\n */\nconst scan_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree;   /* the tree to be scanned */\n//    int max_code;    /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n  tree[(max_code + 1) * 2 + 1]/*.Len*/ = 0xffff; /* guard */\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      s.bl_tree[curlen * 2]/*.Freq*/ += count;\n\n    } else if (curlen !== 0) {\n\n      if (curlen !== prevlen) { s.bl_tree[curlen * 2]/*.Freq*/++; }\n      s.bl_tree[REP_3_6 * 2]/*.Freq*/++;\n\n    } else if (count <= 10) {\n      s.bl_tree[REPZ_3_10 * 2]/*.Freq*/++;\n\n    } else {\n      s.bl_tree[REPZ_11_138 * 2]/*.Freq*/++;\n    }\n\n    count = 0;\n    prevlen = curlen;\n\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Send a literal or distance tree in compressed form, using the codes in\n * bl_tree.\n */\nconst send_tree = (s, tree, max_code) =>\n//    deflate_state *s;\n//    ct_data *tree; /* the tree to be scanned */\n//    int max_code;       /* and its largest code of non zero frequency */\n{\n  let n;                     /* iterates over all tree elements */\n  let prevlen = -1;          /* last emitted length */\n  let curlen;                /* length of current code */\n\n  let nextlen = tree[0 * 2 + 1]/*.Len*/; /* length of next code */\n\n  let count = 0;             /* repeat count of the current code */\n  let max_count = 7;         /* max repeat count */\n  let min_count = 4;         /* min repeat count */\n\n  /* tree[max_code+1].Len = -1; */  /* guard already set */\n  if (nextlen === 0) {\n    max_count = 138;\n    min_count = 3;\n  }\n\n  for (n = 0; n <= max_code; n++) {\n    curlen = nextlen;\n    nextlen = tree[(n + 1) * 2 + 1]/*.Len*/;\n\n    if (++count < max_count && curlen === nextlen) {\n      continue;\n\n    } else if (count < min_count) {\n      do { send_code(s, curlen, s.bl_tree); } while (--count !== 0);\n\n    } else if (curlen !== 0) {\n      if (curlen !== prevlen) {\n        send_code(s, curlen, s.bl_tree);\n        count--;\n      }\n      //Assert(count >= 3 && count <= 6, \" 3_6?\");\n      send_code(s, REP_3_6, s.bl_tree);\n      send_bits(s, count - 3, 2);\n\n    } else if (count <= 10) {\n      send_code(s, REPZ_3_10, s.bl_tree);\n      send_bits(s, count - 3, 3);\n\n    } else {\n      send_code(s, REPZ_11_138, s.bl_tree);\n      send_bits(s, count - 11, 7);\n    }\n\n    count = 0;\n    prevlen = curlen;\n    if (nextlen === 0) {\n      max_count = 138;\n      min_count = 3;\n\n    } else if (curlen === nextlen) {\n      max_count = 6;\n      min_count = 3;\n\n    } else {\n      max_count = 7;\n      min_count = 4;\n    }\n  }\n};\n\n\n/* ===========================================================================\n * Construct the Huffman tree for the bit lengths and return the index in\n * bl_order of the last bit length code to send.\n */\nconst build_bl_tree = (s) => {\n\n  let max_blindex;  /* index of last bit length code of non zero freq */\n\n  /* Determine the bit length frequencies for literal and distance trees */\n  scan_tree(s, s.dyn_ltree, s.l_desc.max_code);\n  scan_tree(s, s.dyn_dtree, s.d_desc.max_code);\n\n  /* Build the bit length tree: */\n  build_tree(s, s.bl_desc);\n  /* opt_len now includes the length of the tree representations, except\n   * the lengths of the bit lengths codes and the 5+5+4 bits for the counts.\n   */\n\n  /* Determine the number of bit length codes to send. The pkzip format\n   * requires that at least 4 bit length codes be sent. (appnote.txt says\n   * 3 but the actual value used is 4.)\n   */\n  for (max_blindex = BL_CODES$1 - 1; max_blindex >= 3; max_blindex--) {\n    if (s.bl_tree[bl_order[max_blindex] * 2 + 1]/*.Len*/ !== 0) {\n      break;\n    }\n  }\n  /* Update opt_len to include the bit length tree and counts */\n  s.opt_len += 3 * (max_blindex + 1) + 5 + 5 + 4;\n  //Tracev((stderr, \"\\ndyn trees: dyn %ld, stat %ld\",\n  //        s->opt_len, s->static_len));\n\n  return max_blindex;\n};\n\n\n/* ===========================================================================\n * Send the header for a block using dynamic Huffman trees: the counts, the\n * lengths of the bit length codes, the literal tree and the distance tree.\n * IN assertion: lcodes >= 257, dcodes >= 1, blcodes >= 4.\n */\nconst send_all_trees = (s, lcodes, dcodes, blcodes) =>\n//    deflate_state *s;\n//    int lcodes, dcodes, blcodes; /* number of codes for each tree */\n{\n  let rank;                    /* index in bl_order */\n\n  //Assert (lcodes >= 257 && dcodes >= 1 && blcodes >= 4, \"not enough codes\");\n  //Assert (lcodes <= L_CODES && dcodes <= D_CODES && blcodes <= BL_CODES,\n  //        \"too many codes\");\n  //Tracev((stderr, \"\\nbl counts: \"));\n  send_bits(s, lcodes - 257, 5); /* not +255 as stated in appnote.txt */\n  send_bits(s, dcodes - 1,   5);\n  send_bits(s, blcodes - 4,  4); /* not -3 as stated in appnote.txt */\n  for (rank = 0; rank < blcodes; rank++) {\n    //Tracev((stderr, \"\\nbl code %2d \", bl_order[rank]));\n    send_bits(s, s.bl_tree[bl_order[rank] * 2 + 1]/*.Len*/, 3);\n  }\n  //Tracev((stderr, \"\\nbl tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_ltree, lcodes - 1); /* literal tree */\n  //Tracev((stderr, \"\\nlit tree: sent %ld\", s->bits_sent));\n\n  send_tree(s, s.dyn_dtree, dcodes - 1); /* distance tree */\n  //Tracev((stderr, \"\\ndist tree: sent %ld\", s->bits_sent));\n};\n\n\n/* ===========================================================================\n * Check if the data type is TEXT or BINARY, using the following algorithm:\n * - TEXT if the two conditions below are satisfied:\n *    a) There are no non-portable control characters belonging to the\n *       \"black list\" (0..6, 14..25, 28..31).\n *    b) There is at least one printable character belonging to the\n *       \"white list\" (9 {TAB}, 10 {LF}, 13 {CR}, 32..255).\n * - BINARY otherwise.\n * - The following partially-portable control characters form a\n *   \"gray list\" that is ignored in this detection algorithm:\n *   (7 {BEL}, 8 {BS}, 11 {VT}, 12 {FF}, 26 {SUB}, 27 {ESC}).\n * IN assertion: the fields Freq of dyn_ltree are set.\n */\nconst detect_data_type = (s) => {\n  /* black_mask is the bit mask of black-listed bytes\n   * set bits 0..6, 14..25, and 28..31\n   * 0xf3ffc07f = binary 11110011111111111100000001111111\n   */\n  let black_mask = 0xf3ffc07f;\n  let n;\n\n  /* Check for non-textual (\"black-listed\") bytes. */\n  for (n = 0; n <= 31; n++, black_mask >>>= 1) {\n    if ((black_mask & 1) && (s.dyn_ltree[n * 2]/*.Freq*/ !== 0)) {\n      return Z_BINARY;\n    }\n  }\n\n  /* Check for textual (\"white-listed\") bytes. */\n  if (s.dyn_ltree[9 * 2]/*.Freq*/ !== 0 || s.dyn_ltree[10 * 2]/*.Freq*/ !== 0 ||\n      s.dyn_ltree[13 * 2]/*.Freq*/ !== 0) {\n    return Z_TEXT;\n  }\n  for (n = 32; n < LITERALS$1; n++) {\n    if (s.dyn_ltree[n * 2]/*.Freq*/ !== 0) {\n      return Z_TEXT;\n    }\n  }\n\n  /* There are no \"black-listed\" or \"white-listed\" bytes:\n   * this stream either is empty or has tolerated (\"gray-listed\") bytes only.\n   */\n  return Z_BINARY;\n};\n\n\nlet static_init_done = false;\n\n/* ===========================================================================\n * Initialize the tree data structures for a new zlib stream.\n */\nconst _tr_init$1 = (s) =>\n{\n\n  if (!static_init_done) {\n    tr_static_init();\n    static_init_done = true;\n  }\n\n  s.l_desc  = new TreeDesc(s.dyn_ltree, static_l_desc);\n  s.d_desc  = new TreeDesc(s.dyn_dtree, static_d_desc);\n  s.bl_desc = new TreeDesc(s.bl_tree, static_bl_desc);\n\n  s.bi_buf = 0;\n  s.bi_valid = 0;\n\n  /* Initialize the first block of the first file: */\n  init_block(s);\n};\n\n\n/* ===========================================================================\n * Send a stored block\n */\nconst _tr_stored_block$1 = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  send_bits(s, (STORED_BLOCK << 1) + (last ? 1 : 0), 3);    /* send block type */\n  copy_block(s, buf, stored_len, true); /* with header */\n};\n\n\n/* ===========================================================================\n * Send one empty static block to give enough lookahead for inflate.\n * This takes 10 bits, of which 7 may remain in the bit buffer.\n */\nconst _tr_align$1 = (s) => {\n  send_bits(s, STATIC_TREES << 1, 3);\n  send_code(s, END_BLOCK, static_ltree);\n  bi_flush(s);\n};\n\n\n/* ===========================================================================\n * Determine the best encoding for the current block: dynamic trees, static\n * trees or store, and output the encoded block to the zip file.\n */\nconst _tr_flush_block$1 = (s, buf, stored_len, last) =>\n//DeflateState *s;\n//charf *buf;       /* input block, or NULL if too old */\n//ulg stored_len;   /* length of input block */\n//int last;         /* one if this is the last block for a file */\n{\n  let opt_lenb, static_lenb;  /* opt_len and static_len in bytes */\n  let max_blindex = 0;        /* index of last bit length code of non zero freq */\n\n  /* Build the Huffman trees unless a stored block is forced */\n  if (s.level > 0) {\n\n    /* Check if the file is binary or text */\n    if (s.strm.data_type === Z_UNKNOWN$1) {\n      s.strm.data_type = detect_data_type(s);\n    }\n\n    /* Construct the literal and distance trees */\n    build_tree(s, s.l_desc);\n    // Tracev((stderr, \"\\nlit data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n\n    build_tree(s, s.d_desc);\n    // Tracev((stderr, \"\\ndist data: dyn %ld, stat %ld\", s->opt_len,\n    //        s->static_len));\n    /* At this point, opt_len and static_len are the total bit lengths of\n     * the compressed block data, excluding the tree representations.\n     */\n\n    /* Build the bit length tree for the above two trees, and get the index\n     * in bl_order of the last bit length code to send.\n     */\n    max_blindex = build_bl_tree(s);\n\n    /* Determine the best encoding. Compute the block lengths in bytes. */\n    opt_lenb = (s.opt_len + 3 + 7) >>> 3;\n    static_lenb = (s.static_len + 3 + 7) >>> 3;\n\n    // Tracev((stderr, \"\\nopt %lu(%lu) stat %lu(%lu) stored %lu lit %u \",\n    //        opt_lenb, s->opt_len, static_lenb, s->static_len, stored_len,\n    //        s->last_lit));\n\n    if (static_lenb <= opt_lenb) { opt_lenb = static_lenb; }\n\n  } else {\n    // Assert(buf != (char*)0, \"lost buf\");\n    opt_lenb = static_lenb = stored_len + 5; /* force a stored block */\n  }\n\n  if ((stored_len + 4 <= opt_lenb) && (buf !== -1)) {\n    /* 4: two words for the lengths */\n\n    /* The test buf != NULL is only necessary if LIT_BUFSIZE > WSIZE.\n     * Otherwise we can't have processed more than WSIZE input bytes since\n     * the last block flush, because compression would have been\n     * successful. If LIT_BUFSIZE <= WSIZE, it is never too late to\n     * transform a block into a stored block.\n     */\n    _tr_stored_block$1(s, buf, stored_len, last);\n\n  } else if (s.strategy === Z_FIXED$1 || static_lenb === opt_lenb) {\n\n    send_bits(s, (STATIC_TREES << 1) + (last ? 1 : 0), 3);\n    compress_block(s, static_ltree, static_dtree);\n\n  } else {\n    send_bits(s, (DYN_TREES << 1) + (last ? 1 : 0), 3);\n    send_all_trees(s, s.l_desc.max_code + 1, s.d_desc.max_code + 1, max_blindex + 1);\n    compress_block(s, s.dyn_ltree, s.dyn_dtree);\n  }\n  // Assert (s->compressed_len == s->bits_sent, \"bad compressed size\");\n  /* The above check is made mod 2^32, for files larger than 512 MB\n   * and uLong implemented on 32 bits.\n   */\n  init_block(s);\n\n  if (last) {\n    bi_windup(s);\n  }\n  // Tracev((stderr,\"\\ncomprlen %lu(%lu) \", s->compressed_len>>3,\n  //       s->compressed_len-7*last));\n};\n\n/* ===========================================================================\n * Save the match info and tally the frequency counts. Return true if\n * the current block must be flushed.\n */\nconst _tr_tally$1 = (s, dist, lc) =>\n//    deflate_state *s;\n//    unsigned dist;  /* distance of matched string */\n//    unsigned lc;    /* match length-MIN_MATCH or unmatched char (if dist==0) */\n{\n  //let out_length, in_length, dcode;\n\n  s.pending_buf[s.d_buf + s.last_lit * 2]     = (dist >>> 8) & 0xff;\n  s.pending_buf[s.d_buf + s.last_lit * 2 + 1] = dist & 0xff;\n\n  s.pending_buf[s.l_buf + s.last_lit] = lc & 0xff;\n  s.last_lit++;\n\n  if (dist === 0) {\n    /* lc is the unmatched char */\n    s.dyn_ltree[lc * 2]/*.Freq*/++;\n  } else {\n    s.matches++;\n    /* Here, lc is the match length - MIN_MATCH */\n    dist--;             /* dist = match distance - 1 */\n    //Assert((ush)dist < (ush)MAX_DIST(s) &&\n    //       (ush)lc <= (ush)(MAX_MATCH-MIN_MATCH) &&\n    //       (ush)d_code(dist) < (ush)D_CODES,  \"_tr_tally: bad match\");\n\n    s.dyn_ltree[(_length_code[lc] + LITERALS$1 + 1) * 2]/*.Freq*/++;\n    s.dyn_dtree[d_code(dist) * 2]/*.Freq*/++;\n  }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n\n//#ifdef TRUNCATE_BLOCK\n//  /* Try to guess if it is profitable to stop the current block here */\n//  if ((s.last_lit & 0x1fff) === 0 && s.level > 2) {\n//    /* Compute an upper bound for the compressed length */\n//    out_length = s.last_lit*8;\n//    in_length = s.strstart - s.block_start;\n//\n//    for (dcode = 0; dcode < D_CODES; dcode++) {\n//      out_length += s.dyn_dtree[dcode*2]/*.Freq*/ * (5 + extra_dbits[dcode]);\n//    }\n//    out_length >>>= 3;\n//    //Tracev((stderr,\"\\nlast_lit %u, in %ld, out ~%ld(%ld%%) \",\n//    //       s->last_lit, in_length, out_length,\n//    //       100L - out_length*100L/in_length));\n//    if (s.matches < (s.last_lit>>1)/*int /2*/ && out_length < (in_length>>1)/*int /2*/) {\n//      return true;\n//    }\n//  }\n//#endif\n\n  return (s.last_lit === s.lit_bufsize - 1);\n  /* We avoid equality with lit_bufsize because of wraparound at 64K\n   * on 16 bit machines and because stored blocks are restricted to\n   * 64K-1 bytes.\n   */\n};\n\nvar _tr_init_1  = _tr_init$1;\nvar _tr_stored_block_1 = _tr_stored_block$1;\nvar _tr_flush_block_1  = _tr_flush_block$1;\nvar _tr_tally_1 = _tr_tally$1;\nvar _tr_align_1 = _tr_align$1;\n\nvar trees = {\n\t_tr_init: _tr_init_1,\n\t_tr_stored_block: _tr_stored_block_1,\n\t_tr_flush_block: _tr_flush_block_1,\n\t_tr_tally: _tr_tally_1,\n\t_tr_align: _tr_align_1\n};\n\n// Note: adler32 takes 12% for level 0 and 2% for level 6.\n// It isn't worth it to make additional optimizations as in original.\n// Small size is preferable.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst adler32 = (adler, buf, len, pos) => {\n  let s1 = (adler & 0xffff) |0,\n      s2 = ((adler >>> 16) & 0xffff) |0,\n      n = 0;\n\n  while (len !== 0) {\n    // Set limit ~ twice less than 5552, to keep\n    // s2 in 31-bits, because we force signed ints.\n    // in other case %= will fail.\n    n = len > 2000 ? 2000 : len;\n    len -= n;\n\n    do {\n      s1 = (s1 + buf[pos++]) |0;\n      s2 = (s2 + s1) |0;\n    } while (--n);\n\n    s1 %= 65521;\n    s2 %= 65521;\n  }\n\n  return (s1 | (s2 << 16)) |0;\n};\n\n\nvar adler32_1 = adler32;\n\n// Note: we can't get significant speed boost here.\n// So write code to minimize size - no pregenerated tables\n// and array tools dependencies.\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// Use ordinary array, since untyped makes no boost here\nconst makeTable = () => {\n  let c, table = [];\n\n  for (var n = 0; n < 256; n++) {\n    c = n;\n    for (var k = 0; k < 8; k++) {\n      c = ((c & 1) ? (0xEDB88320 ^ (c >>> 1)) : (c >>> 1));\n    }\n    table[n] = c;\n  }\n\n  return table;\n};\n\n// Create table on load. Just 255 signed longs. Not a problem.\nconst crcTable = new Uint32Array(makeTable());\n\n\nconst crc32 = (crc, buf, len, pos) => {\n  const t = crcTable;\n  const end = pos + len;\n\n  crc ^= -1;\n\n  for (let i = pos; i < end; i++) {\n    crc = (crc >>> 8) ^ t[(crc ^ buf[i]) & 0xFF];\n  }\n\n  return (crc ^ (-1)); // >>> 0;\n};\n\n\nvar crc32_1 = crc32;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar messages = {\n  2:      'need dictionary',     /* Z_NEED_DICT       2  */\n  1:      'stream end',          /* Z_STREAM_END      1  */\n  0:      '',                    /* Z_OK              0  */\n  '-1':   'file error',          /* Z_ERRNO         (-1) */\n  '-2':   'stream error',        /* Z_STREAM_ERROR  (-2) */\n  '-3':   'data error',          /* Z_DATA_ERROR    (-3) */\n  '-4':   'insufficient memory', /* Z_MEM_ERROR     (-4) */\n  '-5':   'buffer error',        /* Z_BUF_ERROR     (-5) */\n  '-6':   'incompatible version' /* Z_VERSION_ERROR (-6) */\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nvar constants$2 = {\n\n  /* Allowed flush values; see deflate() and inflate() below for details */\n  Z_NO_FLUSH:         0,\n  Z_PARTIAL_FLUSH:    1,\n  Z_SYNC_FLUSH:       2,\n  Z_FULL_FLUSH:       3,\n  Z_FINISH:           4,\n  Z_BLOCK:            5,\n  Z_TREES:            6,\n\n  /* Return codes for the compression/decompression functions. Negative values\n  * are errors, positive values are used for special but normal events.\n  */\n  Z_OK:               0,\n  Z_STREAM_END:       1,\n  Z_NEED_DICT:        2,\n  Z_ERRNO:           -1,\n  Z_STREAM_ERROR:    -2,\n  Z_DATA_ERROR:      -3,\n  Z_MEM_ERROR:       -4,\n  Z_BUF_ERROR:       -5,\n  //Z_VERSION_ERROR: -6,\n\n  /* compression levels */\n  Z_NO_COMPRESSION:         0,\n  Z_BEST_SPEED:             1,\n  Z_BEST_COMPRESSION:       9,\n  Z_DEFAULT_COMPRESSION:   -1,\n\n\n  Z_FILTERED:               1,\n  Z_HUFFMAN_ONLY:           2,\n  Z_RLE:                    3,\n  Z_FIXED:                  4,\n  Z_DEFAULT_STRATEGY:       0,\n\n  /* Possible values of the data_type field (though see inflate()) */\n  Z_BINARY:                 0,\n  Z_TEXT:                   1,\n  //Z_ASCII:                1, // = Z_TEXT (deprecated)\n  Z_UNKNOWN:                2,\n\n  /* The deflate compression method */\n  Z_DEFLATED:               8\n  //Z_NULL:                 null // Use -1 or null inline, depending on var type\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst { _tr_init, _tr_stored_block, _tr_flush_block, _tr_tally, _tr_align } = trees;\n\n\n\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$2, Z_PARTIAL_FLUSH, Z_FULL_FLUSH: Z_FULL_FLUSH$1, Z_FINISH: Z_FINISH$3, Z_BLOCK: Z_BLOCK$1,\n  Z_OK: Z_OK$3, Z_STREAM_END: Z_STREAM_END$3, Z_STREAM_ERROR: Z_STREAM_ERROR$2, Z_DATA_ERROR: Z_DATA_ERROR$2, Z_BUF_ERROR: Z_BUF_ERROR$1,\n  Z_DEFAULT_COMPRESSION: Z_DEFAULT_COMPRESSION$1,\n  Z_FILTERED, Z_HUFFMAN_ONLY, Z_RLE, Z_FIXED, Z_DEFAULT_STRATEGY: Z_DEFAULT_STRATEGY$1,\n  Z_UNKNOWN,\n  Z_DEFLATED: Z_DEFLATED$2\n} = constants$2;\n\n/*============================================================================*/\n\n\nconst MAX_MEM_LEVEL = 9;\n/* Maximum value for memLevel in deflateInit2 */\nconst MAX_WBITS$1 = 15;\n/* 32K LZ77 window */\nconst DEF_MEM_LEVEL = 8;\n\n\nconst LENGTH_CODES  = 29;\n/* number of length codes, not counting the special END_BLOCK code */\nconst LITERALS      = 256;\n/* number of literal bytes 0..255 */\nconst L_CODES       = LITERALS + 1 + LENGTH_CODES;\n/* number of Literal or Length codes, including the END_BLOCK code */\nconst D_CODES       = 30;\n/* number of distance codes */\nconst BL_CODES      = 19;\n/* number of codes used to transfer the bit lengths */\nconst HEAP_SIZE     = 2 * L_CODES + 1;\n/* maximum heap size */\nconst MAX_BITS  = 15;\n/* All codes must not exceed MAX_BITS bits */\n\nconst MIN_MATCH = 3;\nconst MAX_MATCH = 258;\nconst MIN_LOOKAHEAD = (MAX_MATCH + MIN_MATCH + 1);\n\nconst PRESET_DICT = 0x20;\n\nconst INIT_STATE = 42;\nconst EXTRA_STATE = 69;\nconst NAME_STATE = 73;\nconst COMMENT_STATE = 91;\nconst HCRC_STATE = 103;\nconst BUSY_STATE = 113;\nconst FINISH_STATE = 666;\n\nconst BS_NEED_MORE      = 1; /* block not completed, need more input or more output */\nconst BS_BLOCK_DONE     = 2; /* block flush performed */\nconst BS_FINISH_STARTED = 3; /* finish started, need only more output at next deflate */\nconst BS_FINISH_DONE    = 4; /* finish done, accept no more input or output */\n\nconst OS_CODE = 0x03; // Unix :) . Don't detect, use this default.\n\nconst err = (strm, errorCode) => {\n  strm.msg = messages[errorCode];\n  return errorCode;\n};\n\nconst rank = (f) => {\n  return ((f) << 1) - ((f) > 4 ? 9 : 0);\n};\n\nconst zero = (buf) => {\n  let len = buf.length; while (--len >= 0) { buf[len] = 0; }\n};\n\n\n/* eslint-disable new-cap */\nlet HASH_ZLIB = (s, prev, data) => ((prev << s.hash_shift) ^ data) & s.hash_mask;\n// This hash causes less collisions, https://github.com/nodeca/pako/issues/135\n// But breaks binary compatibility\n//let HASH_FAST = (s, prev, data) => ((prev << 8) + (prev >> 8) + (data << 4)) & s.hash_mask;\nlet HASH = HASH_ZLIB;\n\n/* =========================================================================\n * Flush as much pending output as possible. All deflate() output goes\n * through this function so some applications may wish to modify it\n * to avoid allocating a large strm->output buffer and copying into it.\n * (See also read_buf()).\n */\nconst flush_pending = (strm) => {\n  const s = strm.state;\n\n  //_tr_flush_bits(s);\n  let len = s.pending;\n  if (len > strm.avail_out) {\n    len = strm.avail_out;\n  }\n  if (len === 0) { return; }\n\n  strm.output.set(s.pending_buf.subarray(s.pending_out, s.pending_out + len), strm.next_out);\n  strm.next_out += len;\n  s.pending_out += len;\n  strm.total_out += len;\n  strm.avail_out -= len;\n  s.pending -= len;\n  if (s.pending === 0) {\n    s.pending_out = 0;\n  }\n};\n\n\nconst flush_block_only = (s, last) => {\n  _tr_flush_block(s, (s.block_start >= 0 ? s.block_start : -1), s.strstart - s.block_start, last);\n  s.block_start = s.strstart;\n  flush_pending(s.strm);\n};\n\n\nconst put_byte = (s, b) => {\n  s.pending_buf[s.pending++] = b;\n};\n\n\n/* =========================================================================\n * Put a short in the pending buffer. The 16-bit value is put in MSB order.\n * IN assertion: the stream state is correct and there is enough room in\n * pending_buf.\n */\nconst putShortMSB = (s, b) => {\n\n  //  put_byte(s, (Byte)(b >> 8));\n//  put_byte(s, (Byte)(b & 0xff));\n  s.pending_buf[s.pending++] = (b >>> 8) & 0xff;\n  s.pending_buf[s.pending++] = b & 0xff;\n};\n\n\n/* ===========================================================================\n * Read a new buffer from the current input stream, update the adler32\n * and total number of bytes read.  All deflate() input goes through\n * this function so some applications may wish to modify it to avoid\n * allocating a large strm->input buffer and copying from it.\n * (See also flush_pending()).\n */\nconst read_buf = (strm, buf, start, size) => {\n\n  let len = strm.avail_in;\n\n  if (len > size) { len = size; }\n  if (len === 0) { return 0; }\n\n  strm.avail_in -= len;\n\n  // zmemcpy(buf, strm->next_in, len);\n  buf.set(strm.input.subarray(strm.next_in, strm.next_in + len), start);\n  if (strm.state.wrap === 1) {\n    strm.adler = adler32_1(strm.adler, buf, len, start);\n  }\n\n  else if (strm.state.wrap === 2) {\n    strm.adler = crc32_1(strm.adler, buf, len, start);\n  }\n\n  strm.next_in += len;\n  strm.total_in += len;\n\n  return len;\n};\n\n\n/* ===========================================================================\n * Set match_start to the longest match starting at the given string and\n * return its length. Matches shorter or equal to prev_length are discarded,\n * in which case the result is equal to prev_length and match_start is\n * garbage.\n * IN assertions: cur_match is the head of the hash chain for the current\n *   string (strstart) and its distance is <= MAX_DIST, and prev_length >= 1\n * OUT assertion: the match length is not greater than s->lookahead.\n */\nconst longest_match = (s, cur_match) => {\n\n  let chain_length = s.max_chain_length;      /* max hash chain length */\n  let scan = s.strstart; /* current string */\n  let match;                       /* matched string */\n  let len;                           /* length of current match */\n  let best_len = s.prev_length;              /* best match length so far */\n  let nice_match = s.nice_match;             /* stop if match long enough */\n  const limit = (s.strstart > (s.w_size - MIN_LOOKAHEAD)) ?\n      s.strstart - (s.w_size - MIN_LOOKAHEAD) : 0/*NIL*/;\n\n  const _win = s.window; // shortcut\n\n  const wmask = s.w_mask;\n  const prev  = s.prev;\n\n  /* Stop when cur_match becomes <= limit. To simplify the code,\n   * we prevent matches with the string of window index 0.\n   */\n\n  const strend = s.strstart + MAX_MATCH;\n  let scan_end1  = _win[scan + best_len - 1];\n  let scan_end   = _win[scan + best_len];\n\n  /* The code is optimized for HASH_BITS >= 8 and MAX_MATCH-2 multiple of 16.\n   * It is easy to get rid of this optimization if necessary.\n   */\n  // Assert(s->hash_bits >= 8 && MAX_MATCH == 258, \"Code too clever\");\n\n  /* Do not waste too much time if we already have a good match: */\n  if (s.prev_length >= s.good_match) {\n    chain_length >>= 2;\n  }\n  /* Do not look for matches beyond the end of the input. This is necessary\n   * to make deflate deterministic.\n   */\n  if (nice_match > s.lookahead) { nice_match = s.lookahead; }\n\n  // Assert((ulg)s->strstart <= s->window_size-MIN_LOOKAHEAD, \"need lookahead\");\n\n  do {\n    // Assert(cur_match < s->strstart, \"no future\");\n    match = cur_match;\n\n    /* Skip to next match if the match length cannot increase\n     * or if the match length is less than 2.  Note that the checks below\n     * for insufficient lookahead only occur occasionally for performance\n     * reasons.  Therefore uninitialized memory will be accessed, and\n     * conditional jumps will be made that depend on those values.\n     * However the length of the match is limited to the lookahead, so\n     * the output of deflate is not affected by the uninitialized values.\n     */\n\n    if (_win[match + best_len]     !== scan_end  ||\n        _win[match + best_len - 1] !== scan_end1 ||\n        _win[match]                !== _win[scan] ||\n        _win[++match]              !== _win[scan + 1]) {\n      continue;\n    }\n\n    /* The check at best_len-1 can be removed because it will be made\n     * again later. (This heuristic is not always a win.)\n     * It is not necessary to compare scan[2] and match[2] since they\n     * are always equal when the other bytes match, given that\n     * the hash keys are equal and that HASH_BITS >= 8.\n     */\n    scan += 2;\n    match++;\n    // Assert(*scan == *match, \"match[2]?\");\n\n    /* We check for insufficient lookahead only every 8th comparison;\n     * the 256th check will be made at strstart+258.\n     */\n    do {\n      /*jshint noempty:false*/\n    } while (_win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             _win[++scan] === _win[++match] && _win[++scan] === _win[++match] &&\n             scan < strend);\n\n    // Assert(scan <= s->window+(unsigned)(s->window_size-1), \"wild scan\");\n\n    len = MAX_MATCH - (strend - scan);\n    scan = strend - MAX_MATCH;\n\n    if (len > best_len) {\n      s.match_start = cur_match;\n      best_len = len;\n      if (len >= nice_match) {\n        break;\n      }\n      scan_end1  = _win[scan + best_len - 1];\n      scan_end   = _win[scan + best_len];\n    }\n  } while ((cur_match = prev[cur_match & wmask]) > limit && --chain_length !== 0);\n\n  if (best_len <= s.lookahead) {\n    return best_len;\n  }\n  return s.lookahead;\n};\n\n\n/* ===========================================================================\n * Fill the window when the lookahead becomes insufficient.\n * Updates strstart and lookahead.\n *\n * IN assertion: lookahead < MIN_LOOKAHEAD\n * OUT assertions: strstart <= window_size-MIN_LOOKAHEAD\n *    At least one byte has been read, or avail_in == 0; reads are\n *    performed for at least two bytes (required for the zip translate_eol\n *    option -- not supported here).\n */\nconst fill_window = (s) => {\n\n  const _w_size = s.w_size;\n  let p, n, m, more, str;\n\n  //Assert(s->lookahead < MIN_LOOKAHEAD, \"already enough lookahead\");\n\n  do {\n    more = s.window_size - s.lookahead - s.strstart;\n\n    // JS ints have 32 bit, block below not needed\n    /* Deal with !@#$% 64K limit: */\n    //if (sizeof(int) <= 2) {\n    //    if (more == 0 && s->strstart == 0 && s->lookahead == 0) {\n    //        more = wsize;\n    //\n    //  } else if (more == (unsigned)(-1)) {\n    //        /* Very unlikely, but possible on 16 bit machine if\n    //         * strstart == 0 && lookahead == 1 (input done a byte at time)\n    //         */\n    //        more--;\n    //    }\n    //}\n\n\n    /* If the window is almost full and there is insufficient lookahead,\n     * move the upper half to the lower one to make room in the upper half.\n     */\n    if (s.strstart >= _w_size + (_w_size - MIN_LOOKAHEAD)) {\n\n      s.window.set(s.window.subarray(_w_size, _w_size + _w_size), 0);\n      s.match_start -= _w_size;\n      s.strstart -= _w_size;\n      /* we now have strstart >= MAX_DIST */\n      s.block_start -= _w_size;\n\n      /* Slide the hash table (could be avoided with 32 bit values\n       at the expense of memory usage). We slide even when level == 0\n       to keep the hash table consistent if we switch back to level > 0\n       later. (Using level 0 permanently is not an optimal usage of\n       zlib, so we don't care about this pathological case.)\n       */\n\n      n = s.hash_size;\n      p = n;\n\n      do {\n        m = s.head[--p];\n        s.head[p] = (m >= _w_size ? m - _w_size : 0);\n      } while (--n);\n\n      n = _w_size;\n      p = n;\n\n      do {\n        m = s.prev[--p];\n        s.prev[p] = (m >= _w_size ? m - _w_size : 0);\n        /* If n is not on any hash chain, prev[n] is garbage but\n         * its value will never be used.\n         */\n      } while (--n);\n\n      more += _w_size;\n    }\n    if (s.strm.avail_in === 0) {\n      break;\n    }\n\n    /* If there was no sliding:\n     *    strstart <= WSIZE+MAX_DIST-1 && lookahead <= MIN_LOOKAHEAD - 1 &&\n     *    more == window_size - lookahead - strstart\n     * => more >= window_size - (MIN_LOOKAHEAD-1 + WSIZE + MAX_DIST-1)\n     * => more >= window_size - 2*WSIZE + 2\n     * In the BIG_MEM or MMAP case (not yet supported),\n     *   window_size == input_size + MIN_LOOKAHEAD  &&\n     *   strstart + s->lookahead <= input_size => more >= MIN_LOOKAHEAD.\n     * Otherwise, window_size == 2*WSIZE so more >= 2.\n     * If there was sliding, more >= WSIZE. So in all cases, more >= 2.\n     */\n    //Assert(more >= 2, \"more < 2\");\n    n = read_buf(s.strm, s.window, s.strstart + s.lookahead, more);\n    s.lookahead += n;\n\n    /* Initialize the hash value now that we have some input: */\n    if (s.lookahead + s.insert >= MIN_MATCH) {\n      str = s.strstart - s.insert;\n      s.ins_h = s.window[str];\n\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + 1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + 1]);\n//#if MIN_MATCH != 3\n//        Call update_hash() MIN_MATCH-3 more times\n//#endif\n      while (s.insert) {\n        /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n        s.prev[str & s.w_mask] = s.head[s.ins_h];\n        s.head[s.ins_h] = str;\n        str++;\n        s.insert--;\n        if (s.lookahead + s.insert < MIN_MATCH) {\n          break;\n        }\n      }\n    }\n    /* If the whole input has less than MIN_MATCH bytes, ins_h is garbage,\n     * but this is not important since only literal bytes will be emitted.\n     */\n\n  } while (s.lookahead < MIN_LOOKAHEAD && s.strm.avail_in !== 0);\n\n  /* If the WIN_INIT bytes after the end of the current data have never been\n   * written, then zero those bytes in order to avoid memory check reports of\n   * the use of uninitialized (or uninitialised as Julian writes) bytes by\n   * the longest match routines.  Update the high water mark for the next\n   * time through here.  WIN_INIT is set to MAX_MATCH since the longest match\n   * routines allow scanning to strstart + MAX_MATCH, ignoring lookahead.\n   */\n//  if (s.high_water < s.window_size) {\n//    const curr = s.strstart + s.lookahead;\n//    let init = 0;\n//\n//    if (s.high_water < curr) {\n//      /* Previous high water mark below current data -- zero WIN_INIT\n//       * bytes or up to end of window, whichever is less.\n//       */\n//      init = s.window_size - curr;\n//      if (init > WIN_INIT)\n//        init = WIN_INIT;\n//      zmemzero(s->window + curr, (unsigned)init);\n//      s->high_water = curr + init;\n//    }\n//    else if (s->high_water < (ulg)curr + WIN_INIT) {\n//      /* High water mark at or above current data, but below current data\n//       * plus WIN_INIT -- zero out to current data plus WIN_INIT, or up\n//       * to end of window, whichever is less.\n//       */\n//      init = (ulg)curr + WIN_INIT - s->high_water;\n//      if (init > s->window_size - s->high_water)\n//        init = s->window_size - s->high_water;\n//      zmemzero(s->window + s->high_water, (unsigned)init);\n//      s->high_water += init;\n//    }\n//  }\n//\n//  Assert((ulg)s->strstart <= s->window_size - MIN_LOOKAHEAD,\n//    \"not enough room for search\");\n};\n\n/* ===========================================================================\n * Copy without compression as much as possible from the input stream, return\n * the current block state.\n * This function does not insert new strings in the dictionary since\n * uncompressible data is probably not useful. This function is used\n * only for the level=0 compression option.\n * NOTE: this function should be optimized to avoid extra copying from\n * window to pending_buf.\n */\nconst deflate_stored = (s, flush) => {\n\n  /* Stored blocks are limited to 0xffff bytes, pending_buf is limited\n   * to pending_buf_size, and each stored block has a 5 byte header:\n   */\n  let max_block_size = 0xffff;\n\n  if (max_block_size > s.pending_buf_size - 5) {\n    max_block_size = s.pending_buf_size - 5;\n  }\n\n  /* Copy as much as possible from input to output: */\n  for (;;) {\n    /* Fill the window as much as possible: */\n    if (s.lookahead <= 1) {\n\n      //Assert(s->strstart < s->w_size+MAX_DIST(s) ||\n      //  s->block_start >= (long)s->w_size, \"slide too late\");\n//      if (!(s.strstart < s.w_size + (s.w_size - MIN_LOOKAHEAD) ||\n//        s.block_start >= s.w_size)) {\n//        throw  new Error(\"slide too late\");\n//      }\n\n      fill_window(s);\n      if (s.lookahead === 0 && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n\n      if (s.lookahead === 0) {\n        break;\n      }\n      /* flush the current block */\n    }\n    //Assert(s->block_start >= 0L, \"block gone\");\n//    if (s.block_start < 0) throw new Error(\"block gone\");\n\n    s.strstart += s.lookahead;\n    s.lookahead = 0;\n\n    /* Emit a stored block if pending_buf will be full: */\n    const max_start = s.block_start + max_block_size;\n\n    if (s.strstart === 0 || s.strstart >= max_start) {\n      /* strstart == 0 is possible when wraparound on 16-bit machine */\n      s.lookahead = s.strstart - max_start;\n      s.strstart = max_start;\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n\n\n    }\n    /* Flush if we may have to slide, otherwise block_start may become\n     * negative and the data will be gone:\n     */\n    if (s.strstart - s.block_start >= (s.w_size - MIN_LOOKAHEAD)) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n\n  s.insert = 0;\n\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n\n  if (s.strstart > s.block_start) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_NEED_MORE;\n};\n\n/* ===========================================================================\n * Compress as much as possible from the input stream, return the current\n * block state.\n * This function does not perform lazy evaluation of matches and inserts\n * new strings in the dictionary only for unmatched strings or for short\n * matches. It is used only for the fast compression options.\n */\nconst deflate_fast = (s, flush) => {\n\n  let hash_head;        /* head of the hash chain */\n  let bflush;           /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) {\n        break; /* flush the current block */\n      }\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     * At this point we have always match_length < MIN_MATCH\n     */\n    if (hash_head !== 0/*NIL*/ && ((s.strstart - hash_head) <= (s.w_size - MIN_LOOKAHEAD))) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n    }\n    if (s.match_length >= MIN_MATCH) {\n      // check_match(s, s.strstart, s.match_start, s.match_length); // for debug only\n\n      /*** _tr_tally_dist(s, s.strstart - s.match_start,\n                     s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, s.strstart - s.match_start, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n\n      /* Insert new strings in the hash table only if the match length\n       * is not too large. This saves time but degrades compression.\n       */\n      if (s.match_length <= s.max_lazy_match/*max_insert_length*/ && s.lookahead >= MIN_MATCH) {\n        s.match_length--; /* string at strstart already in table */\n        do {\n          s.strstart++;\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n          /* strstart never exceeds WSIZE-MAX_MATCH, so there are\n           * always MIN_MATCH bytes ahead.\n           */\n        } while (--s.match_length !== 0);\n        s.strstart++;\n      } else\n      {\n        s.strstart += s.match_length;\n        s.match_length = 0;\n        s.ins_h = s.window[s.strstart];\n        /* UPDATE_HASH(s, s.ins_h, s.window[s.strstart+1]); */\n        s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + 1]);\n\n//#if MIN_MATCH != 3\n//                Call UPDATE_HASH() MIN_MATCH-3 more times\n//#endif\n        /* If lookahead < MIN_MATCH, ins_h is garbage, but it does not\n         * matter since it will be recomputed at next deflate call.\n         */\n      }\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s.window[s.strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = ((s.strstart < (MIN_MATCH - 1)) ? s.strstart : MIN_MATCH - 1);\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * Same as above, but achieves better compression. We use a lazy\n * evaluation for matches: a match is finally adopted only if there is\n * no better match at the next window position.\n */\nconst deflate_slow = (s, flush) => {\n\n  let hash_head;          /* head of hash chain */\n  let bflush;              /* set if current block must be flushed */\n\n  let max_insert;\n\n  /* Process the input block. */\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the next match, plus MIN_MATCH bytes to insert the\n     * string following the next match.\n     */\n    if (s.lookahead < MIN_LOOKAHEAD) {\n      fill_window(s);\n      if (s.lookahead < MIN_LOOKAHEAD && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* Insert the string window[strstart .. strstart+2] in the\n     * dictionary, and set hash_head to the head of the hash chain:\n     */\n    hash_head = 0/*NIL*/;\n    if (s.lookahead >= MIN_MATCH) {\n      /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n      s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n      hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n      s.head[s.ins_h] = s.strstart;\n      /***/\n    }\n\n    /* Find the longest match, discarding those <= prev_length.\n     */\n    s.prev_length = s.match_length;\n    s.prev_match = s.match_start;\n    s.match_length = MIN_MATCH - 1;\n\n    if (hash_head !== 0/*NIL*/ && s.prev_length < s.max_lazy_match &&\n        s.strstart - hash_head <= (s.w_size - MIN_LOOKAHEAD)/*MAX_DIST(s)*/) {\n      /* To simplify the code, we prevent matches with the string\n       * of window index 0 (in particular we have to avoid a match\n       * of the string with itself at the start of the input file).\n       */\n      s.match_length = longest_match(s, hash_head);\n      /* longest_match() sets match_start */\n\n      if (s.match_length <= 5 &&\n         (s.strategy === Z_FILTERED || (s.match_length === MIN_MATCH && s.strstart - s.match_start > 4096/*TOO_FAR*/))) {\n\n        /* If prev_match is also MIN_MATCH, match_start is garbage\n         * but we will ignore the current match anyway.\n         */\n        s.match_length = MIN_MATCH - 1;\n      }\n    }\n    /* If there was a match at the previous step and the current\n     * match is not better, output the previous match:\n     */\n    if (s.prev_length >= MIN_MATCH && s.match_length <= s.prev_length) {\n      max_insert = s.strstart + s.lookahead - MIN_MATCH;\n      /* Do not insert strings in hash table beyond this. */\n\n      //check_match(s, s.strstart-1, s.prev_match, s.prev_length);\n\n      /***_tr_tally_dist(s, s.strstart - 1 - s.prev_match,\n                     s.prev_length - MIN_MATCH, bflush);***/\n      bflush = _tr_tally(s, s.strstart - 1 - s.prev_match, s.prev_length - MIN_MATCH);\n      /* Insert in hash table all strings up to the end of the match.\n       * strstart-1 and strstart are already inserted. If there is not\n       * enough lookahead, the last two strings are not inserted in\n       * the hash table.\n       */\n      s.lookahead -= s.prev_length - 1;\n      s.prev_length -= 2;\n      do {\n        if (++s.strstart <= max_insert) {\n          /*** INSERT_STRING(s, s.strstart, hash_head); ***/\n          s.ins_h = HASH(s, s.ins_h, s.window[s.strstart + MIN_MATCH - 1]);\n          hash_head = s.prev[s.strstart & s.w_mask] = s.head[s.ins_h];\n          s.head[s.ins_h] = s.strstart;\n          /***/\n        }\n      } while (--s.prev_length !== 0);\n      s.match_available = 0;\n      s.match_length = MIN_MATCH - 1;\n      s.strstart++;\n\n      if (bflush) {\n        /*** FLUSH_BLOCK(s, 0); ***/\n        flush_block_only(s, false);\n        if (s.strm.avail_out === 0) {\n          return BS_NEED_MORE;\n        }\n        /***/\n      }\n\n    } else if (s.match_available) {\n      /* If there was no match at the previous position, output a\n       * single literal. If there was a match but the current match\n       * is longer, truncate the previous match to a single literal.\n       */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n      /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n      if (bflush) {\n        /*** FLUSH_BLOCK_ONLY(s, 0) ***/\n        flush_block_only(s, false);\n        /***/\n      }\n      s.strstart++;\n      s.lookahead--;\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n    } else {\n      /* There is no previous match to compare with, wait for\n       * the next step to decide.\n       */\n      s.match_available = 1;\n      s.strstart++;\n      s.lookahead--;\n    }\n  }\n  //Assert (flush != Z_NO_FLUSH, \"no flush?\");\n  if (s.match_available) {\n    //Tracevv((stderr,\"%c\", s->window[s->strstart-1]));\n    /*** _tr_tally_lit(s, s.window[s.strstart-1], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart - 1]);\n\n    s.match_available = 0;\n  }\n  s.insert = s.strstart < MIN_MATCH - 1 ? s.strstart : MIN_MATCH - 1;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n\n  return BS_BLOCK_DONE;\n};\n\n\n/* ===========================================================================\n * For Z_RLE, simply look for runs of bytes, generate matches only of distance\n * one.  Do not maintain a hash table.  (It will be regenerated if this run of\n * deflate switches away from Z_RLE.)\n */\nconst deflate_rle = (s, flush) => {\n\n  let bflush;            /* set if current block must be flushed */\n  let prev;              /* byte at distance one to match */\n  let scan, strend;      /* scan goes up to strend for length of run */\n\n  const _win = s.window;\n\n  for (;;) {\n    /* Make sure that we always have enough lookahead, except\n     * at the end of the input file. We need MAX_MATCH bytes\n     * for the longest run, plus one for the unrolled loop.\n     */\n    if (s.lookahead <= MAX_MATCH) {\n      fill_window(s);\n      if (s.lookahead <= MAX_MATCH && flush === Z_NO_FLUSH$2) {\n        return BS_NEED_MORE;\n      }\n      if (s.lookahead === 0) { break; } /* flush the current block */\n    }\n\n    /* See how many times the previous byte repeats */\n    s.match_length = 0;\n    if (s.lookahead >= MIN_MATCH && s.strstart > 0) {\n      scan = s.strstart - 1;\n      prev = _win[scan];\n      if (prev === _win[++scan] && prev === _win[++scan] && prev === _win[++scan]) {\n        strend = s.strstart + MAX_MATCH;\n        do {\n          /*jshint noempty:false*/\n        } while (prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 prev === _win[++scan] && prev === _win[++scan] &&\n                 scan < strend);\n        s.match_length = MAX_MATCH - (strend - scan);\n        if (s.match_length > s.lookahead) {\n          s.match_length = s.lookahead;\n        }\n      }\n      //Assert(scan <= s->window+(uInt)(s->window_size-1), \"wild scan\");\n    }\n\n    /* Emit match if have run of MIN_MATCH or longer, else emit literal */\n    if (s.match_length >= MIN_MATCH) {\n      //check_match(s, s.strstart, s.strstart - 1, s.match_length);\n\n      /*** _tr_tally_dist(s, 1, s.match_length - MIN_MATCH, bflush); ***/\n      bflush = _tr_tally(s, 1, s.match_length - MIN_MATCH);\n\n      s.lookahead -= s.match_length;\n      s.strstart += s.match_length;\n      s.match_length = 0;\n    } else {\n      /* No match, output a literal byte */\n      //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n      /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n      bflush = _tr_tally(s, 0, s.window[s.strstart]);\n\n      s.lookahead--;\n      s.strstart++;\n    }\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* ===========================================================================\n * For Z_HUFFMAN_ONLY, do not look for matches.  Do not maintain a hash table.\n * (It will be regenerated if this run of deflate switches away from Huffman.)\n */\nconst deflate_huff = (s, flush) => {\n\n  let bflush;             /* set if current block must be flushed */\n\n  for (;;) {\n    /* Make sure that we have a literal to write. */\n    if (s.lookahead === 0) {\n      fill_window(s);\n      if (s.lookahead === 0) {\n        if (flush === Z_NO_FLUSH$2) {\n          return BS_NEED_MORE;\n        }\n        break;      /* flush the current block */\n      }\n    }\n\n    /* Output a literal byte */\n    s.match_length = 0;\n    //Tracevv((stderr,\"%c\", s->window[s->strstart]));\n    /*** _tr_tally_lit(s, s.window[s.strstart], bflush); ***/\n    bflush = _tr_tally(s, 0, s.window[s.strstart]);\n    s.lookahead--;\n    s.strstart++;\n    if (bflush) {\n      /*** FLUSH_BLOCK(s, 0); ***/\n      flush_block_only(s, false);\n      if (s.strm.avail_out === 0) {\n        return BS_NEED_MORE;\n      }\n      /***/\n    }\n  }\n  s.insert = 0;\n  if (flush === Z_FINISH$3) {\n    /*** FLUSH_BLOCK(s, 1); ***/\n    flush_block_only(s, true);\n    if (s.strm.avail_out === 0) {\n      return BS_FINISH_STARTED;\n    }\n    /***/\n    return BS_FINISH_DONE;\n  }\n  if (s.last_lit) {\n    /*** FLUSH_BLOCK(s, 0); ***/\n    flush_block_only(s, false);\n    if (s.strm.avail_out === 0) {\n      return BS_NEED_MORE;\n    }\n    /***/\n  }\n  return BS_BLOCK_DONE;\n};\n\n/* Values for max_lazy_match, good_match and max_chain_length, depending on\n * the desired pack level (0..9). The values given below have been tuned to\n * exclude worst case performance for pathological files. Better values may be\n * found for specific files.\n */\nfunction Config(good_length, max_lazy, nice_length, max_chain, func) {\n\n  this.good_length = good_length;\n  this.max_lazy = max_lazy;\n  this.nice_length = nice_length;\n  this.max_chain = max_chain;\n  this.func = func;\n}\n\nconst configuration_table = [\n  /*      good lazy nice chain */\n  new Config(0, 0, 0, 0, deflate_stored),          /* 0 store only */\n  new Config(4, 4, 8, 4, deflate_fast),            /* 1 max speed, no lazy matches */\n  new Config(4, 5, 16, 8, deflate_fast),           /* 2 */\n  new Config(4, 6, 32, 32, deflate_fast),          /* 3 */\n\n  new Config(4, 4, 16, 16, deflate_slow),          /* 4 lazy matches */\n  new Config(8, 16, 32, 32, deflate_slow),         /* 5 */\n  new Config(8, 16, 128, 128, deflate_slow),       /* 6 */\n  new Config(8, 32, 128, 256, deflate_slow),       /* 7 */\n  new Config(32, 128, 258, 1024, deflate_slow),    /* 8 */\n  new Config(32, 258, 258, 4096, deflate_slow)     /* 9 max compression */\n];\n\n\n/* ===========================================================================\n * Initialize the \"longest match\" routines for a new zlib stream\n */\nconst lm_init = (s) => {\n\n  s.window_size = 2 * s.w_size;\n\n  /*** CLEAR_HASH(s); ***/\n  zero(s.head); // Fill with NIL (= 0);\n\n  /* Set the default configuration parameters:\n   */\n  s.max_lazy_match = configuration_table[s.level].max_lazy;\n  s.good_match = configuration_table[s.level].good_length;\n  s.nice_match = configuration_table[s.level].nice_length;\n  s.max_chain_length = configuration_table[s.level].max_chain;\n\n  s.strstart = 0;\n  s.block_start = 0;\n  s.lookahead = 0;\n  s.insert = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  s.ins_h = 0;\n};\n\n\nfunction DeflateState() {\n  this.strm = null;            /* pointer back to this zlib stream */\n  this.status = 0;            /* as the name implies */\n  this.pending_buf = null;      /* output still pending */\n  this.pending_buf_size = 0;  /* size of pending_buf */\n  this.pending_out = 0;       /* next pending byte to output to the stream */\n  this.pending = 0;           /* nb of bytes in the pending buffer */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.gzhead = null;         /* gzip header information to write */\n  this.gzindex = 0;           /* where in extra, name, or comment */\n  this.method = Z_DEFLATED$2; /* can only be DEFLATED */\n  this.last_flush = -1;   /* value of flush param for previous deflate call */\n\n  this.w_size = 0;  /* LZ77 window size (32K by default) */\n  this.w_bits = 0;  /* log2(w_size)  (8..16) */\n  this.w_mask = 0;  /* w_size - 1 */\n\n  this.window = null;\n  /* Sliding window. Input bytes are read into the second half of the window,\n   * and move to the first half later to keep a dictionary of at least wSize\n   * bytes. With this organization, matches are limited to a distance of\n   * wSize-MAX_MATCH bytes, but this ensures that IO is always\n   * performed with a length multiple of the block size.\n   */\n\n  this.window_size = 0;\n  /* Actual size of window: 2*wSize, except when the user input buffer\n   * is directly used as sliding window.\n   */\n\n  this.prev = null;\n  /* Link to older string with same hash index. To limit the size of this\n   * array to 64K, this link is maintained only for the last 32K strings.\n   * An index in this array is thus a window index modulo 32K.\n   */\n\n  this.head = null;   /* Heads of the hash chains or NIL. */\n\n  this.ins_h = 0;       /* hash index of string to be inserted */\n  this.hash_size = 0;   /* number of elements in hash table */\n  this.hash_bits = 0;   /* log2(hash_size) */\n  this.hash_mask = 0;   /* hash_size-1 */\n\n  this.hash_shift = 0;\n  /* Number of bits by which ins_h must be shifted at each input\n   * step. It must be such that after MIN_MATCH steps, the oldest\n   * byte no longer takes part in the hash key, that is:\n   *   hash_shift * MIN_MATCH >= hash_bits\n   */\n\n  this.block_start = 0;\n  /* Window position at the beginning of the current output block. Gets\n   * negative when the window is moved backwards.\n   */\n\n  this.match_length = 0;      /* length of best match */\n  this.prev_match = 0;        /* previous match */\n  this.match_available = 0;   /* set if previous match exists */\n  this.strstart = 0;          /* start of string to insert */\n  this.match_start = 0;       /* start of matching string */\n  this.lookahead = 0;         /* number of valid bytes ahead in window */\n\n  this.prev_length = 0;\n  /* Length of the best match at previous step. Matches not greater than this\n   * are discarded. This is used in the lazy match evaluation.\n   */\n\n  this.max_chain_length = 0;\n  /* To speed up deflation, hash chains are never searched beyond this\n   * length.  A higher limit improves compression ratio but degrades the\n   * speed.\n   */\n\n  this.max_lazy_match = 0;\n  /* Attempt to find a better match only when the current match is strictly\n   * smaller than this value. This mechanism is used only for compression\n   * levels >= 4.\n   */\n  // That's alias to max_lazy_match, don't use directly\n  //this.max_insert_length = 0;\n  /* Insert new strings in the hash table only if the match length is not\n   * greater than this length. This saves time but degrades compression.\n   * max_insert_length is used only for compression levels <= 3.\n   */\n\n  this.level = 0;     /* compression level (1..9) */\n  this.strategy = 0;  /* favor or force Huffman coding*/\n\n  this.good_match = 0;\n  /* Use a faster search when the previous match is longer than this */\n\n  this.nice_match = 0; /* Stop searching when current match exceeds this */\n\n              /* used by trees.c: */\n\n  /* Didn't use ct_data typedef below to suppress compiler warning */\n\n  // struct ct_data_s dyn_ltree[HEAP_SIZE];   /* literal and length tree */\n  // struct ct_data_s dyn_dtree[2*D_CODES+1]; /* distance tree */\n  // struct ct_data_s bl_tree[2*BL_CODES+1];  /* Huffman tree for bit lengths */\n\n  // Use flat array of DOUBLE size, with interleaved fata,\n  // because JS does not support effective\n  this.dyn_ltree  = new Uint16Array(HEAP_SIZE * 2);\n  this.dyn_dtree  = new Uint16Array((2 * D_CODES + 1) * 2);\n  this.bl_tree    = new Uint16Array((2 * BL_CODES + 1) * 2);\n  zero(this.dyn_ltree);\n  zero(this.dyn_dtree);\n  zero(this.bl_tree);\n\n  this.l_desc   = null;         /* desc. for literal tree */\n  this.d_desc   = null;         /* desc. for distance tree */\n  this.bl_desc  = null;         /* desc. for bit length tree */\n\n  //ush bl_count[MAX_BITS+1];\n  this.bl_count = new Uint16Array(MAX_BITS + 1);\n  /* number of codes at each bit length for an optimal tree */\n\n  //int heap[2*L_CODES+1];      /* heap used to build the Huffman trees */\n  this.heap = new Uint16Array(2 * L_CODES + 1);  /* heap used to build the Huffman trees */\n  zero(this.heap);\n\n  this.heap_len = 0;               /* number of elements in the heap */\n  this.heap_max = 0;               /* element of largest frequency */\n  /* The sons of heap[n] are heap[2*n] and heap[2*n+1]. heap[0] is not used.\n   * The same heap array is used to build all trees.\n   */\n\n  this.depth = new Uint16Array(2 * L_CODES + 1); //uch depth[2*L_CODES+1];\n  zero(this.depth);\n  /* Depth of each subtree used as tie breaker for trees of equal frequency\n   */\n\n  this.l_buf = 0;          /* buffer index for literals or lengths */\n\n  this.lit_bufsize = 0;\n  /* Size of match buffer for literals/lengths.  There are 4 reasons for\n   * limiting lit_bufsize to 64K:\n   *   - frequencies can be kept in 16 bit counters\n   *   - if compression is not successful for the first block, all input\n   *     data is still in the window so we can still emit a stored block even\n   *     when input comes from standard input.  (This can also be done for\n   *     all blocks if lit_bufsize is not greater than 32K.)\n   *   - if compression is not successful for a file smaller than 64K, we can\n   *     even emit a stored file instead of a stored block (saving 5 bytes).\n   *     This is applicable only for zip (not gzip or zlib).\n   *   - creating new Huffman trees less frequently may not provide fast\n   *     adaptation to changes in the input data statistics. (Take for\n   *     example a binary file with poorly compressible code followed by\n   *     a highly compressible string table.) Smaller buffer sizes give\n   *     fast adaptation but have of course the overhead of transmitting\n   *     trees more frequently.\n   *   - I can't count above 4\n   */\n\n  this.last_lit = 0;      /* running index in l_buf */\n\n  this.d_buf = 0;\n  /* Buffer index for distances. To simplify the code, d_buf and l_buf have\n   * the same number of elements. To use different lengths, an extra flag\n   * array would be necessary.\n   */\n\n  this.opt_len = 0;       /* bit length of current block with optimal trees */\n  this.static_len = 0;    /* bit length of current block with static trees */\n  this.matches = 0;       /* number of string matches in current block */\n  this.insert = 0;        /* bytes at end of window left to insert */\n\n\n  this.bi_buf = 0;\n  /* Output buffer. bits are inserted starting at the bottom (least\n   * significant bits).\n   */\n  this.bi_valid = 0;\n  /* Number of valid bits in bi_buf.  All bits above the last valid bit\n   * are always zero.\n   */\n\n  // Used for window memory init. We safely ignore it for JS. That makes\n  // sense only for pointers and memory check tools.\n  //this.high_water = 0;\n  /* High water mark offset in window for initialized bytes -- bytes above\n   * this are set to zero in order to avoid memory check warnings when\n   * longest match routines access bytes past the input.  This is then\n   * updated to the new high water mark.\n   */\n}\n\n\nconst deflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.total_in = strm.total_out = 0;\n  strm.data_type = Z_UNKNOWN;\n\n  const s = strm.state;\n  s.pending = 0;\n  s.pending_out = 0;\n\n  if (s.wrap < 0) {\n    s.wrap = -s.wrap;\n    /* was made negative by deflate(..., Z_FINISH); */\n  }\n  s.status = (s.wrap ? INIT_STATE : BUSY_STATE);\n  strm.adler = (s.wrap === 2) ?\n    0  // crc32(0, Z_NULL, 0)\n  :\n    1; // adler32(0, Z_NULL, 0)\n  s.last_flush = Z_NO_FLUSH$2;\n  _tr_init(s);\n  return Z_OK$3;\n};\n\n\nconst deflateReset = (strm) => {\n\n  const ret = deflateResetKeep(strm);\n  if (ret === Z_OK$3) {\n    lm_init(strm.state);\n  }\n  return ret;\n};\n\n\nconst deflateSetHeader = (strm, head) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$2; }\n  if (strm.state.wrap !== 2) { return Z_STREAM_ERROR$2; }\n  strm.state.gzhead = head;\n  return Z_OK$3;\n};\n\n\nconst deflateInit2 = (strm, level, method, windowBits, memLevel, strategy) => {\n\n  if (!strm) { // === Z_NULL\n    return Z_STREAM_ERROR$2;\n  }\n  let wrap = 1;\n\n  if (level === Z_DEFAULT_COMPRESSION$1) {\n    level = 6;\n  }\n\n  if (windowBits < 0) { /* suppress zlib wrapper */\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n\n  else if (windowBits > 15) {\n    wrap = 2;           /* write gzip wrapper instead */\n    windowBits -= 16;\n  }\n\n\n  if (memLevel < 1 || memLevel > MAX_MEM_LEVEL || method !== Z_DEFLATED$2 ||\n    windowBits < 8 || windowBits > 15 || level < 0 || level > 9 ||\n    strategy < 0 || strategy > Z_FIXED) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n\n  if (windowBits === 8) {\n    windowBits = 9;\n  }\n  /* until 256-byte window bug fixed */\n\n  const s = new DeflateState();\n\n  strm.state = s;\n  s.strm = strm;\n\n  s.wrap = wrap;\n  s.gzhead = null;\n  s.w_bits = windowBits;\n  s.w_size = 1 << s.w_bits;\n  s.w_mask = s.w_size - 1;\n\n  s.hash_bits = memLevel + 7;\n  s.hash_size = 1 << s.hash_bits;\n  s.hash_mask = s.hash_size - 1;\n  s.hash_shift = ~~((s.hash_bits + MIN_MATCH - 1) / MIN_MATCH);\n\n  s.window = new Uint8Array(s.w_size * 2);\n  s.head = new Uint16Array(s.hash_size);\n  s.prev = new Uint16Array(s.w_size);\n\n  // Don't need mem init magic for JS.\n  //s.high_water = 0;  /* nothing written to s->window yet */\n\n  s.lit_bufsize = 1 << (memLevel + 6); /* 16K elements by default */\n\n  s.pending_buf_size = s.lit_bufsize * 4;\n\n  //overlay = (ushf *) ZALLOC(strm, s->lit_bufsize, sizeof(ush)+2);\n  //s->pending_buf = (uchf *) overlay;\n  s.pending_buf = new Uint8Array(s.pending_buf_size);\n\n  // It is offset from `s.pending_buf` (size is `s.lit_bufsize * 2`)\n  //s->d_buf = overlay + s->lit_bufsize/sizeof(ush);\n  s.d_buf = 1 * s.lit_bufsize;\n\n  //s->l_buf = s->pending_buf + (1+sizeof(ush))*s->lit_bufsize;\n  s.l_buf = (1 + 2) * s.lit_bufsize;\n\n  s.level = level;\n  s.strategy = strategy;\n  s.method = method;\n\n  return deflateReset(strm);\n};\n\nconst deflateInit = (strm, level) => {\n\n  return deflateInit2(strm, level, Z_DEFLATED$2, MAX_WBITS$1, DEF_MEM_LEVEL, Z_DEFAULT_STRATEGY$1);\n};\n\n\nconst deflate$2 = (strm, flush) => {\n\n  let beg, val; // for gzip header write only\n\n  if (!strm || !strm.state ||\n    flush > Z_BLOCK$1 || flush < 0) {\n    return strm ? err(strm, Z_STREAM_ERROR$2) : Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n\n  if (!strm.output ||\n      (!strm.input && strm.avail_in !== 0) ||\n      (s.status === FINISH_STATE && flush !== Z_FINISH$3)) {\n    return err(strm, (strm.avail_out === 0) ? Z_BUF_ERROR$1 : Z_STREAM_ERROR$2);\n  }\n\n  s.strm = strm; /* just in case */\n  const old_flush = s.last_flush;\n  s.last_flush = flush;\n\n  /* Write the header */\n  if (s.status === INIT_STATE) {\n\n    if (s.wrap === 2) { // GZIP header\n      strm.adler = 0;  //crc32(0L, Z_NULL, 0);\n      put_byte(s, 31);\n      put_byte(s, 139);\n      put_byte(s, 8);\n      if (!s.gzhead) { // s->gzhead == Z_NULL\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, 0);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, OS_CODE);\n        s.status = BUSY_STATE;\n      }\n      else {\n        put_byte(s, (s.gzhead.text ? 1 : 0) +\n                    (s.gzhead.hcrc ? 2 : 0) +\n                    (!s.gzhead.extra ? 0 : 4) +\n                    (!s.gzhead.name ? 0 : 8) +\n                    (!s.gzhead.comment ? 0 : 16)\n        );\n        put_byte(s, s.gzhead.time & 0xff);\n        put_byte(s, (s.gzhead.time >> 8) & 0xff);\n        put_byte(s, (s.gzhead.time >> 16) & 0xff);\n        put_byte(s, (s.gzhead.time >> 24) & 0xff);\n        put_byte(s, s.level === 9 ? 2 :\n                    (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2 ?\n                     4 : 0));\n        put_byte(s, s.gzhead.os & 0xff);\n        if (s.gzhead.extra && s.gzhead.extra.length) {\n          put_byte(s, s.gzhead.extra.length & 0xff);\n          put_byte(s, (s.gzhead.extra.length >> 8) & 0xff);\n        }\n        if (s.gzhead.hcrc) {\n          strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending, 0);\n        }\n        s.gzindex = 0;\n        s.status = EXTRA_STATE;\n      }\n    }\n    else // DEFLATE header\n    {\n      let header = (Z_DEFLATED$2 + ((s.w_bits - 8) << 4)) << 8;\n      let level_flags = -1;\n\n      if (s.strategy >= Z_HUFFMAN_ONLY || s.level < 2) {\n        level_flags = 0;\n      } else if (s.level < 6) {\n        level_flags = 1;\n      } else if (s.level === 6) {\n        level_flags = 2;\n      } else {\n        level_flags = 3;\n      }\n      header |= (level_flags << 6);\n      if (s.strstart !== 0) { header |= PRESET_DICT; }\n      header += 31 - (header % 31);\n\n      s.status = BUSY_STATE;\n      putShortMSB(s, header);\n\n      /* Save the adler32 of the preset dictionary: */\n      if (s.strstart !== 0) {\n        putShortMSB(s, strm.adler >>> 16);\n        putShortMSB(s, strm.adler & 0xffff);\n      }\n      strm.adler = 1; // adler32(0L, Z_NULL, 0);\n    }\n  }\n\n//#ifdef GZIP\n  if (s.status === EXTRA_STATE) {\n    if (s.gzhead.extra/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n\n      while (s.gzindex < (s.gzhead.extra.length & 0xffff)) {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            break;\n          }\n        }\n        put_byte(s, s.gzhead.extra[s.gzindex] & 0xff);\n        s.gzindex++;\n      }\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (s.gzindex === s.gzhead.extra.length) {\n        s.gzindex = 0;\n        s.status = NAME_STATE;\n      }\n    }\n    else {\n      s.status = NAME_STATE;\n    }\n  }\n  if (s.status === NAME_STATE) {\n    if (s.gzhead.name/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.name.length) {\n          val = s.gzhead.name.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.gzindex = 0;\n        s.status = COMMENT_STATE;\n      }\n    }\n    else {\n      s.status = COMMENT_STATE;\n    }\n  }\n  if (s.status === COMMENT_STATE) {\n    if (s.gzhead.comment/* != Z_NULL*/) {\n      beg = s.pending;  /* start of bytes to update crc */\n      //int val;\n\n      do {\n        if (s.pending === s.pending_buf_size) {\n          if (s.gzhead.hcrc && s.pending > beg) {\n            strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n          }\n          flush_pending(strm);\n          beg = s.pending;\n          if (s.pending === s.pending_buf_size) {\n            val = 1;\n            break;\n          }\n        }\n        // JS specific: little magic to add zero terminator to end of string\n        if (s.gzindex < s.gzhead.comment.length) {\n          val = s.gzhead.comment.charCodeAt(s.gzindex++) & 0xff;\n        } else {\n          val = 0;\n        }\n        put_byte(s, val);\n      } while (val !== 0);\n\n      if (s.gzhead.hcrc && s.pending > beg) {\n        strm.adler = crc32_1(strm.adler, s.pending_buf, s.pending - beg, beg);\n      }\n      if (val === 0) {\n        s.status = HCRC_STATE;\n      }\n    }\n    else {\n      s.status = HCRC_STATE;\n    }\n  }\n  if (s.status === HCRC_STATE) {\n    if (s.gzhead.hcrc) {\n      if (s.pending + 2 > s.pending_buf_size) {\n        flush_pending(strm);\n      }\n      if (s.pending + 2 <= s.pending_buf_size) {\n        put_byte(s, strm.adler & 0xff);\n        put_byte(s, (strm.adler >> 8) & 0xff);\n        strm.adler = 0; //crc32(0L, Z_NULL, 0);\n        s.status = BUSY_STATE;\n      }\n    }\n    else {\n      s.status = BUSY_STATE;\n    }\n  }\n//#endif\n\n  /* Flush as much pending output as possible */\n  if (s.pending !== 0) {\n    flush_pending(strm);\n    if (strm.avail_out === 0) {\n      /* Since avail_out is 0, deflate will be called again with\n       * more output space, but possibly with both pending and\n       * avail_in equal to zero. There won't be anything to do,\n       * but this is not an error situation so make sure we\n       * return OK instead of BUF_ERROR at next call of deflate:\n       */\n      s.last_flush = -1;\n      return Z_OK$3;\n    }\n\n    /* Make sure there is something to do and avoid duplicate consecutive\n     * flushes. For repeated and useless calls with Z_FINISH, we keep\n     * returning Z_STREAM_END instead of Z_BUF_ERROR.\n     */\n  } else if (strm.avail_in === 0 && rank(flush) <= rank(old_flush) &&\n    flush !== Z_FINISH$3) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* User must not provide more input after the first FINISH: */\n  if (s.status === FINISH_STATE && strm.avail_in !== 0) {\n    return err(strm, Z_BUF_ERROR$1);\n  }\n\n  /* Start a new block or continue the current one.\n   */\n  if (strm.avail_in !== 0 || s.lookahead !== 0 ||\n    (flush !== Z_NO_FLUSH$2 && s.status !== FINISH_STATE)) {\n    let bstate = (s.strategy === Z_HUFFMAN_ONLY) ? deflate_huff(s, flush) :\n      (s.strategy === Z_RLE ? deflate_rle(s, flush) :\n        configuration_table[s.level].func(s, flush));\n\n    if (bstate === BS_FINISH_STARTED || bstate === BS_FINISH_DONE) {\n      s.status = FINISH_STATE;\n    }\n    if (bstate === BS_NEED_MORE || bstate === BS_FINISH_STARTED) {\n      if (strm.avail_out === 0) {\n        s.last_flush = -1;\n        /* avoid BUF_ERROR next call, see above */\n      }\n      return Z_OK$3;\n      /* If flush != Z_NO_FLUSH && avail_out == 0, the next call\n       * of deflate should use the same flush parameter to make sure\n       * that the flush is complete. So we don't have to output an\n       * empty block here, this will be done at next call. This also\n       * ensures that for a very small output buffer, we emit at most\n       * one empty block.\n       */\n    }\n    if (bstate === BS_BLOCK_DONE) {\n      if (flush === Z_PARTIAL_FLUSH) {\n        _tr_align(s);\n      }\n      else if (flush !== Z_BLOCK$1) { /* FULL_FLUSH or SYNC_FLUSH */\n\n        _tr_stored_block(s, 0, 0, false);\n        /* For a full flush, this empty block will be recognized\n         * as a special marker by inflate_sync().\n         */\n        if (flush === Z_FULL_FLUSH$1) {\n          /*** CLEAR_HASH(s); ***/             /* forget history */\n          zero(s.head); // Fill with NIL (= 0);\n\n          if (s.lookahead === 0) {\n            s.strstart = 0;\n            s.block_start = 0;\n            s.insert = 0;\n          }\n        }\n      }\n      flush_pending(strm);\n      if (strm.avail_out === 0) {\n        s.last_flush = -1; /* avoid BUF_ERROR at next call, see above */\n        return Z_OK$3;\n      }\n    }\n  }\n  //Assert(strm->avail_out > 0, \"bug2\");\n  //if (strm.avail_out <= 0) { throw new Error(\"bug2\");}\n\n  if (flush !== Z_FINISH$3) { return Z_OK$3; }\n  if (s.wrap <= 0) { return Z_STREAM_END$3; }\n\n  /* Write the trailer */\n  if (s.wrap === 2) {\n    put_byte(s, strm.adler & 0xff);\n    put_byte(s, (strm.adler >> 8) & 0xff);\n    put_byte(s, (strm.adler >> 16) & 0xff);\n    put_byte(s, (strm.adler >> 24) & 0xff);\n    put_byte(s, strm.total_in & 0xff);\n    put_byte(s, (strm.total_in >> 8) & 0xff);\n    put_byte(s, (strm.total_in >> 16) & 0xff);\n    put_byte(s, (strm.total_in >> 24) & 0xff);\n  }\n  else\n  {\n    putShortMSB(s, strm.adler >>> 16);\n    putShortMSB(s, strm.adler & 0xffff);\n  }\n\n  flush_pending(strm);\n  /* If avail_out is zero, the application will call deflate again\n   * to flush the rest.\n   */\n  if (s.wrap > 0) { s.wrap = -s.wrap; }\n  /* write the trailer only once! */\n  return s.pending !== 0 ? Z_OK$3 : Z_STREAM_END$3;\n};\n\n\nconst deflateEnd = (strm) => {\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const status = strm.state.status;\n  if (status !== INIT_STATE &&\n    status !== EXTRA_STATE &&\n    status !== NAME_STATE &&\n    status !== COMMENT_STATE &&\n    status !== HCRC_STATE &&\n    status !== BUSY_STATE &&\n    status !== FINISH_STATE\n  ) {\n    return err(strm, Z_STREAM_ERROR$2);\n  }\n\n  strm.state = null;\n\n  return status === BUSY_STATE ? err(strm, Z_DATA_ERROR$2) : Z_OK$3;\n};\n\n\n/* =========================================================================\n * Initializes the compression dictionary from the given byte\n * sequence without producing any compressed output.\n */\nconst deflateSetDictionary = (strm, dictionary) => {\n\n  let dictLength = dictionary.length;\n\n  if (!strm/*== Z_NULL*/ || !strm.state/*== Z_NULL*/) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  const s = strm.state;\n  const wrap = s.wrap;\n\n  if (wrap === 2 || (wrap === 1 && s.status !== INIT_STATE) || s.lookahead) {\n    return Z_STREAM_ERROR$2;\n  }\n\n  /* when using zlib wrappers, compute Adler-32 for provided dictionary */\n  if (wrap === 1) {\n    /* adler32(strm->adler, dictionary, dictLength); */\n    strm.adler = adler32_1(strm.adler, dictionary, dictLength, 0);\n  }\n\n  s.wrap = 0;   /* avoid computing Adler-32 in read_buf */\n\n  /* if dictionary would fill window, just replace the history */\n  if (dictLength >= s.w_size) {\n    if (wrap === 0) {            /* already empty otherwise */\n      /*** CLEAR_HASH(s); ***/\n      zero(s.head); // Fill with NIL (= 0);\n      s.strstart = 0;\n      s.block_start = 0;\n      s.insert = 0;\n    }\n    /* use the tail */\n    // dictionary = dictionary.slice(dictLength - s.w_size);\n    let tmpDict = new Uint8Array(s.w_size);\n    tmpDict.set(dictionary.subarray(dictLength - s.w_size, dictLength), 0);\n    dictionary = tmpDict;\n    dictLength = s.w_size;\n  }\n  /* insert dictionary into window and hash */\n  const avail = strm.avail_in;\n  const next = strm.next_in;\n  const input = strm.input;\n  strm.avail_in = dictLength;\n  strm.next_in = 0;\n  strm.input = dictionary;\n  fill_window(s);\n  while (s.lookahead >= MIN_MATCH) {\n    let str = s.strstart;\n    let n = s.lookahead - (MIN_MATCH - 1);\n    do {\n      /* UPDATE_HASH(s, s->ins_h, s->window[str + MIN_MATCH-1]); */\n      s.ins_h = HASH(s, s.ins_h, s.window[str + MIN_MATCH - 1]);\n\n      s.prev[str & s.w_mask] = s.head[s.ins_h];\n\n      s.head[s.ins_h] = str;\n      str++;\n    } while (--n);\n    s.strstart = str;\n    s.lookahead = MIN_MATCH - 1;\n    fill_window(s);\n  }\n  s.strstart += s.lookahead;\n  s.block_start = s.strstart;\n  s.insert = s.lookahead;\n  s.lookahead = 0;\n  s.match_length = s.prev_length = MIN_MATCH - 1;\n  s.match_available = 0;\n  strm.next_in = next;\n  strm.input = input;\n  strm.avail_in = avail;\n  s.wrap = wrap;\n  return Z_OK$3;\n};\n\n\nvar deflateInit_1 = deflateInit;\nvar deflateInit2_1 = deflateInit2;\nvar deflateReset_1 = deflateReset;\nvar deflateResetKeep_1 = deflateResetKeep;\nvar deflateSetHeader_1 = deflateSetHeader;\nvar deflate_2$1 = deflate$2;\nvar deflateEnd_1 = deflateEnd;\nvar deflateSetDictionary_1 = deflateSetDictionary;\nvar deflateInfo = 'pako deflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.deflateBound = deflateBound;\nmodule.exports.deflateCopy = deflateCopy;\nmodule.exports.deflateParams = deflateParams;\nmodule.exports.deflatePending = deflatePending;\nmodule.exports.deflatePrime = deflatePrime;\nmodule.exports.deflateTune = deflateTune;\n*/\n\nvar deflate_1$2 = {\n\tdeflateInit: deflateInit_1,\n\tdeflateInit2: deflateInit2_1,\n\tdeflateReset: deflateReset_1,\n\tdeflateResetKeep: deflateResetKeep_1,\n\tdeflateSetHeader: deflateSetHeader_1,\n\tdeflate: deflate_2$1,\n\tdeflateEnd: deflateEnd_1,\n\tdeflateSetDictionary: deflateSetDictionary_1,\n\tdeflateInfo: deflateInfo\n};\n\nconst _has = (obj, key) => {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n};\n\nvar assign = function (obj /*from1, from2, from3, ...*/) {\n  const sources = Array.prototype.slice.call(arguments, 1);\n  while (sources.length) {\n    const source = sources.shift();\n    if (!source) { continue; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be non-object');\n    }\n\n    for (const p in source) {\n      if (_has(source, p)) {\n        obj[p] = source[p];\n      }\n    }\n  }\n\n  return obj;\n};\n\n\n// Join array of chunks to single array.\nvar flattenChunks = (chunks) => {\n  // calculate data length\n  let len = 0;\n\n  for (let i = 0, l = chunks.length; i < l; i++) {\n    len += chunks[i].length;\n  }\n\n  // join chunks\n  const result = new Uint8Array(len);\n\n  for (let i = 0, pos = 0, l = chunks.length; i < l; i++) {\n    let chunk = chunks[i];\n    result.set(chunk, pos);\n    pos += chunk.length;\n  }\n\n  return result;\n};\n\nvar common = {\n\tassign: assign,\n\tflattenChunks: flattenChunks\n};\n\n// String encode/decode helpers\n\n\n// Quick check if we can use fast array to bin string conversion\n//\n// - apply(Array) can fail on Android 2.2\n// - apply(Uint8Array) can fail on iOS 5.1 Safari\n//\nlet STR_APPLY_UIA_OK = true;\n\ntry { String.fromCharCode.apply(null, new Uint8Array(1)); } catch (__) { STR_APPLY_UIA_OK = false; }\n\n\n// Table with utf8 lengths (calculated by first byte of sequence)\n// Note, that 5 & 6-byte values and some 4-byte values can not be represented in JS,\n// because max possible codepoint is 0x10ffff\nconst _utf8len = new Uint8Array(256);\nfor (let q = 0; q < 256; q++) {\n  _utf8len[q] = (q >= 252 ? 6 : q >= 248 ? 5 : q >= 240 ? 4 : q >= 224 ? 3 : q >= 192 ? 2 : 1);\n}\n_utf8len[254] = _utf8len[254] = 1; // Invalid sequence start\n\n\n// convert string to array (typed, when possible)\nvar string2buf = (str) => {\n  if (typeof TextEncoder === 'function' && TextEncoder.prototype.encode) {\n    return new TextEncoder().encode(str);\n  }\n\n  let buf, c, c2, m_pos, i, str_len = str.length, buf_len = 0;\n\n  // count binary size\n  for (m_pos = 0; m_pos < str_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    buf_len += c < 0x80 ? 1 : c < 0x800 ? 2 : c < 0x10000 ? 3 : 4;\n  }\n\n  // allocate buffer\n  buf = new Uint8Array(buf_len);\n\n  // convert\n  for (i = 0, m_pos = 0; i < buf_len; m_pos++) {\n    c = str.charCodeAt(m_pos);\n    if ((c & 0xfc00) === 0xd800 && (m_pos + 1 < str_len)) {\n      c2 = str.charCodeAt(m_pos + 1);\n      if ((c2 & 0xfc00) === 0xdc00) {\n        c = 0x10000 + ((c - 0xd800) << 10) + (c2 - 0xdc00);\n        m_pos++;\n      }\n    }\n    if (c < 0x80) {\n      /* one byte */\n      buf[i++] = c;\n    } else if (c < 0x800) {\n      /* two bytes */\n      buf[i++] = 0xC0 | (c >>> 6);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else if (c < 0x10000) {\n      /* three bytes */\n      buf[i++] = 0xE0 | (c >>> 12);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    } else {\n      /* four bytes */\n      buf[i++] = 0xf0 | (c >>> 18);\n      buf[i++] = 0x80 | (c >>> 12 & 0x3f);\n      buf[i++] = 0x80 | (c >>> 6 & 0x3f);\n      buf[i++] = 0x80 | (c & 0x3f);\n    }\n  }\n\n  return buf;\n};\n\n// Helper\nconst buf2binstring = (buf, len) => {\n  // On Chrome, the arguments in a function call that are allowed is `65534`.\n  // If the length of the buffer is smaller than that, we can use this optimization,\n  // otherwise we will take a slower path.\n  if (len < 65534) {\n    if (buf.subarray && STR_APPLY_UIA_OK) {\n      return String.fromCharCode.apply(null, buf.length === len ? buf : buf.subarray(0, len));\n    }\n  }\n\n  let result = '';\n  for (let i = 0; i < len; i++) {\n    result += String.fromCharCode(buf[i]);\n  }\n  return result;\n};\n\n\n// convert array to string\nvar buf2string = (buf, max) => {\n  const len = max || buf.length;\n\n  if (typeof TextDecoder === 'function' && TextDecoder.prototype.decode) {\n    return new TextDecoder().decode(buf.subarray(0, max));\n  }\n\n  let i, out;\n\n  // Reserve max possible length (2 words per char)\n  // NB: by unknown reasons, Array is significantly faster for\n  //     String.fromCharCode.apply than Uint16Array.\n  const utf16buf = new Array(len * 2);\n\n  for (out = 0, i = 0; i < len;) {\n    let c = buf[i++];\n    // quick process ascii\n    if (c < 0x80) { utf16buf[out++] = c; continue; }\n\n    let c_len = _utf8len[c];\n    // skip 5 & 6 byte codes\n    if (c_len > 4) { utf16buf[out++] = 0xfffd; i += c_len - 1; continue; }\n\n    // apply mask on first byte\n    c &= c_len === 2 ? 0x1f : c_len === 3 ? 0x0f : 0x07;\n    // join the rest\n    while (c_len > 1 && i < len) {\n      c = (c << 6) | (buf[i++] & 0x3f);\n      c_len--;\n    }\n\n    // terminated by end of string?\n    if (c_len > 1) { utf16buf[out++] = 0xfffd; continue; }\n\n    if (c < 0x10000) {\n      utf16buf[out++] = c;\n    } else {\n      c -= 0x10000;\n      utf16buf[out++] = 0xd800 | ((c >> 10) & 0x3ff);\n      utf16buf[out++] = 0xdc00 | (c & 0x3ff);\n    }\n  }\n\n  return buf2binstring(utf16buf, out);\n};\n\n\n// Calculate max possible position in utf8 buffer,\n// that will not break sequence. If that's not possible\n// - (very small limits) return max size as is.\n//\n// buf[] - utf8 bytes array\n// max   - length limit (mandatory);\nvar utf8border = (buf, max) => {\n\n  max = max || buf.length;\n  if (max > buf.length) { max = buf.length; }\n\n  // go back from last position, until start of sequence found\n  let pos = max - 1;\n  while (pos >= 0 && (buf[pos] & 0xC0) === 0x80) { pos--; }\n\n  // Very small and broken sequence,\n  // return max, because we should return something anyway.\n  if (pos < 0) { return max; }\n\n  // If we came to start of buffer - that means buffer is too small,\n  // return max too.\n  if (pos === 0) { return max; }\n\n  return (pos + _utf8len[buf[pos]] > max) ? pos : max;\n};\n\nvar strings = {\n\tstring2buf: string2buf,\n\tbuf2string: buf2string,\n\tutf8border: utf8border\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction ZStream() {\n  /* next input byte */\n  this.input = null; // JS specific, because we have no pointers\n  this.next_in = 0;\n  /* number of bytes available at input */\n  this.avail_in = 0;\n  /* total number of input bytes read so far */\n  this.total_in = 0;\n  /* next output byte should be put there */\n  this.output = null; // JS specific, because we have no pointers\n  this.next_out = 0;\n  /* remaining free space at output */\n  this.avail_out = 0;\n  /* total number of bytes output so far */\n  this.total_out = 0;\n  /* last error message, NULL if no error */\n  this.msg = ''/*Z_NULL*/;\n  /* not visible by applications */\n  this.state = null;\n  /* best guess about the data type: binary or text */\n  this.data_type = 2/*Z_UNKNOWN*/;\n  /* adler32 value of the uncompressed data */\n  this.adler = 0;\n}\n\nvar zstream = ZStream;\n\nconst toString$1 = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH: Z_NO_FLUSH$1, Z_SYNC_FLUSH, Z_FULL_FLUSH, Z_FINISH: Z_FINISH$2,\n  Z_OK: Z_OK$2, Z_STREAM_END: Z_STREAM_END$2,\n  Z_DEFAULT_COMPRESSION,\n  Z_DEFAULT_STRATEGY,\n  Z_DEFLATED: Z_DEFLATED$1\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Deflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[deflate]],\n * [[deflateRaw]] and [[gzip]].\n **/\n\n/* internal\n * Deflate.chunks -> Array\n *\n * Chunks of output data, if [[Deflate#onData]] not overridden.\n **/\n\n/**\n * Deflate.result -> Uint8Array\n *\n * Compressed result, generated by default [[Deflate#onData]]\n * and [[Deflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Deflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Deflate.err -> Number\n *\n * Error code after deflate finished. 0 (Z_OK) on success.\n * You will not need it in real life, because deflate errors\n * are possible only on wrong options or bad `onData` / `onEnd`\n * custom handlers.\n **/\n\n/**\n * Deflate.msg -> String\n *\n * Error message, if [[Deflate.err]] != 0\n **/\n\n\n/**\n * new Deflate(options)\n * - options (Object): zlib deflate options.\n *\n * Creates new deflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `level`\n * - `windowBits`\n * - `memLevel`\n * - `strategy`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw deflate\n * - `gzip` (Boolean) - create gzip wrapper\n * - `header` (Object) - custom header for gzip\n *   - `text` (Boolean) - true if compressed data believed to be text\n *   - `time` (Number) - modification time, unix timestamp\n *   - `os` (Number) - operation system code\n *   - `extra` (Array) - array of bytes with extra data (max 65536)\n *   - `name` (String) - file name (binary string)\n *   - `comment` (String) - comment (binary string)\n *   - `hcrc` (Boolean) - true if header crc should be added\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n *   , chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n *   , chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const deflate = new pako.Deflate({ level: 3});\n *\n * deflate.push(chunk1, false);\n * deflate.push(chunk2, true);  // true -> last chunk\n *\n * if (deflate.err) { throw new Error(deflate.err); }\n *\n * console.log(deflate.result);\n * ```\n **/\nfunction Deflate$1(options) {\n  this.options = common.assign({\n    level: Z_DEFAULT_COMPRESSION,\n    method: Z_DEFLATED$1,\n    chunkSize: 16384,\n    windowBits: 15,\n    memLevel: 8,\n    strategy: Z_DEFAULT_STRATEGY\n  }, options || {});\n\n  let opt = this.options;\n\n  if (opt.raw && (opt.windowBits > 0)) {\n    opt.windowBits = -opt.windowBits;\n  }\n\n  else if (opt.gzip && (opt.windowBits > 0) && (opt.windowBits < 16)) {\n    opt.windowBits += 16;\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm = new zstream();\n  this.strm.avail_out = 0;\n\n  let status = deflate_1$2.deflateInit2(\n    this.strm,\n    opt.level,\n    opt.method,\n    opt.windowBits,\n    opt.memLevel,\n    opt.strategy\n  );\n\n  if (status !== Z_OK$2) {\n    throw new Error(messages[status]);\n  }\n\n  if (opt.header) {\n    deflate_1$2.deflateSetHeader(this.strm, opt.header);\n  }\n\n  if (opt.dictionary) {\n    let dict;\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      // If we need to compress text, change encoding to utf8.\n      dict = strings.string2buf(opt.dictionary);\n    } else if (toString$1.call(opt.dictionary) === '[object ArrayBuffer]') {\n      dict = new Uint8Array(opt.dictionary);\n    } else {\n      dict = opt.dictionary;\n    }\n\n    status = deflate_1$2.deflateSetDictionary(this.strm, dict);\n\n    if (status !== Z_OK$2) {\n      throw new Error(messages[status]);\n    }\n\n    this._dict_set = true;\n  }\n}\n\n/**\n * Deflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer|String): input data. Strings will be\n *   converted to utf8 byte sequence.\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE modes.\n *   See constants. Skipped or `false` means Z_NO_FLUSH, `true` means Z_FINISH.\n *\n * Sends input data to deflate pipe, generating [[Deflate#onData]] calls with\n * new compressed chunks. Returns `true` on success. The last data block must\n * have `flush_mode` Z_FINISH (or `true`). That will flush internal pending\n * buffers and call [[Deflate#onEnd]].\n *\n * On fail call [[Deflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nDeflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  let status, _flush_mode;\n\n  if (this.ended) { return false; }\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH$2 : Z_NO_FLUSH$1;\n\n  // Convert data if needed\n  if (typeof data === 'string') {\n    // If we need to compress text, change encoding to utf8.\n    strm.input = strings.string2buf(data);\n  } else if (toString$1.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    // Make sure avail_out > 6 to avoid repeating markers\n    if ((_flush_mode === Z_SYNC_FLUSH || _flush_mode === Z_FULL_FLUSH) && strm.avail_out <= 6) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    status = deflate_1$2.deflate(strm, _flush_mode);\n\n    // Ended => flush and finish\n    if (status === Z_STREAM_END$2) {\n      if (strm.next_out > 0) {\n        this.onData(strm.output.subarray(0, strm.next_out));\n      }\n      status = deflate_1$2.deflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return status === Z_OK$2;\n    }\n\n    // Flush if out buffer full\n    if (strm.avail_out === 0) {\n      this.onData(strm.output);\n      continue;\n    }\n\n    // Flush if requested and has data\n    if (_flush_mode > 0 && strm.next_out > 0) {\n      this.onData(strm.output.subarray(0, strm.next_out));\n      strm.avail_out = 0;\n      continue;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Deflate#onData(chunk) -> Void\n * - chunk (Uint8Array): output data.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nDeflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Deflate#onEnd(status) -> Void\n * - status (Number): deflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called once after you tell deflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nDeflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK$2) {\n    this.result = common.flattenChunks(this.chunks);\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * deflate(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * Compress `data` with deflate algorithm and `options`.\n *\n * Supported options are:\n *\n * - level\n * - windowBits\n * - memLevel\n * - strategy\n * - dictionary\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const data = new Uint8Array([1,2,3,4,5,6,7,8,9]);\n *\n * console.log(pako.deflate(data));\n * ```\n **/\nfunction deflate$1(input, options) {\n  const deflator = new Deflate$1(options);\n\n  deflator.push(input, true);\n\n  // That will never happens, if you don't cheat with options :)\n  if (deflator.err) { throw deflator.msg || messages[deflator.err]; }\n\n  return deflator.result;\n}\n\n\n/**\n * deflateRaw(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction deflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return deflate$1(input, options);\n}\n\n\n/**\n * gzip(data[, options]) -> Uint8Array\n * - data (Uint8Array|String): input data to compress.\n * - options (Object): zlib deflate options.\n *\n * The same as [[deflate]], but create gzip wrapper instead of\n * deflate one.\n **/\nfunction gzip$1(input, options) {\n  options = options || {};\n  options.gzip = true;\n  return deflate$1(input, options);\n}\n\n\nvar Deflate_1$1 = Deflate$1;\nvar deflate_2 = deflate$1;\nvar deflateRaw_1$1 = deflateRaw$1;\nvar gzip_1$1 = gzip$1;\nvar constants$1 = constants$2;\n\nvar deflate_1$1 = {\n\tDeflate: Deflate_1$1,\n\tdeflate: deflate_2,\n\tdeflateRaw: deflateRaw_1$1,\n\tgzip: gzip_1$1,\n\tconstants: constants$1\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n// See state defs from inflate.js\nconst BAD$1 = 30;       /* got a data error -- remain here until reset */\nconst TYPE$1 = 12;      /* i: waiting for type bits, including last-flag bit */\n\n/*\n   Decode literal, length, and distance codes and write out the resulting\n   literal and match bytes until either not enough input or output is\n   available, an end-of-block is encountered, or a data error is encountered.\n   When large enough input and output buffers are supplied to inflate(), for\n   example, a 16K input buffer and a 64K output buffer, more than 95% of the\n   inflate execution time is spent in this routine.\n\n   Entry assumptions:\n\n        state.mode === LEN\n        strm.avail_in >= 6\n        strm.avail_out >= 258\n        start >= strm.avail_out\n        state.bits < 8\n\n   On return, state.mode is one of:\n\n        LEN -- ran out of enough output space or enough available input\n        TYPE -- reached end of block code, inflate() to interpret next block\n        BAD -- error in block data\n\n   Notes:\n\n    - The maximum input bits used by a length/distance pair is 15 bits for the\n      length code, 5 bits for the length extra, 15 bits for the distance code,\n      and 13 bits for the distance extra.  This totals 48 bits, or six bytes.\n      Therefore if strm.avail_in >= 6, then there is enough input to avoid\n      checking for available input while decoding.\n\n    - The maximum bytes that a single length/distance pair can output is 258\n      bytes, which is the maximum length that can be coded.  inflate_fast()\n      requires strm.avail_out >= 258 for each loop to avoid checking for\n      output space.\n */\nvar inffast = function inflate_fast(strm, start) {\n  let _in;                    /* local strm.input */\n  let last;                   /* have enough input while in < last */\n  let _out;                   /* local strm.output */\n  let beg;                    /* inflate()'s initial strm.output */\n  let end;                    /* while out < end, enough space available */\n//#ifdef INFLATE_STRICT\n  let dmax;                   /* maximum distance from zlib header */\n//#endif\n  let wsize;                  /* window size or zero if not using window */\n  let whave;                  /* valid bytes in the window */\n  let wnext;                  /* window write index */\n  // Use `s_window` instead `window`, avoid conflict with instrumentation tools\n  let s_window;               /* allocated sliding window, if wsize != 0 */\n  let hold;                   /* local strm.hold */\n  let bits;                   /* local strm.bits */\n  let lcode;                  /* local strm.lencode */\n  let dcode;                  /* local strm.distcode */\n  let lmask;                  /* mask for first level of length codes */\n  let dmask;                  /* mask for first level of distance codes */\n  let here;                   /* retrieved table entry */\n  let op;                     /* code bits, operation, extra bits, or */\n                              /*  window position, window bytes to copy */\n  let len;                    /* match length, unused bytes */\n  let dist;                   /* match distance */\n  let from;                   /* where to copy match from */\n  let from_source;\n\n\n  let input, output; // JS specific, because we have no pointers\n\n  /* copy state to local variables */\n  const state = strm.state;\n  //here = state.here;\n  _in = strm.next_in;\n  input = strm.input;\n  last = _in + (strm.avail_in - 5);\n  _out = strm.next_out;\n  output = strm.output;\n  beg = _out - (start - strm.avail_out);\n  end = _out + (strm.avail_out - 257);\n//#ifdef INFLATE_STRICT\n  dmax = state.dmax;\n//#endif\n  wsize = state.wsize;\n  whave = state.whave;\n  wnext = state.wnext;\n  s_window = state.window;\n  hold = state.hold;\n  bits = state.bits;\n  lcode = state.lencode;\n  dcode = state.distcode;\n  lmask = (1 << state.lenbits) - 1;\n  dmask = (1 << state.distbits) - 1;\n\n\n  /* decode literals and length/distances until end-of-block or not enough\n     input data or output space */\n\n  top:\n  do {\n    if (bits < 15) {\n      hold += input[_in++] << bits;\n      bits += 8;\n      hold += input[_in++] << bits;\n      bits += 8;\n    }\n\n    here = lcode[hold & lmask];\n\n    dolen:\n    for (;;) { // Goto emulation\n      op = here >>> 24/*here.bits*/;\n      hold >>>= op;\n      bits -= op;\n      op = (here >>> 16) & 0xff/*here.op*/;\n      if (op === 0) {                          /* literal */\n        //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n        //        \"inflate:         literal '%c'\\n\" :\n        //        \"inflate:         literal 0x%02x\\n\", here.val));\n        output[_out++] = here & 0xffff/*here.val*/;\n      }\n      else if (op & 16) {                     /* length base */\n        len = here & 0xffff/*here.val*/;\n        op &= 15;                           /* number of extra bits */\n        if (op) {\n          if (bits < op) {\n            hold += input[_in++] << bits;\n            bits += 8;\n          }\n          len += hold & ((1 << op) - 1);\n          hold >>>= op;\n          bits -= op;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", len));\n        if (bits < 15) {\n          hold += input[_in++] << bits;\n          bits += 8;\n          hold += input[_in++] << bits;\n          bits += 8;\n        }\n        here = dcode[hold & dmask];\n\n        dodist:\n        for (;;) { // goto emulation\n          op = here >>> 24/*here.bits*/;\n          hold >>>= op;\n          bits -= op;\n          op = (here >>> 16) & 0xff/*here.op*/;\n\n          if (op & 16) {                      /* distance base */\n            dist = here & 0xffff/*here.val*/;\n            op &= 15;                       /* number of extra bits */\n            if (bits < op) {\n              hold += input[_in++] << bits;\n              bits += 8;\n              if (bits < op) {\n                hold += input[_in++] << bits;\n                bits += 8;\n              }\n            }\n            dist += hold & ((1 << op) - 1);\n//#ifdef INFLATE_STRICT\n            if (dist > dmax) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD$1;\n              break top;\n            }\n//#endif\n            hold >>>= op;\n            bits -= op;\n            //Tracevv((stderr, \"inflate:         distance %u\\n\", dist));\n            op = _out - beg;                /* max distance in output */\n            if (dist > op) {                /* see if copy from window */\n              op = dist - op;               /* distance back in window */\n              if (op > whave) {\n                if (state.sane) {\n                  strm.msg = 'invalid distance too far back';\n                  state.mode = BAD$1;\n                  break top;\n                }\n\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//                if (len <= op - whave) {\n//                  do {\n//                    output[_out++] = 0;\n//                  } while (--len);\n//                  continue top;\n//                }\n//                len -= op - whave;\n//                do {\n//                  output[_out++] = 0;\n//                } while (--op > whave);\n//                if (op === 0) {\n//                  from = _out - dist;\n//                  do {\n//                    output[_out++] = output[from++];\n//                  } while (--len);\n//                  continue top;\n//                }\n//#endif\n              }\n              from = 0; // window index\n              from_source = s_window;\n              if (wnext === 0) {           /* very common case */\n                from += wsize - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              else if (wnext < op) {      /* wrap around window */\n                from += wsize + wnext - op;\n                op -= wnext;\n                if (op < len) {         /* some from end of window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = 0;\n                  if (wnext < len) {  /* some from start of window */\n                    op = wnext;\n                    len -= op;\n                    do {\n                      output[_out++] = s_window[from++];\n                    } while (--op);\n                    from = _out - dist;      /* rest from output */\n                    from_source = output;\n                  }\n                }\n              }\n              else {                      /* contiguous in window */\n                from += wnext - op;\n                if (op < len) {         /* some from window */\n                  len -= op;\n                  do {\n                    output[_out++] = s_window[from++];\n                  } while (--op);\n                  from = _out - dist;  /* rest from output */\n                  from_source = output;\n                }\n              }\n              while (len > 2) {\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                output[_out++] = from_source[from++];\n                len -= 3;\n              }\n              if (len) {\n                output[_out++] = from_source[from++];\n                if (len > 1) {\n                  output[_out++] = from_source[from++];\n                }\n              }\n            }\n            else {\n              from = _out - dist;          /* copy direct from output */\n              do {                        /* minimum length is three */\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                output[_out++] = output[from++];\n                len -= 3;\n              } while (len > 2);\n              if (len) {\n                output[_out++] = output[from++];\n                if (len > 1) {\n                  output[_out++] = output[from++];\n                }\n              }\n            }\n          }\n          else if ((op & 64) === 0) {          /* 2nd level distance code */\n            here = dcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n            continue dodist;\n          }\n          else {\n            strm.msg = 'invalid distance code';\n            state.mode = BAD$1;\n            break top;\n          }\n\n          break; // need to emulate goto via \"continue\"\n        }\n      }\n      else if ((op & 64) === 0) {              /* 2nd level length code */\n        here = lcode[(here & 0xffff)/*here.val*/ + (hold & ((1 << op) - 1))];\n        continue dolen;\n      }\n      else if (op & 32) {                     /* end-of-block */\n        //Tracevv((stderr, \"inflate:         end of block\\n\"));\n        state.mode = TYPE$1;\n        break top;\n      }\n      else {\n        strm.msg = 'invalid literal/length code';\n        state.mode = BAD$1;\n        break top;\n      }\n\n      break; // need to emulate goto via \"continue\"\n    }\n  } while (_in < last && _out < end);\n\n  /* return unused bytes (on entry, bits < 8, so in won't go too far back) */\n  len = bits >> 3;\n  _in -= len;\n  bits -= len << 3;\n  hold &= (1 << bits) - 1;\n\n  /* update state and return */\n  strm.next_in = _in;\n  strm.next_out = _out;\n  strm.avail_in = (_in < last ? 5 + (last - _in) : 5 - (_in - last));\n  strm.avail_out = (_out < end ? 257 + (end - _out) : 257 - (_out - end));\n  state.hold = hold;\n  state.bits = bits;\n  return;\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nconst MAXBITS = 15;\nconst ENOUGH_LENS$1 = 852;\nconst ENOUGH_DISTS$1 = 592;\n//const ENOUGH = (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst CODES$1 = 0;\nconst LENS$1 = 1;\nconst DISTS$1 = 2;\n\nconst lbase = new Uint16Array([ /* Length codes 257..285 base */\n  3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31,\n  35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0\n]);\n\nconst lext = new Uint8Array([ /* Length codes 257..285 extra */\n  16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18,\n  19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78\n]);\n\nconst dbase = new Uint16Array([ /* Distance codes 0..29 base */\n  1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193,\n  257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145,\n  8193, 12289, 16385, 24577, 0, 0\n]);\n\nconst dext = new Uint8Array([ /* Distance codes 0..29 extra */\n  16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22,\n  23, 23, 24, 24, 25, 25, 26, 26, 27, 27,\n  28, 28, 29, 29, 64, 64\n]);\n\nconst inflate_table = (type, lens, lens_index, codes, table, table_index, work, opts) =>\n{\n  const bits = opts.bits;\n      //here = opts.here; /* table entry for duplication */\n\n  let len = 0;               /* a code's length in bits */\n  let sym = 0;               /* index of code symbols */\n  let min = 0, max = 0;          /* minimum and maximum code lengths */\n  let root = 0;              /* number of index bits for root table */\n  let curr = 0;              /* number of index bits for current table */\n  let drop = 0;              /* code bits to drop for sub-table */\n  let left = 0;                   /* number of prefix codes available */\n  let used = 0;              /* code entries in table used */\n  let huff = 0;              /* Huffman code */\n  let incr;              /* for incrementing code, index */\n  let fill;              /* index for replicating entries */\n  let low;               /* low bits for current root entry */\n  let mask;              /* mask for low root bits */\n  let next;             /* next available space in table */\n  let base = null;     /* base value table to use */\n  let base_index = 0;\n//  let shoextra;    /* extra bits table to use */\n  let end;                    /* use base and extra for symbol > end */\n  const count = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];    /* number of codes of each length */\n  const offs = new Uint16Array(MAXBITS + 1); //[MAXBITS+1];     /* offsets in table for each length */\n  let extra = null;\n  let extra_index = 0;\n\n  let here_bits, here_op, here_val;\n\n  /*\n   Process a set of code lengths to create a canonical Huffman code.  The\n   code lengths are lens[0..codes-1].  Each length corresponds to the\n   symbols 0..codes-1.  The Huffman code is generated by first sorting the\n   symbols by length from short to long, and retaining the symbol order\n   for codes with equal lengths.  Then the code starts with all zero bits\n   for the first code of the shortest length, and the codes are integer\n   increments for the same length, and zeros are appended as the length\n   increases.  For the deflate format, these bits are stored backwards\n   from their more natural integer increment ordering, and so when the\n   decoding tables are built in the large loop below, the integer codes\n   are incremented backwards.\n\n   This routine assumes, but does not check, that all of the entries in\n   lens[] are in the range 0..MAXBITS.  The caller must assure this.\n   1..MAXBITS is interpreted as that code length.  zero means that that\n   symbol does not occur in this code.\n\n   The codes are sorted by computing a count of codes for each length,\n   creating from that a table of starting indices for each length in the\n   sorted table, and then entering the symbols in order in the sorted\n   table.  The sorted table is work[], with that space being provided by\n   the caller.\n\n   The length counts are used for other purposes as well, i.e. finding\n   the minimum and maximum length codes, determining if there are any\n   codes at all, checking for a valid set of lengths, and looking ahead\n   at length counts to determine sub-table sizes when building the\n   decoding tables.\n   */\n\n  /* accumulate lengths for codes (assumes lens[] all in 0..MAXBITS) */\n  for (len = 0; len <= MAXBITS; len++) {\n    count[len] = 0;\n  }\n  for (sym = 0; sym < codes; sym++) {\n    count[lens[lens_index + sym]]++;\n  }\n\n  /* bound code lengths, force root to be within code lengths */\n  root = bits;\n  for (max = MAXBITS; max >= 1; max--) {\n    if (count[max] !== 0) { break; }\n  }\n  if (root > max) {\n    root = max;\n  }\n  if (max === 0) {                     /* no symbols to code at all */\n    //table.op[opts.table_index] = 64;  //here.op = (var char)64;    /* invalid code marker */\n    //table.bits[opts.table_index] = 1;   //here.bits = (var char)1;\n    //table.val[opts.table_index++] = 0;   //here.val = (var short)0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n\n    //table.op[opts.table_index] = 64;\n    //table.bits[opts.table_index] = 1;\n    //table.val[opts.table_index++] = 0;\n    table[table_index++] = (1 << 24) | (64 << 16) | 0;\n\n    opts.bits = 1;\n    return 0;     /* no symbols, but wait for decoding to report error */\n  }\n  for (min = 1; min < max; min++) {\n    if (count[min] !== 0) { break; }\n  }\n  if (root < min) {\n    root = min;\n  }\n\n  /* check for an over-subscribed or incomplete set of lengths */\n  left = 1;\n  for (len = 1; len <= MAXBITS; len++) {\n    left <<= 1;\n    left -= count[len];\n    if (left < 0) {\n      return -1;\n    }        /* over-subscribed */\n  }\n  if (left > 0 && (type === CODES$1 || max !== 1)) {\n    return -1;                      /* incomplete set */\n  }\n\n  /* generate offsets into symbol table for each length for sorting */\n  offs[1] = 0;\n  for (len = 1; len < MAXBITS; len++) {\n    offs[len + 1] = offs[len] + count[len];\n  }\n\n  /* sort symbols by length, by symbol order within each length */\n  for (sym = 0; sym < codes; sym++) {\n    if (lens[lens_index + sym] !== 0) {\n      work[offs[lens[lens_index + sym]]++] = sym;\n    }\n  }\n\n  /*\n   Create and fill in decoding tables.  In this loop, the table being\n   filled is at next and has curr index bits.  The code being used is huff\n   with length len.  That code is converted to an index by dropping drop\n   bits off of the bottom.  For codes where len is less than drop + curr,\n   those top drop + curr - len bits are incremented through all values to\n   fill the table with replicated entries.\n\n   root is the number of index bits for the root table.  When len exceeds\n   root, sub-tables are created pointed to by the root entry with an index\n   of the low root bits of huff.  This is saved in low to check for when a\n   new sub-table should be started.  drop is zero when the root table is\n   being filled, and drop is root when sub-tables are being filled.\n\n   When a new sub-table is needed, it is necessary to look ahead in the\n   code lengths to determine what size sub-table is needed.  The length\n   counts are used for this, and so count[] is decremented as codes are\n   entered in the tables.\n\n   used keeps track of how many table entries have been allocated from the\n   provided *table space.  It is checked for LENS and DIST tables against\n   the constants ENOUGH_LENS and ENOUGH_DISTS to guard against changes in\n   the initial root table size constants.  See the comments in inftrees.h\n   for more information.\n\n   sym increments through all symbols, and the loop terminates when\n   all codes of length max, i.e. all codes, have been processed.  This\n   routine permits incomplete codes, so another loop after this one fills\n   in the rest of the decoding tables with invalid code markers.\n   */\n\n  /* set up for code type */\n  // poor man optimization - use if-else instead of switch,\n  // to avoid deopts in old v8\n  if (type === CODES$1) {\n    base = extra = work;    /* dummy value--not used */\n    end = 19;\n\n  } else if (type === LENS$1) {\n    base = lbase;\n    base_index -= 257;\n    extra = lext;\n    extra_index -= 257;\n    end = 256;\n\n  } else {                    /* DISTS */\n    base = dbase;\n    extra = dext;\n    end = -1;\n  }\n\n  /* initialize opts for loop */\n  huff = 0;                   /* starting code */\n  sym = 0;                    /* starting code symbol */\n  len = min;                  /* starting code length */\n  next = table_index;              /* current table to fill in */\n  curr = root;                /* current table index bits */\n  drop = 0;                   /* current bits to drop from code for index */\n  low = -1;                   /* trigger new sub-table when len > root */\n  used = 1 << root;          /* use root table entries */\n  mask = used - 1;            /* mask for comparing low */\n\n  /* check available table space */\n  if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n    (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n    return 1;\n  }\n\n  /* process all codes and make table entries */\n  for (;;) {\n    /* create table entry */\n    here_bits = len - drop;\n    if (work[sym] < end) {\n      here_op = 0;\n      here_val = work[sym];\n    }\n    else if (work[sym] > end) {\n      here_op = extra[extra_index + work[sym]];\n      here_val = base[base_index + work[sym]];\n    }\n    else {\n      here_op = 32 + 64;         /* end of block */\n      here_val = 0;\n    }\n\n    /* replicate for those indices with low len bits equal to huff */\n    incr = 1 << (len - drop);\n    fill = 1 << curr;\n    min = fill;                 /* save offset to next table */\n    do {\n      fill -= incr;\n      table[next + (huff >> drop) + fill] = (here_bits << 24) | (here_op << 16) | here_val |0;\n    } while (fill !== 0);\n\n    /* backwards increment the len-bit code huff */\n    incr = 1 << (len - 1);\n    while (huff & incr) {\n      incr >>= 1;\n    }\n    if (incr !== 0) {\n      huff &= incr - 1;\n      huff += incr;\n    } else {\n      huff = 0;\n    }\n\n    /* go to next symbol, update count, len */\n    sym++;\n    if (--count[len] === 0) {\n      if (len === max) { break; }\n      len = lens[lens_index + work[sym]];\n    }\n\n    /* create new sub-table if needed */\n    if (len > root && (huff & mask) !== low) {\n      /* if first time, transition to sub-tables */\n      if (drop === 0) {\n        drop = root;\n      }\n\n      /* increment past last table */\n      next += min;            /* here min is 1 << curr */\n\n      /* determine length of next table */\n      curr = len - drop;\n      left = 1 << curr;\n      while (curr + drop < max) {\n        left -= count[curr + drop];\n        if (left <= 0) { break; }\n        curr++;\n        left <<= 1;\n      }\n\n      /* check for enough space */\n      used += 1 << curr;\n      if ((type === LENS$1 && used > ENOUGH_LENS$1) ||\n        (type === DISTS$1 && used > ENOUGH_DISTS$1)) {\n        return 1;\n      }\n\n      /* point entry in root table to sub-table */\n      low = huff & mask;\n      /*table.op[low] = curr;\n      table.bits[low] = root;\n      table.val[low] = next - opts.table_index;*/\n      table[low] = (root << 24) | (curr << 16) | (next - table_index) |0;\n    }\n  }\n\n  /* fill in remaining table entry if code is incomplete (guaranteed to have\n   at most one remaining entry, since if the code is incomplete, the\n   maximum code length that was allowed to get this far is one bit) */\n  if (huff !== 0) {\n    //table.op[next + huff] = 64;            /* invalid code marker */\n    //table.bits[next + huff] = len - drop;\n    //table.val[next + huff] = 0;\n    table[next + huff] = ((len - drop) << 24) | (64 << 16) |0;\n  }\n\n  /* set return parameters */\n  //opts.table_index += used;\n  opts.bits = root;\n  return 0;\n};\n\n\nvar inftrees = inflate_table;\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\n\n\n\n\n\nconst CODES = 0;\nconst LENS = 1;\nconst DISTS = 2;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_FINISH: Z_FINISH$1, Z_BLOCK, Z_TREES,\n  Z_OK: Z_OK$1, Z_STREAM_END: Z_STREAM_END$1, Z_NEED_DICT: Z_NEED_DICT$1, Z_STREAM_ERROR: Z_STREAM_ERROR$1, Z_DATA_ERROR: Z_DATA_ERROR$1, Z_MEM_ERROR: Z_MEM_ERROR$1, Z_BUF_ERROR,\n  Z_DEFLATED\n} = constants$2;\n\n\n/* STATES ====================================================================*/\n/* ===========================================================================*/\n\n\nconst    HEAD = 1;       /* i: waiting for magic header */\nconst    FLAGS = 2;      /* i: waiting for method and flags (gzip) */\nconst    TIME = 3;       /* i: waiting for modification time (gzip) */\nconst    OS = 4;         /* i: waiting for extra flags and operating system (gzip) */\nconst    EXLEN = 5;      /* i: waiting for extra length (gzip) */\nconst    EXTRA = 6;      /* i: waiting for extra bytes (gzip) */\nconst    NAME = 7;       /* i: waiting for end of file name (gzip) */\nconst    COMMENT = 8;    /* i: waiting for end of comment (gzip) */\nconst    HCRC = 9;       /* i: waiting for header crc (gzip) */\nconst    DICTID = 10;    /* i: waiting for dictionary check value */\nconst    DICT = 11;      /* waiting for inflateSetDictionary() call */\nconst        TYPE = 12;      /* i: waiting for type bits, including last-flag bit */\nconst        TYPEDO = 13;    /* i: same, but skip check to exit inflate on new block */\nconst        STORED = 14;    /* i: waiting for stored size (length and complement) */\nconst        COPY_ = 15;     /* i/o: same as COPY below, but only first time in */\nconst        COPY = 16;      /* i/o: waiting for input or output to copy stored block */\nconst        TABLE = 17;     /* i: waiting for dynamic block table lengths */\nconst        LENLENS = 18;   /* i: waiting for code length code lengths */\nconst        CODELENS = 19;  /* i: waiting for length/lit and distance code lengths */\nconst            LEN_ = 20;      /* i: same as LEN below, but only first time in */\nconst            LEN = 21;       /* i: waiting for length/lit/eob code */\nconst            LENEXT = 22;    /* i: waiting for length extra bits */\nconst            DIST = 23;      /* i: waiting for distance code */\nconst            DISTEXT = 24;   /* i: waiting for distance extra bits */\nconst            MATCH = 25;     /* o: waiting for output space to copy string */\nconst            LIT = 26;       /* o: waiting for output space to write literal */\nconst    CHECK = 27;     /* i: waiting for 32-bit check value */\nconst    LENGTH = 28;    /* i: waiting for 32-bit length (gzip) */\nconst    DONE = 29;      /* finished check, done -- remain here until reset */\nconst    BAD = 30;       /* got a data error -- remain here until reset */\nconst    MEM = 31;       /* got an inflate() memory error -- remain here until reset */\nconst    SYNC = 32;      /* looking for synchronization bytes to restart inflate() */\n\n/* ===========================================================================*/\n\n\n\nconst ENOUGH_LENS = 852;\nconst ENOUGH_DISTS = 592;\n//const ENOUGH =  (ENOUGH_LENS+ENOUGH_DISTS);\n\nconst MAX_WBITS = 15;\n/* 32K LZ77 window */\nconst DEF_WBITS = MAX_WBITS;\n\n\nconst zswap32 = (q) => {\n\n  return  (((q >>> 24) & 0xff) +\n          ((q >>> 8) & 0xff00) +\n          ((q & 0xff00) << 8) +\n          ((q & 0xff) << 24));\n};\n\n\nfunction InflateState() {\n  this.mode = 0;             /* current inflate mode */\n  this.last = false;          /* true if processing last block */\n  this.wrap = 0;              /* bit 0 true for zlib, bit 1 true for gzip */\n  this.havedict = false;      /* true if dictionary provided */\n  this.flags = 0;             /* gzip header method and flags (0 if zlib) */\n  this.dmax = 0;              /* zlib header max distance (INFLATE_STRICT) */\n  this.check = 0;             /* protected copy of check value */\n  this.total = 0;             /* protected copy of output count */\n  // TODO: may be {}\n  this.head = null;           /* where to save gzip header information */\n\n  /* sliding window */\n  this.wbits = 0;             /* log base 2 of requested window size */\n  this.wsize = 0;             /* window size or zero if not using window */\n  this.whave = 0;             /* valid bytes in the window */\n  this.wnext = 0;             /* window write index */\n  this.window = null;         /* allocated sliding window, if needed */\n\n  /* bit accumulator */\n  this.hold = 0;              /* input bit accumulator */\n  this.bits = 0;              /* number of bits in \"in\" */\n\n  /* for string and stored block copying */\n  this.length = 0;            /* literal or length of data to copy */\n  this.offset = 0;            /* distance back to copy string from */\n\n  /* for table and code decoding */\n  this.extra = 0;             /* extra bits needed */\n\n  /* fixed and dynamic code tables */\n  this.lencode = null;          /* starting table for length/literal codes */\n  this.distcode = null;         /* starting table for distance codes */\n  this.lenbits = 0;           /* index bits for lencode */\n  this.distbits = 0;          /* index bits for distcode */\n\n  /* dynamic table building */\n  this.ncode = 0;             /* number of code length code lengths */\n  this.nlen = 0;              /* number of length code lengths */\n  this.ndist = 0;             /* number of distance code lengths */\n  this.have = 0;              /* number of code lengths in lens[] */\n  this.next = null;              /* next available space in codes[] */\n\n  this.lens = new Uint16Array(320); /* temporary storage for code lengths */\n  this.work = new Uint16Array(288); /* work area for code table building */\n\n  /*\n   because we don't have pointers in js, we use lencode and distcode directly\n   as buffers so we don't need codes\n  */\n  //this.codes = new Int32Array(ENOUGH);       /* space for code tables */\n  this.lendyn = null;              /* dynamic table for length/literal codes (JS specific) */\n  this.distdyn = null;             /* dynamic table for distance codes (JS specific) */\n  this.sane = 0;                   /* if false, allow invalid distance too far */\n  this.back = 0;                   /* bits back of last unprocessed length/lit */\n  this.was = 0;                    /* initial length of match */\n}\n\n\nconst inflateResetKeep = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  strm.total_in = strm.total_out = state.total = 0;\n  strm.msg = ''; /*Z_NULL*/\n  if (state.wrap) {       /* to support ill-conceived Java test suite */\n    strm.adler = state.wrap & 1;\n  }\n  state.mode = HEAD;\n  state.last = 0;\n  state.havedict = 0;\n  state.dmax = 32768;\n  state.head = null/*Z_NULL*/;\n  state.hold = 0;\n  state.bits = 0;\n  //state.lencode = state.distcode = state.next = state.codes;\n  state.lencode = state.lendyn = new Int32Array(ENOUGH_LENS);\n  state.distcode = state.distdyn = new Int32Array(ENOUGH_DISTS);\n\n  state.sane = 1;\n  state.back = -1;\n  //Tracev((stderr, \"inflate: reset\\n\"));\n  return Z_OK$1;\n};\n\n\nconst inflateReset = (strm) => {\n\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  state.wsize = 0;\n  state.whave = 0;\n  state.wnext = 0;\n  return inflateResetKeep(strm);\n\n};\n\n\nconst inflateReset2 = (strm, windowBits) => {\n  let wrap;\n\n  /* get the state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n\n  /* extract wrap request from windowBits parameter */\n  if (windowBits < 0) {\n    wrap = 0;\n    windowBits = -windowBits;\n  }\n  else {\n    wrap = (windowBits >> 4) + 1;\n    if (windowBits < 48) {\n      windowBits &= 15;\n    }\n  }\n\n  /* set number of window bits, free window if different */\n  if (windowBits && (windowBits < 8 || windowBits > 15)) {\n    return Z_STREAM_ERROR$1;\n  }\n  if (state.window !== null && state.wbits !== windowBits) {\n    state.window = null;\n  }\n\n  /* update state and reset the rest of it */\n  state.wrap = wrap;\n  state.wbits = windowBits;\n  return inflateReset(strm);\n};\n\n\nconst inflateInit2 = (strm, windowBits) => {\n\n  if (!strm) { return Z_STREAM_ERROR$1; }\n  //strm.msg = Z_NULL;                 /* in case we return an error */\n\n  const state = new InflateState();\n\n  //if (state === Z_NULL) return Z_MEM_ERROR;\n  //Tracev((stderr, \"inflate: allocated\\n\"));\n  strm.state = state;\n  state.window = null/*Z_NULL*/;\n  const ret = inflateReset2(strm, windowBits);\n  if (ret !== Z_OK$1) {\n    strm.state = null/*Z_NULL*/;\n  }\n  return ret;\n};\n\n\nconst inflateInit = (strm) => {\n\n  return inflateInit2(strm, DEF_WBITS);\n};\n\n\n/*\n Return state with length and distance decoding tables and index sizes set to\n fixed code decoding.  Normally this returns fixed tables from inffixed.h.\n If BUILDFIXED is defined, then instead this routine builds the tables the\n first time it's called, and returns those tables the first time and\n thereafter.  This reduces the size of the code by about 2K bytes, in\n exchange for a little execution time.  However, BUILDFIXED should not be\n used for threaded applications, since the rewriting of the tables and virgin\n may not be thread-safe.\n */\nlet virgin = true;\n\nlet lenfix, distfix; // We have no pointers in JS, so keep tables separate\n\n\nconst fixedtables = (state) => {\n\n  /* build fixed huffman tables if first call (may not be thread safe) */\n  if (virgin) {\n    lenfix = new Int32Array(512);\n    distfix = new Int32Array(32);\n\n    /* literal/length table */\n    let sym = 0;\n    while (sym < 144) { state.lens[sym++] = 8; }\n    while (sym < 256) { state.lens[sym++] = 9; }\n    while (sym < 280) { state.lens[sym++] = 7; }\n    while (sym < 288) { state.lens[sym++] = 8; }\n\n    inftrees(LENS,  state.lens, 0, 288, lenfix,   0, state.work, { bits: 9 });\n\n    /* distance table */\n    sym = 0;\n    while (sym < 32) { state.lens[sym++] = 5; }\n\n    inftrees(DISTS, state.lens, 0, 32,   distfix, 0, state.work, { bits: 5 });\n\n    /* do this just once */\n    virgin = false;\n  }\n\n  state.lencode = lenfix;\n  state.lenbits = 9;\n  state.distcode = distfix;\n  state.distbits = 5;\n};\n\n\n/*\n Update the window with the last wsize (normally 32K) bytes written before\n returning.  If window does not exist yet, create it.  This is only called\n when a window is already in use, or when output has been written during this\n inflate call, but the end of the deflate stream has not been reached yet.\n It is also called to create a window for dictionary data when a dictionary\n is loaded.\n\n Providing output buffers larger than 32K to inflate() should provide a speed\n advantage, since only the last 32K of output is copied to the sliding window\n upon return from inflate(), and since all distances after the first 32K of\n output will fall in the output data, making match copies simpler and faster.\n The advantage may be dependent on the size of the processor's data caches.\n */\nconst updatewindow = (strm, src, end, copy) => {\n\n  let dist;\n  const state = strm.state;\n\n  /* if it hasn't been done already, allocate space for the window */\n  if (state.window === null) {\n    state.wsize = 1 << state.wbits;\n    state.wnext = 0;\n    state.whave = 0;\n\n    state.window = new Uint8Array(state.wsize);\n  }\n\n  /* copy state->wsize or less output bytes into the circular window */\n  if (copy >= state.wsize) {\n    state.window.set(src.subarray(end - state.wsize, end), 0);\n    state.wnext = 0;\n    state.whave = state.wsize;\n  }\n  else {\n    dist = state.wsize - state.wnext;\n    if (dist > copy) {\n      dist = copy;\n    }\n    //zmemcpy(state->window + state->wnext, end - copy, dist);\n    state.window.set(src.subarray(end - copy, end - copy + dist), state.wnext);\n    copy -= dist;\n    if (copy) {\n      //zmemcpy(state->window, end - copy, copy);\n      state.window.set(src.subarray(end - copy, end), 0);\n      state.wnext = copy;\n      state.whave = state.wsize;\n    }\n    else {\n      state.wnext += dist;\n      if (state.wnext === state.wsize) { state.wnext = 0; }\n      if (state.whave < state.wsize) { state.whave += dist; }\n    }\n  }\n  return 0;\n};\n\n\nconst inflate$2 = (strm, flush) => {\n\n  let state;\n  let input, output;          // input/output buffers\n  let next;                   /* next input INDEX */\n  let put;                    /* next output INDEX */\n  let have, left;             /* available input and output */\n  let hold;                   /* bit buffer */\n  let bits;                   /* bits in bit buffer */\n  let _in, _out;              /* save starting available input and output */\n  let copy;                   /* number of stored or match bytes to copy */\n  let from;                   /* where to copy match bytes from */\n  let from_source;\n  let here = 0;               /* current decoding table entry */\n  let here_bits, here_op, here_val; // paked \"here\" denormalized (JS specific)\n  //let last;                   /* parent table entry */\n  let last_bits, last_op, last_val; // paked \"last\" denormalized (JS specific)\n  let len;                    /* length to copy for repeats, bits to drop */\n  let ret;                    /* return code */\n  const hbuf = new Uint8Array(4);    /* buffer for gzip header crc calculation */\n  let opts;\n\n  let n; // temporary variable for NEED_BITS\n\n  const order = /* permutation of code lengths */\n    new Uint8Array([ 16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15 ]);\n\n\n  if (!strm || !strm.state || !strm.output ||\n      (!strm.input && strm.avail_in !== 0)) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  state = strm.state;\n  if (state.mode === TYPE) { state.mode = TYPEDO; }    /* skip check */\n\n\n  //--- LOAD() ---\n  put = strm.next_out;\n  output = strm.output;\n  left = strm.avail_out;\n  next = strm.next_in;\n  input = strm.input;\n  have = strm.avail_in;\n  hold = state.hold;\n  bits = state.bits;\n  //---\n\n  _in = have;\n  _out = left;\n  ret = Z_OK$1;\n\n  inf_leave: // goto emulation\n  for (;;) {\n    switch (state.mode) {\n      case HEAD:\n        if (state.wrap === 0) {\n          state.mode = TYPEDO;\n          break;\n        }\n        //=== NEEDBITS(16);\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((state.wrap & 2) && hold === 0x8b1f) {  /* gzip header */\n          state.check = 0/*crc32(0L, Z_NULL, 0)*/;\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          state.mode = FLAGS;\n          break;\n        }\n        state.flags = 0;           /* expect zlib header */\n        if (state.head) {\n          state.head.done = false;\n        }\n        if (!(state.wrap & 1) ||   /* check if zlib header allowed */\n          (((hold & 0xff)/*BITS(8)*/ << 8) + (hold >> 8)) % 31) {\n          strm.msg = 'incorrect header check';\n          state.mode = BAD;\n          break;\n        }\n        if ((hold & 0x0f)/*BITS(4)*/ !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n        len = (hold & 0x0f)/*BITS(4)*/ + 8;\n        if (state.wbits === 0) {\n          state.wbits = len;\n        }\n        else if (len > state.wbits) {\n          strm.msg = 'invalid window size';\n          state.mode = BAD;\n          break;\n        }\n\n        // !!! pako patch. Force use `options.windowBits` if passed.\n        // Required to always use max window size by default.\n        state.dmax = 1 << state.wbits;\n        //state.dmax = 1 << len;\n\n        //Tracev((stderr, \"inflate:   zlib header ok\\n\"));\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = hold & 0x200 ? DICTID : TYPE;\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        break;\n      case FLAGS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.flags = hold;\n        if ((state.flags & 0xff) !== Z_DEFLATED) {\n          strm.msg = 'unknown compression method';\n          state.mode = BAD;\n          break;\n        }\n        if (state.flags & 0xe000) {\n          strm.msg = 'unknown header flags set';\n          state.mode = BAD;\n          break;\n        }\n        if (state.head) {\n          state.head.text = ((hold >> 8) & 1);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = TIME;\n        /* falls through */\n      case TIME:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.time = hold;\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC4(state.check, hold)\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          hbuf[2] = (hold >>> 16) & 0xff;\n          hbuf[3] = (hold >>> 24) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 4, 0);\n          //===\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = OS;\n        /* falls through */\n      case OS:\n        //=== NEEDBITS(16); */\n        while (bits < 16) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if (state.head) {\n          state.head.xflags = (hold & 0xff);\n          state.head.os = (hold >> 8);\n        }\n        if (state.flags & 0x0200) {\n          //=== CRC2(state.check, hold);\n          hbuf[0] = hold & 0xff;\n          hbuf[1] = (hold >>> 8) & 0xff;\n          state.check = crc32_1(state.check, hbuf, 2, 0);\n          //===//\n        }\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = EXLEN;\n        /* falls through */\n      case EXLEN:\n        if (state.flags & 0x0400) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length = hold;\n          if (state.head) {\n            state.head.extra_len = hold;\n          }\n          if (state.flags & 0x0200) {\n            //=== CRC2(state.check, hold);\n            hbuf[0] = hold & 0xff;\n            hbuf[1] = (hold >>> 8) & 0xff;\n            state.check = crc32_1(state.check, hbuf, 2, 0);\n            //===//\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        else if (state.head) {\n          state.head.extra = null/*Z_NULL*/;\n        }\n        state.mode = EXTRA;\n        /* falls through */\n      case EXTRA:\n        if (state.flags & 0x0400) {\n          copy = state.length;\n          if (copy > have) { copy = have; }\n          if (copy) {\n            if (state.head) {\n              len = state.head.extra_len - state.length;\n              if (!state.head.extra) {\n                // Use untyped array for more convenient processing later\n                state.head.extra = new Uint8Array(state.head.extra_len);\n              }\n              state.head.extra.set(\n                input.subarray(\n                  next,\n                  // extra field is limited to 65536 bytes\n                  // - no need for additional size check\n                  next + copy\n                ),\n                /*len + copy > state.head.extra_max - len ? state.head.extra_max : copy,*/\n                len\n              );\n              //zmemcpy(state.head.extra + len, next,\n              //        len + copy > state.head.extra_max ?\n              //        state.head.extra_max - len : copy);\n            }\n            if (state.flags & 0x0200) {\n              state.check = crc32_1(state.check, input, copy, next);\n            }\n            have -= copy;\n            next += copy;\n            state.length -= copy;\n          }\n          if (state.length) { break inf_leave; }\n        }\n        state.length = 0;\n        state.mode = NAME;\n        /* falls through */\n      case NAME:\n        if (state.flags & 0x0800) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            // TODO: 2 or 1 bytes?\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.name_max*/)) {\n              state.head.name += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.name = null;\n        }\n        state.length = 0;\n        state.mode = COMMENT;\n        /* falls through */\n      case COMMENT:\n        if (state.flags & 0x1000) {\n          if (have === 0) { break inf_leave; }\n          copy = 0;\n          do {\n            len = input[next + copy++];\n            /* use constant limit because in js we should not preallocate memory */\n            if (state.head && len &&\n                (state.length < 65536 /*state.head.comm_max*/)) {\n              state.head.comment += String.fromCharCode(len);\n            }\n          } while (len && copy < have);\n          if (state.flags & 0x0200) {\n            state.check = crc32_1(state.check, input, copy, next);\n          }\n          have -= copy;\n          next += copy;\n          if (len) { break inf_leave; }\n        }\n        else if (state.head) {\n          state.head.comment = null;\n        }\n        state.mode = HCRC;\n        /* falls through */\n      case HCRC:\n        if (state.flags & 0x0200) {\n          //=== NEEDBITS(16); */\n          while (bits < 16) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.check & 0xffff)) {\n            strm.msg = 'header crc mismatch';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n        }\n        if (state.head) {\n          state.head.hcrc = ((state.flags >> 9) & 1);\n          state.head.done = true;\n        }\n        strm.adler = state.check = 0;\n        state.mode = TYPE;\n        break;\n      case DICTID:\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        strm.adler = state.check = zswap32(hold);\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = DICT;\n        /* falls through */\n      case DICT:\n        if (state.havedict === 0) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          return Z_NEED_DICT$1;\n        }\n        strm.adler = state.check = 1/*adler32(0L, Z_NULL, 0)*/;\n        state.mode = TYPE;\n        /* falls through */\n      case TYPE:\n        if (flush === Z_BLOCK || flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case TYPEDO:\n        if (state.last) {\n          //--- BYTEBITS() ---//\n          hold >>>= bits & 7;\n          bits -= bits & 7;\n          //---//\n          state.mode = CHECK;\n          break;\n        }\n        //=== NEEDBITS(3); */\n        while (bits < 3) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.last = (hold & 0x01)/*BITS(1)*/;\n        //--- DROPBITS(1) ---//\n        hold >>>= 1;\n        bits -= 1;\n        //---//\n\n        switch ((hold & 0x03)/*BITS(2)*/) {\n          case 0:                             /* stored block */\n            //Tracev((stderr, \"inflate:     stored block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = STORED;\n            break;\n          case 1:                             /* fixed block */\n            fixedtables(state);\n            //Tracev((stderr, \"inflate:     fixed codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = LEN_;             /* decode codes */\n            if (flush === Z_TREES) {\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n              break inf_leave;\n            }\n            break;\n          case 2:                             /* dynamic block */\n            //Tracev((stderr, \"inflate:     dynamic codes block%s\\n\",\n            //        state.last ? \" (last)\" : \"\"));\n            state.mode = TABLE;\n            break;\n          case 3:\n            strm.msg = 'invalid block type';\n            state.mode = BAD;\n        }\n        //--- DROPBITS(2) ---//\n        hold >>>= 2;\n        bits -= 2;\n        //---//\n        break;\n      case STORED:\n        //--- BYTEBITS() ---// /* go to byte boundary */\n        hold >>>= bits & 7;\n        bits -= bits & 7;\n        //---//\n        //=== NEEDBITS(32); */\n        while (bits < 32) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        if ((hold & 0xffff) !== ((hold >>> 16) ^ 0xffff)) {\n          strm.msg = 'invalid stored block lengths';\n          state.mode = BAD;\n          break;\n        }\n        state.length = hold & 0xffff;\n        //Tracev((stderr, \"inflate:       stored length %u\\n\",\n        //        state.length));\n        //=== INITBITS();\n        hold = 0;\n        bits = 0;\n        //===//\n        state.mode = COPY_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case COPY_:\n        state.mode = COPY;\n        /* falls through */\n      case COPY:\n        copy = state.length;\n        if (copy) {\n          if (copy > have) { copy = have; }\n          if (copy > left) { copy = left; }\n          if (copy === 0) { break inf_leave; }\n          //--- zmemcpy(put, next, copy); ---\n          output.set(input.subarray(next, next + copy), put);\n          //---//\n          have -= copy;\n          next += copy;\n          left -= copy;\n          put += copy;\n          state.length -= copy;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       stored end\\n\"));\n        state.mode = TYPE;\n        break;\n      case TABLE:\n        //=== NEEDBITS(14); */\n        while (bits < 14) {\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n        }\n        //===//\n        state.nlen = (hold & 0x1f)/*BITS(5)*/ + 257;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ndist = (hold & 0x1f)/*BITS(5)*/ + 1;\n        //--- DROPBITS(5) ---//\n        hold >>>= 5;\n        bits -= 5;\n        //---//\n        state.ncode = (hold & 0x0f)/*BITS(4)*/ + 4;\n        //--- DROPBITS(4) ---//\n        hold >>>= 4;\n        bits -= 4;\n        //---//\n//#ifndef PKZIP_BUG_WORKAROUND\n        if (state.nlen > 286 || state.ndist > 30) {\n          strm.msg = 'too many length or distance symbols';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracev((stderr, \"inflate:       table sizes ok\\n\"));\n        state.have = 0;\n        state.mode = LENLENS;\n        /* falls through */\n      case LENLENS:\n        while (state.have < state.ncode) {\n          //=== NEEDBITS(3);\n          while (bits < 3) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.lens[order[state.have++]] = (hold & 0x07);//BITS(3);\n          //--- DROPBITS(3) ---//\n          hold >>>= 3;\n          bits -= 3;\n          //---//\n        }\n        while (state.have < 19) {\n          state.lens[order[state.have++]] = 0;\n        }\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        //state.next = state.codes;\n        //state.lencode = state.next;\n        // Switch to use dynamic table\n        state.lencode = state.lendyn;\n        state.lenbits = 7;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(CODES, state.lens, 0, 19, state.lencode, 0, state.work, opts);\n        state.lenbits = opts.bits;\n\n        if (ret) {\n          strm.msg = 'invalid code lengths set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, \"inflate:       code lengths ok\\n\"));\n        state.have = 0;\n        state.mode = CODELENS;\n        /* falls through */\n      case CODELENS:\n        while (state.have < state.nlen + state.ndist) {\n          for (;;) {\n            here = state.lencode[hold & ((1 << state.lenbits) - 1)];/*BITS(state.lenbits)*/\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          if (here_val < 16) {\n            //--- DROPBITS(here.bits) ---//\n            hold >>>= here_bits;\n            bits -= here_bits;\n            //---//\n            state.lens[state.have++] = here_val;\n          }\n          else {\n            if (here_val === 16) {\n              //=== NEEDBITS(here.bits + 2);\n              n = here_bits + 2;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              if (state.have === 0) {\n                strm.msg = 'invalid bit length repeat';\n                state.mode = BAD;\n                break;\n              }\n              len = state.lens[state.have - 1];\n              copy = 3 + (hold & 0x03);//BITS(2);\n              //--- DROPBITS(2) ---//\n              hold >>>= 2;\n              bits -= 2;\n              //---//\n            }\n            else if (here_val === 17) {\n              //=== NEEDBITS(here.bits + 3);\n              n = here_bits + 3;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 3 + (hold & 0x07);//BITS(3);\n              //--- DROPBITS(3) ---//\n              hold >>>= 3;\n              bits -= 3;\n              //---//\n            }\n            else {\n              //=== NEEDBITS(here.bits + 7);\n              n = here_bits + 7;\n              while (bits < n) {\n                if (have === 0) { break inf_leave; }\n                have--;\n                hold += input[next++] << bits;\n                bits += 8;\n              }\n              //===//\n              //--- DROPBITS(here.bits) ---//\n              hold >>>= here_bits;\n              bits -= here_bits;\n              //---//\n              len = 0;\n              copy = 11 + (hold & 0x7f);//BITS(7);\n              //--- DROPBITS(7) ---//\n              hold >>>= 7;\n              bits -= 7;\n              //---//\n            }\n            if (state.have + copy > state.nlen + state.ndist) {\n              strm.msg = 'invalid bit length repeat';\n              state.mode = BAD;\n              break;\n            }\n            while (copy--) {\n              state.lens[state.have++] = len;\n            }\n          }\n        }\n\n        /* handle error breaks in while */\n        if (state.mode === BAD) { break; }\n\n        /* check for end-of-block code (better have one) */\n        if (state.lens[256] === 0) {\n          strm.msg = 'invalid code -- missing end-of-block';\n          state.mode = BAD;\n          break;\n        }\n\n        /* build code tables -- note: do not change the lenbits or distbits\n           values here (9 and 6) without reading the comments in inftrees.h\n           concerning the ENOUGH constants, which depend on those values */\n        state.lenbits = 9;\n\n        opts = { bits: state.lenbits };\n        ret = inftrees(LENS, state.lens, 0, state.nlen, state.lencode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.lenbits = opts.bits;\n        // state.lencode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid literal/lengths set';\n          state.mode = BAD;\n          break;\n        }\n\n        state.distbits = 6;\n        //state.distcode.copy(state.codes);\n        // Switch to use dynamic table\n        state.distcode = state.distdyn;\n        opts = { bits: state.distbits };\n        ret = inftrees(DISTS, state.lens, state.nlen, state.ndist, state.distcode, 0, state.work, opts);\n        // We have separate tables & no pointers. 2 commented lines below not needed.\n        // state.next_index = opts.table_index;\n        state.distbits = opts.bits;\n        // state.distcode = state.next;\n\n        if (ret) {\n          strm.msg = 'invalid distances set';\n          state.mode = BAD;\n          break;\n        }\n        //Tracev((stderr, 'inflate:       codes ok\\n'));\n        state.mode = LEN_;\n        if (flush === Z_TREES) { break inf_leave; }\n        /* falls through */\n      case LEN_:\n        state.mode = LEN;\n        /* falls through */\n      case LEN:\n        if (have >= 6 && left >= 258) {\n          //--- RESTORE() ---\n          strm.next_out = put;\n          strm.avail_out = left;\n          strm.next_in = next;\n          strm.avail_in = have;\n          state.hold = hold;\n          state.bits = bits;\n          //---\n          inffast(strm, _out);\n          //--- LOAD() ---\n          put = strm.next_out;\n          output = strm.output;\n          left = strm.avail_out;\n          next = strm.next_in;\n          input = strm.input;\n          have = strm.avail_in;\n          hold = state.hold;\n          bits = state.bits;\n          //---\n\n          if (state.mode === TYPE) {\n            state.back = -1;\n          }\n          break;\n        }\n        state.back = 0;\n        for (;;) {\n          here = state.lencode[hold & ((1 << state.lenbits) - 1)];  /*BITS(state.lenbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if (here_bits <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if (here_op && (here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.lencode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        state.length = here_val;\n        if (here_op === 0) {\n          //Tracevv((stderr, here.val >= 0x20 && here.val < 0x7f ?\n          //        \"inflate:         literal '%c'\\n\" :\n          //        \"inflate:         literal 0x%02x\\n\", here.val));\n          state.mode = LIT;\n          break;\n        }\n        if (here_op & 32) {\n          //Tracevv((stderr, \"inflate:         end of block\\n\"));\n          state.back = -1;\n          state.mode = TYPE;\n          break;\n        }\n        if (here_op & 64) {\n          strm.msg = 'invalid literal/length code';\n          state.mode = BAD;\n          break;\n        }\n        state.extra = here_op & 15;\n        state.mode = LENEXT;\n        /* falls through */\n      case LENEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.length += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n        //Tracevv((stderr, \"inflate:         length %u\\n\", state.length));\n        state.was = state.length;\n        state.mode = DIST;\n        /* falls through */\n      case DIST:\n        for (;;) {\n          here = state.distcode[hold & ((1 << state.distbits) - 1)];/*BITS(state.distbits)*/\n          here_bits = here >>> 24;\n          here_op = (here >>> 16) & 0xff;\n          here_val = here & 0xffff;\n\n          if ((here_bits) <= bits) { break; }\n          //--- PULLBYTE() ---//\n          if (have === 0) { break inf_leave; }\n          have--;\n          hold += input[next++] << bits;\n          bits += 8;\n          //---//\n        }\n        if ((here_op & 0xf0) === 0) {\n          last_bits = here_bits;\n          last_op = here_op;\n          last_val = here_val;\n          for (;;) {\n            here = state.distcode[last_val +\n                    ((hold & ((1 << (last_bits + last_op)) - 1))/*BITS(last.bits + last.op)*/ >> last_bits)];\n            here_bits = here >>> 24;\n            here_op = (here >>> 16) & 0xff;\n            here_val = here & 0xffff;\n\n            if ((last_bits + here_bits) <= bits) { break; }\n            //--- PULLBYTE() ---//\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n            //---//\n          }\n          //--- DROPBITS(last.bits) ---//\n          hold >>>= last_bits;\n          bits -= last_bits;\n          //---//\n          state.back += last_bits;\n        }\n        //--- DROPBITS(here.bits) ---//\n        hold >>>= here_bits;\n        bits -= here_bits;\n        //---//\n        state.back += here_bits;\n        if (here_op & 64) {\n          strm.msg = 'invalid distance code';\n          state.mode = BAD;\n          break;\n        }\n        state.offset = here_val;\n        state.extra = (here_op) & 15;\n        state.mode = DISTEXT;\n        /* falls through */\n      case DISTEXT:\n        if (state.extra) {\n          //=== NEEDBITS(state.extra);\n          n = state.extra;\n          while (bits < n) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          state.offset += hold & ((1 << state.extra) - 1)/*BITS(state.extra)*/;\n          //--- DROPBITS(state.extra) ---//\n          hold >>>= state.extra;\n          bits -= state.extra;\n          //---//\n          state.back += state.extra;\n        }\n//#ifdef INFLATE_STRICT\n        if (state.offset > state.dmax) {\n          strm.msg = 'invalid distance too far back';\n          state.mode = BAD;\n          break;\n        }\n//#endif\n        //Tracevv((stderr, \"inflate:         distance %u\\n\", state.offset));\n        state.mode = MATCH;\n        /* falls through */\n      case MATCH:\n        if (left === 0) { break inf_leave; }\n        copy = _out - left;\n        if (state.offset > copy) {         /* copy from window */\n          copy = state.offset - copy;\n          if (copy > state.whave) {\n            if (state.sane) {\n              strm.msg = 'invalid distance too far back';\n              state.mode = BAD;\n              break;\n            }\n// (!) This block is disabled in zlib defaults,\n// don't enable it for binary compatibility\n//#ifdef INFLATE_ALLOW_INVALID_DISTANCE_TOOFAR_ARRR\n//          Trace((stderr, \"inflate.c too far\\n\"));\n//          copy -= state.whave;\n//          if (copy > state.length) { copy = state.length; }\n//          if (copy > left) { copy = left; }\n//          left -= copy;\n//          state.length -= copy;\n//          do {\n//            output[put++] = 0;\n//          } while (--copy);\n//          if (state.length === 0) { state.mode = LEN; }\n//          break;\n//#endif\n          }\n          if (copy > state.wnext) {\n            copy -= state.wnext;\n            from = state.wsize - copy;\n          }\n          else {\n            from = state.wnext - copy;\n          }\n          if (copy > state.length) { copy = state.length; }\n          from_source = state.window;\n        }\n        else {                              /* copy from output */\n          from_source = output;\n          from = put - state.offset;\n          copy = state.length;\n        }\n        if (copy > left) { copy = left; }\n        left -= copy;\n        state.length -= copy;\n        do {\n          output[put++] = from_source[from++];\n        } while (--copy);\n        if (state.length === 0) { state.mode = LEN; }\n        break;\n      case LIT:\n        if (left === 0) { break inf_leave; }\n        output[put++] = state.length;\n        left--;\n        state.mode = LEN;\n        break;\n      case CHECK:\n        if (state.wrap) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            // Use '|' instead of '+' to make sure that result is signed\n            hold |= input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          _out -= left;\n          strm.total_out += _out;\n          state.total += _out;\n          if (_out) {\n            strm.adler = state.check =\n                /*UPDATE(state.check, put - _out, _out);*/\n                (state.flags ? crc32_1(state.check, output, _out, put - _out) : adler32_1(state.check, output, _out, put - _out));\n\n          }\n          _out = left;\n          // NB: crc32 stored as signed 32-bit int, zswap32 returns signed too\n          if ((state.flags ? hold : zswap32(hold)) !== state.check) {\n            strm.msg = 'incorrect data check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   check matches trailer\\n\"));\n        }\n        state.mode = LENGTH;\n        /* falls through */\n      case LENGTH:\n        if (state.wrap && state.flags) {\n          //=== NEEDBITS(32);\n          while (bits < 32) {\n            if (have === 0) { break inf_leave; }\n            have--;\n            hold += input[next++] << bits;\n            bits += 8;\n          }\n          //===//\n          if (hold !== (state.total & 0xffffffff)) {\n            strm.msg = 'incorrect length check';\n            state.mode = BAD;\n            break;\n          }\n          //=== INITBITS();\n          hold = 0;\n          bits = 0;\n          //===//\n          //Tracev((stderr, \"inflate:   length matches trailer\\n\"));\n        }\n        state.mode = DONE;\n        /* falls through */\n      case DONE:\n        ret = Z_STREAM_END$1;\n        break inf_leave;\n      case BAD:\n        ret = Z_DATA_ERROR$1;\n        break inf_leave;\n      case MEM:\n        return Z_MEM_ERROR$1;\n      case SYNC:\n        /* falls through */\n      default:\n        return Z_STREAM_ERROR$1;\n    }\n  }\n\n  // inf_leave <- here is real place for \"goto inf_leave\", emulated via \"break inf_leave\"\n\n  /*\n     Return from inflate(), updating the total counts and the check value.\n     If there was no progress during the inflate() call, return a buffer\n     error.  Call updatewindow() to create and/or update the window state.\n     Note: a memory error from inflate() is non-recoverable.\n   */\n\n  //--- RESTORE() ---\n  strm.next_out = put;\n  strm.avail_out = left;\n  strm.next_in = next;\n  strm.avail_in = have;\n  state.hold = hold;\n  state.bits = bits;\n  //---\n\n  if (state.wsize || (_out !== strm.avail_out && state.mode < BAD &&\n                      (state.mode < CHECK || flush !== Z_FINISH$1))) {\n    if (updatewindow(strm, strm.output, strm.next_out, _out - strm.avail_out)) ;\n  }\n  _in -= strm.avail_in;\n  _out -= strm.avail_out;\n  strm.total_in += _in;\n  strm.total_out += _out;\n  state.total += _out;\n  if (state.wrap && _out) {\n    strm.adler = state.check = /*UPDATE(state.check, strm.next_out - _out, _out);*/\n      (state.flags ? crc32_1(state.check, output, _out, strm.next_out - _out) : adler32_1(state.check, output, _out, strm.next_out - _out));\n  }\n  strm.data_type = state.bits + (state.last ? 64 : 0) +\n                    (state.mode === TYPE ? 128 : 0) +\n                    (state.mode === LEN_ || state.mode === COPY_ ? 256 : 0);\n  if (((_in === 0 && _out === 0) || flush === Z_FINISH$1) && ret === Z_OK$1) {\n    ret = Z_BUF_ERROR;\n  }\n  return ret;\n};\n\n\nconst inflateEnd = (strm) => {\n\n  if (!strm || !strm.state /*|| strm->zfree == (free_func)0*/) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  let state = strm.state;\n  if (state.window) {\n    state.window = null;\n  }\n  strm.state = null;\n  return Z_OK$1;\n};\n\n\nconst inflateGetHeader = (strm, head) => {\n\n  /* check state */\n  if (!strm || !strm.state) { return Z_STREAM_ERROR$1; }\n  const state = strm.state;\n  if ((state.wrap & 2) === 0) { return Z_STREAM_ERROR$1; }\n\n  /* save header structure */\n  state.head = head;\n  head.done = false;\n  return Z_OK$1;\n};\n\n\nconst inflateSetDictionary = (strm, dictionary) => {\n  const dictLength = dictionary.length;\n\n  let state;\n  let dictid;\n  let ret;\n\n  /* check state */\n  if (!strm /* == Z_NULL */ || !strm.state /* == Z_NULL */) { return Z_STREAM_ERROR$1; }\n  state = strm.state;\n\n  if (state.wrap !== 0 && state.mode !== DICT) {\n    return Z_STREAM_ERROR$1;\n  }\n\n  /* check for correct dictionary identifier */\n  if (state.mode === DICT) {\n    dictid = 1; /* adler32(0, null, 0)*/\n    /* dictid = adler32(dictid, dictionary, dictLength); */\n    dictid = adler32_1(dictid, dictionary, dictLength, 0);\n    if (dictid !== state.check) {\n      return Z_DATA_ERROR$1;\n    }\n  }\n  /* copy dictionary to window using updatewindow(), which will amend the\n   existing dictionary if appropriate */\n  ret = updatewindow(strm, dictionary, dictLength, dictLength);\n  if (ret) {\n    state.mode = MEM;\n    return Z_MEM_ERROR$1;\n  }\n  state.havedict = 1;\n  // Tracev((stderr, \"inflate:   dictionary set\\n\"));\n  return Z_OK$1;\n};\n\n\nvar inflateReset_1 = inflateReset;\nvar inflateReset2_1 = inflateReset2;\nvar inflateResetKeep_1 = inflateResetKeep;\nvar inflateInit_1 = inflateInit;\nvar inflateInit2_1 = inflateInit2;\nvar inflate_2$1 = inflate$2;\nvar inflateEnd_1 = inflateEnd;\nvar inflateGetHeader_1 = inflateGetHeader;\nvar inflateSetDictionary_1 = inflateSetDictionary;\nvar inflateInfo = 'pako inflate (from Nodeca project)';\n\n/* Not implemented\nmodule.exports.inflateCopy = inflateCopy;\nmodule.exports.inflateGetDictionary = inflateGetDictionary;\nmodule.exports.inflateMark = inflateMark;\nmodule.exports.inflatePrime = inflatePrime;\nmodule.exports.inflateSync = inflateSync;\nmodule.exports.inflateSyncPoint = inflateSyncPoint;\nmodule.exports.inflateUndermine = inflateUndermine;\n*/\n\nvar inflate_1$2 = {\n\tinflateReset: inflateReset_1,\n\tinflateReset2: inflateReset2_1,\n\tinflateResetKeep: inflateResetKeep_1,\n\tinflateInit: inflateInit_1,\n\tinflateInit2: inflateInit2_1,\n\tinflate: inflate_2$1,\n\tinflateEnd: inflateEnd_1,\n\tinflateGetHeader: inflateGetHeader_1,\n\tinflateSetDictionary: inflateSetDictionary_1,\n\tinflateInfo: inflateInfo\n};\n\n// (C) 1995-2013 Jean-loup Gailly and Mark Adler\n// (C) 2014-2017 Vitaly Puzrin and Andrey Tupitsin\n//\n// This software is provided 'as-is', without any express or implied\n// warranty. In no event will the authors be held liable for any damages\n// arising from the use of this software.\n//\n// Permission is granted to anyone to use this software for any purpose,\n// including commercial applications, and to alter it and redistribute it\n// freely, subject to the following restrictions:\n//\n// 1. The origin of this software must not be misrepresented; you must not\n//   claim that you wrote the original software. If you use this software\n//   in a product, an acknowledgment in the product documentation would be\n//   appreciated but is not required.\n// 2. Altered source versions must be plainly marked as such, and must not be\n//   misrepresented as being the original software.\n// 3. This notice may not be removed or altered from any source distribution.\n\nfunction GZheader() {\n  /* true if compressed data believed to be text */\n  this.text       = 0;\n  /* modification time */\n  this.time       = 0;\n  /* extra flags (not used when writing a gzip file) */\n  this.xflags     = 0;\n  /* operating system */\n  this.os         = 0;\n  /* pointer to extra field or Z_NULL if none */\n  this.extra      = null;\n  /* extra field length (valid if extra != Z_NULL) */\n  this.extra_len  = 0; // Actually, we don't need it in JS,\n                       // but leave for few code modifications\n\n  //\n  // Setup limits is not necessary because in js we should not preallocate memory\n  // for inflate use constant limit in 65536 bytes\n  //\n\n  /* space at extra (only when reading header) */\n  // this.extra_max  = 0;\n  /* pointer to zero-terminated file name or Z_NULL */\n  this.name       = '';\n  /* space at name (only when reading header) */\n  // this.name_max   = 0;\n  /* pointer to zero-terminated comment or Z_NULL */\n  this.comment    = '';\n  /* space at comment (only when reading header) */\n  // this.comm_max   = 0;\n  /* true if there was or will be a header crc */\n  this.hcrc       = 0;\n  /* true when done reading gzip header (not used when writing a gzip file) */\n  this.done       = false;\n}\n\nvar gzheader = GZheader;\n\nconst toString = Object.prototype.toString;\n\n/* Public constants ==========================================================*/\n/* ===========================================================================*/\n\nconst {\n  Z_NO_FLUSH, Z_FINISH,\n  Z_OK, Z_STREAM_END, Z_NEED_DICT, Z_STREAM_ERROR, Z_DATA_ERROR, Z_MEM_ERROR\n} = constants$2;\n\n/* ===========================================================================*/\n\n\n/**\n * class Inflate\n *\n * Generic JS-style wrapper for zlib calls. If you don't need\n * streaming behaviour - use more simple functions: [[inflate]]\n * and [[inflateRaw]].\n **/\n\n/* internal\n * inflate.chunks -> Array\n *\n * Chunks of output data, if [[Inflate#onData]] not overridden.\n **/\n\n/**\n * Inflate.result -> Uint8Array|String\n *\n * Uncompressed result, generated by default [[Inflate#onData]]\n * and [[Inflate#onEnd]] handlers. Filled after you push last chunk\n * (call [[Inflate#push]] with `Z_FINISH` / `true` param).\n **/\n\n/**\n * Inflate.err -> Number\n *\n * Error code after inflate finished. 0 (Z_OK) on success.\n * Should be checked if broken data possible.\n **/\n\n/**\n * Inflate.msg -> String\n *\n * Error message, if [[Inflate.err]] != 0\n **/\n\n\n/**\n * new Inflate(options)\n * - options (Object): zlib inflate options.\n *\n * Creates new inflator instance with specified params. Throws exception\n * on bad params. Supported options:\n *\n * - `windowBits`\n * - `dictionary`\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information on these.\n *\n * Additional options, for internal needs:\n *\n * - `chunkSize` - size of generated data chunks (16K by default)\n * - `raw` (Boolean) - do raw inflate\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n * By default, when no options set, autodetect deflate/gzip data format via\n * wrapper header.\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako')\n * const chunk1 = new Uint8Array([1,2,3,4,5,6,7,8,9])\n * const chunk2 = new Uint8Array([10,11,12,13,14,15,16,17,18,19]);\n *\n * const inflate = new pako.Inflate({ level: 3});\n *\n * inflate.push(chunk1, false);\n * inflate.push(chunk2, true);  // true -> last chunk\n *\n * if (inflate.err) { throw new Error(inflate.err); }\n *\n * console.log(inflate.result);\n * ```\n **/\nfunction Inflate$1(options) {\n  this.options = common.assign({\n    chunkSize: 1024 * 64,\n    windowBits: 15,\n    to: ''\n  }, options || {});\n\n  const opt = this.options;\n\n  // Force window size for `raw` data, if not set directly,\n  // because we have no header for autodetect.\n  if (opt.raw && (opt.windowBits >= 0) && (opt.windowBits < 16)) {\n    opt.windowBits = -opt.windowBits;\n    if (opt.windowBits === 0) { opt.windowBits = -15; }\n  }\n\n  // If `windowBits` not defined (and mode not raw) - set autodetect flag for gzip/deflate\n  if ((opt.windowBits >= 0) && (opt.windowBits < 16) &&\n      !(options && options.windowBits)) {\n    opt.windowBits += 32;\n  }\n\n  // Gzip header has no info about windows size, we can do autodetect only\n  // for deflate. So, if window size not set, force it to max when gzip possible\n  if ((opt.windowBits > 15) && (opt.windowBits < 48)) {\n    // bit 3 (16) -> gzipped data\n    // bit 4 (32) -> autodetect gzip/deflate\n    if ((opt.windowBits & 15) === 0) {\n      opt.windowBits |= 15;\n    }\n  }\n\n  this.err    = 0;      // error code, if happens (0 = Z_OK)\n  this.msg    = '';     // error message\n  this.ended  = false;  // used to avoid multiple onEnd() calls\n  this.chunks = [];     // chunks of compressed data\n\n  this.strm   = new zstream();\n  this.strm.avail_out = 0;\n\n  let status  = inflate_1$2.inflateInit2(\n    this.strm,\n    opt.windowBits\n  );\n\n  if (status !== Z_OK) {\n    throw new Error(messages[status]);\n  }\n\n  this.header = new gzheader();\n\n  inflate_1$2.inflateGetHeader(this.strm, this.header);\n\n  // Setup dictionary\n  if (opt.dictionary) {\n    // Convert data if needed\n    if (typeof opt.dictionary === 'string') {\n      opt.dictionary = strings.string2buf(opt.dictionary);\n    } else if (toString.call(opt.dictionary) === '[object ArrayBuffer]') {\n      opt.dictionary = new Uint8Array(opt.dictionary);\n    }\n    if (opt.raw) { //In raw mode we need to set the dictionary early\n      status = inflate_1$2.inflateSetDictionary(this.strm, opt.dictionary);\n      if (status !== Z_OK) {\n        throw new Error(messages[status]);\n      }\n    }\n  }\n}\n\n/**\n * Inflate#push(data[, flush_mode]) -> Boolean\n * - data (Uint8Array|ArrayBuffer): input data\n * - flush_mode (Number|Boolean): 0..6 for corresponding Z_NO_FLUSH..Z_TREE\n *   flush modes. See constants. Skipped or `false` means Z_NO_FLUSH,\n *   `true` means Z_FINISH.\n *\n * Sends input data to inflate pipe, generating [[Inflate#onData]] calls with\n * new output chunks. Returns `true` on success. If end of stream detected,\n * [[Inflate#onEnd]] will be called.\n *\n * `flush_mode` is not needed for normal operation, because end of stream\n * detected automatically. You may try to use it for advanced things, but\n * this functionality was not tested.\n *\n * On fail call [[Inflate#onEnd]] with error code and return false.\n *\n * ##### Example\n *\n * ```javascript\n * push(chunk, false); // push one of data chunks\n * ...\n * push(chunk, true);  // push last chunk\n * ```\n **/\nInflate$1.prototype.push = function (data, flush_mode) {\n  const strm = this.strm;\n  const chunkSize = this.options.chunkSize;\n  const dictionary = this.options.dictionary;\n  let status, _flush_mode, last_avail_out;\n\n  if (this.ended) return false;\n\n  if (flush_mode === ~~flush_mode) _flush_mode = flush_mode;\n  else _flush_mode = flush_mode === true ? Z_FINISH : Z_NO_FLUSH;\n\n  // Convert data if needed\n  if (toString.call(data) === '[object ArrayBuffer]') {\n    strm.input = new Uint8Array(data);\n  } else {\n    strm.input = data;\n  }\n\n  strm.next_in = 0;\n  strm.avail_in = strm.input.length;\n\n  for (;;) {\n    if (strm.avail_out === 0) {\n      strm.output = new Uint8Array(chunkSize);\n      strm.next_out = 0;\n      strm.avail_out = chunkSize;\n    }\n\n    status = inflate_1$2.inflate(strm, _flush_mode);\n\n    if (status === Z_NEED_DICT && dictionary) {\n      status = inflate_1$2.inflateSetDictionary(strm, dictionary);\n\n      if (status === Z_OK) {\n        status = inflate_1$2.inflate(strm, _flush_mode);\n      } else if (status === Z_DATA_ERROR) {\n        // Replace code with more verbose\n        status = Z_NEED_DICT;\n      }\n    }\n\n    // Skip snyc markers if more data follows and not raw mode\n    while (strm.avail_in > 0 &&\n           status === Z_STREAM_END &&\n           strm.state.wrap > 0 &&\n           data[strm.next_in] !== 0)\n    {\n      inflate_1$2.inflateReset(strm);\n      status = inflate_1$2.inflate(strm, _flush_mode);\n    }\n\n    switch (status) {\n      case Z_STREAM_ERROR:\n      case Z_DATA_ERROR:\n      case Z_NEED_DICT:\n      case Z_MEM_ERROR:\n        this.onEnd(status);\n        this.ended = true;\n        return false;\n    }\n\n    // Remember real `avail_out` value, because we may patch out buffer content\n    // to align utf8 strings boundaries.\n    last_avail_out = strm.avail_out;\n\n    if (strm.next_out) {\n      if (strm.avail_out === 0 || status === Z_STREAM_END) {\n\n        if (this.options.to === 'string') {\n\n          let next_out_utf8 = strings.utf8border(strm.output, strm.next_out);\n\n          let tail = strm.next_out - next_out_utf8;\n          let utf8str = strings.buf2string(strm.output, next_out_utf8);\n\n          // move tail & realign counters\n          strm.next_out = tail;\n          strm.avail_out = chunkSize - tail;\n          if (tail) strm.output.set(strm.output.subarray(next_out_utf8, next_out_utf8 + tail), 0);\n\n          this.onData(utf8str);\n\n        } else {\n          this.onData(strm.output.length === strm.next_out ? strm.output : strm.output.subarray(0, strm.next_out));\n        }\n      }\n    }\n\n    // Must repeat iteration if out buffer is full\n    if (status === Z_OK && last_avail_out === 0) continue;\n\n    // Finalize if end of stream reached.\n    if (status === Z_STREAM_END) {\n      status = inflate_1$2.inflateEnd(this.strm);\n      this.onEnd(status);\n      this.ended = true;\n      return true;\n    }\n\n    if (strm.avail_in === 0) break;\n  }\n\n  return true;\n};\n\n\n/**\n * Inflate#onData(chunk) -> Void\n * - chunk (Uint8Array|String): output data. When string output requested,\n *   each chunk will be string.\n *\n * By default, stores data blocks in `chunks[]` property and glue\n * those in `onEnd`. Override this handler, if you need another behaviour.\n **/\nInflate$1.prototype.onData = function (chunk) {\n  this.chunks.push(chunk);\n};\n\n\n/**\n * Inflate#onEnd(status) -> Void\n * - status (Number): inflate status. 0 (Z_OK) on success,\n *   other if not.\n *\n * Called either after you tell inflate that the input stream is\n * complete (Z_FINISH). By default - join collected chunks,\n * free memory and fill `results` / `err` properties.\n **/\nInflate$1.prototype.onEnd = function (status) {\n  // On success - join\n  if (status === Z_OK) {\n    if (this.options.to === 'string') {\n      this.result = this.chunks.join('');\n    } else {\n      this.result = common.flattenChunks(this.chunks);\n    }\n  }\n  this.chunks = [];\n  this.err = status;\n  this.msg = this.strm.msg;\n};\n\n\n/**\n * inflate(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Decompress `data` with inflate/ungzip and `options`. Autodetect\n * format via wrapper header by default. That's why we don't provide\n * separate `ungzip` method.\n *\n * Supported options are:\n *\n * - windowBits\n *\n * [http://zlib.net/manual.html#Advanced](http://zlib.net/manual.html#Advanced)\n * for more information.\n *\n * Sugar (options):\n *\n * - `raw` (Boolean) - say that we work with raw stream, if you don't wish to specify\n *   negative windowBits implicitly.\n * - `to` (String) - if equal to 'string', then result will be converted\n *   from utf8 to utf16 (javascript) string. When string output requested,\n *   chunk length can differ from `chunkSize`, depending on content.\n *\n *\n * ##### Example:\n *\n * ```javascript\n * const pako = require('pako');\n * const input = pako.deflate(new Uint8Array([1,2,3,4,5,6,7,8,9]));\n * let output;\n *\n * try {\n *   output = pako.inflate(input);\n * } catch (err) {\n *   console.log(err);\n * }\n * ```\n **/\nfunction inflate$1(input, options) {\n  const inflator = new Inflate$1(options);\n\n  inflator.push(input);\n\n  // That will never happens, if you don't cheat with options :)\n  if (inflator.err) throw inflator.msg || messages[inflator.err];\n\n  return inflator.result;\n}\n\n\n/**\n * inflateRaw(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * The same as [[inflate]], but creates raw data, without wrapper\n * (header and adler32 crc).\n **/\nfunction inflateRaw$1(input, options) {\n  options = options || {};\n  options.raw = true;\n  return inflate$1(input, options);\n}\n\n\n/**\n * ungzip(data[, options]) -> Uint8Array|String\n * - data (Uint8Array): input data to decompress.\n * - options (Object): zlib inflate options.\n *\n * Just shortcut to [[inflate]], because it autodetects format\n * by header.content. Done for convenience.\n **/\n\n\nvar Inflate_1$1 = Inflate$1;\nvar inflate_2 = inflate$1;\nvar inflateRaw_1$1 = inflateRaw$1;\nvar ungzip$1 = inflate$1;\nvar constants = constants$2;\n\nvar inflate_1$1 = {\n\tInflate: Inflate_1$1,\n\tinflate: inflate_2,\n\tinflateRaw: inflateRaw_1$1,\n\tungzip: ungzip$1,\n\tconstants: constants\n};\n\nconst { Deflate, deflate, deflateRaw, gzip } = deflate_1$1;\n\nconst { Inflate, inflate, inflateRaw, ungzip } = inflate_1$1;\n\n\n\nvar Deflate_1 = Deflate;\nvar deflate_1 = deflate;\nvar deflateRaw_1 = deflateRaw;\nvar gzip_1 = gzip;\nvar Inflate_1 = Inflate;\nvar inflate_1 = inflate;\nvar inflateRaw_1 = inflateRaw;\nvar ungzip_1 = ungzip;\nvar constants_1 = constants$2;\n\nvar pako = {\n\tDeflate: Deflate_1,\n\tdeflate: deflate_1,\n\tdeflateRaw: deflateRaw_1,\n\tgzip: gzip_1,\n\tInflate: Inflate_1,\n\tinflate: inflate_1,\n\tinflateRaw: inflateRaw_1,\n\tungzip: ungzip_1,\n\tconstants: constants_1\n};\n\nexport { Deflate_1 as Deflate, Inflate_1 as Inflate, constants_1 as constants, pako as default, deflate_1 as deflate, deflateRaw_1 as deflateRaw, gzip_1 as gzip, inflate_1 as inflate, inflateRaw_1 as inflateRaw, ungzip_1 as ungzip };\n",null,null,null,null,null,null,null,"/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nexport function __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nexport function __spreadArray(to, from) {\r\n    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)\r\n        to[j] = from[i];\r\n    return to;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","/**\n * Source: ftp://ftp.unicode.org/Public/UCD/latest/ucd/SpecialCasing.txt\n */\nvar SUPPORTED_LOCALE = {\n    tr: {\n        regexp: /\\u0130|\\u0049|\\u0049\\u0307/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    az: {\n        regexp: /\\u0130/g,\n        map: {\n            İ: \"\\u0069\",\n            I: \"\\u0131\",\n            İ: \"\\u0069\",\n        },\n    },\n    lt: {\n        regexp: /\\u0049|\\u004A|\\u012E|\\u00CC|\\u00CD|\\u0128/g,\n        map: {\n            I: \"\\u0069\\u0307\",\n            J: \"\\u006A\\u0307\",\n            Į: \"\\u012F\\u0307\",\n            Ì: \"\\u0069\\u0307\\u0300\",\n            Í: \"\\u0069\\u0307\\u0301\",\n            Ĩ: \"\\u0069\\u0307\\u0303\",\n        },\n    },\n};\n/**\n * Localized lower case.\n */\nexport function localeLowerCase(str, locale) {\n    var lang = SUPPORTED_LOCALE[locale.toLowerCase()];\n    if (lang)\n        return lowerCase(str.replace(lang.regexp, function (m) { return lang.map[m]; }));\n    return lowerCase(str);\n}\n/**\n * Lower case as a function.\n */\nexport function lowerCase(str) {\n    return str.toLowerCase();\n}\n//# sourceMappingURL=index.js.map","import { lowerCase } from \"lower-case\";\n// Support camel case (\"camelCase\" -> \"camel Case\" and \"CAMELCase\" -> \"CAMEL Case\").\nvar DEFAULT_SPLIT_REGEXP = [/([a-z0-9])([A-Z])/g, /([A-Z])([A-Z][a-z])/g];\n// Remove all non-word characters.\nvar DEFAULT_STRIP_REGEXP = /[^A-Z0-9]+/gi;\n/**\n * Normalize the string into something other libraries can manipulate easier.\n */\nexport function noCase(input, options) {\n    if (options === void 0) { options = {}; }\n    var _a = options.splitRegexp, splitRegexp = _a === void 0 ? DEFAULT_SPLIT_REGEXP : _a, _b = options.stripRegexp, stripRegexp = _b === void 0 ? DEFAULT_STRIP_REGEXP : _b, _c = options.transform, transform = _c === void 0 ? lowerCase : _c, _d = options.delimiter, delimiter = _d === void 0 ? \" \" : _d;\n    var result = replace(replace(input, splitRegexp, \"$1\\0$2\"), stripRegexp, \"\\0\");\n    var start = 0;\n    var end = result.length;\n    // Trim the delimiter from around the output string.\n    while (result.charAt(start) === \"\\0\")\n        start++;\n    while (result.charAt(end - 1) === \"\\0\")\n        end--;\n    // Transform each token independently.\n    return result.slice(start, end).split(\"\\0\").map(transform).join(delimiter);\n}\n/**\n * Replace `re` in the input string with the replacement value.\n */\nfunction replace(input, re, value) {\n    if (re instanceof RegExp)\n        return input.replace(re, value);\n    return re.reduce(function (input, re) { return input.replace(re, value); }, input);\n}\n//# sourceMappingURL=index.js.map","import { __assign } from \"tslib\";\nimport { noCase } from \"no-case\";\nexport function dotCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return noCase(input, __assign({ delimiter: \".\" }, options));\n}\n//# sourceMappingURL=index.js.map",null,null,"import { __assign } from \"tslib\";\nimport { dotCase } from \"dot-case\";\nexport function snakeCase(input, options) {\n    if (options === void 0) { options = {}; }\n    return dotCase(input, __assign({ delimiter: \"_\" }, options));\n}\n//# sourceMappingURL=index.js.map",null,null,null,null,null,"/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n",null,null,null,null,null,null,null,null,null,null,null,null,"var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n",null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,"'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.map = exports.array = exports.rustEnum = exports.str = exports.vecU8 = exports.tagged = exports.vec = exports.bool = exports.option = exports.publicKey = exports.i128 = exports.u128 = exports.i64 = exports.u64 = exports.struct = exports.f64 = exports.f32 = exports.i32 = exports.u32 = exports.i16 = exports.u16 = exports.i8 = exports.u8 = void 0;\nconst buffer_layout_1 = require(\"buffer-layout\");\nconst web3_js_1 = require(\"@solana/web3.js\");\nconst bn_js_1 = __importDefault(require(\"bn.js\"));\nvar buffer_layout_2 = require(\"buffer-layout\");\nObject.defineProperty(exports, \"u8\", { enumerable: true, get: function () { return buffer_layout_2.u8; } });\nObject.defineProperty(exports, \"i8\", { enumerable: true, get: function () { return buffer_layout_2.s8; } });\nObject.defineProperty(exports, \"u16\", { enumerable: true, get: function () { return buffer_layout_2.u16; } });\nObject.defineProperty(exports, \"i16\", { enumerable: true, get: function () { return buffer_layout_2.s16; } });\nObject.defineProperty(exports, \"u32\", { enumerable: true, get: function () { return buffer_layout_2.u32; } });\nObject.defineProperty(exports, \"i32\", { enumerable: true, get: function () { return buffer_layout_2.s32; } });\nObject.defineProperty(exports, \"f32\", { enumerable: true, get: function () { return buffer_layout_2.f32; } });\nObject.defineProperty(exports, \"f64\", { enumerable: true, get: function () { return buffer_layout_2.f64; } });\nObject.defineProperty(exports, \"struct\", { enumerable: true, get: function () { return buffer_layout_2.struct; } });\nclass BNLayout extends buffer_layout_1.Layout {\n    constructor(span, signed, property) {\n        super(span, property);\n        this.blob = buffer_layout_1.blob(span);\n        this.signed = signed;\n    }\n    decode(b, offset = 0) {\n        const num = new bn_js_1.default(this.blob.decode(b, offset), 10, 'le');\n        if (this.signed) {\n            return num.fromTwos(this.span * 8).clone();\n        }\n        return num;\n    }\n    encode(src, b, offset = 0) {\n        if (this.signed) {\n            src = src.toTwos(this.span * 8);\n        }\n        return this.blob.encode(src.toArrayLike(Buffer, 'le', this.span), b, offset);\n    }\n}\nfunction u64(property) {\n    return new BNLayout(8, false, property);\n}\nexports.u64 = u64;\nfunction i64(property) {\n    return new BNLayout(8, true, property);\n}\nexports.i64 = i64;\nfunction u128(property) {\n    return new BNLayout(16, false, property);\n}\nexports.u128 = u128;\nfunction i128(property) {\n    return new BNLayout(16, true, property);\n}\nexports.i128 = i128;\nclass WrappedLayout extends buffer_layout_1.Layout {\n    constructor(layout, decoder, encoder, property) {\n        super(layout.span, property);\n        this.layout = layout;\n        this.decoder = decoder;\n        this.encoder = encoder;\n    }\n    decode(b, offset) {\n        return this.decoder(this.layout.decode(b, offset));\n    }\n    encode(src, b, offset) {\n        return this.layout.encode(this.encoder(src), b, offset);\n    }\n    getSpan(b, offset) {\n        return this.layout.getSpan(b, offset);\n    }\n}\nfunction publicKey(property) {\n    return new WrappedLayout(buffer_layout_1.blob(32), (b) => new web3_js_1.PublicKey(b), (key) => key.toBuffer(), property);\n}\nexports.publicKey = publicKey;\nclass OptionLayout extends buffer_layout_1.Layout {\n    constructor(layout, property) {\n        super(-1, property);\n        this.layout = layout;\n        this.discriminator = buffer_layout_1.u8();\n    }\n    encode(src, b, offset = 0) {\n        if (src === null || src === undefined) {\n            return this.discriminator.encode(0, b, offset);\n        }\n        this.discriminator.encode(1, b, offset);\n        return this.layout.encode(src, b, offset + 1) + 1;\n    }\n    decode(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return null;\n        }\n        else if (discriminator === 1) {\n            return this.layout.decode(b, offset + 1);\n        }\n        throw new Error('Invalid option ' + this.property);\n    }\n    getSpan(b, offset = 0) {\n        const discriminator = this.discriminator.decode(b, offset);\n        if (discriminator === 0) {\n            return 1;\n        }\n        else if (discriminator === 1) {\n            return this.layout.getSpan(b, offset + 1) + 1;\n        }\n        throw new Error('Invalid option ' + this.property);\n    }\n}\nfunction option(layout, property) {\n    return new OptionLayout(layout, property);\n}\nexports.option = option;\nfunction bool(property) {\n    return new WrappedLayout(buffer_layout_1.u8(), decodeBool, encodeBool, property);\n}\nexports.bool = bool;\nfunction decodeBool(value) {\n    if (value === 0) {\n        return false;\n    }\n    else if (value === 1) {\n        return true;\n    }\n    throw new Error('Invalid bool: ' + value);\n}\nfunction encodeBool(value) {\n    return value ? 1 : 0;\n}\nfunction vec(elementLayout, property) {\n    const length = buffer_layout_1.u32('length');\n    const layout = buffer_layout_1.struct([\n        length,\n        buffer_layout_1.seq(elementLayout, buffer_layout_1.offset(length, -length.span), 'values'),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, values => ({ values }), property);\n}\nexports.vec = vec;\nfunction tagged(tag, layout, property) {\n    const wrappedLayout = buffer_layout_1.struct([\n        u64('tag'),\n        layout.replicate('data'),\n    ]);\n    function decodeTag({ tag: receivedTag, data }) {\n        if (!receivedTag.eq(tag)) {\n            throw new Error('Invalid tag, expected: ' +\n                tag.toString('hex') +\n                ', got: ' +\n                receivedTag.toString('hex'));\n        }\n        return data;\n    }\n    return new WrappedLayout(wrappedLayout, decodeTag, data => ({ tag, data }), property);\n}\nexports.tagged = tagged;\nfunction vecU8(property) {\n    const length = buffer_layout_1.u32('length');\n    const layout = buffer_layout_1.struct([\n        length,\n        buffer_layout_1.blob(buffer_layout_1.offset(length, -length.span), 'data'),\n    ]);\n    return new WrappedLayout(layout, ({ data }) => data, data => ({ data }), property);\n}\nexports.vecU8 = vecU8;\nfunction str(property) {\n    return new WrappedLayout(vecU8(), data => data.toString('utf-8'), s => Buffer.from(s, 'utf-8'), property);\n}\nexports.str = str;\nfunction rustEnum(variants, property, discriminant) {\n    const unionLayout = buffer_layout_1.union(discriminant !== null && discriminant !== void 0 ? discriminant : buffer_layout_1.u8(), property);\n    variants.forEach((variant, index) => unionLayout.addVariant(index, variant, variant.property));\n    return unionLayout;\n}\nexports.rustEnum = rustEnum;\nfunction array(elementLayout, length, property) {\n    const layout = buffer_layout_1.struct([\n        buffer_layout_1.seq(elementLayout, length, 'values'),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => values, values => ({ values }), property);\n}\nexports.array = array;\nclass MapEntryLayout extends buffer_layout_1.Layout {\n    constructor(keyLayout, valueLayout, property) {\n        super(keyLayout.span + valueLayout.span, property);\n        this.keyLayout = keyLayout;\n        this.valueLayout = valueLayout;\n    }\n    decode(b, offset) {\n        offset = offset || 0;\n        const key = this.keyLayout.decode(b, offset);\n        const value = this.valueLayout.decode(b, offset + this.keyLayout.getSpan(b, offset));\n        return [key, value];\n    }\n    encode(src, b, offset) {\n        offset = offset || 0;\n        const keyBytes = this.keyLayout.encode(src[0], b, offset);\n        const valueBytes = this.valueLayout.encode(src[1], b, offset + keyBytes);\n        return keyBytes + valueBytes;\n    }\n    getSpan(b, offset) {\n        return (this.keyLayout.getSpan(b, offset) + this.valueLayout.getSpan(b, offset));\n    }\n}\nfunction map(keyLayout, valueLayout, property) {\n    const length = buffer_layout_1.u32('length');\n    const layout = buffer_layout_1.struct([\n        length,\n        buffer_layout_1.seq(new MapEntryLayout(keyLayout, valueLayout), buffer_layout_1.offset(length, -length.span), 'values'),\n    ]);\n    return new WrappedLayout(layout, ({ values }) => new Map(values), values => ({ values: Array.from(values.entries()) }), property);\n}\nexports.map = map;\n//# sourceMappingURL=index.js.map","\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __exportStar = (this && this.__exportStar) || function(m, exports) {\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(exports, p)) __createBinding(exports, m, p);\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Purchasing = exports.Stake = exports.IDO = exports.Farming = exports.Swap = exports.SPLT = exports.Lamports = exports.utils = exports.schema = exports.keystore = exports.account = exports.RawWallet = void 0;\n__exportStar(require(\"./rawWallet\"), exports);\nvar rawWallet_1 = require(\"./rawWallet\");\nObject.defineProperty(exports, \"RawWallet\", { enumerable: true, get: function () { return rawWallet_1.default; } });\nvar account_1 = require(\"./account\");\nObject.defineProperty(exports, \"account\", { enumerable: true, get: function () { return account_1.default; } });\n__exportStar(require(\"./default\"), exports);\n__exportStar(require(\"./keystore\"), exports);\nvar keystore_1 = require(\"./keystore\");\nObject.defineProperty(exports, \"keystore\", { enumerable: true, get: function () { return keystore_1.default; } });\n__exportStar(require(\"./schema\"), exports);\nvar schema_1 = require(\"./schema\");\nObject.defineProperty(exports, \"schema\", { enumerable: true, get: function () { return schema_1.default; } });\nvar utils_1 = require(\"./utils\");\nObject.defineProperty(exports, \"utils\", { enumerable: true, get: function () { return utils_1.default; } });\nvar lamports_1 = require(\"./lamports\");\nObject.defineProperty(exports, \"Lamports\", { enumerable: true, get: function () { return lamports_1.default; } });\n__exportStar(require(\"./splt\"), exports);\nvar splt_1 = require(\"./splt\");\nObject.defineProperty(exports, \"SPLT\", { enumerable: true, get: function () { return splt_1.default; } });\n__exportStar(require(\"./swap\"), exports);\nvar swap_1 = require(\"./swap\");\nObject.defineProperty(exports, \"Swap\", { enumerable: true, get: function () { return swap_1.default; } });\n__exportStar(require(\"./farming\"), exports);\nvar farming_1 = require(\"./farming\");\nObject.defineProperty(exports, \"Farming\", { enumerable: true, get: function () { return farming_1.default; } });\n__exportStar(require(\"./ido\"), exports);\nvar ido_1 = require(\"./ido\");\nObject.defineProperty(exports, \"IDO\", { enumerable: true, get: function () { return ido_1.default; } });\n__exportStar(require(\"./stake\"), exports);\nvar stake_1 = require(\"./stake\");\nObject.defineProperty(exports, \"Stake\", { enumerable: true, get: function () { return stake_1.default; } });\n__exportStar(require(\"./purchasing\"), exports);\nvar purchasing_1 = require(\"./purchasing\");\nObject.defineProperty(exports, \"Purchasing\", { enumerable: true, get: function () { return purchasing_1.default; } });\n","import {Buffer} from 'buffer';\n\nexport const toBuffer = (arr: Buffer | Uint8Array | Array<number>): Buffer => {\n  if (Buffer.isBuffer(arr)) {\n    return arr;\n  } else if (arr instanceof Uint8Array) {\n    return Buffer.from(arr.buffer, arr.byteOffset, arr.byteLength);\n  } else {\n    return Buffer.from(arr);\n  }\n};\n","module.exports = assert;\n\nfunction assert(val, msg) {\n  if (!val)\n    throw new Error(msg || 'Assertion failed');\n}\n\nassert.equal = function assertEqual(l, r, msg) {\n  if (l != r)\n    throw new Error(msg || ('Assertion failed: ' + l + ' != ' + r));\n};\n","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      ctor.prototype = Object.create(superCtor.prototype, {\n        constructor: {\n          value: ctor,\n          enumerable: false,\n          writable: true,\n          configurable: true\n        }\n      })\n    }\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    if (superCtor) {\n      ctor.super_ = superCtor\n      var TempCtor = function () {}\n      TempCtor.prototype = superCtor.prototype\n      ctor.prototype = new TempCtor()\n      ctor.prototype.constructor = ctor\n    }\n  }\n}\n","'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nexports.inherits = inherits;\n\nfunction isSurrogatePair(msg, i) {\n  if ((msg.charCodeAt(i) & 0xFC00) !== 0xD800) {\n    return false;\n  }\n  if (i < 0 || i + 1 >= msg.length) {\n    return false;\n  }\n  return (msg.charCodeAt(i + 1) & 0xFC00) === 0xDC00;\n}\n\nfunction toArray(msg, enc) {\n  if (Array.isArray(msg))\n    return msg.slice();\n  if (!msg)\n    return [];\n  var res = [];\n  if (typeof msg === 'string') {\n    if (!enc) {\n      // Inspired by stringToUtf8ByteArray() in closure-library by Google\n      // https://github.com/google/closure-library/blob/8598d87242af59aac233270742c8984e2b2bdbe0/closure/goog/crypt/crypt.js#L117-L143\n      // Apache License 2.0\n      // https://github.com/google/closure-library/blob/master/LICENSE\n      var p = 0;\n      for (var i = 0; i < msg.length; i++) {\n        var c = msg.charCodeAt(i);\n        if (c < 128) {\n          res[p++] = c;\n        } else if (c < 2048) {\n          res[p++] = (c >> 6) | 192;\n          res[p++] = (c & 63) | 128;\n        } else if (isSurrogatePair(msg, i)) {\n          c = 0x10000 + ((c & 0x03FF) << 10) + (msg.charCodeAt(++i) & 0x03FF);\n          res[p++] = (c >> 18) | 240;\n          res[p++] = ((c >> 12) & 63) | 128;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        } else {\n          res[p++] = (c >> 12) | 224;\n          res[p++] = ((c >> 6) & 63) | 128;\n          res[p++] = (c & 63) | 128;\n        }\n      }\n    } else if (enc === 'hex') {\n      msg = msg.replace(/[^a-z0-9]+/ig, '');\n      if (msg.length % 2 !== 0)\n        msg = '0' + msg;\n      for (i = 0; i < msg.length; i += 2)\n        res.push(parseInt(msg[i] + msg[i + 1], 16));\n    }\n  } else {\n    for (i = 0; i < msg.length; i++)\n      res[i] = msg[i] | 0;\n  }\n  return res;\n}\nexports.toArray = toArray;\n\nfunction toHex(msg) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++)\n    res += zero2(msg[i].toString(16));\n  return res;\n}\nexports.toHex = toHex;\n\nfunction htonl(w) {\n  var res = (w >>> 24) |\n            ((w >>> 8) & 0xff00) |\n            ((w << 8) & 0xff0000) |\n            ((w & 0xff) << 24);\n  return res >>> 0;\n}\nexports.htonl = htonl;\n\nfunction toHex32(msg, endian) {\n  var res = '';\n  for (var i = 0; i < msg.length; i++) {\n    var w = msg[i];\n    if (endian === 'little')\n      w = htonl(w);\n    res += zero8(w.toString(16));\n  }\n  return res;\n}\nexports.toHex32 = toHex32;\n\nfunction zero2(word) {\n  if (word.length === 1)\n    return '0' + word;\n  else\n    return word;\n}\nexports.zero2 = zero2;\n\nfunction zero8(word) {\n  if (word.length === 7)\n    return '0' + word;\n  else if (word.length === 6)\n    return '00' + word;\n  else if (word.length === 5)\n    return '000' + word;\n  else if (word.length === 4)\n    return '0000' + word;\n  else if (word.length === 3)\n    return '00000' + word;\n  else if (word.length === 2)\n    return '000000' + word;\n  else if (word.length === 1)\n    return '0000000' + word;\n  else\n    return word;\n}\nexports.zero8 = zero8;\n\nfunction join32(msg, start, end, endian) {\n  var len = end - start;\n  assert(len % 4 === 0);\n  var res = new Array(len / 4);\n  for (var i = 0, k = start; i < res.length; i++, k += 4) {\n    var w;\n    if (endian === 'big')\n      w = (msg[k] << 24) | (msg[k + 1] << 16) | (msg[k + 2] << 8) | msg[k + 3];\n    else\n      w = (msg[k + 3] << 24) | (msg[k + 2] << 16) | (msg[k + 1] << 8) | msg[k];\n    res[i] = w >>> 0;\n  }\n  return res;\n}\nexports.join32 = join32;\n\nfunction split32(msg, endian) {\n  var res = new Array(msg.length * 4);\n  for (var i = 0, k = 0; i < msg.length; i++, k += 4) {\n    var m = msg[i];\n    if (endian === 'big') {\n      res[k] = m >>> 24;\n      res[k + 1] = (m >>> 16) & 0xff;\n      res[k + 2] = (m >>> 8) & 0xff;\n      res[k + 3] = m & 0xff;\n    } else {\n      res[k + 3] = m >>> 24;\n      res[k + 2] = (m >>> 16) & 0xff;\n      res[k + 1] = (m >>> 8) & 0xff;\n      res[k] = m & 0xff;\n    }\n  }\n  return res;\n}\nexports.split32 = split32;\n\nfunction rotr32(w, b) {\n  return (w >>> b) | (w << (32 - b));\n}\nexports.rotr32 = rotr32;\n\nfunction rotl32(w, b) {\n  return (w << b) | (w >>> (32 - b));\n}\nexports.rotl32 = rotl32;\n\nfunction sum32(a, b) {\n  return (a + b) >>> 0;\n}\nexports.sum32 = sum32;\n\nfunction sum32_3(a, b, c) {\n  return (a + b + c) >>> 0;\n}\nexports.sum32_3 = sum32_3;\n\nfunction sum32_4(a, b, c, d) {\n  return (a + b + c + d) >>> 0;\n}\nexports.sum32_4 = sum32_4;\n\nfunction sum32_5(a, b, c, d, e) {\n  return (a + b + c + d + e) >>> 0;\n}\nexports.sum32_5 = sum32_5;\n\nfunction sum64(buf, pos, ah, al) {\n  var bh = buf[pos];\n  var bl = buf[pos + 1];\n\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  buf[pos] = hi >>> 0;\n  buf[pos + 1] = lo;\n}\nexports.sum64 = sum64;\n\nfunction sum64_hi(ah, al, bh, bl) {\n  var lo = (al + bl) >>> 0;\n  var hi = (lo < al ? 1 : 0) + ah + bh;\n  return hi >>> 0;\n}\nexports.sum64_hi = sum64_hi;\n\nfunction sum64_lo(ah, al, bh, bl) {\n  var lo = al + bl;\n  return lo >>> 0;\n}\nexports.sum64_lo = sum64_lo;\n\nfunction sum64_4_hi(ah, al, bh, bl, ch, cl, dh, dl) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + carry;\n  return hi >>> 0;\n}\nexports.sum64_4_hi = sum64_4_hi;\n\nfunction sum64_4_lo(ah, al, bh, bl, ch, cl, dh, dl) {\n  var lo = al + bl + cl + dl;\n  return lo >>> 0;\n}\nexports.sum64_4_lo = sum64_4_lo;\n\nfunction sum64_5_hi(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var carry = 0;\n  var lo = al;\n  lo = (lo + bl) >>> 0;\n  carry += lo < al ? 1 : 0;\n  lo = (lo + cl) >>> 0;\n  carry += lo < cl ? 1 : 0;\n  lo = (lo + dl) >>> 0;\n  carry += lo < dl ? 1 : 0;\n  lo = (lo + el) >>> 0;\n  carry += lo < el ? 1 : 0;\n\n  var hi = ah + bh + ch + dh + eh + carry;\n  return hi >>> 0;\n}\nexports.sum64_5_hi = sum64_5_hi;\n\nfunction sum64_5_lo(ah, al, bh, bl, ch, cl, dh, dl, eh, el) {\n  var lo = al + bl + cl + dl + el;\n\n  return lo >>> 0;\n}\nexports.sum64_5_lo = sum64_5_lo;\n\nfunction rotr64_hi(ah, al, num) {\n  var r = (al << (32 - num)) | (ah >>> num);\n  return r >>> 0;\n}\nexports.rotr64_hi = rotr64_hi;\n\nfunction rotr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.rotr64_lo = rotr64_lo;\n\nfunction shr64_hi(ah, al, num) {\n  return ah >>> num;\n}\nexports.shr64_hi = shr64_hi;\n\nfunction shr64_lo(ah, al, num) {\n  var r = (ah << (32 - num)) | (al >>> num);\n  return r >>> 0;\n}\nexports.shr64_lo = shr64_lo;\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction BlockHash() {\n  this.pending = null;\n  this.pendingTotal = 0;\n  this.blockSize = this.constructor.blockSize;\n  this.outSize = this.constructor.outSize;\n  this.hmacStrength = this.constructor.hmacStrength;\n  this.padLength = this.constructor.padLength / 8;\n  this.endian = 'big';\n\n  this._delta8 = this.blockSize / 8;\n  this._delta32 = this.blockSize / 32;\n}\nexports.BlockHash = BlockHash;\n\nBlockHash.prototype.update = function update(msg, enc) {\n  // Convert message to array, pad it, and join into 32bit blocks\n  msg = utils.toArray(msg, enc);\n  if (!this.pending)\n    this.pending = msg;\n  else\n    this.pending = this.pending.concat(msg);\n  this.pendingTotal += msg.length;\n\n  // Enough data, try updating\n  if (this.pending.length >= this._delta8) {\n    msg = this.pending;\n\n    // Process pending data in blocks\n    var r = msg.length % this._delta8;\n    this.pending = msg.slice(msg.length - r, msg.length);\n    if (this.pending.length === 0)\n      this.pending = null;\n\n    msg = utils.join32(msg, 0, msg.length - r, this.endian);\n    for (var i = 0; i < msg.length; i += this._delta32)\n      this._update(msg, i, i + this._delta32);\n  }\n\n  return this;\n};\n\nBlockHash.prototype.digest = function digest(enc) {\n  this.update(this._pad());\n  assert(this.pending === null);\n\n  return this._digest(enc);\n};\n\nBlockHash.prototype._pad = function pad() {\n  var len = this.pendingTotal;\n  var bytes = this._delta8;\n  var k = bytes - ((len + this.padLength) % bytes);\n  var res = new Array(k + this.padLength);\n  res[0] = 0x80;\n  for (var i = 1; i < k; i++)\n    res[i] = 0;\n\n  // Append length\n  len <<= 3;\n  if (this.endian === 'big') {\n    for (var t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = len & 0xff;\n  } else {\n    res[i++] = len & 0xff;\n    res[i++] = (len >>> 8) & 0xff;\n    res[i++] = (len >>> 16) & 0xff;\n    res[i++] = (len >>> 24) & 0xff;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n    res[i++] = 0;\n\n    for (t = 8; t < this.padLength; t++)\n      res[i++] = 0;\n  }\n\n  return res;\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar rotr32 = utils.rotr32;\n\nfunction ft_1(s, x, y, z) {\n  if (s === 0)\n    return ch32(x, y, z);\n  if (s === 1 || s === 3)\n    return p32(x, y, z);\n  if (s === 2)\n    return maj32(x, y, z);\n}\nexports.ft_1 = ft_1;\n\nfunction ch32(x, y, z) {\n  return (x & y) ^ ((~x) & z);\n}\nexports.ch32 = ch32;\n\nfunction maj32(x, y, z) {\n  return (x & y) ^ (x & z) ^ (y & z);\n}\nexports.maj32 = maj32;\n\nfunction p32(x, y, z) {\n  return x ^ y ^ z;\n}\nexports.p32 = p32;\n\nfunction s0_256(x) {\n  return rotr32(x, 2) ^ rotr32(x, 13) ^ rotr32(x, 22);\n}\nexports.s0_256 = s0_256;\n\nfunction s1_256(x) {\n  return rotr32(x, 6) ^ rotr32(x, 11) ^ rotr32(x, 25);\n}\nexports.s1_256 = s1_256;\n\nfunction g0_256(x) {\n  return rotr32(x, 7) ^ rotr32(x, 18) ^ (x >>> 3);\n}\nexports.g0_256 = g0_256;\n\nfunction g1_256(x) {\n  return rotr32(x, 17) ^ rotr32(x, 19) ^ (x >>> 10);\n}\nexports.g1_256 = g1_256;\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_5 = utils.sum32_5;\nvar ft_1 = shaCommon.ft_1;\nvar BlockHash = common.BlockHash;\n\nvar sha1_K = [\n  0x5A827999, 0x6ED9EBA1,\n  0x8F1BBCDC, 0xCA62C1D6\n];\n\nfunction SHA1() {\n  if (!(this instanceof SHA1))\n    return new SHA1();\n\n  BlockHash.call(this);\n  this.h = [\n    0x67452301, 0xefcdab89, 0x98badcfe,\n    0x10325476, 0xc3d2e1f0 ];\n  this.W = new Array(80);\n}\n\nutils.inherits(SHA1, BlockHash);\nmodule.exports = SHA1;\n\nSHA1.blockSize = 512;\nSHA1.outSize = 160;\nSHA1.hmacStrength = 80;\nSHA1.padLength = 64;\n\nSHA1.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n\n  for(; i < W.length; i++)\n    W[i] = rotl32(W[i - 3] ^ W[i - 8] ^ W[i - 14] ^ W[i - 16], 1);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n\n  for (i = 0; i < W.length; i++) {\n    var s = ~~(i / 20);\n    var t = sum32_5(rotl32(a, 5), ft_1(s, b, c, d), e, W[i], sha1_K[s]);\n    e = d;\n    d = c;\n    c = rotl32(b, 30);\n    b = a;\n    a = t;\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n};\n\nSHA1.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar shaCommon = require('./common');\nvar assert = require('minimalistic-assert');\n\nvar sum32 = utils.sum32;\nvar sum32_4 = utils.sum32_4;\nvar sum32_5 = utils.sum32_5;\nvar ch32 = shaCommon.ch32;\nvar maj32 = shaCommon.maj32;\nvar s0_256 = shaCommon.s0_256;\nvar s1_256 = shaCommon.s1_256;\nvar g0_256 = shaCommon.g0_256;\nvar g1_256 = shaCommon.g1_256;\n\nvar BlockHash = common.BlockHash;\n\nvar sha256_K = [\n  0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5,\n  0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n  0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3,\n  0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n  0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc,\n  0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n  0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7,\n  0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n  0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13,\n  0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n  0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3,\n  0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n  0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5,\n  0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n  0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208,\n  0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n];\n\nfunction SHA256() {\n  if (!(this instanceof SHA256))\n    return new SHA256();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xbb67ae85, 0x3c6ef372, 0xa54ff53a,\n    0x510e527f, 0x9b05688c, 0x1f83d9ab, 0x5be0cd19\n  ];\n  this.k = sha256_K;\n  this.W = new Array(64);\n}\nutils.inherits(SHA256, BlockHash);\nmodule.exports = SHA256;\n\nSHA256.blockSize = 512;\nSHA256.outSize = 256;\nSHA256.hmacStrength = 192;\nSHA256.padLength = 64;\n\nSHA256.prototype._update = function _update(msg, start) {\n  var W = this.W;\n\n  for (var i = 0; i < 16; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i++)\n    W[i] = sum32_4(g1_256(W[i - 2]), W[i - 7], g0_256(W[i - 15]), W[i - 16]);\n\n  var a = this.h[0];\n  var b = this.h[1];\n  var c = this.h[2];\n  var d = this.h[3];\n  var e = this.h[4];\n  var f = this.h[5];\n  var g = this.h[6];\n  var h = this.h[7];\n\n  assert(this.k.length === W.length);\n  for (i = 0; i < W.length; i++) {\n    var T1 = sum32_5(h, s1_256(e), ch32(e, f, g), this.k[i], W[i]);\n    var T2 = sum32(s0_256(a), maj32(a, b, c));\n    h = g;\n    g = f;\n    f = e;\n    e = sum32(d, T1);\n    d = c;\n    c = b;\n    b = a;\n    a = sum32(T1, T2);\n  }\n\n  this.h[0] = sum32(this.h[0], a);\n  this.h[1] = sum32(this.h[1], b);\n  this.h[2] = sum32(this.h[2], c);\n  this.h[3] = sum32(this.h[3], d);\n  this.h[4] = sum32(this.h[4], e);\n  this.h[5] = sum32(this.h[5], f);\n  this.h[6] = sum32(this.h[6], g);\n  this.h[7] = sum32(this.h[7], h);\n};\n\nSHA256.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n","'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","'use strict';\n\nvar utils = require('../utils');\nvar common = require('../common');\nvar assert = require('minimalistic-assert');\n\nvar rotr64_hi = utils.rotr64_hi;\nvar rotr64_lo = utils.rotr64_lo;\nvar shr64_hi = utils.shr64_hi;\nvar shr64_lo = utils.shr64_lo;\nvar sum64 = utils.sum64;\nvar sum64_hi = utils.sum64_hi;\nvar sum64_lo = utils.sum64_lo;\nvar sum64_4_hi = utils.sum64_4_hi;\nvar sum64_4_lo = utils.sum64_4_lo;\nvar sum64_5_hi = utils.sum64_5_hi;\nvar sum64_5_lo = utils.sum64_5_lo;\n\nvar BlockHash = common.BlockHash;\n\nvar sha512_K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction SHA512() {\n  if (!(this instanceof SHA512))\n    return new SHA512();\n\n  BlockHash.call(this);\n  this.h = [\n    0x6a09e667, 0xf3bcc908,\n    0xbb67ae85, 0x84caa73b,\n    0x3c6ef372, 0xfe94f82b,\n    0xa54ff53a, 0x5f1d36f1,\n    0x510e527f, 0xade682d1,\n    0x9b05688c, 0x2b3e6c1f,\n    0x1f83d9ab, 0xfb41bd6b,\n    0x5be0cd19, 0x137e2179 ];\n  this.k = sha512_K;\n  this.W = new Array(160);\n}\nutils.inherits(SHA512, BlockHash);\nmodule.exports = SHA512;\n\nSHA512.blockSize = 1024;\nSHA512.outSize = 512;\nSHA512.hmacStrength = 192;\nSHA512.padLength = 128;\n\nSHA512.prototype._prepareBlock = function _prepareBlock(msg, start) {\n  var W = this.W;\n\n  // 32 x 32bit words\n  for (var i = 0; i < 32; i++)\n    W[i] = msg[start + i];\n  for (; i < W.length; i += 2) {\n    var c0_hi = g1_512_hi(W[i - 4], W[i - 3]);  // i - 2\n    var c0_lo = g1_512_lo(W[i - 4], W[i - 3]);\n    var c1_hi = W[i - 14];  // i - 7\n    var c1_lo = W[i - 13];\n    var c2_hi = g0_512_hi(W[i - 30], W[i - 29]);  // i - 15\n    var c2_lo = g0_512_lo(W[i - 30], W[i - 29]);\n    var c3_hi = W[i - 32];  // i - 16\n    var c3_lo = W[i - 31];\n\n    W[i] = sum64_4_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n    W[i + 1] = sum64_4_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo);\n  }\n};\n\nSHA512.prototype._update = function _update(msg, start) {\n  this._prepareBlock(msg, start);\n\n  var W = this.W;\n\n  var ah = this.h[0];\n  var al = this.h[1];\n  var bh = this.h[2];\n  var bl = this.h[3];\n  var ch = this.h[4];\n  var cl = this.h[5];\n  var dh = this.h[6];\n  var dl = this.h[7];\n  var eh = this.h[8];\n  var el = this.h[9];\n  var fh = this.h[10];\n  var fl = this.h[11];\n  var gh = this.h[12];\n  var gl = this.h[13];\n  var hh = this.h[14];\n  var hl = this.h[15];\n\n  assert(this.k.length === W.length);\n  for (var i = 0; i < W.length; i += 2) {\n    var c0_hi = hh;\n    var c0_lo = hl;\n    var c1_hi = s1_512_hi(eh, el);\n    var c1_lo = s1_512_lo(eh, el);\n    var c2_hi = ch64_hi(eh, el, fh, fl, gh, gl);\n    var c2_lo = ch64_lo(eh, el, fh, fl, gh, gl);\n    var c3_hi = this.k[i];\n    var c3_lo = this.k[i + 1];\n    var c4_hi = W[i];\n    var c4_lo = W[i + 1];\n\n    var T1_hi = sum64_5_hi(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n    var T1_lo = sum64_5_lo(\n      c0_hi, c0_lo,\n      c1_hi, c1_lo,\n      c2_hi, c2_lo,\n      c3_hi, c3_lo,\n      c4_hi, c4_lo);\n\n    c0_hi = s0_512_hi(ah, al);\n    c0_lo = s0_512_lo(ah, al);\n    c1_hi = maj64_hi(ah, al, bh, bl, ch, cl);\n    c1_lo = maj64_lo(ah, al, bh, bl, ch, cl);\n\n    var T2_hi = sum64_hi(c0_hi, c0_lo, c1_hi, c1_lo);\n    var T2_lo = sum64_lo(c0_hi, c0_lo, c1_hi, c1_lo);\n\n    hh = gh;\n    hl = gl;\n\n    gh = fh;\n    gl = fl;\n\n    fh = eh;\n    fl = el;\n\n    eh = sum64_hi(dh, dl, T1_hi, T1_lo);\n    el = sum64_lo(dl, dl, T1_hi, T1_lo);\n\n    dh = ch;\n    dl = cl;\n\n    ch = bh;\n    cl = bl;\n\n    bh = ah;\n    bl = al;\n\n    ah = sum64_hi(T1_hi, T1_lo, T2_hi, T2_lo);\n    al = sum64_lo(T1_hi, T1_lo, T2_hi, T2_lo);\n  }\n\n  sum64(this.h, 0, ah, al);\n  sum64(this.h, 2, bh, bl);\n  sum64(this.h, 4, ch, cl);\n  sum64(this.h, 6, dh, dl);\n  sum64(this.h, 8, eh, el);\n  sum64(this.h, 10, fh, fl);\n  sum64(this.h, 12, gh, gl);\n  sum64(this.h, 14, hh, hl);\n};\n\nSHA512.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'big');\n  else\n    return utils.split32(this.h, 'big');\n};\n\nfunction ch64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ ((~xh) & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction ch64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ ((~xl) & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_hi(xh, xl, yh, yl, zh) {\n  var r = (xh & yh) ^ (xh & zh) ^ (yh & zh);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction maj64_lo(xh, xl, yh, yl, zh, zl) {\n  var r = (xl & yl) ^ (xl & zl) ^ (yl & zl);\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 28);\n  var c1_hi = rotr64_hi(xl, xh, 2);  // 34\n  var c2_hi = rotr64_hi(xl, xh, 7);  // 39\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 28);\n  var c1_lo = rotr64_lo(xl, xh, 2);  // 34\n  var c2_lo = rotr64_lo(xl, xh, 7);  // 39\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 14);\n  var c1_hi = rotr64_hi(xh, xl, 18);\n  var c2_hi = rotr64_hi(xl, xh, 9);  // 41\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction s1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 14);\n  var c1_lo = rotr64_lo(xh, xl, 18);\n  var c2_lo = rotr64_lo(xl, xh, 9);  // 41\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 1);\n  var c1_hi = rotr64_hi(xh, xl, 8);\n  var c2_hi = shr64_hi(xh, xl, 7);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g0_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 1);\n  var c1_lo = rotr64_lo(xh, xl, 8);\n  var c2_lo = shr64_lo(xh, xl, 7);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_hi(xh, xl) {\n  var c0_hi = rotr64_hi(xh, xl, 19);\n  var c1_hi = rotr64_hi(xl, xh, 29);  // 61\n  var c2_hi = shr64_hi(xh, xl, 6);\n\n  var r = c0_hi ^ c1_hi ^ c2_hi;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n\nfunction g1_512_lo(xh, xl) {\n  var c0_lo = rotr64_lo(xh, xl, 19);\n  var c1_lo = rotr64_lo(xl, xh, 29);  // 61\n  var c2_lo = shr64_lo(xh, xl, 6);\n\n  var r = c0_lo ^ c1_lo ^ c2_lo;\n  if (r < 0)\n    r += 0x100000000;\n  return r;\n}\n","'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","'use strict';\n\nexports.sha1 = require('./sha/1');\nexports.sha224 = require('./sha/224');\nexports.sha256 = require('./sha/256');\nexports.sha384 = require('./sha/384');\nexports.sha512 = require('./sha/512');\n","'use strict';\n\nvar utils = require('./utils');\nvar common = require('./common');\n\nvar rotl32 = utils.rotl32;\nvar sum32 = utils.sum32;\nvar sum32_3 = utils.sum32_3;\nvar sum32_4 = utils.sum32_4;\nvar BlockHash = common.BlockHash;\n\nfunction RIPEMD160() {\n  if (!(this instanceof RIPEMD160))\n    return new RIPEMD160();\n\n  BlockHash.call(this);\n\n  this.h = [ 0x67452301, 0xefcdab89, 0x98badcfe, 0x10325476, 0xc3d2e1f0 ];\n  this.endian = 'little';\n}\nutils.inherits(RIPEMD160, BlockHash);\nexports.ripemd160 = RIPEMD160;\n\nRIPEMD160.blockSize = 512;\nRIPEMD160.outSize = 160;\nRIPEMD160.hmacStrength = 192;\nRIPEMD160.padLength = 64;\n\nRIPEMD160.prototype._update = function update(msg, start) {\n  var A = this.h[0];\n  var B = this.h[1];\n  var C = this.h[2];\n  var D = this.h[3];\n  var E = this.h[4];\n  var Ah = A;\n  var Bh = B;\n  var Ch = C;\n  var Dh = D;\n  var Eh = E;\n  for (var j = 0; j < 80; j++) {\n    var T = sum32(\n      rotl32(\n        sum32_4(A, f(j, B, C, D), msg[r[j] + start], K(j)),\n        s[j]),\n      E);\n    A = E;\n    E = D;\n    D = rotl32(C, 10);\n    C = B;\n    B = T;\n    T = sum32(\n      rotl32(\n        sum32_4(Ah, f(79 - j, Bh, Ch, Dh), msg[rh[j] + start], Kh(j)),\n        sh[j]),\n      Eh);\n    Ah = Eh;\n    Eh = Dh;\n    Dh = rotl32(Ch, 10);\n    Ch = Bh;\n    Bh = T;\n  }\n  T = sum32_3(this.h[1], C, Dh);\n  this.h[1] = sum32_3(this.h[2], D, Eh);\n  this.h[2] = sum32_3(this.h[3], E, Ah);\n  this.h[3] = sum32_3(this.h[4], A, Bh);\n  this.h[4] = sum32_3(this.h[0], B, Ch);\n  this.h[0] = T;\n};\n\nRIPEMD160.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h, 'little');\n  else\n    return utils.split32(this.h, 'little');\n};\n\nfunction f(j, x, y, z) {\n  if (j <= 15)\n    return x ^ y ^ z;\n  else if (j <= 31)\n    return (x & y) | ((~x) & z);\n  else if (j <= 47)\n    return (x | (~y)) ^ z;\n  else if (j <= 63)\n    return (x & z) | (y & (~z));\n  else\n    return x ^ (y | (~z));\n}\n\nfunction K(j) {\n  if (j <= 15)\n    return 0x00000000;\n  else if (j <= 31)\n    return 0x5a827999;\n  else if (j <= 47)\n    return 0x6ed9eba1;\n  else if (j <= 63)\n    return 0x8f1bbcdc;\n  else\n    return 0xa953fd4e;\n}\n\nfunction Kh(j) {\n  if (j <= 15)\n    return 0x50a28be6;\n  else if (j <= 31)\n    return 0x5c4dd124;\n  else if (j <= 47)\n    return 0x6d703ef3;\n  else if (j <= 63)\n    return 0x7a6d76e9;\n  else\n    return 0x00000000;\n}\n\nvar r = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15,\n  7, 4, 13, 1, 10, 6, 15, 3, 12, 0, 9, 5, 2, 14, 11, 8,\n  3, 10, 14, 4, 9, 15, 8, 1, 2, 7, 0, 6, 13, 11, 5, 12,\n  1, 9, 11, 10, 0, 8, 12, 4, 13, 3, 7, 15, 14, 5, 6, 2,\n  4, 0, 5, 9, 7, 12, 2, 10, 14, 1, 3, 8, 11, 6, 15, 13\n];\n\nvar rh = [\n  5, 14, 7, 0, 9, 2, 11, 4, 13, 6, 15, 8, 1, 10, 3, 12,\n  6, 11, 3, 7, 0, 13, 5, 10, 14, 15, 8, 12, 4, 9, 1, 2,\n  15, 5, 1, 3, 7, 14, 6, 9, 11, 8, 12, 2, 10, 0, 4, 13,\n  8, 6, 4, 1, 3, 11, 15, 0, 5, 12, 2, 13, 9, 7, 10, 14,\n  12, 15, 10, 4, 1, 5, 8, 7, 6, 2, 13, 14, 0, 3, 9, 11\n];\n\nvar s = [\n  11, 14, 15, 12, 5, 8, 7, 9, 11, 13, 14, 15, 6, 7, 9, 8,\n  7, 6, 8, 13, 11, 9, 7, 15, 7, 12, 15, 9, 11, 7, 13, 12,\n  11, 13, 6, 7, 14, 9, 13, 15, 14, 8, 13, 6, 5, 12, 7, 5,\n  11, 12, 14, 15, 14, 15, 9, 8, 9, 14, 5, 6, 8, 6, 5, 12,\n  9, 15, 5, 11, 6, 8, 13, 12, 5, 12, 13, 14, 11, 8, 5, 6\n];\n\nvar sh = [\n  8, 9, 9, 11, 13, 15, 15, 5, 7, 7, 8, 11, 14, 14, 12, 6,\n  9, 13, 15, 7, 12, 8, 9, 11, 7, 7, 12, 7, 6, 15, 13, 11,\n  9, 7, 15, 11, 8, 6, 6, 14, 12, 13, 5, 14, 13, 13, 7, 5,\n  15, 5, 8, 11, 14, 14, 6, 14, 6, 9, 12, 9, 12, 5, 15, 8,\n  8, 5, 12, 9, 12, 5, 14, 6, 8, 13, 6, 5, 15, 13, 11, 11\n];\n","'use strict';\n\nvar utils = require('./utils');\nvar assert = require('minimalistic-assert');\n\nfunction Hmac(hash, key, enc) {\n  if (!(this instanceof Hmac))\n    return new Hmac(hash, key, enc);\n  this.Hash = hash;\n  this.blockSize = hash.blockSize / 8;\n  this.outSize = hash.outSize / 8;\n  this.inner = null;\n  this.outer = null;\n\n  this._init(utils.toArray(key, enc));\n}\nmodule.exports = Hmac;\n\nHmac.prototype._init = function init(key) {\n  // Shorten key, if needed\n  if (key.length > this.blockSize)\n    key = new this.Hash().update(key).digest();\n  assert(key.length <= this.blockSize);\n\n  // Add padding to key\n  for (var i = key.length; i < this.blockSize; i++)\n    key.push(0);\n\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x36;\n  this.inner = new this.Hash().update(key);\n\n  // 0x36 ^ 0x5c = 0x6a\n  for (i = 0; i < key.length; i++)\n    key[i] ^= 0x6a;\n  this.outer = new this.Hash().update(key);\n};\n\nHmac.prototype.update = function update(msg, enc) {\n  this.inner.update(msg, enc);\n  return this;\n};\n\nHmac.prototype.digest = function digest(enc) {\n  this.outer.update(this.inner.digest());\n  return this.outer.digest(enc);\n};\n","var hash = exports;\n\nhash.utils = require('./hash/utils');\nhash.common = require('./hash/common');\nhash.sha = require('./hash/sha');\nhash.ripemd = require('./hash/ripemd');\nhash.hmac = require('./hash/hmac');\n\n// Proxy hash functions to the main object\nhash.sha1 = hash.sha.sha1;\nhash.sha256 = hash.sha.sha256;\nhash.sha224 = hash.sha.sha224;\nhash.sha384 = hash.sha.sha384;\nhash.sha512 = hash.sha.sha512;\nhash.ripemd160 = hash.ripemd.ripemd160;\n","\"use strict\";\nlet _permanentCensorErrors = false;\nlet _censorErrors = false;\nconst LogLevels = { debug: 1, \"default\": 2, info: 2, warning: 3, error: 4, off: 5 };\nlet _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nlet _globalLogger = null;\nfunction _checkNormalize() {\n    try {\n        const missing = [];\n        // Make sure all forms of normalization are supported\n        [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach((form) => {\n            try {\n                if (\"test\".normalize(form) !== \"test\") {\n                    throw new Error(\"bad normalize\");\n                }\n                ;\n            }\n            catch (error) {\n                missing.push(form);\n            }\n        });\n        if (missing.length) {\n            throw new Error(\"missing \" + missing.join(\", \"));\n        }\n        if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n            throw new Error(\"broken implementation\");\n        }\n    }\n    catch (error) {\n        return error.message;\n    }\n    return null;\n}\nconst _normalizeError = _checkNormalize();\nexport var LogLevel;\n(function (LogLevel) {\n    LogLevel[\"DEBUG\"] = \"DEBUG\";\n    LogLevel[\"INFO\"] = \"INFO\";\n    LogLevel[\"WARNING\"] = \"WARNING\";\n    LogLevel[\"ERROR\"] = \"ERROR\";\n    LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\nexport var ErrorCode;\n(function (ErrorCode) {\n    ///////////////////\n    // Generic Errors\n    // Unknown Error\n    ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\";\n    // Not Implemented\n    ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\";\n    // Unsupported Operation\n    //   - operation\n    ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\";\n    // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n    //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n    ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\";\n    // Some sort of bad response from the server\n    ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\";\n    // Timeout\n    ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\";\n    ///////////////////\n    // Operational  Errors\n    // Buffer Overrun\n    ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\";\n    // Numeric Fault\n    //   - operation: the operation being executed\n    //   - fault: the reason this faulted\n    ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\";\n    ///////////////////\n    // Argument Errors\n    // Missing new operator to an object\n    //  - name: The name of the class\n    ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\";\n    // Invalid argument (e.g. value is incompatible with type) to a function:\n    //   - argument: The argument name that was invalid\n    //   - value: The value of the argument\n    ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\";\n    // Missing argument to a function:\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\";\n    // Too many arguments\n    //   - count: The number of arguments received\n    //   - expectedCount: The number of arguments expected\n    ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\";\n    ///////////////////\n    // Blockchain Errors\n    // Call exception\n    //  - transaction: the transaction\n    //  - address?: the contract address\n    //  - args?: The arguments passed into the function\n    //  - method?: The Solidity method signature\n    //  - errorSignature?: The EIP848 error signature\n    //  - errorArgs?: The EIP848 error parameters\n    //  - reason: The reason (only for EIP848 \"Error(string)\")\n    ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\";\n    // Insufficient funds (< value + gasLimit * gasPrice)\n    //   - transaction: the transaction attempted\n    ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\";\n    // Nonce has already been used\n    //   - transaction: the transaction attempted\n    ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\";\n    // The replacement fee for the transaction is too low\n    //   - transaction: the transaction attempted\n    ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\";\n    // The gas limit could not be estimated\n    //   - transaction: the transaction passed to estimateGas\n    ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n    // The transaction was replaced by one with a higher gas price\n    //   - reason: \"cancelled\", \"replaced\" or \"repriced\"\n    //   - cancelled: true if reason == \"cancelled\" or reason == \"replaced\")\n    //   - hash: original transaction hash\n    //   - replacement: the full TransactionsResponse for the replacement\n    //   - receipt: the receipt of the replacement\n    ErrorCode[\"TRANSACTION_REPLACED\"] = \"TRANSACTION_REPLACED\";\n})(ErrorCode || (ErrorCode = {}));\n;\nconst HEX = \"0123456789abcdef\";\nexport class Logger {\n    constructor(version) {\n        Object.defineProperty(this, \"version\", {\n            enumerable: true,\n            value: version,\n            writable: false\n        });\n    }\n    _log(logLevel, args) {\n        const level = logLevel.toLowerCase();\n        if (LogLevels[level] == null) {\n            this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n        }\n        if (_logLevel > LogLevels[level]) {\n            return;\n        }\n        console.log.apply(console, args);\n    }\n    debug(...args) {\n        this._log(Logger.levels.DEBUG, args);\n    }\n    info(...args) {\n        this._log(Logger.levels.INFO, args);\n    }\n    warn(...args) {\n        this._log(Logger.levels.WARNING, args);\n    }\n    makeError(message, code, params) {\n        // Errors are being censored\n        if (_censorErrors) {\n            return this.makeError(\"censored error\", code, {});\n        }\n        if (!code) {\n            code = Logger.errors.UNKNOWN_ERROR;\n        }\n        if (!params) {\n            params = {};\n        }\n        const messageDetails = [];\n        Object.keys(params).forEach((key) => {\n            const value = params[key];\n            try {\n                if (value instanceof Uint8Array) {\n                    let hex = \"\";\n                    for (let i = 0; i < value.length; i++) {\n                        hex += HEX[value[i] >> 4];\n                        hex += HEX[value[i] & 0x0f];\n                    }\n                    messageDetails.push(key + \"=Uint8Array(0x\" + hex + \")\");\n                }\n                else {\n                    messageDetails.push(key + \"=\" + JSON.stringify(value));\n                }\n            }\n            catch (error) {\n                messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n            }\n        });\n        messageDetails.push(`code=${code}`);\n        messageDetails.push(`version=${this.version}`);\n        const reason = message;\n        let url = \"\";\n        switch (code) {\n            case ErrorCode.NUMERIC_FAULT: {\n                url = \"NUMERIC_FAULT\";\n                const fault = message;\n                switch (fault) {\n                    case \"overflow\":\n                    case \"underflow\":\n                    case \"division-by-zero\":\n                        url += \"-\" + fault;\n                        break;\n                    case \"negative-power\":\n                    case \"negative-width\":\n                        url += \"-unsupported\";\n                        break;\n                    case \"unbound-bitwise-result\":\n                        url += \"-unbound-result\";\n                        break;\n                }\n                break;\n            }\n            case ErrorCode.CALL_EXCEPTION:\n            case ErrorCode.INSUFFICIENT_FUNDS:\n            case ErrorCode.MISSING_NEW:\n            case ErrorCode.NONCE_EXPIRED:\n            case ErrorCode.REPLACEMENT_UNDERPRICED:\n            case ErrorCode.TRANSACTION_REPLACED:\n            case ErrorCode.UNPREDICTABLE_GAS_LIMIT:\n                url = code;\n                break;\n        }\n        if (url) {\n            message += \" [ See: https:/\\/links.ethers.org/v5-errors-\" + url + \" ]\";\n        }\n        if (messageDetails.length) {\n            message += \" (\" + messageDetails.join(\", \") + \")\";\n        }\n        // @TODO: Any??\n        const error = new Error(message);\n        error.reason = reason;\n        error.code = code;\n        Object.keys(params).forEach(function (key) {\n            error[key] = params[key];\n        });\n        return error;\n    }\n    throwError(message, code, params) {\n        throw this.makeError(message, code, params);\n    }\n    throwArgumentError(message, name, value) {\n        return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n            argument: name,\n            value: value\n        });\n    }\n    assert(condition, message, code, params) {\n        if (!!condition) {\n            return;\n        }\n        this.throwError(message, code, params);\n    }\n    assertArgument(condition, message, name, value) {\n        if (!!condition) {\n            return;\n        }\n        this.throwArgumentError(message, name, value);\n    }\n    checkNormalize(message) {\n        if (message == null) {\n            message = \"platform missing String.prototype.normalize\";\n        }\n        if (_normalizeError) {\n            this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"String.prototype.normalize\", form: _normalizeError\n            });\n        }\n    }\n    checkSafeUint53(value, message) {\n        if (typeof (value) !== \"number\") {\n            return;\n        }\n        if (message == null) {\n            message = \"value not safe\";\n        }\n        if (value < 0 || value >= 0x1fffffffffffff) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"out-of-safe-range\",\n                value: value\n            });\n        }\n        if (value % 1) {\n            this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n                operation: \"checkSafeInteger\",\n                fault: \"non-integer\",\n                value: value\n            });\n        }\n    }\n    checkArgumentCount(count, expectedCount, message) {\n        if (message) {\n            message = \": \" + message;\n        }\n        else {\n            message = \"\";\n        }\n        if (count < expectedCount) {\n            this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n        if (count > expectedCount) {\n            this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n                count: count,\n                expectedCount: expectedCount\n            });\n        }\n    }\n    checkNew(target, kind) {\n        if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    checkAbstract(target, kind) {\n        if (target === kind) {\n            this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, { name: target.name, operation: \"new\" });\n        }\n        else if (target === Object || target == null) {\n            this.throwError(\"missing new\", Logger.errors.MISSING_NEW, { name: kind.name });\n        }\n    }\n    static globalLogger() {\n        if (!_globalLogger) {\n            _globalLogger = new Logger(version);\n        }\n        return _globalLogger;\n    }\n    static setCensorship(censorship, permanent) {\n        if (!censorship && permanent) {\n            this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        if (_permanentCensorErrors) {\n            if (!censorship) {\n                return;\n            }\n            this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n                operation: \"setCensorship\"\n            });\n        }\n        _censorErrors = !!censorship;\n        _permanentCensorErrors = !!permanent;\n    }\n    static setLogLevel(logLevel) {\n        const level = LogLevels[logLevel.toLowerCase()];\n        if (level == null) {\n            Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n            return;\n        }\n        _logLevel = level;\n    }\n    static from(version) {\n        return new Logger(version);\n    }\n}\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;\n//# sourceMappingURL=index.js.map","export const version = \"logger/5.6.0\";\n//# sourceMappingURL=_version.js.map","export const version = \"bytes/5.6.0\";\n//# sourceMappingURL=_version.js.map","\"use strict\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\n///////////////////////////////\nfunction isHexable(value) {\n    return !!(value.toHexString);\n}\nfunction addSlice(array) {\n    if (array.slice) {\n        return array;\n    }\n    array.slice = function () {\n        const args = Array.prototype.slice.call(arguments);\n        return addSlice(new Uint8Array(Array.prototype.slice.apply(array, args)));\n    };\n    return array;\n}\nexport function isBytesLike(value) {\n    return ((isHexString(value) && !(value.length % 2)) || isBytes(value));\n}\nfunction isInteger(value) {\n    return (typeof (value) === \"number\" && value == value && (value % 1) === 0);\n}\nexport function isBytes(value) {\n    if (value == null) {\n        return false;\n    }\n    if (value.constructor === Uint8Array) {\n        return true;\n    }\n    if (typeof (value) === \"string\") {\n        return false;\n    }\n    if (!isInteger(value.length) || value.length < 0) {\n        return false;\n    }\n    for (let i = 0; i < value.length; i++) {\n        const v = value[i];\n        if (!isInteger(v) || v < 0 || v >= 256) {\n            return false;\n        }\n    }\n    return true;\n}\nexport function arrayify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid arrayify value\");\n        const result = [];\n        while (value) {\n            result.unshift(value & 0xff);\n            value = parseInt(String(value / 256));\n        }\n        if (result.length === 0) {\n            result.push(0);\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        value = value.toHexString();\n    }\n    if (isHexString(value)) {\n        let hex = value.substring(2);\n        if (hex.length % 2) {\n            if (options.hexPad === \"left\") {\n                hex = \"0x0\" + hex.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                hex += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        const result = [];\n        for (let i = 0; i < hex.length; i += 2) {\n            result.push(parseInt(hex.substring(i, i + 2), 16));\n        }\n        return addSlice(new Uint8Array(result));\n    }\n    if (isBytes(value)) {\n        return addSlice(new Uint8Array(value));\n    }\n    return logger.throwArgumentError(\"invalid arrayify value\", \"value\", value);\n}\nexport function concat(items) {\n    const objects = items.map(item => arrayify(item));\n    const length = objects.reduce((accum, item) => (accum + item.length), 0);\n    const result = new Uint8Array(length);\n    objects.reduce((offset, object) => {\n        result.set(object, offset);\n        return offset + object.length;\n    }, 0);\n    return addSlice(result);\n}\nexport function stripZeros(value) {\n    let result = arrayify(value);\n    if (result.length === 0) {\n        return result;\n    }\n    // Find the first non-zero entry\n    let start = 0;\n    while (start < result.length && result[start] === 0) {\n        start++;\n    }\n    // If we started with zeros, strip them\n    if (start) {\n        result = result.slice(start);\n    }\n    return result;\n}\nexport function zeroPad(value, length) {\n    value = arrayify(value);\n    if (value.length > length) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[0]);\n    }\n    const result = new Uint8Array(length);\n    result.set(value, length - value.length);\n    return addSlice(result);\n}\nexport function isHexString(value, length) {\n    if (typeof (value) !== \"string\" || !value.match(/^0x[0-9A-Fa-f]*$/)) {\n        return false;\n    }\n    if (length && value.length !== 2 + 2 * length) {\n        return false;\n    }\n    return true;\n}\nconst HexCharacters = \"0123456789abcdef\";\nexport function hexlify(value, options) {\n    if (!options) {\n        options = {};\n    }\n    if (typeof (value) === \"number\") {\n        logger.checkSafeUint53(value, \"invalid hexlify value\");\n        let hex = \"\";\n        while (value) {\n            hex = HexCharacters[value & 0xf] + hex;\n            value = Math.floor(value / 16);\n        }\n        if (hex.length) {\n            if (hex.length % 2) {\n                hex = \"0\" + hex;\n            }\n            return \"0x\" + hex;\n        }\n        return \"0x00\";\n    }\n    if (typeof (value) === \"bigint\") {\n        value = value.toString(16);\n        if (value.length % 2) {\n            return (\"0x0\" + value);\n        }\n        return \"0x\" + value;\n    }\n    if (options.allowMissingPrefix && typeof (value) === \"string\" && value.substring(0, 2) !== \"0x\") {\n        value = \"0x\" + value;\n    }\n    if (isHexable(value)) {\n        return value.toHexString();\n    }\n    if (isHexString(value)) {\n        if (value.length % 2) {\n            if (options.hexPad === \"left\") {\n                value = \"0x0\" + value.substring(2);\n            }\n            else if (options.hexPad === \"right\") {\n                value += \"0\";\n            }\n            else {\n                logger.throwArgumentError(\"hex data is odd-length\", \"value\", value);\n            }\n        }\n        return value.toLowerCase();\n    }\n    if (isBytes(value)) {\n        let result = \"0x\";\n        for (let i = 0; i < value.length; i++) {\n            let v = value[i];\n            result += HexCharacters[(v & 0xf0) >> 4] + HexCharacters[v & 0x0f];\n        }\n        return result;\n    }\n    return logger.throwArgumentError(\"invalid hexlify value\", \"value\", value);\n}\n/*\nfunction unoddify(value: BytesLike | Hexable | number): BytesLike | Hexable | number {\n    if (typeof(value) === \"string\" && value.length % 2 && value.substring(0, 2) === \"0x\") {\n        return \"0x0\" + value.substring(2);\n    }\n    return value;\n}\n*/\nexport function hexDataLength(data) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        return null;\n    }\n    return (data.length - 2) / 2;\n}\nexport function hexDataSlice(data, offset, endOffset) {\n    if (typeof (data) !== \"string\") {\n        data = hexlify(data);\n    }\n    else if (!isHexString(data) || (data.length % 2)) {\n        logger.throwArgumentError(\"invalid hexData\", \"value\", data);\n    }\n    offset = 2 + 2 * offset;\n    if (endOffset != null) {\n        return \"0x\" + data.substring(offset, 2 + 2 * endOffset);\n    }\n    return \"0x\" + data.substring(offset);\n}\nexport function hexConcat(items) {\n    let result = \"0x\";\n    items.forEach((item) => {\n        result += hexlify(item).substring(2);\n    });\n    return result;\n}\nexport function hexValue(value) {\n    const trimmed = hexStripZeros(hexlify(value, { hexPad: \"left\" }));\n    if (trimmed === \"0x\") {\n        return \"0x0\";\n    }\n    return trimmed;\n}\nexport function hexStripZeros(value) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    value = value.substring(2);\n    let offset = 0;\n    while (offset < value.length && value[offset] === \"0\") {\n        offset++;\n    }\n    return \"0x\" + value.substring(offset);\n}\nexport function hexZeroPad(value, length) {\n    if (typeof (value) !== \"string\") {\n        value = hexlify(value);\n    }\n    else if (!isHexString(value)) {\n        logger.throwArgumentError(\"invalid hex string\", \"value\", value);\n    }\n    if (value.length > 2 * length + 2) {\n        logger.throwArgumentError(\"value out of range\", \"value\", arguments[1]);\n    }\n    while (value.length < 2 * length + 2) {\n        value = \"0x0\" + value.substring(2);\n    }\n    return value;\n}\nexport function splitSignature(signature) {\n    const result = {\n        r: \"0x\",\n        s: \"0x\",\n        _vs: \"0x\",\n        recoveryParam: 0,\n        v: 0,\n        yParityAndS: \"0x\",\n        compact: \"0x\"\n    };\n    if (isBytesLike(signature)) {\n        let bytes = arrayify(signature);\n        // Get the r, s and v\n        if (bytes.length === 64) {\n            // EIP-2098; pull the v from the top bit of s and clear it\n            result.v = 27 + (bytes[32] >> 7);\n            bytes[32] &= 0x7f;\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n        }\n        else if (bytes.length === 65) {\n            result.r = hexlify(bytes.slice(0, 32));\n            result.s = hexlify(bytes.slice(32, 64));\n            result.v = bytes[64];\n        }\n        else {\n            logger.throwArgumentError(\"invalid signature string\", \"signature\", signature);\n        }\n        // Allow a recid to be used as the v\n        if (result.v < 27) {\n            if (result.v === 0 || result.v === 1) {\n                result.v += 27;\n            }\n            else {\n                logger.throwArgumentError(\"signature invalid v byte\", \"signature\", signature);\n            }\n        }\n        // Compute recoveryParam from v\n        result.recoveryParam = 1 - (result.v % 2);\n        // Compute _vs from recoveryParam and s\n        if (result.recoveryParam) {\n            bytes[32] |= 0x80;\n        }\n        result._vs = hexlify(bytes.slice(32, 64));\n    }\n    else {\n        result.r = signature.r;\n        result.s = signature.s;\n        result.v = signature.v;\n        result.recoveryParam = signature.recoveryParam;\n        result._vs = signature._vs;\n        // If the _vs is available, use it to populate missing s, v and recoveryParam\n        // and verify non-missing s, v and recoveryParam\n        if (result._vs != null) {\n            const vs = zeroPad(arrayify(result._vs), 32);\n            result._vs = hexlify(vs);\n            // Set or check the recid\n            const recoveryParam = ((vs[0] >= 128) ? 1 : 0);\n            if (result.recoveryParam == null) {\n                result.recoveryParam = recoveryParam;\n            }\n            else if (result.recoveryParam !== recoveryParam) {\n                logger.throwArgumentError(\"signature recoveryParam mismatch _vs\", \"signature\", signature);\n            }\n            // Set or check the s\n            vs[0] &= 0x7f;\n            const s = hexlify(vs);\n            if (result.s == null) {\n                result.s = s;\n            }\n            else if (result.s !== s) {\n                logger.throwArgumentError(\"signature v mismatch _vs\", \"signature\", signature);\n            }\n        }\n        // Use recid and v to populate each other\n        if (result.recoveryParam == null) {\n            if (result.v == null) {\n                logger.throwArgumentError(\"signature missing v and recoveryParam\", \"signature\", signature);\n            }\n            else if (result.v === 0 || result.v === 1) {\n                result.recoveryParam = result.v;\n            }\n            else {\n                result.recoveryParam = 1 - (result.v % 2);\n            }\n        }\n        else {\n            if (result.v == null) {\n                result.v = 27 + result.recoveryParam;\n            }\n            else {\n                const recId = (result.v === 0 || result.v === 1) ? result.v : (1 - (result.v % 2));\n                if (result.recoveryParam !== recId) {\n                    logger.throwArgumentError(\"signature recoveryParam mismatch v\", \"signature\", signature);\n                }\n            }\n        }\n        if (result.r == null || !isHexString(result.r)) {\n            logger.throwArgumentError(\"signature missing or invalid r\", \"signature\", signature);\n        }\n        else {\n            result.r = hexZeroPad(result.r, 32);\n        }\n        if (result.s == null || !isHexString(result.s)) {\n            logger.throwArgumentError(\"signature missing or invalid s\", \"signature\", signature);\n        }\n        else {\n            result.s = hexZeroPad(result.s, 32);\n        }\n        const vs = arrayify(result.s);\n        if (vs[0] >= 128) {\n            logger.throwArgumentError(\"signature s out of range\", \"signature\", signature);\n        }\n        if (result.recoveryParam) {\n            vs[0] |= 0x80;\n        }\n        const _vs = hexlify(vs);\n        if (result._vs) {\n            if (!isHexString(result._vs)) {\n                logger.throwArgumentError(\"signature invalid _vs\", \"signature\", signature);\n            }\n            result._vs = hexZeroPad(result._vs, 32);\n        }\n        // Set or check the _vs\n        if (result._vs == null) {\n            result._vs = _vs;\n        }\n        else if (result._vs !== _vs) {\n            logger.throwArgumentError(\"signature _vs mismatch v and s\", \"signature\", signature);\n        }\n    }\n    result.yParityAndS = result._vs;\n    result.compact = result.r + result.yParityAndS.substring(2);\n    return result;\n}\nexport function joinSignature(signature) {\n    signature = splitSignature(signature);\n    return hexlify(concat([\n        signature.r,\n        signature.s,\n        (signature.recoveryParam ? \"0x1c\" : \"0x1b\")\n    ]));\n}\n//# sourceMappingURL=index.js.map","\"use strict\";\nimport hash from \"hash.js\";\n//const _ripemd160 = _hash.ripemd160;\nimport { arrayify } from \"@ethersproject/bytes\";\nimport { SupportedAlgorithm } from \"./types\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function ripemd160(data) {\n    return \"0x\" + (hash.ripemd160().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha256(data) {\n    return \"0x\" + (hash.sha256().update(arrayify(data)).digest(\"hex\"));\n}\nexport function sha512(data) {\n    return \"0x\" + (hash.sha512().update(arrayify(data)).digest(\"hex\"));\n}\nexport function computeHmac(algorithm, key, data) {\n    if (!SupportedAlgorithm[algorithm]) {\n        logger.throwError(\"unsupported algorithm \" + algorithm, Logger.errors.UNSUPPORTED_OPERATION, {\n            operation: \"hmac\",\n            algorithm: algorithm\n        });\n    }\n    return \"0x\" + hash.hmac(hash[algorithm], arrayify(key)).update(arrayify(data)).digest(\"hex\");\n}\n//# sourceMappingURL=sha2.js.map","export const version = \"sha2/5.6.0\";\n//# sourceMappingURL=_version.js.map","import {Buffer} from 'buffer';\nimport {serialize, deserialize, deserializeUnchecked} from 'borsh';\n\n// Class wrapping a plain object\nexport class Struct {\n  constructor(properties: any) {\n    Object.assign(this, properties);\n  }\n\n  encode(): Buffer {\n    return Buffer.from(serialize(SOLANA_SCHEMA, this));\n  }\n\n  static decode(data: Buffer): any {\n    return deserialize(SOLANA_SCHEMA, this, data);\n  }\n\n  static decodeUnchecked(data: Buffer): any {\n    return deserializeUnchecked(SOLANA_SCHEMA, this, data);\n  }\n}\n\n// Class representing a Rust-compatible enum, since enums are only strings or\n// numbers in pure JS\nexport class Enum extends Struct {\n  enum: string = '';\n  constructor(properties: any) {\n    super(properties);\n    if (Object.keys(properties).length !== 1) {\n      throw new Error('Enum can only take single value');\n    }\n    Object.keys(properties).map(key => {\n      this.enum = key;\n    });\n  }\n}\n\nexport const SOLANA_SCHEMA: Map<Function, any> = new Map();\n","import BN from 'bn.js';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport nacl from 'tweetnacl';\nimport {sha256} from '@ethersproject/sha2';\n\nimport {Struct, SOLANA_SCHEMA} from './util/borsh-schema';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Maximum length of derived pubkey seed\n */\nexport const MAX_SEED_LENGTH = 32;\n\n/**\n * Value to be converted into public key\n */\nexport type PublicKeyInitData =\n  | number\n  | string\n  | Buffer\n  | Uint8Array\n  | Array<number>\n  | PublicKeyData;\n\n/**\n * JSON object representation of PublicKey class\n */\nexport type PublicKeyData = {\n  /** @internal */\n  _bn: BN;\n};\n\nfunction isPublicKeyData(value: PublicKeyInitData): value is PublicKeyData {\n  return (value as PublicKeyData)._bn !== undefined;\n}\n\n/**\n * A public key\n */\nexport class PublicKey extends Struct {\n  /** @internal */\n  _bn: BN;\n\n  /**\n   * Create a new PublicKey object\n   * @param value ed25519 public key as buffer or base-58 encoded string\n   */\n  constructor(value: PublicKeyInitData) {\n    super({});\n    if (isPublicKeyData(value)) {\n      this._bn = value._bn;\n    } else {\n      if (typeof value === 'string') {\n        // assume base 58 encoding by default\n        const decoded = bs58.decode(value);\n        if (decoded.length != 32) {\n          throw new Error(`Invalid public key input`);\n        }\n        this._bn = new BN(decoded);\n      } else {\n        this._bn = new BN(value);\n      }\n\n      if (this._bn.byteLength() > 32) {\n        throw new Error(`Invalid public key input`);\n      }\n    }\n  }\n\n  /**\n   * Default public key value. (All zeros)\n   */\n  static default: PublicKey = new PublicKey('11111111111111111111111111111111');\n\n  /**\n   * Checks if two publicKeys are equal\n   */\n  equals(publicKey: PublicKey): boolean {\n    return this._bn.eq(publicKey._bn);\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toBase58(): string {\n    return bs58.encode(this.toBytes());\n  }\n\n  toJSON(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Return the byte array representation of the public key\n   */\n  toBytes(): Uint8Array {\n    return this.toBuffer();\n  }\n\n  /**\n   * Return the Buffer representation of the public key\n   */\n  toBuffer(): Buffer {\n    const b = this._bn.toArrayLike(Buffer);\n    if (b.length === 32) {\n      return b;\n    }\n\n    const zeroPad = Buffer.alloc(32);\n    b.copy(zeroPad, 32 - b.length);\n    return zeroPad;\n  }\n\n  /**\n   * Return the base-58 representation of the public key\n   */\n  toString(): string {\n    return this.toBase58();\n  }\n\n  /**\n   * Derive a public key from another key, a seed, and a program ID.\n   * The program ID will also serve as the owner of the public key, giving\n   * it permission to write data to the account.\n   */\n  /* eslint-disable require-await */\n  static async createWithSeed(\n    fromPublicKey: PublicKey,\n    seed: string,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    const buffer = Buffer.concat([\n      fromPublicKey.toBuffer(),\n      Buffer.from(seed),\n      programId.toBuffer(),\n    ]);\n    const hash = sha256(new Uint8Array(buffer)).slice(2);\n    return new PublicKey(Buffer.from(hash, 'hex'));\n  }\n\n  /**\n   * Derive a program address from seeds and a program ID.\n   */\n  /* eslint-disable require-await */\n  static async createProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<PublicKey> {\n    let buffer = Buffer.alloc(0);\n    seeds.forEach(function (seed) {\n      if (seed.length > MAX_SEED_LENGTH) {\n        throw new TypeError(`Max seed length exceeded`);\n      }\n      buffer = Buffer.concat([buffer, toBuffer(seed)]);\n    });\n    buffer = Buffer.concat([\n      buffer,\n      programId.toBuffer(),\n      Buffer.from('ProgramDerivedAddress'),\n    ]);\n    let hash = sha256(new Uint8Array(buffer)).slice(2);\n    let publicKeyBytes = new BN(hash, 16).toArray(undefined, 32);\n    if (is_on_curve(publicKeyBytes)) {\n      throw new Error(`Invalid seeds, address must fall off the curve`);\n    }\n    return new PublicKey(publicKeyBytes);\n  }\n\n  /**\n   * Find a valid program address\n   *\n   * Valid program addresses must fall off the ed25519 curve.  This function\n   * iterates a nonce until it finds one that when combined with the seeds\n   * results in a valid program address.\n   */\n  static async findProgramAddress(\n    seeds: Array<Buffer | Uint8Array>,\n    programId: PublicKey,\n  ): Promise<[PublicKey, number]> {\n    let nonce = 255;\n    let address;\n    while (nonce != 0) {\n      try {\n        const seedsWithNonce = seeds.concat(Buffer.from([nonce]));\n        address = await this.createProgramAddress(seedsWithNonce, programId);\n      } catch (err) {\n        if (err instanceof TypeError) {\n          throw err;\n        }\n        nonce--;\n        continue;\n      }\n      return [address, nonce];\n    }\n    throw new Error(`Unable to find a viable program address nonce`);\n  }\n\n  /**\n   * Check that a pubkey is on the ed25519 curve.\n   */\n  static isOnCurve(pubkey: Uint8Array): boolean {\n    return is_on_curve(pubkey) == 1;\n  }\n}\n\nSOLANA_SCHEMA.set(PublicKey, {\n  kind: 'struct',\n  fields: [['_bn', 'u256']],\n});\n\n// @ts-ignore\nlet naclLowLevel = nacl.lowlevel;\n\n// Check that a pubkey is on the curve.\n// This function and its dependents were sourced from:\n// https://github.com/dchest/tweetnacl-js/blob/f1ec050ceae0861f34280e62498b1d3ed9c350c6/nacl.js#L792\nfunction is_on_curve(p: any) {\n  var r = [\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n    naclLowLevel.gf(),\n  ];\n\n  var t = naclLowLevel.gf(),\n    chk = naclLowLevel.gf(),\n    num = naclLowLevel.gf(),\n    den = naclLowLevel.gf(),\n    den2 = naclLowLevel.gf(),\n    den4 = naclLowLevel.gf(),\n    den6 = naclLowLevel.gf();\n\n  naclLowLevel.set25519(r[2], gf1);\n  naclLowLevel.unpack25519(r[1], p);\n  naclLowLevel.S(num, r[1]);\n  naclLowLevel.M(den, num, naclLowLevel.D);\n  naclLowLevel.Z(num, num, r[2]);\n  naclLowLevel.A(den, r[2], den);\n\n  naclLowLevel.S(den2, den);\n  naclLowLevel.S(den4, den2);\n  naclLowLevel.M(den6, den4, den2);\n  naclLowLevel.M(t, den6, num);\n  naclLowLevel.M(t, t, den);\n\n  naclLowLevel.pow2523(t, t);\n  naclLowLevel.M(t, t, num);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(t, t, den);\n  naclLowLevel.M(r[0], t, den);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) naclLowLevel.M(r[0], r[0], I);\n\n  naclLowLevel.S(chk, r[0]);\n  naclLowLevel.M(chk, chk, den);\n  if (neq25519(chk, num)) return 0;\n  return 1;\n}\nlet gf1 = naclLowLevel.gf([1]);\nlet I = naclLowLevel.gf([\n  0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7,\n  0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83,\n]);\nfunction neq25519(a: any, b: any) {\n  var c = new Uint8Array(32),\n    d = new Uint8Array(32);\n  naclLowLevel.pack25519(c, a);\n  naclLowLevel.pack25519(d, b);\n  return naclLowLevel.crypto_verify_32(c, 0, d, 0);\n}\n","import nacl from 'tweetnacl';\nimport type {SignKeyPair as KeyPair} from 'tweetnacl';\nimport type {Buffer} from 'buffer';\n\nimport {toBuffer} from './util/to-buffer';\nimport {PublicKey} from './publickey';\n\n/**\n * An account key pair (public and secret keys).\n *\n * @deprecated since v1.10.0, please use {@link Keypair} instead.\n */\nexport class Account {\n  /** @internal */\n  _keypair: KeyPair;\n\n  /**\n   * Create a new Account object\n   *\n   * If the secretKey parameter is not provided a new key pair is randomly\n   * created for the account\n   *\n   * @param secretKey Secret key for the account\n   */\n  constructor(secretKey?: Buffer | Uint8Array | Array<number>) {\n    if (secretKey) {\n      this._keypair = nacl.sign.keyPair.fromSecretKey(toBuffer(secretKey));\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * The public key for this account\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The **unencrypted** secret key for this account\n   */\n  get secretKey(): Buffer {\n    return toBuffer(this._keypair.secretKey);\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const BPF_LOADER_DEPRECATED_PROGRAM_ID = new PublicKey(\n  'BPFLoader1111111111111111111111111111111111',\n);\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * Layout for a public key\n */\nexport const publicKey = (property: string = 'publicKey') => {\n  return BufferLayout.blob(32, property);\n};\n\n/**\n * Layout for a 64bit unsigned value\n */\nexport const uint64 = (property: string = 'uint64') => {\n  return BufferLayout.blob(8, property);\n};\n\ninterface IRustStringShim\n  extends Omit<\n    BufferLayout.Structure<\n      Readonly<{\n        length: number;\n        lengthPadding: number;\n        chars: Uint8Array;\n      }>\n    >,\n    'decode' | 'encode' | 'replicate'\n  > {\n  alloc: (str: string) => number;\n  decode: (b: Uint8Array, offset?: number) => string;\n  encode: (str: string, b: Uint8Array, offset?: number) => number;\n  replicate: (property: string) => this;\n}\n\n/**\n * Layout for a Rust String type\n */\nexport const rustString = (\n  property: string = 'string',\n): BufferLayout.Layout<string> => {\n  const rsl = BufferLayout.struct<\n    Readonly<{\n      length?: number;\n      lengthPadding?: number;\n      chars: Uint8Array;\n    }>\n  >(\n    [\n      BufferLayout.u32('length'),\n      BufferLayout.u32('lengthPadding'),\n      BufferLayout.blob(BufferLayout.offset(BufferLayout.u32(), -8), 'chars'),\n    ],\n    property,\n  );\n  const _decode = rsl.decode.bind(rsl);\n  const _encode = rsl.encode.bind(rsl);\n\n  const rslShim = rsl as unknown as IRustStringShim;\n\n  rslShim.decode = (b: Uint8Array, offset?: number) => {\n    const data = _decode(b, offset);\n    return data['chars'].toString();\n  };\n\n  rslShim.encode = (str: string, b: Uint8Array, offset?: number) => {\n    const data = {\n      chars: Buffer.from(str, 'utf8'),\n    };\n    return _encode(data, b, offset);\n  };\n\n  rslShim.alloc = (str: string) => {\n    return (\n      BufferLayout.u32().span +\n      BufferLayout.u32().span +\n      Buffer.from(str, 'utf8').length\n    );\n  };\n\n  return rslShim;\n};\n\n/**\n * Layout for an Authorized object\n */\nexport const authorized = (property: string = 'authorized') => {\n  return BufferLayout.struct<\n    Readonly<{\n      staker: Uint8Array;\n      withdrawer: Uint8Array;\n    }>\n  >([publicKey('staker'), publicKey('withdrawer')], property);\n};\n\n/**\n * Layout for a Lockup object\n */\nexport const lockup = (property: string = 'lockup') => {\n  return BufferLayout.struct<\n    Readonly<{\n      custodian: Uint8Array;\n      epoch: number;\n      unixTimestamp: number;\n    }>\n  >(\n    [\n      BufferLayout.ns64('unixTimestamp'),\n      BufferLayout.ns64('epoch'),\n      publicKey('custodian'),\n    ],\n    property,\n  );\n};\n\n/**\n *  Layout for a VoteInit object\n */\nexport const voteInit = (property: string = 'voteInit') => {\n  return BufferLayout.struct<\n    Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>\n  >(\n    [\n      publicKey('nodePubkey'),\n      publicKey('authorizedVoter'),\n      publicKey('authorizedWithdrawer'),\n      BufferLayout.u8('commission'),\n    ],\n    property,\n  );\n};\n\nexport function getAlloc(type: any, fields: any): number {\n  let alloc = 0;\n  type.layout.fields.forEach((item: any) => {\n    if (item.span >= 0) {\n      alloc += item.span;\n    } else if (typeof item.alloc === 'function') {\n      alloc += item.alloc(fields[item.property]);\n    }\n  });\n  return alloc;\n}\n","export function decodeLength(bytes: Array<number>): number {\n  let len = 0;\n  let size = 0;\n  for (;;) {\n    let elem = bytes.shift() as number;\n    len |= (elem & 0x7f) << (size * 7);\n    size += 1;\n    if ((elem & 0x80) === 0) {\n      break;\n    }\n  }\n  return len;\n}\n\nexport function encodeLength(bytes: Array<number>, len: number) {\n  let rem_len = len;\n  for (;;) {\n    let elem = rem_len & 0x7f;\n    rem_len >>= 7;\n    if (rem_len == 0) {\n      bytes.push(elem);\n      break;\n    } else {\n      elem |= 0x80;\n      bytes.push(elem);\n    }\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PACKET_DATA_SIZE} from './transaction';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * The message header, identifying signed and read-only account\n */\nexport type MessageHeader = {\n  /**\n   * The number of signatures required for this message to be considered valid. The\n   * signatures must match the first `numRequiredSignatures` of `accountKeys`.\n   */\n  numRequiredSignatures: number;\n  /** The last `numReadonlySignedAccounts` of the signed keys are read-only accounts */\n  numReadonlySignedAccounts: number;\n  /** The last `numReadonlySignedAccounts` of the unsigned keys are read-only accounts */\n  numReadonlyUnsignedAccounts: number;\n};\n\n/**\n * An instruction to execute by a program\n *\n * @property {number} programIdIndex\n * @property {number[]} accounts\n * @property {string} data\n */\nexport type CompiledInstruction = {\n  /** Index into the transaction keys array indicating the program account that executes this instruction */\n  programIdIndex: number;\n  /** Ordered indices into the transaction keys array indicating which accounts to pass to the program */\n  accounts: number[];\n  /** The program input data encoded as base 58 */\n  data: string;\n};\n\n/**\n * Message constructor arguments\n */\nexport type MessageArgs = {\n  /** The message header, identifying signed and read-only `accountKeys` */\n  header: MessageHeader;\n  /** All the account keys used by this transaction */\n  accountKeys: string[];\n  /** The hash of a recent ledger block */\n  recentBlockhash: Blockhash;\n  /** Instructions that will be executed in sequence and committed in one atomic transaction if all succeed. */\n  instructions: CompiledInstruction[];\n};\n\nconst PUBKEY_LENGTH = 32;\n\n/**\n * List of instructions to be processed atomically\n */\nexport class Message {\n  header: MessageHeader;\n  accountKeys: PublicKey[];\n  recentBlockhash: Blockhash;\n  instructions: CompiledInstruction[];\n\n  private indexToProgramIds: Map<number, PublicKey> = new Map<\n    number,\n    PublicKey\n  >();\n\n  constructor(args: MessageArgs) {\n    this.header = args.header;\n    this.accountKeys = args.accountKeys.map(account => new PublicKey(account));\n    this.recentBlockhash = args.recentBlockhash;\n    this.instructions = args.instructions;\n    this.instructions.forEach(ix =>\n      this.indexToProgramIds.set(\n        ix.programIdIndex,\n        this.accountKeys[ix.programIdIndex],\n      ),\n    );\n  }\n\n  isAccountSigner(index: number): boolean {\n    return index < this.header.numRequiredSignatures;\n  }\n\n  isAccountWritable(index: number): boolean {\n    return (\n      index <\n        this.header.numRequiredSignatures -\n          this.header.numReadonlySignedAccounts ||\n      (index >= this.header.numRequiredSignatures &&\n        index <\n          this.accountKeys.length - this.header.numReadonlyUnsignedAccounts)\n    );\n  }\n\n  isProgramId(index: number): boolean {\n    return this.indexToProgramIds.has(index);\n  }\n\n  programIds(): PublicKey[] {\n    return [...this.indexToProgramIds.values()];\n  }\n\n  nonProgramIds(): PublicKey[] {\n    return this.accountKeys.filter((_, index) => !this.isProgramId(index));\n  }\n\n  serialize(): Buffer {\n    const numKeys = this.accountKeys.length;\n\n    let keyCount: number[] = [];\n    shortvec.encodeLength(keyCount, numKeys);\n\n    const instructions = this.instructions.map(instruction => {\n      const {accounts, programIdIndex} = instruction;\n      const data = Array.from(bs58.decode(instruction.data));\n\n      let keyIndicesCount: number[] = [];\n      shortvec.encodeLength(keyIndicesCount, accounts.length);\n\n      let dataCount: number[] = [];\n      shortvec.encodeLength(dataCount, data.length);\n\n      return {\n        programIdIndex,\n        keyIndicesCount: Buffer.from(keyIndicesCount),\n        keyIndices: accounts,\n        dataLength: Buffer.from(dataCount),\n        data,\n      };\n    });\n\n    let instructionCount: number[] = [];\n    shortvec.encodeLength(instructionCount, instructions.length);\n    let instructionBuffer = Buffer.alloc(PACKET_DATA_SIZE);\n    Buffer.from(instructionCount).copy(instructionBuffer);\n    let instructionBufferLength = instructionCount.length;\n\n    instructions.forEach(instruction => {\n      const instructionLayout = BufferLayout.struct<\n        Readonly<{\n          data: number[];\n          dataLength: Uint8Array;\n          keyIndices: number[];\n          keyIndicesCount: Uint8Array;\n          programIdIndex: number;\n        }>\n      >([\n        BufferLayout.u8('programIdIndex'),\n\n        BufferLayout.blob(\n          instruction.keyIndicesCount.length,\n          'keyIndicesCount',\n        ),\n        BufferLayout.seq(\n          BufferLayout.u8('keyIndex'),\n          instruction.keyIndices.length,\n          'keyIndices',\n        ),\n        BufferLayout.blob(instruction.dataLength.length, 'dataLength'),\n        BufferLayout.seq(\n          BufferLayout.u8('userdatum'),\n          instruction.data.length,\n          'data',\n        ),\n      ]);\n      const length = instructionLayout.encode(\n        instruction,\n        instructionBuffer,\n        instructionBufferLength,\n      );\n      instructionBufferLength += length;\n    });\n    instructionBuffer = instructionBuffer.slice(0, instructionBufferLength);\n\n    const signDataLayout = BufferLayout.struct<\n      Readonly<{\n        keyCount: Uint8Array;\n        keys: Uint8Array[];\n        numReadonlySignedAccounts: Uint8Array;\n        numReadonlyUnsignedAccounts: Uint8Array;\n        numRequiredSignatures: Uint8Array;\n        recentBlockhash: Uint8Array;\n      }>\n    >([\n      BufferLayout.blob(1, 'numRequiredSignatures'),\n      BufferLayout.blob(1, 'numReadonlySignedAccounts'),\n      BufferLayout.blob(1, 'numReadonlyUnsignedAccounts'),\n      BufferLayout.blob(keyCount.length, 'keyCount'),\n      BufferLayout.seq(Layout.publicKey('key'), numKeys, 'keys'),\n      Layout.publicKey('recentBlockhash'),\n    ]);\n\n    const transaction = {\n      numRequiredSignatures: Buffer.from([this.header.numRequiredSignatures]),\n      numReadonlySignedAccounts: Buffer.from([\n        this.header.numReadonlySignedAccounts,\n      ]),\n      numReadonlyUnsignedAccounts: Buffer.from([\n        this.header.numReadonlyUnsignedAccounts,\n      ]),\n      keyCount: Buffer.from(keyCount),\n      keys: this.accountKeys.map(key => toBuffer(key.toBytes())),\n      recentBlockhash: bs58.decode(this.recentBlockhash),\n    };\n\n    let signData = Buffer.alloc(2048);\n    const length = signDataLayout.encode(transaction, signData);\n    instructionBuffer.copy(signData, length);\n    return signData.slice(0, length + instructionBuffer.length);\n  }\n\n  /**\n   * Decode a compiled message into a Message object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Message {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const numRequiredSignatures = byteArray.shift() as number;\n    const numReadonlySignedAccounts = byteArray.shift() as number;\n    const numReadonlyUnsignedAccounts = byteArray.shift() as number;\n\n    const accountCount = shortvec.decodeLength(byteArray);\n    let accountKeys = [];\n    for (let i = 0; i < accountCount; i++) {\n      const account = byteArray.slice(0, PUBKEY_LENGTH);\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      accountKeys.push(bs58.encode(Buffer.from(account)));\n    }\n\n    const recentBlockhash = byteArray.slice(0, PUBKEY_LENGTH);\n    byteArray = byteArray.slice(PUBKEY_LENGTH);\n\n    const instructionCount = shortvec.decodeLength(byteArray);\n    let instructions: CompiledInstruction[] = [];\n    for (let i = 0; i < instructionCount; i++) {\n      const programIdIndex = byteArray.shift() as number;\n      const accountCount = shortvec.decodeLength(byteArray);\n      const accounts = byteArray.slice(0, accountCount);\n      byteArray = byteArray.slice(accountCount);\n      const dataLength = shortvec.decodeLength(byteArray);\n      const dataSlice = byteArray.slice(0, dataLength);\n      const data = bs58.encode(Buffer.from(dataSlice));\n      byteArray = byteArray.slice(dataLength);\n      instructions.push({\n        programIdIndex,\n        accounts,\n        data,\n      });\n    }\n\n    const messageArgs = {\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      recentBlockhash: bs58.encode(Buffer.from(recentBlockhash)),\n      accountKeys,\n      instructions,\n    };\n\n    return new Message(messageArgs);\n  }\n}\n","export default function (\n  condition: unknown,\n  message?: string,\n): asserts condition {\n  if (!condition) {\n    throw new Error(message || 'Assertion failed');\n  }\n}\n","import nacl from 'tweetnacl';\nimport bs58 from 'bs58';\nimport {Buffer} from 'buffer';\n\nimport {Connection} from './connection';\nimport {Message} from './message';\nimport {PublicKey} from './publickey';\nimport * as shortvec from './util/shortvec-encoding';\nimport {toBuffer} from './util/to-buffer';\nimport invariant from './util/assert';\nimport type {Signer} from './keypair';\nimport type {Blockhash} from './blockhash';\nimport type {CompiledInstruction} from './message';\n\n/**\n * Transaction signature as base-58 encoded string\n */\nexport type TransactionSignature = string;\n\n/**\n * Default (empty) signature\n *\n * Signatures are 64 bytes in length\n */\nconst DEFAULT_SIGNATURE = Buffer.alloc(64).fill(0);\n\n/**\n * Maximum over-the-wire size of a Transaction\n *\n * 1280 is IPv6 minimum MTU\n * 40 bytes is the size of the IPv6 header\n * 8 bytes is the size of the fragment header\n */\nexport const PACKET_DATA_SIZE = 1280 - 40 - 8;\n\nconst SIGNATURE_LENGTH = 64;\n\n/**\n * Account metadata used to define instructions\n */\nexport type AccountMeta = {\n  /** An account's public key */\n  pubkey: PublicKey;\n  /** True if an instruction requires a transaction signature matching `pubkey` */\n  isSigner: boolean;\n  /** True if the `pubkey` can be loaded as a read-write account. */\n  isWritable: boolean;\n};\n\n/**\n * List of TransactionInstruction object fields that may be initialized at construction\n */\nexport type TransactionInstructionCtorFields = {\n  keys: Array<AccountMeta>;\n  programId: PublicKey;\n  data?: Buffer;\n};\n\n/**\n * Configuration object for Transaction.serialize()\n */\nexport type SerializeConfig = {\n  /** Require all transaction signatures be present (default: true) */\n  requireAllSignatures?: boolean;\n  /** Verify provided signatures (default: true) */\n  verifySignatures?: boolean;\n};\n\n/**\n * Transaction Instruction class\n */\nexport class TransactionInstruction {\n  /**\n   * Public keys to include in this transaction\n   * Boolean represents whether this pubkey needs to sign the transaction\n   */\n  keys: Array<AccountMeta>;\n\n  /**\n   * Program Id to execute\n   */\n  programId: PublicKey;\n\n  /**\n   * Program input\n   */\n  data: Buffer = Buffer.alloc(0);\n\n  constructor(opts: TransactionInstructionCtorFields) {\n    this.programId = opts.programId;\n    this.keys = opts.keys;\n    if (opts.data) {\n      this.data = opts.data;\n    }\n  }\n}\n\n/**\n * Pair of signature and corresponding public key\n */\nexport type SignaturePubkeyPair = {\n  signature: Buffer | null;\n  publicKey: PublicKey;\n};\n\n/**\n * List of Transaction object fields that may be initialized at construction\n *\n */\nexport type TransactionCtorFields = {\n  /** A recent blockhash */\n  recentBlockhash?: Blockhash | null;\n  /** Optional nonce information used for offline nonce'd transactions */\n  nonceInfo?: NonceInformation | null;\n  /** The transaction fee payer */\n  feePayer?: PublicKey | null;\n  /** One or more signatures */\n  signatures?: Array<SignaturePubkeyPair>;\n};\n\n/**\n * Nonce information to be used to build an offline Transaction.\n */\nexport type NonceInformation = {\n  /** The current blockhash stored in the nonce */\n  nonce: Blockhash;\n  /** AdvanceNonceAccount Instruction */\n  nonceInstruction: TransactionInstruction;\n};\n\n/**\n * Transaction class\n */\nexport class Transaction {\n  /**\n   * Signatures for the transaction.  Typically created by invoking the\n   * `sign()` method\n   */\n  signatures: Array<SignaturePubkeyPair> = [];\n\n  /**\n   * The first (payer) Transaction signature\n   */\n  get signature(): Buffer | null {\n    if (this.signatures.length > 0) {\n      return this.signatures[0].signature;\n    }\n    return null;\n  }\n\n  /**\n   * The transaction fee payer\n   */\n  feePayer?: PublicKey;\n\n  /**\n   * The instructions to atomically execute\n   */\n  instructions: Array<TransactionInstruction> = [];\n\n  /**\n   * A recent transaction id. Must be populated by the caller\n   */\n  recentBlockhash?: Blockhash;\n\n  /**\n   * Optional Nonce information. If populated, transaction will use a durable\n   * Nonce hash instead of a recentBlockhash. Must be populated by the caller\n   */\n  nonceInfo?: NonceInformation;\n\n  /**\n   * Construct an empty Transaction\n   */\n  constructor(opts?: TransactionCtorFields) {\n    opts && Object.assign(this, opts);\n  }\n\n  /**\n   * Add one or more instructions to this Transaction\n   */\n  add(\n    ...items: Array<\n      Transaction | TransactionInstruction | TransactionInstructionCtorFields\n    >\n  ): Transaction {\n    if (items.length === 0) {\n      throw new Error('No instructions');\n    }\n\n    items.forEach((item: any) => {\n      if ('instructions' in item) {\n        this.instructions = this.instructions.concat(item.instructions);\n      } else if ('data' in item && 'programId' in item && 'keys' in item) {\n        this.instructions.push(item);\n      } else {\n        this.instructions.push(new TransactionInstruction(item));\n      }\n    });\n    return this;\n  }\n\n  /**\n   * Compile transaction data\n   */\n  compileMessage(): Message {\n    const {nonceInfo} = this;\n    if (nonceInfo && this.instructions[0] != nonceInfo.nonceInstruction) {\n      this.recentBlockhash = nonceInfo.nonce;\n      this.instructions.unshift(nonceInfo.nonceInstruction);\n    }\n    const {recentBlockhash} = this;\n    if (!recentBlockhash) {\n      throw new Error('Transaction recentBlockhash required');\n    }\n\n    if (this.instructions.length < 1) {\n      console.warn('No instructions provided');\n    }\n\n    let feePayer: PublicKey;\n    if (this.feePayer) {\n      feePayer = this.feePayer;\n    } else if (this.signatures.length > 0 && this.signatures[0].publicKey) {\n      // Use implicit fee payer\n      feePayer = this.signatures[0].publicKey;\n    } else {\n      throw new Error('Transaction fee payer required');\n    }\n\n    for (let i = 0; i < this.instructions.length; i++) {\n      if (this.instructions[i].programId === undefined) {\n        throw new Error(\n          `Transaction instruction index ${i} has undefined program id`,\n        );\n      }\n    }\n\n    const programIds: string[] = [];\n    const accountMetas: AccountMeta[] = [];\n    this.instructions.forEach(instruction => {\n      instruction.keys.forEach(accountMeta => {\n        accountMetas.push({...accountMeta});\n      });\n\n      const programId = instruction.programId.toString();\n      if (!programIds.includes(programId)) {\n        programIds.push(programId);\n      }\n    });\n\n    // Append programID account metas\n    programIds.forEach(programId => {\n      accountMetas.push({\n        pubkey: new PublicKey(programId),\n        isSigner: false,\n        isWritable: false,\n      });\n    });\n\n    // Sort. Prioritizing first by signer, then by writable\n    accountMetas.sort(function (x, y) {\n      const pubkeySorting = x.pubkey\n        .toBase58()\n        .localeCompare(y.pubkey.toBase58());\n      const checkSigner = x.isSigner === y.isSigner ? 0 : x.isSigner ? -1 : 1;\n      const checkWritable =\n        x.isWritable === y.isWritable ? pubkeySorting : x.isWritable ? -1 : 1;\n      return checkSigner || checkWritable;\n    });\n\n    // Cull duplicate account metas\n    const uniqueMetas: AccountMeta[] = [];\n    accountMetas.forEach(accountMeta => {\n      const pubkeyString = accountMeta.pubkey.toString();\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.toString() === pubkeyString;\n      });\n      if (uniqueIndex > -1) {\n        uniqueMetas[uniqueIndex].isWritable =\n          uniqueMetas[uniqueIndex].isWritable || accountMeta.isWritable;\n      } else {\n        uniqueMetas.push(accountMeta);\n      }\n    });\n\n    // Move fee payer to the front\n    const feePayerIndex = uniqueMetas.findIndex(x => {\n      return x.pubkey.equals(feePayer);\n    });\n    if (feePayerIndex > -1) {\n      const [payerMeta] = uniqueMetas.splice(feePayerIndex, 1);\n      payerMeta.isSigner = true;\n      payerMeta.isWritable = true;\n      uniqueMetas.unshift(payerMeta);\n    } else {\n      uniqueMetas.unshift({\n        pubkey: feePayer,\n        isSigner: true,\n        isWritable: true,\n      });\n    }\n\n    // Disallow unknown signers\n    for (const signature of this.signatures) {\n      const uniqueIndex = uniqueMetas.findIndex(x => {\n        return x.pubkey.equals(signature.publicKey);\n      });\n      if (uniqueIndex > -1) {\n        if (!uniqueMetas[uniqueIndex].isSigner) {\n          uniqueMetas[uniqueIndex].isSigner = true;\n          console.warn(\n            'Transaction references a signature that is unnecessary, ' +\n              'only the fee payer and instruction signer accounts should sign a transaction. ' +\n              'This behavior is deprecated and will throw an error in the next major version release.',\n          );\n        }\n      } else {\n        throw new Error(`unknown signer: ${signature.publicKey.toString()}`);\n      }\n    }\n\n    let numRequiredSignatures = 0;\n    let numReadonlySignedAccounts = 0;\n    let numReadonlyUnsignedAccounts = 0;\n\n    // Split out signing from non-signing keys and count header values\n    const signedKeys: string[] = [];\n    const unsignedKeys: string[] = [];\n    uniqueMetas.forEach(({pubkey, isSigner, isWritable}) => {\n      if (isSigner) {\n        signedKeys.push(pubkey.toString());\n        numRequiredSignatures += 1;\n        if (!isWritable) {\n          numReadonlySignedAccounts += 1;\n        }\n      } else {\n        unsignedKeys.push(pubkey.toString());\n        if (!isWritable) {\n          numReadonlyUnsignedAccounts += 1;\n        }\n      }\n    });\n\n    const accountKeys = signedKeys.concat(unsignedKeys);\n    const instructions: CompiledInstruction[] = this.instructions.map(\n      instruction => {\n        const {data, programId} = instruction;\n        return {\n          programIdIndex: accountKeys.indexOf(programId.toString()),\n          accounts: instruction.keys.map(meta =>\n            accountKeys.indexOf(meta.pubkey.toString()),\n          ),\n          data: bs58.encode(data),\n        };\n      },\n    );\n\n    instructions.forEach(instruction => {\n      invariant(instruction.programIdIndex >= 0);\n      instruction.accounts.forEach(keyIndex => invariant(keyIndex >= 0));\n    });\n\n    return new Message({\n      header: {\n        numRequiredSignatures,\n        numReadonlySignedAccounts,\n        numReadonlyUnsignedAccounts,\n      },\n      accountKeys,\n      recentBlockhash,\n      instructions,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  _compile(): Message {\n    const message = this.compileMessage();\n    const signedKeys = message.accountKeys.slice(\n      0,\n      message.header.numRequiredSignatures,\n    );\n\n    if (this.signatures.length === signedKeys.length) {\n      const valid = this.signatures.every((pair, index) => {\n        return signedKeys[index].equals(pair.publicKey);\n      });\n\n      if (valid) return message;\n    }\n\n    this.signatures = signedKeys.map(publicKey => ({\n      signature: null,\n      publicKey,\n    }));\n\n    return message;\n  }\n\n  /**\n   * Get a buffer of the Transaction data that need to be covered by signatures\n   */\n  serializeMessage(): Buffer {\n    return this._compile().serialize();\n  }\n\n  /**\n   * Get the estimated fee associated with a transaction\n   */\n  async getEstimatedFee(connection: Connection): Promise<number> {\n    return (await connection.getFeeForMessage(this.compileMessage())).value;\n  }\n\n  /**\n   * Specify the public keys which will be used to sign the Transaction.\n   * The first signer will be used as the transaction fee payer account.\n   *\n   * Signatures can be added with either `partialSign` or `addSignature`\n   *\n   * @deprecated Deprecated since v0.84.0. Only the fee payer needs to be\n   * specified and it can be set in the Transaction constructor or with the\n   * `feePayer` property.\n   */\n  setSigners(...signers: Array<PublicKey>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    const seen = new Set();\n    this.signatures = signers\n      .filter(publicKey => {\n        const key = publicKey.toString();\n        if (seen.has(key)) {\n          return false;\n        } else {\n          seen.add(key);\n          return true;\n        }\n      })\n      .map(publicKey => ({signature: null, publicKey}));\n  }\n\n  /**\n   * Sign the Transaction with the specified signers. Multiple signatures may\n   * be applied to a Transaction. The first signature is considered \"primary\"\n   * and is used identify and confirm transactions.\n   *\n   * If the Transaction `feePayer` is not set, the first signer will be used\n   * as the transaction fee payer account.\n   *\n   * Transaction fields should not be modified after the first call to `sign`,\n   * as doing so may invalidate the signature and cause the Transaction to be\n   * rejected.\n   *\n   * The Transaction must be assigned a valid `recentBlockhash` before invoking this method\n   */\n  sign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    this.signatures = uniqueSigners.map(signer => ({\n      signature: null,\n      publicKey: signer.publicKey,\n    }));\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n    this._verifySignatures(message.serialize(), true);\n  }\n\n  /**\n   * Partially sign a transaction with the specified accounts. All accounts must\n   * correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   *\n   * All the caveats from the `sign` method apply to `partialSign`\n   */\n  partialSign(...signers: Array<Signer>) {\n    if (signers.length === 0) {\n      throw new Error('No signers');\n    }\n\n    // Dedupe signers\n    const seen = new Set();\n    const uniqueSigners = [];\n    for (const signer of signers) {\n      const key = signer.publicKey.toString();\n      if (seen.has(key)) {\n        continue;\n      } else {\n        seen.add(key);\n        uniqueSigners.push(signer);\n      }\n    }\n\n    const message = this._compile();\n    this._partialSign(message, ...uniqueSigners);\n  }\n\n  /**\n   * @internal\n   */\n  _partialSign(message: Message, ...signers: Array<Signer>) {\n    const signData = message.serialize();\n    signers.forEach(signer => {\n      const signature = nacl.sign.detached(signData, signer.secretKey);\n      this._addSignature(signer.publicKey, toBuffer(signature));\n    });\n  }\n\n  /**\n   * Add an externally created signature to a transaction. The public key\n   * must correspond to either the fee payer or a signer account in the transaction\n   * instructions.\n   */\n  addSignature(pubkey: PublicKey, signature: Buffer) {\n    this._compile(); // Ensure signatures array is populated\n    this._addSignature(pubkey, signature);\n  }\n\n  /**\n   * @internal\n   */\n  _addSignature(pubkey: PublicKey, signature: Buffer) {\n    invariant(signature.length === 64);\n\n    const index = this.signatures.findIndex(sigpair =>\n      pubkey.equals(sigpair.publicKey),\n    );\n    if (index < 0) {\n      throw new Error(`unknown signer: ${pubkey.toString()}`);\n    }\n\n    this.signatures[index].signature = Buffer.from(signature);\n  }\n\n  /**\n   * Verify signatures of a complete, signed Transaction\n   */\n  verifySignatures(): boolean {\n    return this._verifySignatures(this.serializeMessage(), true);\n  }\n\n  /**\n   * @internal\n   */\n  _verifySignatures(signData: Buffer, requireAllSignatures: boolean): boolean {\n    for (const {signature, publicKey} of this.signatures) {\n      if (signature === null) {\n        if (requireAllSignatures) {\n          return false;\n        }\n      } else {\n        if (\n          !nacl.sign.detached.verify(signData, signature, publicKey.toBuffer())\n        ) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Serialize the Transaction in the wire format.\n   */\n  serialize(config?: SerializeConfig): Buffer {\n    const {requireAllSignatures, verifySignatures} = Object.assign(\n      {requireAllSignatures: true, verifySignatures: true},\n      config,\n    );\n\n    const signData = this.serializeMessage();\n    if (\n      verifySignatures &&\n      !this._verifySignatures(signData, requireAllSignatures)\n    ) {\n      throw new Error('Signature verification failed');\n    }\n\n    return this._serialize(signData);\n  }\n\n  /**\n   * @internal\n   */\n  _serialize(signData: Buffer): Buffer {\n    const {signatures} = this;\n    const signatureCount: number[] = [];\n    shortvec.encodeLength(signatureCount, signatures.length);\n    const transactionLength =\n      signatureCount.length + signatures.length * 64 + signData.length;\n    const wireTransaction = Buffer.alloc(transactionLength);\n    invariant(signatures.length < 256);\n    Buffer.from(signatureCount).copy(wireTransaction, 0);\n    signatures.forEach(({signature}, index) => {\n      if (signature !== null) {\n        invariant(signature.length === 64, `signature has invalid length`);\n        Buffer.from(signature).copy(\n          wireTransaction,\n          signatureCount.length + index * 64,\n        );\n      }\n    });\n    signData.copy(\n      wireTransaction,\n      signatureCount.length + signatures.length * 64,\n    );\n    invariant(\n      wireTransaction.length <= PACKET_DATA_SIZE,\n      `Transaction too large: ${wireTransaction.length} > ${PACKET_DATA_SIZE}`,\n    );\n    return wireTransaction;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get keys(): Array<PublicKey> {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].keys.map(keyObj => keyObj.pubkey);\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get programId(): PublicKey {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].programId;\n  }\n\n  /**\n   * Deprecated method\n   * @internal\n   */\n  get data(): Buffer {\n    invariant(this.instructions.length === 1);\n    return this.instructions[0].data;\n  }\n\n  /**\n   * Parse a wire transaction into a Transaction object.\n   */\n  static from(buffer: Buffer | Uint8Array | Array<number>): Transaction {\n    // Slice up wire data\n    let byteArray = [...buffer];\n\n    const signatureCount = shortvec.decodeLength(byteArray);\n    let signatures = [];\n    for (let i = 0; i < signatureCount; i++) {\n      const signature = byteArray.slice(0, SIGNATURE_LENGTH);\n      byteArray = byteArray.slice(SIGNATURE_LENGTH);\n      signatures.push(bs58.encode(Buffer.from(signature)));\n    }\n\n    return Transaction.populate(Message.from(byteArray), signatures);\n  }\n\n  /**\n   * Populate Transaction object from message and signatures\n   */\n  static populate(\n    message: Message,\n    signatures: Array<string> = [],\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.recentBlockhash = message.recentBlockhash;\n    if (message.header.numRequiredSignatures > 0) {\n      transaction.feePayer = message.accountKeys[0];\n    }\n    signatures.forEach((signature, index) => {\n      const sigPubkeyPair = {\n        signature:\n          signature == bs58.encode(DEFAULT_SIGNATURE)\n            ? null\n            : bs58.decode(signature),\n        publicKey: message.accountKeys[index],\n      };\n      transaction.signatures.push(sigPubkeyPair);\n    });\n\n    message.instructions.forEach(instruction => {\n      const keys = instruction.accounts.map(account => {\n        const pubkey = message.accountKeys[account];\n        return {\n          pubkey,\n          isSigner:\n            transaction.signatures.some(\n              keyObj => keyObj.publicKey.toString() === pubkey.toString(),\n            ) || message.isAccountSigner(account),\n          isWritable: message.isAccountWritable(account),\n        };\n      });\n\n      transaction.instructions.push(\n        new TransactionInstruction({\n          keys,\n          programId: message.accountKeys[instruction.programIdIndex],\n          data: bs58.decode(instruction.data),\n        }),\n      );\n    });\n\n    return transaction;\n  }\n}\n","import {PublicKey} from './publickey';\n\nexport const SYSVAR_CLOCK_PUBKEY = new PublicKey(\n  'SysvarC1ock11111111111111111111111111111111',\n);\n\nexport const SYSVAR_EPOCH_SCHEDULE_PUBKEY = new PublicKey(\n  'SysvarEpochSchedu1e111111111111111111111111',\n);\n\nexport const SYSVAR_INSTRUCTIONS_PUBKEY = new PublicKey(\n  'Sysvar1nstructions1111111111111111111111111',\n);\n\nexport const SYSVAR_RECENT_BLOCKHASHES_PUBKEY = new PublicKey(\n  'SysvarRecentB1ockHashes11111111111111111111',\n);\n\nexport const SYSVAR_RENT_PUBKEY = new PublicKey(\n  'SysvarRent111111111111111111111111111111111',\n);\n\nexport const SYSVAR_REWARDS_PUBKEY = new PublicKey(\n  'SysvarRewards111111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HASHES_PUBKEY = new PublicKey(\n  'SysvarS1otHashes111111111111111111111111111',\n);\n\nexport const SYSVAR_SLOT_HISTORY_PUBKEY = new PublicKey(\n  'SysvarS1otHistory11111111111111111111111111',\n);\n\nexport const SYSVAR_STAKE_HISTORY_PUBKEY = new PublicKey(\n  'SysvarStakeHistory1111111111111111111111111',\n);\n","import {Connection} from '../connection';\nimport {Transaction} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\nimport type {Signer} from '../keypair';\nimport type {TransactionSignature} from '../transaction';\n\n/**\n * Sign, send and confirm a transaction.\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Transaction} transaction\n * @param {Array<Signer>} signers\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmTransaction(\n  connection: Connection,\n  transaction: Transaction,\n  signers: Array<Signer>,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n    maxRetries: options.maxRetries,\n  };\n\n  const signature = await connection.sendTransaction(\n    transaction,\n    signers,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","// zzz\nexport function sleep(ms: number): Promise<void> {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport * as Layout from './layout';\n\nexport interface IInstructionInputData {\n  readonly instruction: number;\n}\n\n/**\n * @internal\n */\nexport type InstructionType<TInputData extends IInstructionInputData> = {\n  /** The Instruction index (from solana upstream program) */\n  index: number;\n  /** The BufferLayout to use to build data */\n  layout: BufferLayout.Layout<TInputData>;\n};\n\n/**\n * Populate a buffer of instruction data using an InstructionType\n * @internal\n */\nexport function encodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  fields?: any,\n): Buffer {\n  const allocLength =\n    type.layout.span >= 0 ? type.layout.span : Layout.getAlloc(type, fields);\n  const data = Buffer.alloc(allocLength);\n  const layoutFields = Object.assign({instruction: type.index}, fields);\n  type.layout.encode(layoutFields, data);\n  return data;\n}\n\n/**\n * Decode instruction data buffer using an InstructionType\n * @internal\n */\nexport function decodeData<TInputData extends IInstructionInputData>(\n  type: InstructionType<TInputData>,\n  buffer: Buffer,\n): TInputData {\n  let data: TInputData;\n  try {\n    data = type.layout.decode(buffer);\n  } catch (err) {\n    throw new Error('invalid instruction; ' + err);\n  }\n\n  if (data.instruction !== type.index) {\n    throw new Error(\n      `invalid instruction; instruction index mismatch ${data.instruction} != ${type.index}`,\n    );\n  }\n\n  return data;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\n/**\n * https://github.com/solana-labs/solana/blob/90bedd7e067b5b8f3ddbb45da00a4e9cabb22c62/sdk/src/fee_calculator.rs#L7-L11\n *\n * @internal\n */\nexport const FeeCalculatorLayout = BufferLayout.nu64('lamportsPerSignature');\n\n/**\n * Calculator for transaction fees.\n */\nexport interface FeeCalculator {\n  /** Cost in lamports to validate a signature. */\n  lamportsPerSignature: number;\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport {Buffer} from 'buffer';\n\nimport type {Blockhash} from './blockhash';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport type {FeeCalculator} from './fee-calculator';\nimport {FeeCalculatorLayout} from './fee-calculator';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * See https://github.com/solana-labs/solana/blob/0ea2843ec9cdc517572b8e62c959f41b55cf4453/sdk/src/nonce_state.rs#L29-L32\n *\n * @internal\n */\nconst NonceAccountLayout = BufferLayout.struct<\n  Readonly<{\n    authorizedPubkey: Uint8Array;\n    feeCalculator: Readonly<{\n      lamportsPerSignature: number;\n    }>;\n    nonce: Uint8Array;\n    state: number;\n    version: number;\n  }>\n>([\n  BufferLayout.u32('version'),\n  BufferLayout.u32('state'),\n  Layout.publicKey('authorizedPubkey'),\n  Layout.publicKey('nonce'),\n  BufferLayout.struct<Readonly<{lamportsPerSignature: number}>>(\n    [FeeCalculatorLayout],\n    'feeCalculator',\n  ),\n]);\n\nexport const NONCE_ACCOUNT_LENGTH = NonceAccountLayout.span;\n\ntype NonceAccountArgs = {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n};\n\n/**\n * NonceAccount class\n */\nexport class NonceAccount {\n  authorizedPubkey: PublicKey;\n  nonce: Blockhash;\n  feeCalculator: FeeCalculator;\n\n  /**\n   * @internal\n   */\n  constructor(args: NonceAccountArgs) {\n    this.authorizedPubkey = args.authorizedPubkey;\n    this.nonce = args.nonce;\n    this.feeCalculator = args.feeCalculator;\n  }\n\n  /**\n   * Deserialize NonceAccount from the account data.\n   *\n   * @param buffer account data\n   * @return NonceAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): NonceAccount {\n    const nonceAccount = NonceAccountLayout.decode(toBuffer(buffer), 0);\n    return new NonceAccount({\n      authorizedPubkey: new PublicKey(nonceAccount.authorizedPubkey),\n      nonce: new PublicKey(nonceAccount.nonce).toString(),\n      feeCalculator: nonceAccount.feeCalculator,\n    });\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {NONCE_ACCOUNT_LENGTH} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {SYSVAR_RECENT_BLOCKHASHES_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Create account system transaction params\n */\nexport type CreateAccountParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account */\n  newAccountPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Transfer system transaction params\n */\nexport type TransferParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n};\n\n/**\n * Assign system transaction params\n */\nexport type AssignParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Create account with seed system transaction params\n */\nexport type CreateAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created account */\n  fromPubkey: PublicKey;\n  /** Public key of the created account. Must be pre-calculated with PublicKey.createWithSeed() */\n  newAccountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the created account. Must be the same as the base key used to create `newAccountPubkey` */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the created account. Must be the same as the seed used to create `newAccountPubkey` */\n  seed: string;\n  /** Amount of lamports to transfer to the created account */\n  lamports: number;\n  /** Amount of space in bytes to allocate to the created account */\n  space: number;\n  /** Public key of the program to assign as the owner of the created account */\n  programId: PublicKey;\n};\n\n/**\n * Create nonce account system transaction params\n */\nexport type CreateNonceAccountParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n};\n\n/**\n * Create nonce account with seed system transaction params\n */\nexport type CreateNonceAccountWithSeedParams = {\n  /** The account that will transfer lamports to the created nonce account */\n  fromPubkey: PublicKey;\n  /** Public key of the created nonce account */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the created nonce account */\n  authorizedPubkey: PublicKey;\n  /** Amount of lamports to transfer to the created nonce account */\n  lamports: number;\n  /** Base public key to use to derive the address of the nonce account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the nonce account */\n  seed: string;\n};\n\n/**\n * Initialize nonce account system instruction params\n */\nexport type InitializeNonceParams = {\n  /** Nonce account which will be initialized */\n  noncePubkey: PublicKey;\n  /** Public key to set as authority of the initialized nonce account */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Advance nonce account system instruction params\n */\nexport type AdvanceNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Withdraw nonce account system transaction params\n */\nexport type WithdrawNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key of the account which will receive the withdrawn nonce account balance */\n  toPubkey: PublicKey;\n  /** Amount of lamports to withdraw from the nonce account */\n  lamports: number;\n};\n\n/**\n * Authorize nonce account system transaction params\n */\nexport type AuthorizeNonceParams = {\n  /** Nonce account */\n  noncePubkey: PublicKey;\n  /** Public key of the current nonce authority */\n  authorizedPubkey: PublicKey;\n  /** Public key to set as the new nonce authority */\n  newAuthorizedPubkey: PublicKey;\n};\n\n/**\n * Allocate account system transaction params\n */\nexport type AllocateParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Amount of space in bytes to allocate */\n  space: number;\n};\n\n/**\n * Allocate account with seed system transaction params\n */\nexport type AllocateWithSeedParams = {\n  /** Account to allocate */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the allocated account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the allocated account */\n  seed: string;\n  /** Amount of space in bytes to allocate */\n  space: number;\n  /** Public key of the program to assign as the owner of the allocated account */\n  programId: PublicKey;\n};\n\n/**\n * Assign account with seed system transaction params\n */\nexport type AssignWithSeedParams = {\n  /** Public key of the account which will be assigned a new owner */\n  accountPubkey: PublicKey;\n  /** Base public key to use to derive the address of the assigned account */\n  basePubkey: PublicKey;\n  /** Seed to use to derive the address of the assigned account */\n  seed: string;\n  /** Public key of the program to assign as the owner */\n  programId: PublicKey;\n};\n\n/**\n * Transfer with seed system transaction params\n */\nexport type TransferWithSeedParams = {\n  /** Account that will transfer lamports */\n  fromPubkey: PublicKey;\n  /** Base public key to use to derive the funding account address */\n  basePubkey: PublicKey;\n  /** Account that will receive transferred lamports */\n  toPubkey: PublicKey;\n  /** Amount of lamports to transfer */\n  lamports: number;\n  /** Seed to use to derive the funding account address */\n  seed: string;\n  /** Program id to use to derive the funding account address */\n  programId: PublicKey;\n};\n\n/**\n * System Instruction class\n */\nexport class SystemInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a system instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): SystemInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: SystemInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(SYSTEM_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as SystemInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a SystemInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a create account system instruction and retrieve the instruction params.\n   */\n  static decodeCreateAccount(\n    instruction: TransactionInstruction,\n  ): CreateAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Create,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a transfer system instruction and retrieve the instruction params.\n   */\n  static decodeTransfer(instruction: TransactionInstruction): TransferParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Transfer,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a transfer with seed system instruction and retrieve the instruction params.\n   */\n  static decodeTransferWithSeed(\n    instruction: TransactionInstruction,\n  ): TransferWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      basePubkey: instruction.keys[1].pubkey,\n      toPubkey: instruction.keys[2].pubkey,\n      lamports,\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an allocate system instruction and retrieve the instruction params.\n   */\n  static decodeAllocate(instruction: TransactionInstruction): AllocateParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {space} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Allocate,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      space,\n    };\n  }\n\n  /**\n   * Decode an allocate with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAllocateWithSeed(\n    instruction: TransactionInstruction,\n  ): AllocateWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign system instruction and retrieve the instruction params.\n   */\n  static decodeAssign(instruction: TransactionInstruction): AssignParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.Assign,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode an assign with seed system instruction and retrieve the instruction params.\n   */\n  static decodeAssignWithSeed(\n    instruction: TransactionInstruction,\n  ): AssignWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 1);\n\n    const {base, seed, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed,\n      instruction.data,\n    );\n\n    return {\n      accountPubkey: instruction.keys[0].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a create account with seed system instruction and retrieve the instruction params.\n   */\n  static decodeCreateWithSeed(\n    instruction: TransactionInstruction,\n  ): CreateAccountWithSeedParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {base, seed, lamports, space, programId} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed,\n      instruction.data,\n    );\n\n    return {\n      fromPubkey: instruction.keys[0].pubkey,\n      newAccountPubkey: instruction.keys[1].pubkey,\n      basePubkey: new PublicKey(base),\n      seed,\n      lamports,\n      space,\n      programId: new PublicKey(programId),\n    };\n  }\n\n  /**\n   * Decode a nonce initialize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * Decode a nonce advance system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAdvance(\n    instruction: TransactionInstruction,\n  ): AdvanceNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * Decode a nonce withdraw system instruction and retrieve the instruction params.\n   */\n  static decodeNonceWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n\n    const {lamports} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a nonce authorize system instruction and retrieve the instruction params.\n   */\n  static decodeNonceAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeNonceParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized} = decodeData(\n      SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount,\n      instruction.data,\n    );\n\n    return {\n      noncePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[1].pubkey,\n      newAuthorizedPubkey: new PublicKey(authorized),\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(SystemProgram.programId)) {\n      throw new Error('invalid instruction; programId is not SystemProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid SystemInstructionType's\n */\nexport type SystemInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof SystemInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'AdvanceNonceAccount'\n  | 'Allocate'\n  | 'AllocateWithSeed'\n  | 'Assign'\n  | 'AssignWithSeed'\n  | 'AuthorizeNonceAccount'\n  | 'Create'\n  | 'CreateWithSeed'\n  | 'InitializeNonceAccount'\n  | 'Transfer'\n  | 'TransferWithSeed'\n  | 'WithdrawNonceAccount';\n\ntype SystemInstructionInputData = {\n  AdvanceNonceAccount: IInstructionInputData;\n  Allocate: IInstructionInputData & {\n    space: number;\n  };\n  AllocateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  Assign: IInstructionInputData & {\n    programId: Uint8Array;\n  };\n  AssignWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    seed: string;\n    programId: Uint8Array;\n  };\n  AuthorizeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Create: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    space: number;\n  };\n  CreateWithSeed: IInstructionInputData & {\n    base: Uint8Array;\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n    space: number;\n  };\n  InitializeNonceAccount: IInstructionInputData & {\n    authorized: Uint8Array;\n  };\n  Transfer: IInstructionInputData & {\n    lamports: number;\n  };\n  TransferWithSeed: IInstructionInputData & {\n    lamports: number;\n    programId: Uint8Array;\n    seed: string;\n  };\n  WithdrawNonceAccount: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\n/**\n * An enumeration of valid system InstructionType's\n * @internal\n */\nexport const SYSTEM_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in SystemInstructionType]: InstructionType<\n    SystemInstructionInputData[Instruction]\n  >;\n}>({\n  Create: {\n    index: 0,\n    layout: BufferLayout.struct<SystemInstructionInputData['Create']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Assign: {\n    index: 1,\n    layout: BufferLayout.struct<SystemInstructionInputData['Assign']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  Transfer: {\n    index: 2,\n    layout: BufferLayout.struct<SystemInstructionInputData['Transfer']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  CreateWithSeed: {\n    index: 3,\n    layout: BufferLayout.struct<SystemInstructionInputData['CreateWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      BufferLayout.ns64('lamports'),\n      BufferLayout.ns64('space'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  AdvanceNonceAccount: {\n    index: 4,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AdvanceNonceAccount']\n    >([BufferLayout.u32('instruction')]),\n  },\n  WithdrawNonceAccount: {\n    index: 5,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['WithdrawNonceAccount']\n    >([BufferLayout.u32('instruction'), BufferLayout.ns64('lamports')]),\n  },\n  InitializeNonceAccount: {\n    index: 6,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['InitializeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  AuthorizeNonceAccount: {\n    index: 7,\n    layout: BufferLayout.struct<\n      SystemInstructionInputData['AuthorizeNonceAccount']\n    >([BufferLayout.u32('instruction'), Layout.publicKey('authorized')]),\n  },\n  Allocate: {\n    index: 8,\n    layout: BufferLayout.struct<SystemInstructionInputData['Allocate']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('space'),\n    ]),\n  },\n  AllocateWithSeed: {\n    index: 9,\n    layout: BufferLayout.struct<SystemInstructionInputData['AllocateWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('base'),\n        Layout.rustString('seed'),\n        BufferLayout.ns64('space'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n  AssignWithSeed: {\n    index: 10,\n    layout: BufferLayout.struct<SystemInstructionInputData['AssignWithSeed']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('base'),\n      Layout.rustString('seed'),\n      Layout.publicKey('programId'),\n    ]),\n  },\n  TransferWithSeed: {\n    index: 11,\n    layout: BufferLayout.struct<SystemInstructionInputData['TransferWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        BufferLayout.ns64('lamports'),\n        Layout.rustString('seed'),\n        Layout.publicKey('programId'),\n      ],\n    ),\n  },\n});\n\n/**\n * Factory class for transactions to interact with the System program\n */\nexport class SystemProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the System program\n   */\n  static programId: PublicKey = new PublicKey(\n    '11111111111111111111111111111111',\n  );\n\n  /**\n   * Generate a transaction instruction that creates a new account\n   */\n  static createAccount(params: CreateAccountParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.Create;\n    const data = encodeData(type, {\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.newAccountPubkey, isSigner: true, isWritable: true},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that transfers lamports from one account to another\n   */\n  static transfer(\n    params: TransferParams | TransferWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.TransferWithSeed;\n      data = encodeData(type, {\n        lamports: params.lamports,\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Transfer;\n      data = encodeData(type, {lamports: params.lamports});\n      keys = [\n        {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n      ];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that assigns an account to a program\n   */\n  static assign(\n    params: AssignParams | AssignWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AssignWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Assign;\n      data = encodeData(type, {\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that creates a new account at\n   *   an address generated with `from`, a seed, and programId\n   */\n  static createAccountWithSeed(\n    params: CreateAccountWithSeedParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.CreateWithSeed;\n    const data = encodeData(type, {\n      base: toBuffer(params.basePubkey.toBuffer()),\n      seed: params.seed,\n      lamports: params.lamports,\n      space: params.space,\n      programId: toBuffer(params.programId.toBuffer()),\n    });\n    let keys = [\n      {pubkey: params.fromPubkey, isSigner: true, isWritable: true},\n      {pubkey: params.newAccountPubkey, isSigner: false, isWritable: true},\n    ];\n    if (params.basePubkey != params.fromPubkey) {\n      keys.push({pubkey: params.basePubkey, isSigner: true, isWritable: false});\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction that creates a new Nonce account\n   */\n  static createNonceAccount(\n    params: CreateNonceAccountParams | CreateNonceAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    if ('basePubkey' in params && 'seed' in params) {\n      transaction.add(\n        SystemProgram.createAccountWithSeed({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          basePubkey: params.basePubkey,\n          seed: params.seed,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    } else {\n      transaction.add(\n        SystemProgram.createAccount({\n          fromPubkey: params.fromPubkey,\n          newAccountPubkey: params.noncePubkey,\n          lamports: params.lamports,\n          space: NONCE_ACCOUNT_LENGTH,\n          programId: this.programId,\n        }),\n      );\n    }\n\n    const initParams = {\n      noncePubkey: params.noncePubkey,\n      authorizedPubkey: params.authorizedPubkey,\n    };\n\n    transaction.add(this.nonceInitialize(initParams));\n    return transaction;\n  }\n\n  /**\n   * Generate an instruction to initialize a Nonce account\n   */\n  static nonceInitialize(\n    params: InitializeNonceParams,\n  ): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.InitializeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.authorizedPubkey.toBuffer()),\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate an instruction to advance the nonce in a Nonce account\n   */\n  static nonceAdvance(params: AdvanceNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AdvanceNonceAccount;\n    const data = encodeData(type);\n    const instructionData = {\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction instruction that withdraws lamports from a Nonce account\n   */\n  static nonceWithdraw(params: WithdrawNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.WithdrawNonceAccount;\n    const data = encodeData(type, {lamports: params.lamports});\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.toPubkey, isSigner: false, isWritable: true},\n        {\n          pubkey: SYSVAR_RECENT_BLOCKHASHES_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that authorizes a new PublicKey as the authority\n   * on a Nonce account.\n   */\n  static nonceAuthorize(params: AuthorizeNonceParams): TransactionInstruction {\n    const type = SYSTEM_INSTRUCTION_LAYOUTS.AuthorizeNonceAccount;\n    const data = encodeData(type, {\n      authorized: toBuffer(params.newAuthorizedPubkey.toBuffer()),\n    });\n\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: params.noncePubkey, isSigner: false, isWritable: true},\n        {pubkey: params.authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction instruction that allocates space in an account without funding\n   */\n  static allocate(\n    params: AllocateParams | AllocateWithSeedParams,\n  ): TransactionInstruction {\n    let data;\n    let keys;\n    if ('basePubkey' in params) {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.AllocateWithSeed;\n      data = encodeData(type, {\n        base: toBuffer(params.basePubkey.toBuffer()),\n        seed: params.seed,\n        space: params.space,\n        programId: toBuffer(params.programId.toBuffer()),\n      });\n      keys = [\n        {pubkey: params.accountPubkey, isSigner: false, isWritable: true},\n        {pubkey: params.basePubkey, isSigner: true, isWritable: false},\n      ];\n    } else {\n      const type = SYSTEM_INSTRUCTION_LAYOUTS.Allocate;\n      data = encodeData(type, {\n        space: params.space,\n      });\n      keys = [{pubkey: params.accountPubkey, isSigner: true, isWritable: true}];\n    }\n\n    return new TransactionInstruction({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\n\nimport {PublicKey} from './publickey';\nimport {Transaction, PACKET_DATA_SIZE} from './transaction';\nimport {SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {sendAndConfirmTransaction} from './util/send-and-confirm-transaction';\nimport {sleep} from './util/sleep';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\nimport {SystemProgram} from './system-program';\nimport {IInstructionInputData} from './instruction';\n\n// Keep program chunks under PACKET_DATA_SIZE, leaving enough room for the\n// rest of the Transaction fields\n//\n// TODO: replace 300 with a proper constant for the size of the other\n// Transaction fields\nconst CHUNK_SIZE = PACKET_DATA_SIZE - 300;\n\n/**\n * Program loader interface\n */\nexport class Loader {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Amount of program data placed in each load Transaction\n   */\n  static chunkSize: number = CHUNK_SIZE;\n\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return (\n      2 * // Every transaction requires two signatures (payer + program)\n      (Math.ceil(dataLength / Loader.chunkSize) +\n        1 + // Add one for Create transaction\n        1) // Add one for Finalize transaction\n    );\n  }\n\n  /**\n   * Loads a generic program\n   *\n   * @param connection The connection to use\n   * @param payer System account that pays to load the program\n   * @param program Account to load the program into\n   * @param programId Public key that identifies the loader\n   * @param data Program octets\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static async load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    programId: PublicKey,\n    data: Buffer | Uint8Array | Array<number>,\n  ): Promise<boolean> {\n    {\n      const balanceNeeded = await connection.getMinimumBalanceForRentExemption(\n        data.length,\n      );\n\n      // Fetch program account info to check if it has already been created\n      const programInfo = await connection.getAccountInfo(\n        program.publicKey,\n        'confirmed',\n      );\n\n      let transaction: Transaction | null = null;\n      if (programInfo !== null) {\n        if (programInfo.executable) {\n          console.error('Program load failed, account is already executable');\n          return false;\n        }\n\n        if (programInfo.data.length !== data.length) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.allocate({\n              accountPubkey: program.publicKey,\n              space: data.length,\n            }),\n          );\n        }\n\n        if (!programInfo.owner.equals(programId)) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.assign({\n              accountPubkey: program.publicKey,\n              programId,\n            }),\n          );\n        }\n\n        if (programInfo.lamports < balanceNeeded) {\n          transaction = transaction || new Transaction();\n          transaction.add(\n            SystemProgram.transfer({\n              fromPubkey: payer.publicKey,\n              toPubkey: program.publicKey,\n              lamports: balanceNeeded - programInfo.lamports,\n            }),\n          );\n        }\n      } else {\n        transaction = new Transaction().add(\n          SystemProgram.createAccount({\n            fromPubkey: payer.publicKey,\n            newAccountPubkey: program.publicKey,\n            lamports: balanceNeeded > 0 ? balanceNeeded : 1,\n            space: data.length,\n            programId,\n          }),\n        );\n      }\n\n      // If the account is already created correctly, skip this step\n      // and proceed directly to loading instructions\n      if (transaction !== null) {\n        await sendAndConfirmTransaction(\n          connection,\n          transaction,\n          [payer, program],\n          {\n            commitment: 'confirmed',\n          },\n        );\n      }\n    }\n\n    const dataLayout = BufferLayout.struct<\n      Readonly<{\n        bytes: number[];\n        bytesLength: number;\n        bytesLengthPadding: number;\n        instruction: number;\n        offset: number;\n      }>\n    >([\n      BufferLayout.u32('instruction'),\n      BufferLayout.u32('offset'),\n      BufferLayout.u32('bytesLength'),\n      BufferLayout.u32('bytesLengthPadding'),\n      BufferLayout.seq(\n        BufferLayout.u8('byte'),\n        BufferLayout.offset(BufferLayout.u32(), -8),\n        'bytes',\n      ),\n    ]);\n\n    const chunkSize = Loader.chunkSize;\n    let offset = 0;\n    let array = data;\n    let transactions = [];\n    while (array.length > 0) {\n      const bytes = array.slice(0, chunkSize);\n      const data = Buffer.alloc(chunkSize + 16);\n      dataLayout.encode(\n        {\n          instruction: 0, // Load instruction\n          offset,\n          bytes: bytes as number[],\n          bytesLength: 0,\n          bytesLengthPadding: 0,\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [{pubkey: program.publicKey, isSigner: true, isWritable: true}],\n        programId,\n        data,\n      });\n      transactions.push(\n        sendAndConfirmTransaction(connection, transaction, [payer, program], {\n          commitment: 'confirmed',\n        }),\n      );\n\n      // Delay between sends in an attempt to reduce rate limit errors\n      if (connection._rpcEndpoint.includes('solana.com')) {\n        const REQUESTS_PER_SECOND = 4;\n        await sleep(1000 / REQUESTS_PER_SECOND);\n      }\n\n      offset += chunkSize;\n      array = array.slice(chunkSize);\n    }\n    await Promise.all(transactions);\n\n    // Finalize the account loaded with program data for execution\n    {\n      const dataLayout = BufferLayout.struct<IInstructionInputData>([\n        BufferLayout.u32('instruction'),\n      ]);\n\n      const data = Buffer.alloc(dataLayout.span);\n      dataLayout.encode(\n        {\n          instruction: 1, // Finalize instruction\n        },\n        data,\n      );\n\n      const transaction = new Transaction().add({\n        keys: [\n          {pubkey: program.publicKey, isSigner: true, isWritable: true},\n          {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        ],\n        programId,\n        data,\n      });\n      await sendAndConfirmTransaction(\n        connection,\n        transaction,\n        [payer, program],\n        {\n          commitment: 'confirmed',\n        },\n      );\n    }\n\n    // success\n    return true;\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {PublicKey} from './publickey';\nimport {Loader} from './loader';\nimport type {Connection} from './connection';\nimport type {Signer} from './keypair';\n\nexport const BPF_LOADER_PROGRAM_ID = new PublicKey(\n  'BPFLoader2111111111111111111111111111111111',\n);\n\n/**\n * Factory class for transactions to interact with a program loader\n */\nexport class BpfLoader {\n  /**\n   * Minimum number of signatures required to load a program not including\n   * retries\n   *\n   * Can be used to calculate transaction fees\n   */\n  static getMinNumSignatures(dataLength: number): number {\n    return Loader.getMinNumSignatures(dataLength);\n  }\n\n  /**\n   * Load a BPF program\n   *\n   * @param connection The connection to use\n   * @param payer Account that will pay program loading fees\n   * @param program Account to load the program into\n   * @param elf The entire ELF containing the BPF program\n   * @param loaderProgramId The program id of the BPF loader to use\n   * @return true if program was loaded successfully, false if program was already loaded\n   */\n  static load(\n    connection: Connection,\n    payer: Signer,\n    program: Signer,\n    elf: Buffer | Uint8Array | Array<number>,\n    loaderProgramId: PublicKey,\n  ): Promise<boolean> {\n    return Loader.load(connection, payer, program, loaderProgramId, elf);\n  }\n}\n","var global = typeof self !== 'undefined' ? self : this;\nvar __self__ = (function () {\nfunction F() {\nthis.fetch = false;\nthis.DOMException = global.DOMException\n}\nF.prototype = global;\nreturn new F();\n})();\n(function(self) {\n\nvar irrelevant = (function (exports) {\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob:\n      'FileReader' in self &&\n      'Blob' in self &&\n      (function() {\n        try {\n          new Blob();\n          return true\n        } catch (e) {\n          return false\n        }\n      })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  };\n\n  function isDataView(obj) {\n    return obj && DataView.prototype.isPrototypeOf(obj)\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ];\n\n    var isArrayBufferView =\n      ArrayBuffer.isView ||\n      function(obj) {\n        return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n      };\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name);\n    }\n    if (/[^a-z0-9\\-#$%&'*+.^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value);\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift();\n        return {done: value === undefined, value: value}\n      }\n    };\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      };\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {};\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value);\n      }, this);\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1]);\n      }, this);\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name]);\n      }, this);\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name);\n    value = normalizeValue(value);\n    var oldValue = this.map[name];\n    this.map[name] = oldValue ? oldValue + ', ' + value : value;\n  };\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)];\n  };\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name);\n    return this.has(name) ? this.map[name] : null\n  };\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  };\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value);\n  };\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this);\n      }\n    }\n  };\n\n  Headers.prototype.keys = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push(name);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.values = function() {\n    var items = [];\n    this.forEach(function(value) {\n      items.push(value);\n    });\n    return iteratorFor(items)\n  };\n\n  Headers.prototype.entries = function() {\n    var items = [];\n    this.forEach(function(value, name) {\n      items.push([name, value]);\n    });\n    return iteratorFor(items)\n  };\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries;\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true;\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result);\n      };\n      reader.onerror = function() {\n        reject(reader.error);\n      };\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsArrayBuffer(blob);\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader();\n    var promise = fileReaderReady(reader);\n    reader.readAsText(blob);\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf);\n    var chars = new Array(view.length);\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i]);\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength);\n      view.set(new Uint8Array(buf));\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false;\n\n    this._initBody = function(body) {\n      this._bodyInit = body;\n      if (!body) {\n        this._bodyText = '';\n      } else if (typeof body === 'string') {\n        this._bodyText = body;\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body;\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body;\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString();\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer);\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer]);\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body);\n      } else {\n        this._bodyText = body = Object.prototype.toString.call(body);\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8');\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type);\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8');\n        }\n      }\n    };\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this);\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      };\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      };\n    }\n\n    this.text = function() {\n      var rejected = consumed(this);\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    };\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      };\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    };\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT'];\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase();\n    return methods.indexOf(upcased) > -1 ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {};\n    var body = options.body;\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url;\n      this.credentials = input.credentials;\n      if (!options.headers) {\n        this.headers = new Headers(input.headers);\n      }\n      this.method = input.method;\n      this.mode = input.mode;\n      this.signal = input.signal;\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit;\n        input.bodyUsed = true;\n      }\n    } else {\n      this.url = String(input);\n    }\n\n    this.credentials = options.credentials || this.credentials || 'same-origin';\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers);\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET');\n    this.mode = options.mode || this.mode || null;\n    this.signal = options.signal || this.signal;\n    this.referrer = null;\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body);\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, {body: this._bodyInit})\n  };\n\n  function decode(body) {\n    var form = new FormData();\n    body\n      .trim()\n      .split('&')\n      .forEach(function(bytes) {\n        if (bytes) {\n          var split = bytes.split('=');\n          var name = split.shift().replace(/\\+/g, ' ');\n          var value = split.join('=').replace(/\\+/g, ' ');\n          form.append(decodeURIComponent(name), decodeURIComponent(value));\n        }\n      });\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers();\n    // Replace instances of \\r\\n and \\n followed by at least one space or horizontal tab with a space\n    // https://tools.ietf.org/html/rfc7230#section-3.2\n    var preProcessedHeaders = rawHeaders.replace(/\\r?\\n[\\t ]+/g, ' ');\n    preProcessedHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':');\n      var key = parts.shift().trim();\n      if (key) {\n        var value = parts.join(':').trim();\n        headers.append(key, value);\n      }\n    });\n    return headers\n  }\n\n  Body.call(Request.prototype);\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {};\n    }\n\n    this.type = 'default';\n    this.status = options.status === undefined ? 200 : options.status;\n    this.ok = this.status >= 200 && this.status < 300;\n    this.statusText = 'statusText' in options ? options.statusText : 'OK';\n    this.headers = new Headers(options.headers);\n    this.url = options.url || '';\n    this._initBody(bodyInit);\n  }\n\n  Body.call(Response.prototype);\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  };\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''});\n    response.type = 'error';\n    return response\n  };\n\n  var redirectStatuses = [301, 302, 303, 307, 308];\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  };\n\n  exports.DOMException = self.DOMException;\n  try {\n    new exports.DOMException();\n  } catch (err) {\n    exports.DOMException = function(message, name) {\n      this.message = message;\n      this.name = name;\n      var error = Error(message);\n      this.stack = error.stack;\n    };\n    exports.DOMException.prototype = Object.create(Error.prototype);\n    exports.DOMException.prototype.constructor = exports.DOMException;\n  }\n\n  function fetch(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init);\n\n      if (request.signal && request.signal.aborted) {\n        return reject(new exports.DOMException('Aborted', 'AbortError'))\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      function abortXhr() {\n        xhr.abort();\n      }\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        };\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL');\n        var body = 'response' in xhr ? xhr.response : xhr.responseText;\n        resolve(new Response(body, options));\n      };\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'));\n      };\n\n      xhr.onabort = function() {\n        reject(new exports.DOMException('Aborted', 'AbortError'));\n      };\n\n      xhr.open(request.method, request.url, true);\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true;\n      } else if (request.credentials === 'omit') {\n        xhr.withCredentials = false;\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob';\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value);\n      });\n\n      if (request.signal) {\n        request.signal.addEventListener('abort', abortXhr);\n\n        xhr.onreadystatechange = function() {\n          // DONE (success or failure)\n          if (xhr.readyState === 4) {\n            request.signal.removeEventListener('abort', abortXhr);\n          }\n        };\n      }\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit);\n    })\n  }\n\n  fetch.polyfill = true;\n\n  if (!self.fetch) {\n    self.fetch = fetch;\n    self.Headers = Headers;\n    self.Request = Request;\n    self.Response = Response;\n  }\n\n  exports.Headers = Headers;\n  exports.Request = Request;\n  exports.Response = Response;\n  exports.fetch = fetch;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n  return exports;\n\n})({});\n})(__self__);\n__self__.fetch.ponyfill = true;\n// Remove \"polyfill\" property added by whatwg-fetch\ndelete __self__.fetch.polyfill;\n// Choose between native implementation (global) or custom implementation (__self__)\n// var ctx = global.fetch ? global : __self__;\nvar ctx = __self__; // this line disable service worker support temporarily\nexports = ctx.fetch // To enable: import fetch from 'cross-fetch'\nexports.default = ctx.fetch // For TypeScript consumers without esModuleInterop.\nexports.fetch = ctx.fetch // To enable: import {fetch} from 'cross-fetch'\nexports.Headers = ctx.Headers\nexports.Request = ctx.Request\nexports.Response = ctx.Response\nmodule.exports = exports\n","const MINIMUM_SLOT_PER_EPOCH = 32;\n\n// Returns the number of trailing zeros in the binary representation of self.\nfunction trailingZeros(n: number) {\n  let trailingZeros = 0;\n  while (n > 1) {\n    n /= 2;\n    trailingZeros++;\n  }\n  return trailingZeros;\n}\n\n// Returns the smallest power of two greater than or equal to n\nfunction nextPowerOfTwo(n: number) {\n  if (n === 0) return 1;\n  n--;\n  n |= n >> 1;\n  n |= n >> 2;\n  n |= n >> 4;\n  n |= n >> 8;\n  n |= n >> 16;\n  n |= n >> 32;\n  return n + 1;\n}\n\n/**\n * Epoch schedule\n * (see https://docs.solana.com/terminology#epoch)\n * Can be retrieved with the {@link connection.getEpochSchedule} method\n */\nexport class EpochSchedule {\n  /** The maximum number of slots in each epoch */\n  public slotsPerEpoch: number;\n  /** The number of slots before beginning of an epoch to calculate a leader schedule for that epoch */\n  public leaderScheduleSlotOffset: number;\n  /** Indicates whether epochs start short and grow */\n  public warmup: boolean;\n  /** The first epoch with `slotsPerEpoch` slots */\n  public firstNormalEpoch: number;\n  /** The first slot of `firstNormalEpoch` */\n  public firstNormalSlot: number;\n\n  constructor(\n    slotsPerEpoch: number,\n    leaderScheduleSlotOffset: number,\n    warmup: boolean,\n    firstNormalEpoch: number,\n    firstNormalSlot: number,\n  ) {\n    this.slotsPerEpoch = slotsPerEpoch;\n    this.leaderScheduleSlotOffset = leaderScheduleSlotOffset;\n    this.warmup = warmup;\n    this.firstNormalEpoch = firstNormalEpoch;\n    this.firstNormalSlot = firstNormalSlot;\n  }\n\n  getEpoch(slot: number): number {\n    return this.getEpochAndSlotIndex(slot)[0];\n  }\n\n  getEpochAndSlotIndex(slot: number): [number, number] {\n    if (slot < this.firstNormalSlot) {\n      const epoch =\n        trailingZeros(nextPowerOfTwo(slot + MINIMUM_SLOT_PER_EPOCH + 1)) -\n        trailingZeros(MINIMUM_SLOT_PER_EPOCH) -\n        1;\n\n      const epochLen = this.getSlotsInEpoch(epoch);\n      const slotIndex = slot - (epochLen - MINIMUM_SLOT_PER_EPOCH);\n      return [epoch, slotIndex];\n    } else {\n      const normalSlotIndex = slot - this.firstNormalSlot;\n      const normalEpochIndex = Math.floor(normalSlotIndex / this.slotsPerEpoch);\n      const epoch = this.firstNormalEpoch + normalEpochIndex;\n      const slotIndex = normalSlotIndex % this.slotsPerEpoch;\n      return [epoch, slotIndex];\n    }\n  }\n\n  getFirstSlotInEpoch(epoch: number): number {\n    if (epoch <= this.firstNormalEpoch) {\n      return (Math.pow(2, epoch) - 1) * MINIMUM_SLOT_PER_EPOCH;\n    } else {\n      return (\n        (epoch - this.firstNormalEpoch) * this.slotsPerEpoch +\n        this.firstNormalSlot\n      );\n    }\n  }\n\n  getLastSlotInEpoch(epoch: number): number {\n    return this.getFirstSlotInEpoch(epoch) + this.getSlotsInEpoch(epoch) - 1;\n  }\n\n  getSlotsInEpoch(epoch: number) {\n    if (epoch < this.firstNormalEpoch) {\n      return Math.pow(2, epoch + trailingZeros(MINIMUM_SLOT_PER_EPOCH));\n    } else {\n      return this.slotsPerEpoch;\n    }\n  }\n}\n","export class SendTransactionError extends Error {\n  logs: string[] | undefined;\n\n  constructor(message: string, logs?: string[]) {\n    super(message);\n\n    this.logs = logs;\n  }\n}\n","import bs58 from 'bs58';\nimport {Buffer} from 'buffer';\nimport fetch from 'cross-fetch';\nimport {\n  type as pick,\n  number,\n  string,\n  array,\n  boolean,\n  literal,\n  record,\n  union,\n  optional,\n  nullable,\n  coerce,\n  instance,\n  create,\n  tuple,\n  unknown,\n  any,\n} from 'superstruct';\nimport type {Struct} from 'superstruct';\nimport {Client as RpcWebSocketClient} from 'rpc-websockets';\nimport RpcClient from 'jayson/lib/client/browser';\nimport {IWSRequestParams} from 'rpc-websockets/dist/lib/client';\n\nimport {AgentManager} from './agent-manager';\nimport {EpochSchedule} from './epoch-schedule';\nimport {SendTransactionError} from './errors';\nimport {NonceAccount} from './nonce-account';\nimport {PublicKey} from './publickey';\nimport {Signer} from './keypair';\nimport {MS_PER_SLOT} from './timing';\nimport {Transaction} from './transaction';\nimport {Message} from './message';\nimport assert from './util/assert';\nimport {sleep} from './util/sleep';\nimport {promiseTimeout} from './util/promise-timeout';\nimport {toBuffer} from './util/to-buffer';\nimport {makeWebsocketUrl} from './util/url';\nimport type {Blockhash} from './blockhash';\nimport type {FeeCalculator} from './fee-calculator';\nimport type {TransactionSignature} from './transaction';\nimport type {CompiledInstruction} from './message';\n\nconst PublicKeyFromString = coerce(\n  instance(PublicKey),\n  string(),\n  value => new PublicKey(value),\n);\n\nconst RawAccountDataResult = tuple([string(), literal('base64')]);\n\nconst BufferFromRawAccountData = coerce(\n  instance(Buffer),\n  RawAccountDataResult,\n  value => Buffer.from(value[0], 'base64'),\n);\n\n/**\n * Attempt to use a recent blockhash for up to 30 seconds\n * @internal\n */\nexport const BLOCKHASH_CACHE_TIMEOUT_MS = 30 * 1000;\n\ntype RpcRequest = (methodName: string, args: Array<any>) => any;\n\ntype RpcBatchRequest = (requests: RpcParams[]) => any;\n\n/**\n * @internal\n */\nexport type RpcParams = {\n  methodName: string;\n  args: Array<any>;\n};\n\nexport type TokenAccountsFilter =\n  | {\n      mint: PublicKey;\n    }\n  | {\n      programId: PublicKey;\n    };\n\n/**\n * Extra contextual information for RPC responses\n */\nexport type Context = {\n  slot: number;\n};\n\n/**\n * Options for sending transactions\n */\nexport type SendOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for confirming transactions\n */\nexport type ConfirmOptions = {\n  /** disable transaction verification step */\n  skipPreflight?: boolean;\n  /** desired commitment level */\n  commitment?: Commitment;\n  /** preflight commitment level */\n  preflightCommitment?: Commitment;\n  /** Maximum number of times for the RPC node to retry sending the transaction to the leader. */\n  maxRetries?: number;\n};\n\n/**\n * Options for getConfirmedSignaturesForAddress2\n */\nexport type ConfirmedSignaturesForAddress2Options = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * Options for getSignaturesForAddress\n */\nexport type SignaturesForAddressOptions = {\n  /**\n   * Start searching backwards from this transaction signature.\n   * @remark If not provided the search starts from the highest max confirmed block.\n   */\n  before?: TransactionSignature;\n  /** Search until this transaction signature is reached, if found before `limit`. */\n  until?: TransactionSignature;\n  /** Maximum transaction signatures to return (between 1 and 1,000, default: 1,000). */\n  limit?: number;\n};\n\n/**\n * RPC Response with extra contextual information\n */\nexport type RpcResponseAndContext<T> = {\n  /** response context */\n  context: Context;\n  /** response value */\n  value: T;\n};\n\n/**\n * @internal\n */\nfunction createRpcResult<T, U>(result: Struct<T, U>) {\n  return union([\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      result,\n    }),\n    pick({\n      jsonrpc: literal('2.0'),\n      id: string(),\n      error: pick({\n        code: unknown(),\n        message: string(),\n        data: optional(any()),\n      }),\n    }),\n  ]);\n}\n\nconst UnknownRpcResult = createRpcResult(unknown());\n\n/**\n * @internal\n */\nfunction jsonRpcResult<T, U>(schema: Struct<T, U>) {\n  return coerce(createRpcResult(schema), UnknownRpcResult, value => {\n    if ('error' in value) {\n      return value;\n    } else {\n      return {\n        ...value,\n        result: create(value.result, schema),\n      };\n    }\n  });\n}\n\n/**\n * @internal\n */\nfunction jsonRpcResultAndContext<T, U>(value: Struct<T, U>) {\n  return jsonRpcResult(\n    pick({\n      context: pick({\n        slot: number(),\n      }),\n      value,\n    }),\n  );\n}\n\n/**\n * @internal\n */\nfunction notificationResultAndContext<T, U>(value: Struct<T, U>) {\n  return pick({\n    context: pick({\n      slot: number(),\n    }),\n    value,\n  });\n}\n\n/**\n * The level of commitment desired when querying state\n * <pre>\n *   'processed': Query the most recent block which has reached 1 confirmation by the connected node\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Commitment =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized'\n  | 'recent' // Deprecated as of v1.5.5\n  | 'single' // Deprecated as of v1.5.5\n  | 'singleGossip' // Deprecated as of v1.5.5\n  | 'root' // Deprecated as of v1.5.5\n  | 'max'; // Deprecated as of v1.5.5\n\n/**\n * A subset of Commitment levels, which are at least optimistically confirmed\n * <pre>\n *   'confirmed': Query the most recent block which has reached 1 confirmation by the cluster\n *   'finalized': Query the most recent block which has been finalized by the cluster\n * </pre>\n */\nexport type Finality = 'confirmed' | 'finalized';\n\n/**\n * Filter for largest accounts query\n * <pre>\n *   'circulating':    Return the largest accounts that are part of the circulating supply\n *   'nonCirculating': Return the largest accounts that are not part of the circulating supply\n * </pre>\n */\nexport type LargestAccountsFilter = 'circulating' | 'nonCirculating';\n\n/**\n * Configuration object for changing `getLargestAccounts` query behavior\n */\nexport type GetLargestAccountsConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Filter largest accounts by whether they are part of the circulating supply */\n  filter?: LargestAccountsFilter;\n};\n\n/**\n * Configuration object for changing `getSupply` request behavior\n */\nexport type GetSupplyConfig = {\n  /** The level of commitment desired */\n  commitment?: Commitment;\n  /** Exclude non circulating accounts list from response */\n  excludeNonCirculatingAccountsList?: boolean;\n};\n\n/**\n * Configuration object for changing query behavior\n */\nexport type SignatureStatusConfig = {\n  /** enable searching status history, not needed for recent transactions */\n  searchTransactionHistory: boolean;\n};\n\n/**\n * Information describing a cluster node\n */\nexport type ContactInfo = {\n  /** Identity public key of the node */\n  pubkey: string;\n  /** Gossip network address for the node */\n  gossip: string | null;\n  /** TPU network address for the node (null if not available) */\n  tpu: string | null;\n  /** JSON RPC network address for the node (null if not available) */\n  rpc: string | null;\n  /** Software version of the node (null if not available) */\n  version: string | null;\n};\n\n/**\n * Information describing a vote account\n */\nexport type VoteAccountInfo = {\n  /** Public key of the vote account */\n  votePubkey: string;\n  /** Identity public key of the node voting with this account */\n  nodePubkey: string;\n  /** The stake, in lamports, delegated to this vote account and activated */\n  activatedStake: number;\n  /** Whether the vote account is staked for this epoch */\n  epochVoteAccount: boolean;\n  /** Recent epoch voting credit history for this voter */\n  epochCredits: Array<[number, number, number]>;\n  /** A percentage (0-100) of rewards payout owed to the voter */\n  commission: number;\n  /** Most recent slot voted on by this vote account */\n  lastVote: number;\n};\n\n/**\n * A collection of cluster vote accounts\n */\nexport type VoteAccountStatus = {\n  /** Active vote accounts */\n  current: Array<VoteAccountInfo>;\n  /** Inactive vote accounts */\n  delinquent: Array<VoteAccountInfo>;\n};\n\n/**\n * Network Inflation\n * (see https://docs.solana.com/implemented-proposals/ed_overview)\n */\nexport type InflationGovernor = {\n  foundation: number;\n  foundationTerm: number;\n  initial: number;\n  taper: number;\n  terminal: number;\n};\n\nconst GetInflationGovernorResult = pick({\n  foundation: number(),\n  foundationTerm: number(),\n  initial: number(),\n  taper: number(),\n  terminal: number(),\n});\n\n/**\n * The inflation reward for an epoch\n */\nexport type InflationReward = {\n  /** epoch for which the reward occurs */\n  epoch: number;\n  /** the slot in which the rewards are effective */\n  effectiveSlot: number;\n  /** reward amount in lamports */\n  amount: number;\n  /** post balance of the account in lamports */\n  postBalance: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getInflationReward\" message\n */\nconst GetInflationRewardResult = jsonRpcResult(\n  array(\n    nullable(\n      pick({\n        epoch: number(),\n        effectiveSlot: number(),\n        amount: number(),\n        postBalance: number(),\n      }),\n    ),\n  ),\n);\n\n/**\n * Information about the current epoch\n */\nexport type EpochInfo = {\n  epoch: number;\n  slotIndex: number;\n  slotsInEpoch: number;\n  absoluteSlot: number;\n  blockHeight?: number;\n  transactionCount?: number;\n};\n\nconst GetEpochInfoResult = pick({\n  epoch: number(),\n  slotIndex: number(),\n  slotsInEpoch: number(),\n  absoluteSlot: number(),\n  blockHeight: optional(number()),\n  transactionCount: optional(number()),\n});\n\nconst GetEpochScheduleResult = pick({\n  slotsPerEpoch: number(),\n  leaderScheduleSlotOffset: number(),\n  warmup: boolean(),\n  firstNormalEpoch: number(),\n  firstNormalSlot: number(),\n});\n\n/**\n * Leader schedule\n * (see https://docs.solana.com/terminology#leader-schedule)\n */\nexport type LeaderSchedule = {\n  [address: string]: number[];\n};\n\nconst GetLeaderScheduleResult = record(string(), array(number()));\n\n/**\n * Transaction error or null\n */\nconst TransactionErrorResult = nullable(union([pick({}), string()]));\n\n/**\n * Signature status for a transaction\n */\nconst SignatureStatusResult = pick({\n  err: TransactionErrorResult,\n});\n\n/**\n * Transaction signature received notification\n */\nconst SignatureReceivedResult = literal('receivedSignature');\n\n/**\n * Version info for a node\n */\nexport type Version = {\n  /** Version of solana-core */\n  'solana-core': string;\n  'feature-set'?: number;\n};\n\nconst VersionResult = pick({\n  'solana-core': string(),\n  'feature-set': optional(number()),\n});\n\nexport type SimulatedTransactionAccountInfo = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: string;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: string[];\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\nexport type SimulatedTransactionResponse = {\n  err: TransactionError | string | null;\n  logs: Array<string> | null;\n  accounts?: (SimulatedTransactionAccountInfo | null)[] | null;\n  unitsConsumed?: number;\n};\n\nconst SimulatedTransactionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    err: nullable(union([pick({}), string()])),\n    logs: nullable(array(string())),\n    accounts: optional(\n      nullable(\n        array(\n          nullable(\n            pick({\n              executable: boolean(),\n              owner: string(),\n              lamports: number(),\n              data: array(string()),\n              rentEpoch: optional(number()),\n            }),\n          ),\n        ),\n      ),\n    ),\n    unitsConsumed: optional(number()),\n  }),\n);\n\nexport type ParsedInnerInstruction = {\n  index: number;\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n};\n\nexport type TokenBalance = {\n  accountIndex: number;\n  mint: string;\n  owner?: string;\n  uiTokenAmount: TokenAmount;\n};\n\n/**\n * Metadata for a parsed confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionMeta} instead.\n */\nexport type ParsedConfirmedTransactionMeta = ParsedTransactionMeta;\n\n/**\n * Metadata for a parsed transaction on the ledger\n */\nexport type ParsedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked parsed instructions */\n  innerInstructions?: ParsedInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\nexport type CompiledInnerInstruction = {\n  index: number;\n  instructions: CompiledInstruction[];\n};\n\n/**\n * Metadata for a confirmed transaction on the ledger\n */\nexport type ConfirmedTransactionMeta = {\n  /** The fee charged for processing the transaction */\n  fee: number;\n  /** An array of cross program invoked instructions */\n  innerInstructions?: CompiledInnerInstruction[] | null;\n  /** The balances of the transaction accounts before processing */\n  preBalances: Array<number>;\n  /** The balances of the transaction accounts after processing */\n  postBalances: Array<number>;\n  /** An array of program log messages emitted during a transaction */\n  logMessages?: Array<string> | null;\n  /** The token balances of the transaction accounts before processing */\n  preTokenBalances?: Array<TokenBalance> | null;\n  /** The token balances of the transaction accounts after processing */\n  postTokenBalances?: Array<TokenBalance> | null;\n  /** The error result of transaction processing */\n  err: TransactionError | null;\n};\n\n/**\n * A processed transaction from the RPC API\n */\nexport type TransactionResponse = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The transaction */\n  transaction: {\n    /** The transaction message */\n    message: Message;\n    /** The transaction signatures */\n    signatures: string[];\n  };\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A confirmed transaction on the ledger\n */\nexport type ConfirmedTransaction = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: Transaction;\n  /** Metadata produced from the transaction */\n  meta: ConfirmedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A partially decoded transaction instruction\n */\nexport type PartiallyDecodedInstruction = {\n  /** Program id called by this instruction */\n  programId: PublicKey;\n  /** Public keys of accounts passed to this instruction */\n  accounts: Array<PublicKey>;\n  /** Raw base-58 instruction data */\n  data: string;\n};\n\n/**\n * A parsed transaction message account\n */\nexport type ParsedMessageAccount = {\n  /** Public key of the account */\n  pubkey: PublicKey;\n  /** Indicates if the account signed the transaction */\n  signer: boolean;\n  /** Indicates if the account is writable for this transaction */\n  writable: boolean;\n};\n\n/**\n * A parsed transaction instruction\n */\nexport type ParsedInstruction = {\n  /** Name of the program for this instruction */\n  program: string;\n  /** ID of the program for this instruction */\n  programId: PublicKey;\n  /** Parsed instruction info */\n  parsed: any;\n};\n\n/**\n * A parsed transaction message\n */\nexport type ParsedMessage = {\n  /** Accounts used in the instructions */\n  accountKeys: ParsedMessageAccount[];\n  /** The atomically executed instructions for the transaction */\n  instructions: (ParsedInstruction | PartiallyDecodedInstruction)[];\n  /** Recent blockhash */\n  recentBlockhash: string;\n};\n\n/**\n * A parsed transaction\n */\nexport type ParsedTransaction = {\n  /** Signatures for the transaction */\n  signatures: Array<string>;\n  /** Message of the transaction */\n  message: ParsedMessage;\n};\n\n/**\n * A parsed and confirmed transaction on the ledger\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link ParsedTransactionWithMeta} instead.\n */\nexport type ParsedConfirmedTransaction = ParsedTransactionWithMeta;\n\n/**\n * A parsed transaction on the ledger with meta\n */\nexport type ParsedTransactionWithMeta = {\n  /** The slot during which the transaction was processed */\n  slot: number;\n  /** The details of the transaction */\n  transaction: ParsedTransaction;\n  /** Metadata produced from the transaction */\n  meta: ParsedTransactionMeta | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * A processed block fetched from the RPC API\n */\nexport type BlockResponse = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions with status meta and original message */\n  transactions: Array<{\n    /** The transaction */\n    transaction: {\n      /** The transaction message */\n      message: Message;\n      /** The transaction signatures */\n      signatures: string[];\n    };\n    /** Metadata produced from the transaction */\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    /** Public key of reward recipient */\n    pubkey: string;\n    /** Reward value in lamports */\n    lamports: number;\n    /** Account balance after reward is applied */\n    postBalance: number | null;\n    /** Type of reward received */\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A ConfirmedBlock on the ledger\n */\nexport type ConfirmedBlock = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of transactions and status metas */\n  transactions: Array<{\n    transaction: Transaction;\n    meta: ConfirmedTransactionMeta | null;\n  }>;\n  /** Vector of block rewards */\n  rewards?: Array<{\n    pubkey: string;\n    lamports: number;\n    postBalance: number | null;\n    rewardType: string | null;\n  }>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * A Block on the ledger with signatures only\n */\nexport type BlockSignatures = {\n  /** Blockhash of this block */\n  blockhash: Blockhash;\n  /** Blockhash of this block's parent */\n  previousBlockhash: Blockhash;\n  /** Slot index of this block's parent */\n  parentSlot: number;\n  /** Vector of signatures */\n  signatures: Array<string>;\n  /** The unix timestamp of when the block was processed */\n  blockTime: number | null;\n};\n\n/**\n * recent block production information\n */\nexport type BlockProduction = Readonly<{\n  /** a dictionary of validator identities, as base-58 encoded strings. Value is a two element array containing the number of leader slots and the number of blocks produced */\n  byIdentity: Readonly<Record<string, ReadonlyArray<number>>>;\n  /** Block production slot range */\n  range: Readonly<{\n    /** first slot of the block production information (inclusive) */\n    firstSlot: number;\n    /** last slot of block production information (inclusive) */\n    lastSlot: number;\n  }>;\n}>;\n\nexport type GetBlockProductionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Slot range to return block production for. If parameter not provided, defaults to current epoch. */\n  range?: {\n    /** first slot to return block production information for (inclusive) */\n    firstSlot: number;\n    /** last slot to return block production information for (inclusive). If parameter not provided, defaults to the highest slot */\n    lastSlot?: number;\n  };\n  /** Only return results for this validator identity (base-58 encoded) */\n  identity?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getBlockProduction\" message\n */\nconst BlockProductionResponseStruct = jsonRpcResultAndContext(\n  pick({\n    byIdentity: record(string(), array(number())),\n    range: pick({\n      firstSlot: number(),\n      lastSlot: number(),\n    }),\n  }),\n);\n\n/**\n * A performance sample\n */\nexport type PerfSample = {\n  /** Slot number of sample */\n  slot: number;\n  /** Number of transactions in a sample window */\n  numTransactions: number;\n  /** Number of slots in a sample window */\n  numSlots: number;\n  /** Sample window in seconds */\n  samplePeriodSecs: number;\n};\n\nfunction createRpcClient(\n  url: string,\n  useHttps: boolean,\n  httpHeaders?: HttpHeaders,\n  fetchMiddleware?: FetchMiddleware,\n  disableRetryOnRateLimit?: boolean,\n): RpcClient {\n  let agentManager: AgentManager | undefined;\n  if (!process.env.BROWSER) {\n    agentManager = new AgentManager(useHttps);\n  }\n\n  let fetchWithMiddleware:\n    | ((url: string, options: any) => Promise<Response>)\n    | undefined;\n\n  if (fetchMiddleware) {\n    fetchWithMiddleware = async (url: string, options: any) => {\n      const modifiedFetchArgs = await new Promise<[string, any]>(\n        (resolve, reject) => {\n          try {\n            fetchMiddleware(url, options, (modifiedUrl, modifiedOptions) =>\n              resolve([modifiedUrl, modifiedOptions]),\n            );\n          } catch (error) {\n            reject(error);\n          }\n        },\n      );\n      return await fetch(...modifiedFetchArgs);\n    };\n  }\n\n  const clientBrowser = new RpcClient(async (request, callback) => {\n    const agent = agentManager ? agentManager.requestStart() : undefined;\n    const options = {\n      method: 'POST',\n      body: request,\n      agent,\n      headers: Object.assign(\n        {\n          'Content-Type': 'application/json',\n        },\n        httpHeaders || {},\n      ),\n    };\n\n    try {\n      let too_many_requests_retries = 5;\n      let res: Response;\n      let waitTime = 500;\n      for (;;) {\n        if (fetchWithMiddleware) {\n          res = await fetchWithMiddleware(url, options);\n        } else {\n          res = await fetch(url, options);\n        }\n\n        if (res.status !== 429 /* Too many requests */) {\n          break;\n        }\n        if (disableRetryOnRateLimit === true) {\n          break;\n        }\n        too_many_requests_retries -= 1;\n        if (too_many_requests_retries === 0) {\n          break;\n        }\n        console.log(\n          `Server responded with ${res.status} ${res.statusText}.  Retrying after ${waitTime}ms delay...`,\n        );\n        await sleep(waitTime);\n        waitTime *= 2;\n      }\n\n      const text = await res.text();\n      if (res.ok) {\n        callback(null, text);\n      } else {\n        callback(new Error(`${res.status} ${res.statusText}: ${text}`));\n      }\n    } catch (err) {\n      if (err instanceof Error) callback(err);\n    } finally {\n      agentManager && agentManager.requestEnd();\n    }\n  }, {});\n\n  return clientBrowser;\n}\n\nfunction createRpcRequest(client: RpcClient): RpcRequest {\n  return (method, args) => {\n    return new Promise((resolve, reject) => {\n      client.request(method, args, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\nfunction createRpcBatchRequest(client: RpcClient): RpcBatchRequest {\n  return (requests: RpcParams[]) => {\n    return new Promise((resolve, reject) => {\n      // Do nothing if requests is empty\n      if (requests.length === 0) resolve([]);\n\n      const batch = requests.map((params: RpcParams) => {\n        return client.request(params.methodName, params.args);\n      });\n\n      client.request(batch, (err: any, response: any) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        resolve(response);\n      });\n    });\n  };\n}\n\n/**\n * Expected JSON RPC response for the \"getInflationGovernor\" message\n */\nconst GetInflationGovernorRpcResult = jsonRpcResult(GetInflationGovernorResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochInfo\" message\n */\nconst GetEpochInfoRpcResult = jsonRpcResult(GetEpochInfoResult);\n\n/**\n * Expected JSON RPC response for the \"getEpochSchedule\" message\n */\nconst GetEpochScheduleRpcResult = jsonRpcResult(GetEpochScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"getLeaderSchedule\" message\n */\nconst GetLeaderScheduleRpcResult = jsonRpcResult(GetLeaderScheduleResult);\n\n/**\n * Expected JSON RPC response for the \"minimumLedgerSlot\" and \"getFirstAvailableBlock\" messages\n */\nconst SlotRpcResult = jsonRpcResult(number());\n\n/**\n * Supply\n */\nexport type Supply = {\n  /** Total supply in lamports */\n  total: number;\n  /** Circulating supply in lamports */\n  circulating: number;\n  /** Non-circulating supply in lamports */\n  nonCirculating: number;\n  /** List of non-circulating account addresses */\n  nonCirculatingAccounts: Array<PublicKey>;\n};\n\n/**\n * Expected JSON RPC response for the \"getSupply\" message\n */\nconst GetSupplyRpcResult = jsonRpcResultAndContext(\n  pick({\n    total: number(),\n    circulating: number(),\n    nonCirculating: number(),\n    nonCirculatingAccounts: array(PublicKeyFromString),\n  }),\n);\n\n/**\n * Token amount object which returns a token amount in different formats\n * for various client use cases.\n */\nexport type TokenAmount = {\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC structure for token amounts\n */\nconst TokenAmountResult = pick({\n  amount: string(),\n  uiAmount: nullable(number()),\n  decimals: number(),\n  uiAmountString: optional(string()),\n});\n\n/**\n * Token address and balance.\n */\nexport type TokenAccountBalancePair = {\n  /** Address of the token account */\n  address: PublicKey;\n  /** Raw amount of tokens as string ignoring decimals */\n  amount: string;\n  /** Number of decimals configured for token's mint */\n  decimals: number;\n  /** Token amount as float, accounts for decimals */\n  uiAmount: number | null;\n  /** Token amount as string, accounts for decimals */\n  uiAmountString?: string;\n};\n\n/**\n * Expected JSON RPC response for the \"getTokenLargestAccounts\" message\n */\nconst GetTokenLargestAccountsResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      address: PublicKeyFromString,\n      amount: string(),\n      uiAmount: nullable(number()),\n      decimals: number(),\n      uiAmountString: optional(string()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message\n */\nconst GetTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: BufferFromRawAccountData,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\nconst ParsedAccountDataResult = pick({\n  program: string(),\n  parsed: unknown(),\n  space: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getTokenAccountsByOwner\" message with parsed data\n */\nconst GetParsedTokenAccountsByOwner = jsonRpcResultAndContext(\n  array(\n    pick({\n      pubkey: PublicKeyFromString,\n      account: pick({\n        executable: boolean(),\n        owner: PublicKeyFromString,\n        lamports: number(),\n        data: ParsedAccountDataResult,\n        rentEpoch: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Pair of an account address and its balance\n */\nexport type AccountBalancePair = {\n  address: PublicKey;\n  lamports: number;\n};\n\n/**\n * Expected JSON RPC response for the \"getLargestAccounts\" message\n */\nconst GetLargestAccountsRpcResult = jsonRpcResultAndContext(\n  array(\n    pick({\n      lamports: number(),\n      address: PublicKeyFromString,\n    }),\n  ),\n);\n\n/**\n * @internal\n */\nconst AccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: BufferFromRawAccountData,\n  rentEpoch: number(),\n});\n\n/**\n * @internal\n */\nconst KeyedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\nconst ParsedOrRawAccountData = coerce(\n  union([instance(Buffer), ParsedAccountDataResult]),\n  union([RawAccountDataResult, ParsedAccountDataResult]),\n  value => {\n    if (Array.isArray(value)) {\n      return create(value, BufferFromRawAccountData);\n    } else {\n      return value;\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedAccountInfoResult = pick({\n  executable: boolean(),\n  owner: PublicKeyFromString,\n  lamports: number(),\n  data: ParsedOrRawAccountData,\n  rentEpoch: number(),\n});\n\nconst KeyedParsedAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: ParsedAccountInfoResult,\n});\n\n/**\n * @internal\n */\nconst StakeActivationResult = pick({\n  state: union([\n    literal('active'),\n    literal('inactive'),\n    literal('activating'),\n    literal('deactivating'),\n  ]),\n  active: number(),\n  inactive: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"getConfirmedSignaturesForAddress2\" message\n */\n\nconst GetConfirmedSignaturesForAddress2RpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getSignaturesForAddress\" message\n */\nconst GetSignaturesForAddressRpcResult = jsonRpcResult(\n  array(\n    pick({\n      signature: string(),\n      slot: number(),\n      err: TransactionErrorResult,\n      memo: nullable(string()),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/***\n * Expected JSON RPC response for the \"accountNotification\" message\n */\nconst AccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(AccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst ProgramAccountInfoResult = pick({\n  pubkey: PublicKeyFromString,\n  account: AccountInfoResult,\n});\n\n/***\n * Expected JSON RPC response for the \"programNotification\" message\n */\nconst ProgramAccountNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(ProgramAccountInfoResult),\n});\n\n/**\n * @internal\n */\nconst SlotInfoResult = pick({\n  parent: number(),\n  slot: number(),\n  root: number(),\n});\n\n/**\n * Expected JSON RPC response for the \"slotNotification\" message\n */\nconst SlotNotificationResult = pick({\n  subscription: number(),\n  result: SlotInfoResult,\n});\n\n/**\n * Slot updates which can be used for tracking the live progress of a cluster.\n * - `\"firstShredReceived\"`: connected node received the first shred of a block.\n * Indicates that a new block that is being produced.\n * - `\"completed\"`: connected node has received all shreds of a block. Indicates\n * a block was recently produced.\n * - `\"optimisticConfirmation\"`: block was optimistically confirmed by the\n * cluster. It is not guaranteed that an optimistic confirmation notification\n * will be sent for every finalized blocks.\n * - `\"root\"`: the connected node rooted this block.\n * - `\"createdBank\"`: the connected node has started validating this block.\n * - `\"frozen\"`: the connected node has validated this block.\n * - `\"dead\"`: the connected node failed to validate this block.\n */\nexport type SlotUpdate =\n  | {\n      type: 'firstShredReceived';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'completed';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'createdBank';\n      slot: number;\n      timestamp: number;\n      parent: number;\n    }\n  | {\n      type: 'frozen';\n      slot: number;\n      timestamp: number;\n      stats: {\n        numTransactionEntries: number;\n        numSuccessfulTransactions: number;\n        numFailedTransactions: number;\n        maxTransactionsPerEntry: number;\n      };\n    }\n  | {\n      type: 'dead';\n      slot: number;\n      timestamp: number;\n      err: string;\n    }\n  | {\n      type: 'optimisticConfirmation';\n      slot: number;\n      timestamp: number;\n    }\n  | {\n      type: 'root';\n      slot: number;\n      timestamp: number;\n    };\n\n/**\n * @internal\n */\nconst SlotUpdateResult = union([\n  pick({\n    type: union([\n      literal('firstShredReceived'),\n      literal('completed'),\n      literal('optimisticConfirmation'),\n      literal('root'),\n    ]),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('createdBank'),\n    parent: number(),\n    slot: number(),\n    timestamp: number(),\n  }),\n  pick({\n    type: literal('frozen'),\n    slot: number(),\n    timestamp: number(),\n    stats: pick({\n      numTransactionEntries: number(),\n      numSuccessfulTransactions: number(),\n      numFailedTransactions: number(),\n      maxTransactionsPerEntry: number(),\n    }),\n  }),\n  pick({\n    type: literal('dead'),\n    slot: number(),\n    timestamp: number(),\n    err: string(),\n  }),\n]);\n\n/**\n * Expected JSON RPC response for the \"slotsUpdatesNotification\" message\n */\nconst SlotUpdateNotificationResult = pick({\n  subscription: number(),\n  result: SlotUpdateResult,\n});\n\n/**\n * Expected JSON RPC response for the \"signatureNotification\" message\n */\nconst SignatureNotificationResult = pick({\n  subscription: number(),\n  result: notificationResultAndContext(\n    union([SignatureStatusResult, SignatureReceivedResult]),\n  ),\n});\n\n/**\n * Expected JSON RPC response for the \"rootNotification\" message\n */\nconst RootNotificationResult = pick({\n  subscription: number(),\n  result: number(),\n});\n\nconst ContactInfoResult = pick({\n  pubkey: string(),\n  gossip: nullable(string()),\n  tpu: nullable(string()),\n  rpc: nullable(string()),\n  version: nullable(string()),\n});\n\nconst VoteAccountInfoResult = pick({\n  votePubkey: string(),\n  nodePubkey: string(),\n  activatedStake: number(),\n  epochVoteAccount: boolean(),\n  epochCredits: array(tuple([number(), number(), number()])),\n  commission: number(),\n  lastVote: number(),\n  rootSlot: nullable(number()),\n});\n\n/**\n * Expected JSON RPC response for the \"getVoteAccounts\" message\n */\nconst GetVoteAccounts = jsonRpcResult(\n  pick({\n    current: array(VoteAccountInfoResult),\n    delinquent: array(VoteAccountInfoResult),\n  }),\n);\n\nconst ConfirmationStatus = union([\n  literal('processed'),\n  literal('confirmed'),\n  literal('finalized'),\n]);\n\nconst SignatureStatusResponse = pick({\n  slot: number(),\n  confirmations: nullable(number()),\n  err: TransactionErrorResult,\n  confirmationStatus: optional(ConfirmationStatus),\n});\n\n/**\n * Expected JSON RPC response for the \"getSignatureStatuses\" message\n */\nconst GetSignatureStatusesRpcResult = jsonRpcResultAndContext(\n  array(nullable(SignatureStatusResponse)),\n);\n\n/**\n * Expected JSON RPC response for the \"getMinimumBalanceForRentExemption\" message\n */\nconst GetMinimumBalanceForRentExemptionRpcResult = jsonRpcResult(number());\n\nconst ConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(string()),\n    header: pick({\n      numRequiredSignatures: number(),\n      numReadonlySignedAccounts: number(),\n      numReadonlyUnsignedAccounts: number(),\n    }),\n    instructions: array(\n      pick({\n        accounts: array(number()),\n        data: string(),\n        programIdIndex: number(),\n      }),\n    ),\n    recentBlockhash: string(),\n  }),\n});\n\nconst ParsedInstructionResult = pick({\n  parsed: unknown(),\n  program: string(),\n  programId: PublicKeyFromString,\n});\n\nconst RawInstructionResult = pick({\n  accounts: array(PublicKeyFromString),\n  data: string(),\n  programId: PublicKeyFromString,\n});\n\nconst InstructionResult = union([\n  RawInstructionResult,\n  ParsedInstructionResult,\n]);\n\nconst UnknownInstructionResult = union([\n  pick({\n    parsed: unknown(),\n    program: string(),\n    programId: string(),\n  }),\n  pick({\n    accounts: array(string()),\n    data: string(),\n    programId: string(),\n  }),\n]);\n\nconst ParsedOrRawInstruction = coerce(\n  InstructionResult,\n  UnknownInstructionResult,\n  value => {\n    if ('accounts' in value) {\n      return create(value, RawInstructionResult);\n    } else {\n      return create(value, ParsedInstructionResult);\n    }\n  },\n);\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionResult = pick({\n  signatures: array(string()),\n  message: pick({\n    accountKeys: array(\n      pick({\n        pubkey: PublicKeyFromString,\n        signer: boolean(),\n        writable: boolean(),\n      }),\n    ),\n    instructions: array(ParsedOrRawInstruction),\n    recentBlockhash: string(),\n  }),\n});\n\nconst TokenBalanceResult = pick({\n  accountIndex: number(),\n  mint: string(),\n  owner: optional(string()),\n  uiTokenAmount: TokenAmountResult,\n});\n\n/**\n * @internal\n */\nconst ConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(\n            pick({\n              accounts: array(number()),\n              data: string(),\n              programIdIndex: number(),\n            }),\n          ),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * @internal\n */\nconst ParsedConfirmedTransactionMetaResult = pick({\n  err: TransactionErrorResult,\n  fee: number(),\n  innerInstructions: optional(\n    nullable(\n      array(\n        pick({\n          index: number(),\n          instructions: array(ParsedOrRawInstruction),\n        }),\n      ),\n    ),\n  ),\n  preBalances: array(number()),\n  postBalances: array(number()),\n  logMessages: optional(nullable(array(string()))),\n  preTokenBalances: optional(nullable(array(TokenBalanceResult))),\n  postTokenBalances: optional(nullable(array(TokenBalanceResult))),\n});\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n      blockHeight: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getConfirmedBlock\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetBlockRpcResult} instead.\n */\nconst GetConfirmedBlockRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      transactions: array(\n        pick({\n          transaction: ConfirmedTransactionResult,\n          meta: nullable(ConfirmedTransactionMetaResult),\n        }),\n      ),\n      rewards: optional(\n        array(\n          pick({\n            pubkey: string(),\n            lamports: number(),\n            postBalance: nullable(number()),\n            rewardType: nullable(string()),\n          }),\n        ),\n      ),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getBlock\" message\n */\nconst GetBlockSignaturesRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      blockhash: string(),\n      previousBlockhash: string(),\n      parentSlot: number(),\n      signatures: array(string()),\n      blockTime: nullable(number()),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getTransaction\" message\n */\nconst GetTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      meta: ConfirmedTransactionMetaResult,\n      blockTime: optional(nullable(number())),\n      transaction: ConfirmedTransactionResult,\n    }),\n  ),\n);\n\n/**\n * Expected parsed JSON RPC response for the \"getTransaction\" message\n */\nconst GetParsedTransactionRpcResult = jsonRpcResult(\n  nullable(\n    pick({\n      slot: number(),\n      transaction: ParsedConfirmedTransactionResult,\n      meta: nullable(ParsedConfirmedTransactionMetaResult),\n      blockTime: optional(nullable(number())),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"getRecentBlockhash\" message\n *\n * @deprecated Deprecated since Solana v1.8.0. Please use {@link GetLatestBlockhashRpcResult} instead.\n */\nconst GetRecentBlockhashAndContextRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    feeCalculator: pick({\n      lamportsPerSignature: number(),\n    }),\n  }),\n);\n\n/**\n * Expected JSON RPC response for the \"getLatestBlockhash\" message\n */\nconst GetLatestBlockhashRpcResult = jsonRpcResultAndContext(\n  pick({\n    blockhash: string(),\n    lastValidBlockHeight: number(),\n  }),\n);\n\nconst PerfSampleResult = pick({\n  slot: number(),\n  numTransactions: number(),\n  numSlots: number(),\n  samplePeriodSecs: number(),\n});\n\n/*\n * Expected JSON RPC response for \"getRecentPerformanceSamples\" message\n */\nconst GetRecentPerformanceSamplesRpcResult = jsonRpcResult(\n  array(PerfSampleResult),\n);\n\n/**\n * Expected JSON RPC response for the \"getFeeCalculatorForBlockhash\" message\n */\nconst GetFeeCalculatorRpcResult = jsonRpcResultAndContext(\n  nullable(\n    pick({\n      feeCalculator: pick({\n        lamportsPerSignature: number(),\n      }),\n    }),\n  ),\n);\n\n/**\n * Expected JSON RPC response for the \"requestAirdrop\" message\n */\nconst RequestAirdropRpcResult = jsonRpcResult(string());\n\n/**\n * Expected JSON RPC response for the \"sendTransaction\" message\n */\nconst SendTransactionRpcResult = jsonRpcResult(string());\n\n/**\n * Information about the latest slot being processed by a node\n */\nexport type SlotInfo = {\n  /** Currently processing slot */\n  slot: number;\n  /** Parent of the current slot */\n  parent: number;\n  /** The root block of the current slot's fork */\n  root: number;\n};\n\n/**\n * Parsed account data\n */\nexport type ParsedAccountData = {\n  /** Name of the program that owns this account */\n  program: string;\n  /** Parsed account data */\n  parsed: any;\n  /** Space used by account data */\n  space: number;\n};\n\n/**\n * Stake Activation data\n */\nexport type StakeActivationData = {\n  /** the stake account's activation state */\n  state: 'active' | 'inactive' | 'activating' | 'deactivating';\n  /** stake active during the epoch */\n  active: number;\n  /** stake inactive during the epoch */\n  inactive: number;\n};\n\n/**\n * Data slice argument for getProgramAccounts\n */\nexport type DataSlice = {\n  /** offset of data slice */\n  offset: number;\n  /** length of data slice */\n  length: number;\n};\n\n/**\n * Memory comparison filter for getProgramAccounts\n */\nexport type MemcmpFilter = {\n  memcmp: {\n    /** offset into program account data to start comparison */\n    offset: number;\n    /** data to match, as base-58 encoded string and limited to less than 129 bytes */\n    bytes: string;\n  };\n};\n\n/**\n * Data size comparison filter for getProgramAccounts\n */\nexport type DataSizeFilter = {\n  /** Size of data for program account data length comparison */\n  dataSize: number;\n};\n\n/**\n * A filter object for getProgramAccounts\n */\nexport type GetProgramAccountsFilter = MemcmpFilter | DataSizeFilter;\n\n/**\n * Configuration object for getProgramAccounts requests\n */\nexport type GetProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64)\n   * To use \"jsonParsed\" encoding, please refer to `getParsedProgramAccounts` in connection.ts\n   * */\n  encoding?: 'base64';\n  /** Optional data slice to limit the returned account data */\n  dataSlice?: DataSlice;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getParsedProgramAccounts\n */\nexport type GetParsedProgramAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional array of filters to apply to accounts */\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Configuration object for getMultipleAccounts\n */\nexport type GetMultipleAccountsConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional encoding for account data (default base64) */\n  encoding?: 'base64' | 'jsonParsed';\n};\n\n/**\n * Information describing an account\n */\nexport type AccountInfo<T> = {\n  /** `true` if this account's data contains a loaded program */\n  executable: boolean;\n  /** Identifier of the program that owns the account */\n  owner: PublicKey;\n  /** Number of lamports assigned to the account */\n  lamports: number;\n  /** Optional data assigned to the account */\n  data: T;\n  /** Optional rent epoch info for account */\n  rentEpoch?: number;\n};\n\n/**\n * Account information identified by pubkey\n */\nexport type KeyedAccountInfo = {\n  accountId: PublicKey;\n  accountInfo: AccountInfo<Buffer>;\n};\n\n/**\n * Callback function for account change notifications\n */\nexport type AccountChangeCallback = (\n  accountInfo: AccountInfo<Buffer>,\n  context: Context,\n) => void;\n\n/**\n * @internal\n */\ntype SubscriptionId = 'subscribing' | number;\n\n/**\n * @internal\n */\ntype AccountSubscriptionInfo = {\n  publicKey: string; // PublicKey of the account as a base 58 string\n  callback: AccountChangeCallback;\n  commitment?: Commitment;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for program account change notifications\n */\nexport type ProgramAccountChangeCallback = (\n  keyedAccountInfo: KeyedAccountInfo,\n  context: Context,\n) => void;\n\n/**\n * @internal\n */\ntype ProgramAccountSubscriptionInfo = {\n  programId: string; // PublicKey of the program as a base 58 string\n  callback: ProgramAccountChangeCallback;\n  commitment?: Commitment;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n  filters?: GetProgramAccountsFilter[];\n};\n\n/**\n * Callback function for slot change notifications\n */\nexport type SlotChangeCallback = (slotInfo: SlotInfo) => void;\n\n/**\n * @internal\n */\ntype SlotSubscriptionInfo = {\n  callback: SlotChangeCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for slot update notifications\n */\nexport type SlotUpdateCallback = (slotUpdate: SlotUpdate) => void;\n\n/**\n * @private\n */\ntype SlotUpdateSubscriptionInfo = {\n  callback: SlotUpdateCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for signature status notifications\n */\nexport type SignatureResultCallback = (\n  signatureResult: SignatureResult,\n  context: Context,\n) => void;\n\n/**\n * Signature status notification with transaction result\n */\nexport type SignatureStatusNotification = {\n  type: 'status';\n  result: SignatureResult;\n};\n\n/**\n * Signature received notification\n */\nexport type SignatureReceivedNotification = {\n  type: 'received';\n};\n\n/**\n * Callback function for signature notifications\n */\nexport type SignatureSubscriptionCallback = (\n  notification: SignatureStatusNotification | SignatureReceivedNotification,\n  context: Context,\n) => void;\n\n/**\n * Signature subscription options\n */\nexport type SignatureSubscriptionOptions = {\n  commitment?: Commitment;\n  enableReceivedNotification?: boolean;\n};\n\n/**\n * @internal\n */\ntype SignatureSubscriptionInfo = {\n  signature: TransactionSignature; // TransactionSignature as a base 58 string\n  callback: SignatureSubscriptionCallback;\n  options?: SignatureSubscriptionOptions;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * Callback function for root change notifications\n */\nexport type RootChangeCallback = (root: number) => void;\n\n/**\n * @internal\n */\ntype RootSubscriptionInfo = {\n  callback: RootChangeCallback;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n};\n\n/**\n * @internal\n */\nconst LogsResult = pick({\n  err: TransactionErrorResult,\n  logs: array(string()),\n  signature: string(),\n});\n\n/**\n * Logs result.\n */\nexport type Logs = {\n  err: TransactionError | null;\n  logs: string[];\n  signature: string;\n};\n\n/**\n * Expected JSON RPC response for the \"logsNotification\" message.\n */\nconst LogsNotificationResult = pick({\n  result: notificationResultAndContext(LogsResult),\n  subscription: number(),\n});\n\n/**\n * Filter for log subscriptions.\n */\nexport type LogsFilter = PublicKey | 'all' | 'allWithVotes';\n\n/**\n * Callback function for log notifications.\n */\nexport type LogsCallback = (logs: Logs, ctx: Context) => void;\n\n/**\n * @private\n */\ntype LogsSubscriptionInfo = {\n  callback: LogsCallback;\n  filter: LogsFilter;\n  subscriptionId: SubscriptionId | null; // null when there's no current server subscription id\n  commitment?: Commitment;\n};\n\n/**\n * Signature result\n */\nexport type SignatureResult = {\n  err: TransactionError | null;\n};\n\n/**\n * Transaction error\n */\nexport type TransactionError = {} | string;\n\n/**\n * Transaction confirmation status\n * <pre>\n *   'processed': Transaction landed in a block which has reached 1 confirmation by the connected node\n *   'confirmed': Transaction landed in a block which has reached 1 confirmation by the cluster\n *   'finalized': Transaction landed in a block which has been finalized by the cluster\n * </pre>\n */\nexport type TransactionConfirmationStatus =\n  | 'processed'\n  | 'confirmed'\n  | 'finalized';\n\n/**\n * Signature status\n */\nexport type SignatureStatus = {\n  /** when the transaction was processed */\n  slot: number;\n  /** the number of blocks that have been confirmed and voted on in the fork containing `slot` */\n  confirmations: number | null;\n  /** transaction error, if any */\n  err: TransactionError | null;\n  /** cluster confirmation status, if data available. Possible responses: `processed`, `confirmed`, `finalized` */\n  confirmationStatus?: TransactionConfirmationStatus;\n};\n\n/**\n * A confirmed signature with its status\n */\nexport type ConfirmedSignatureInfo = {\n  /** the transaction signature */\n  signature: string;\n  /** when the transaction was processed */\n  slot: number;\n  /** error, if any */\n  err: TransactionError | null;\n  /** memo associated with the transaction, if any */\n  memo: string | null;\n  /** The unix timestamp of when the transaction was processed */\n  blockTime?: number | null;\n};\n\n/**\n * An object defining headers to be passed to the RPC server\n */\nexport type HttpHeaders = {[header: string]: string};\n\n/**\n * A callback used to augment the outgoing HTTP request\n */\nexport type FetchMiddleware = (\n  url: string,\n  options: any,\n  fetch: (modifiedUrl: string, modifiedOptions: any) => void,\n) => void;\n\n/**\n * Configuration for instantiating a Connection\n */\nexport type ConnectionConfig = {\n  /** Optional commitment level */\n  commitment?: Commitment;\n  /** Optional endpoint URL to the fullnode JSON RPC PubSub WebSocket Endpoint */\n  wsEndpoint?: string;\n  /** Optional HTTP headers object */\n  httpHeaders?: HttpHeaders;\n  /** Optional fetch middleware callback */\n  fetchMiddleware?: FetchMiddleware;\n  /** Optional Disable retrying calls when server responds with HTTP 429 (Too Many Requests) */\n  disableRetryOnRateLimit?: boolean;\n  /** time to allow for the server to initially process a transaction (in milliseconds) */\n  confirmTransactionInitialTimeout?: number;\n};\n\n/**\n * A connection to a fullnode JSON RPC endpoint\n */\nexport class Connection {\n  /** @internal */ _commitment?: Commitment;\n  /** @internal */ _confirmTransactionInitialTimeout?: number;\n  /** @internal */ _rpcEndpoint: string;\n  /** @internal */ _rpcWsEndpoint: string;\n  /** @internal */ _rpcClient: RpcClient;\n  /** @internal */ _rpcRequest: RpcRequest;\n  /** @internal */ _rpcBatchRequest: RpcBatchRequest;\n  /** @internal */ _rpcWebSocket: RpcWebSocketClient;\n  /** @internal */ _rpcWebSocketConnected: boolean = false;\n  /** @internal */ _rpcWebSocketHeartbeat: ReturnType<\n    typeof setInterval\n  > | null = null;\n  /** @internal */ _rpcWebSocketIdleTimeout: ReturnType<\n    typeof setTimeout\n  > | null = null;\n\n  /** @internal */ _disableBlockhashCaching: boolean = false;\n  /** @internal */ _pollingBlockhash: boolean = false;\n  /** @internal */ _blockhashInfo: {\n    recentBlockhash: Blockhash | null;\n    lastFetch: number;\n    simulatedSignatures: Array<string>;\n    transactionSignatures: Array<string>;\n  } = {\n    recentBlockhash: null,\n    lastFetch: 0,\n    transactionSignatures: [],\n    simulatedSignatures: [],\n  };\n\n  /** @internal */ _accountChangeSubscriptionCounter: number = 0;\n  /** @internal */ _accountChangeSubscriptions: {\n    [id: number]: AccountSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _programAccountChangeSubscriptionCounter: number = 0;\n  /** @internal */ _programAccountChangeSubscriptions: {\n    [id: number]: ProgramAccountSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _rootSubscriptionCounter: number = 0;\n  /** @internal */ _rootSubscriptions: {\n    [id: number]: RootSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _signatureSubscriptionCounter: number = 0;\n  /** @internal */ _signatureSubscriptions: {\n    [id: number]: SignatureSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _slotSubscriptionCounter: number = 0;\n  /** @internal */ _slotSubscriptions: {\n    [id: number]: SlotSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _logsSubscriptionCounter: number = 0;\n  /** @internal */ _logsSubscriptions: {\n    [id: number]: LogsSubscriptionInfo;\n  } = {};\n\n  /** @internal */ _slotUpdateSubscriptionCounter: number = 0;\n  /** @internal */ _slotUpdateSubscriptions: {\n    [id: number]: SlotUpdateSubscriptionInfo;\n  } = {};\n\n  /**\n   * Establish a JSON RPC connection\n   *\n   * @param endpoint URL to the fullnode JSON RPC endpoint\n   * @param commitmentOrConfig optional default commitment level or optional ConnectionConfig configuration object\n   */\n  constructor(\n    endpoint: string,\n    commitmentOrConfig?: Commitment | ConnectionConfig,\n  ) {\n    let url = new URL(endpoint);\n    const useHttps = url.protocol === 'https:';\n\n    let wsEndpoint;\n    let httpHeaders;\n    let fetchMiddleware;\n    let disableRetryOnRateLimit;\n    if (commitmentOrConfig && typeof commitmentOrConfig === 'string') {\n      this._commitment = commitmentOrConfig;\n    } else if (commitmentOrConfig) {\n      this._commitment = commitmentOrConfig.commitment;\n      this._confirmTransactionInitialTimeout =\n        commitmentOrConfig.confirmTransactionInitialTimeout;\n      wsEndpoint = commitmentOrConfig.wsEndpoint;\n      httpHeaders = commitmentOrConfig.httpHeaders;\n      fetchMiddleware = commitmentOrConfig.fetchMiddleware;\n      disableRetryOnRateLimit = commitmentOrConfig.disableRetryOnRateLimit;\n    }\n\n    this._rpcEndpoint = endpoint;\n    this._rpcWsEndpoint = wsEndpoint || makeWebsocketUrl(endpoint);\n\n    this._rpcClient = createRpcClient(\n      url.toString(),\n      useHttps,\n      httpHeaders,\n      fetchMiddleware,\n      disableRetryOnRateLimit,\n    );\n    this._rpcRequest = createRpcRequest(this._rpcClient);\n    this._rpcBatchRequest = createRpcBatchRequest(this._rpcClient);\n\n    this._rpcWebSocket = new RpcWebSocketClient(this._rpcWsEndpoint, {\n      autoconnect: false,\n      max_reconnects: Infinity,\n    });\n    this._rpcWebSocket.on('open', this._wsOnOpen.bind(this));\n    this._rpcWebSocket.on('error', this._wsOnError.bind(this));\n    this._rpcWebSocket.on('close', this._wsOnClose.bind(this));\n    this._rpcWebSocket.on(\n      'accountNotification',\n      this._wsOnAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'programNotification',\n      this._wsOnProgramAccountNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotNotification',\n      this._wsOnSlotNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'slotsUpdatesNotification',\n      this._wsOnSlotUpdatesNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'signatureNotification',\n      this._wsOnSignatureNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'rootNotification',\n      this._wsOnRootNotification.bind(this),\n    );\n    this._rpcWebSocket.on(\n      'logsNotification',\n      this._wsOnLogsNotification.bind(this),\n    );\n  }\n\n  /**\n   * The default commitment used for requests\n   */\n  get commitment(): Commitment | undefined {\n    return this._commitment;\n  }\n\n  /**\n   * The RPC endpoint\n   */\n  get rpcEndpoint(): string {\n    return this._rpcEndpoint;\n  }\n\n  /**\n   * Fetch the balance for the specified public key, return with context\n   */\n  async getBalanceAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get balance for ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the balance for the specified public key\n   */\n  async getBalance(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<number> {\n    return await this.getBalanceAndContext(publicKey, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get balance of account ' + publicKey.toBase58() + ': ' + e,\n        );\n      });\n  }\n\n  /**\n   * Fetch the estimated production time of a block\n   */\n  async getBlockTime(slot: number): Promise<number | null> {\n    const unsafeRes = await this._rpcRequest('getBlockTime', [slot]);\n    const res = create(unsafeRes, jsonRpcResult(nullable(number())));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block time for slot ' + slot + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the lowest slot that the node has information about in its ledger.\n   * This value may increase over time if the node is configured to purge older ledger data\n   */\n  async getMinimumLedgerSlot(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('minimumLedgerSlot', []);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get minimum ledger slot: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the slot of the lowest confirmed block that has not been purged from the ledger\n   */\n  async getFirstAvailableBlock(): Promise<number> {\n    const unsafeRes = await this._rpcRequest('getFirstAvailableBlock', []);\n    const res = create(unsafeRes, SlotRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get first available block: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch information about the current supply\n   */\n  async getSupply(\n    config?: GetSupplyConfig | Commitment,\n  ): Promise<RpcResponseAndContext<Supply>> {\n    let configArg: GetSupplyConfig = {};\n    if (typeof config === 'string') {\n      configArg = {commitment: config};\n    } else if (config) {\n      configArg = {\n        ...config,\n        commitment: (config && config.commitment) || this.commitment,\n      };\n    } else {\n      configArg = {\n        commitment: this.commitment,\n      };\n    }\n\n    const unsafeRes = await this._rpcRequest('getSupply', [configArg]);\n    const res = create(unsafeRes, GetSupplyRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current supply of a token mint\n   */\n  async getTokenSupply(\n    tokenMintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenMintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenSupply', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error('failed to get token supply: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current balance of a token account\n   */\n  async getTokenAccountBalance(\n    tokenAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<TokenAmount>> {\n    const args = this._buildArgs([tokenAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenAccountBalance', args);\n    const res = create(unsafeRes, jsonRpcResultAndContext(TokenAmountResult));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token account balance: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>>}\n   */\n  async getTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed token accounts owned by the specified account\n   *\n   * @return {Promise<RpcResponseAndContext<Array<{pubkey: PublicKey, account: AccountInfo<ParsedAccountData>}>>>}\n   */\n  async getParsedTokenAccountsByOwner(\n    ownerAddress: PublicKey,\n    filter: TokenAccountsFilter,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<\n      Array<{pubkey: PublicKey; account: AccountInfo<ParsedAccountData>}>\n    >\n  > {\n    let _args: any[] = [ownerAddress.toBase58()];\n    if ('mint' in filter) {\n      _args.push({mint: filter.mint.toBase58()});\n    } else {\n      _args.push({programId: filter.programId.toBase58()});\n    }\n\n    const args = this._buildArgs(_args, commitment, 'jsonParsed');\n    const unsafeRes = await this._rpcRequest('getTokenAccountsByOwner', args);\n    const res = create(unsafeRes, GetParsedTokenAccountsByOwner);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token accounts owned by account ' +\n          ownerAddress.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest accounts with their current balances\n   */\n  async getLargestAccounts(\n    config?: GetLargestAccountsConfig,\n  ): Promise<RpcResponseAndContext<Array<AccountBalancePair>>> {\n    const arg = {\n      ...config,\n      commitment: (config && config.commitment) || this.commitment,\n    };\n    const args = arg.filter || arg.commitment ? [arg] : [];\n    const unsafeRes = await this._rpcRequest('getLargestAccounts', args);\n    const res = create(unsafeRes, GetLargestAccountsRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get largest accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the 20 largest token accounts with their current balances\n   * for a given mint.\n   */\n  async getTokenLargestAccounts(\n    mintAddress: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<Array<TokenAccountBalancePair>>> {\n    const args = this._buildArgs([mintAddress.toBase58()], commitment);\n    const unsafeRes = await this._rpcRequest('getTokenLargestAccounts', args);\n    const res = create(unsafeRes, GetTokenLargestAccountsResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get token largest accounts: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key, return with context\n   */\n  async getAccountInfoAndContext(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<AccountInfo<Buffer> | null>> {\n    const args = this._buildArgs([publicKey.toBase58()], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(AccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed account info for the specified public key\n   */\n  async getParsedAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<AccountInfo<Buffer | ParsedAccountData> | null>\n  > {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getAccountInfo', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(nullable(ParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info about account ' +\n          publicKey.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for the specified public key\n   */\n  async getAccountInfo(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n  ): Promise<AccountInfo<Buffer> | null> {\n    try {\n      const res = await this.getAccountInfoAndContext(publicKey, commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error(\n        'failed to get info about account ' + publicKey.toBase58() + ': ' + e,\n      );\n    }\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys, return with context\n   */\n  async getMultipleAccountsInfoAndContext(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<(AccountInfo<Buffer> | null)[]>> {\n    const keys = publicKeys.map(key => key.toBase58());\n    const args = this._buildArgs([keys], commitment, 'base64');\n    const unsafeRes = await this._rpcRequest('getMultipleAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResultAndContext(array(nullable(AccountInfoResult))),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get info for accounts ' + keys + ': ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the account info for multiple accounts specified by an array of public keys\n   */\n  async getMultipleAccountsInfo(\n    publicKeys: PublicKey[],\n    commitment?: Commitment,\n  ): Promise<(AccountInfo<Buffer> | null)[]> {\n    const res = await this.getMultipleAccountsInfoAndContext(\n      publicKeys,\n      commitment,\n    );\n    return res.value;\n  }\n\n  /**\n   * Returns epoch activation information for a stake account that has been delegated\n   */\n  async getStakeActivation(\n    publicKey: PublicKey,\n    commitment?: Commitment,\n    epoch?: number,\n  ): Promise<StakeActivationData> {\n    const args = this._buildArgs(\n      [publicKey.toBase58()],\n      commitment,\n      undefined,\n      epoch !== undefined ? {epoch} : undefined,\n    );\n\n    const unsafeRes = await this._rpcRequest('getStakeActivation', args);\n    const res = create(unsafeRes, jsonRpcResult(StakeActivationResult));\n    if ('error' in res) {\n      throw new Error(\n        `failed to get Stake Activation ${publicKey.toBase58()}: ${\n          res.error.message\n        }`,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer>}>>}\n   */\n  async getProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetProgramAccountsConfig | Commitment,\n  ): Promise<Array<{pubkey: PublicKey; account: AccountInfo<Buffer>}>> {\n    const extra: Pick<GetProgramAccountsConfig, 'dataSlice' | 'filters'> = {};\n\n    let commitment;\n    let encoding;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n        encoding = configOrCommitment.encoding;\n\n        if (configOrCommitment.dataSlice) {\n          extra.dataSlice = configOrCommitment.dataSlice;\n        }\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      encoding || 'base64',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(unsafeRes, jsonRpcResult(array(KeyedAccountInfoResult)));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch and parse all the accounts owned by the specified program id\n   *\n   * @return {Promise<Array<{pubkey: PublicKey, account: AccountInfo<Buffer | ParsedAccountData>}>>}\n   */\n  async getParsedProgramAccounts(\n    programId: PublicKey,\n    configOrCommitment?: GetParsedProgramAccountsConfig | Commitment,\n  ): Promise<\n    Array<{\n      pubkey: PublicKey;\n      account: AccountInfo<Buffer | ParsedAccountData>;\n    }>\n  > {\n    const extra: Pick<GetParsedProgramAccountsConfig, 'filters'> = {};\n\n    let commitment;\n    if (configOrCommitment) {\n      if (typeof configOrCommitment === 'string') {\n        commitment = configOrCommitment;\n      } else {\n        commitment = configOrCommitment.commitment;\n\n        if (configOrCommitment.filters) {\n          extra.filters = configOrCommitment.filters;\n        }\n      }\n    }\n\n    const args = this._buildArgs(\n      [programId.toBase58()],\n      commitment,\n      'jsonParsed',\n      extra,\n    );\n    const unsafeRes = await this._rpcRequest('getProgramAccounts', args);\n    const res = create(\n      unsafeRes,\n      jsonRpcResult(array(KeyedParsedAccountInfoResult)),\n    );\n    if ('error' in res) {\n      throw new Error(\n        'failed to get accounts owned by program ' +\n          programId.toBase58() +\n          ': ' +\n          res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Confirm the transaction identified by the specified signature.\n   */\n  async confirmTransaction(\n    signature: TransactionSignature,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<SignatureResult>> {\n    let decodedSignature;\n    try {\n      decodedSignature = bs58.decode(signature);\n    } catch (err) {\n      throw new Error('signature must be base58 encoded: ' + signature);\n    }\n\n    assert(decodedSignature.length === 64, 'signature has invalid length');\n\n    const start = Date.now();\n    const subscriptionCommitment = commitment || this.commitment;\n\n    let subscriptionId;\n    let response: RpcResponseAndContext<SignatureResult> | null = null;\n    const confirmPromise = new Promise((resolve, reject) => {\n      try {\n        subscriptionId = this.onSignature(\n          signature,\n          (result: SignatureResult, context: Context) => {\n            subscriptionId = undefined;\n            response = {\n              context,\n              value: result,\n            };\n            resolve(null);\n          },\n          subscriptionCommitment,\n        );\n      } catch (err) {\n        reject(err);\n      }\n    });\n\n    let timeoutMs = this._confirmTransactionInitialTimeout || 60 * 1000;\n    switch (subscriptionCommitment) {\n      case 'processed':\n      case 'recent':\n      case 'single':\n      case 'confirmed':\n      case 'singleGossip': {\n        timeoutMs = this._confirmTransactionInitialTimeout || 30 * 1000;\n        break;\n      }\n      // exhaust enums to ensure full coverage\n      case 'finalized':\n      case 'max':\n      case 'root':\n    }\n\n    try {\n      await promiseTimeout(confirmPromise, timeoutMs);\n    } finally {\n      if (subscriptionId) {\n        this.removeSignatureListener(subscriptionId);\n      }\n    }\n\n    if (response === null) {\n      const duration = (Date.now() - start) / 1000;\n      throw new Error(\n        `Transaction was not confirmed in ${duration.toFixed(\n          2,\n        )} seconds. It is unknown if it succeeded or failed. Check signature ${signature} using the Solana Explorer or CLI tools.`,\n      );\n    }\n\n    return response;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getClusterNodes(): Promise<Array<ContactInfo>> {\n    const unsafeRes = await this._rpcRequest('getClusterNodes', []);\n    const res = create(unsafeRes, jsonRpcResult(array(ContactInfoResult)));\n    if ('error' in res) {\n      throw new Error('failed to get cluster nodes: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Return the list of nodes that are currently participating in the cluster\n   */\n  async getVoteAccounts(commitment?: Commitment): Promise<VoteAccountStatus> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getVoteAccounts', args);\n    const res = create(unsafeRes, GetVoteAccounts);\n    if ('error' in res) {\n      throw new Error('failed to get vote accounts: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot that the node is processing\n   */\n  async getSlot(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlot', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current slot leader of the cluster\n   */\n  async getSlotLeader(commitment?: Commitment): Promise<string> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getSlotLeader', args);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get slot leader: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch `limit` number of slot leaders starting from `startSlot`\n   *\n   * @param startSlot fetch slot leaders starting from this slot\n   * @param limit number of slot leaders to return\n   */\n  async getSlotLeaders(\n    startSlot: number,\n    limit: number,\n  ): Promise<Array<PublicKey>> {\n    const args = [startSlot, limit];\n    const unsafeRes = await this._rpcRequest('getSlotLeaders', args);\n    const res = create(unsafeRes, jsonRpcResult(array(PublicKeyFromString)));\n    if ('error' in res) {\n      throw new Error('failed to get slot leaders: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current status of a signature\n   */\n  async getSignatureStatus(\n    signature: TransactionSignature,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<SignatureStatus | null>> {\n    const {context, value: values} = await this.getSignatureStatuses(\n      [signature],\n      config,\n    );\n    assert(values.length === 1);\n    const value = values[0];\n    return {context, value};\n  }\n\n  /**\n   * Fetch the current statuses of a batch of signatures\n   */\n  async getSignatureStatuses(\n    signatures: Array<TransactionSignature>,\n    config?: SignatureStatusConfig,\n  ): Promise<RpcResponseAndContext<Array<SignatureStatus | null>>> {\n    const params: any[] = [signatures];\n    if (config) {\n      params.push(config);\n    }\n    const unsafeRes = await this._rpcRequest('getSignatureStatuses', params);\n    const res = create(unsafeRes, GetSignatureStatusesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get signature status: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current transaction count of the cluster\n   */\n  async getTransactionCount(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getTransactionCount', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error('failed to get transaction count: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the current total currency supply of the cluster in lamports\n   *\n   * @deprecated Deprecated since v1.2.8. Please use {@link getSupply} instead.\n   */\n  async getTotalSupply(commitment?: Commitment): Promise<number> {\n    const result = await this.getSupply({\n      commitment,\n      excludeNonCirculatingAccountsList: true,\n    });\n    return result.value.total;\n  }\n\n  /**\n   * Fetch the cluster InflationGovernor parameters\n   */\n  async getInflationGovernor(\n    commitment?: Commitment,\n  ): Promise<InflationGovernor> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getInflationGovernor', args);\n    const res = create(unsafeRes, GetInflationGovernorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the inflation reward for a list of addresses for an epoch\n   */\n  async getInflationReward(\n    addresses: PublicKey[],\n    epoch?: number,\n    commitment?: Commitment,\n  ): Promise<(InflationReward | null)[]> {\n    const args = this._buildArgs(\n      [addresses.map(pubkey => pubkey.toBase58())],\n      commitment,\n      undefined,\n      {\n        epoch,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getInflationReward', args);\n    const res = create(unsafeRes, GetInflationRewardResult);\n    if ('error' in res) {\n      throw new Error('failed to get inflation reward: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Info parameters\n   */\n  async getEpochInfo(commitment?: Commitment): Promise<EpochInfo> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getEpochInfo', args);\n    const res = create(unsafeRes, GetEpochInfoRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch info: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the Epoch Schedule parameters\n   */\n  async getEpochSchedule(): Promise<EpochSchedule> {\n    const unsafeRes = await this._rpcRequest('getEpochSchedule', []);\n    const res = create(unsafeRes, GetEpochScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get epoch schedule: ' + res.error.message);\n    }\n    const epochSchedule = res.result;\n    return new EpochSchedule(\n      epochSchedule.slotsPerEpoch,\n      epochSchedule.leaderScheduleSlotOffset,\n      epochSchedule.warmup,\n      epochSchedule.firstNormalEpoch,\n      epochSchedule.firstNormalSlot,\n    );\n  }\n\n  /**\n   * Fetch the leader schedule for the current epoch\n   * @return {Promise<RpcResponseAndContext<LeaderSchedule>>}\n   */\n  async getLeaderSchedule(): Promise<LeaderSchedule> {\n    const unsafeRes = await this._rpcRequest('getLeaderSchedule', []);\n    const res = create(unsafeRes, GetLeaderScheduleRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get leader schedule: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the minimum balance needed to exempt an account of `dataLength`\n   * size from rent\n   */\n  async getMinimumBalanceForRentExemption(\n    dataLength: number,\n    commitment?: Commitment,\n  ): Promise<number> {\n    const args = this._buildArgs([dataLength], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getMinimumBalanceForRentExemption',\n      args,\n    );\n    const res = create(unsafeRes, GetMinimumBalanceForRentExemptionRpcResult);\n    if ('error' in res) {\n      console.warn('Unable to fetch minimum balance for rent exemption');\n      return 0;\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster, return with context\n   * @return {Promise<RpcResponseAndContext<{blockhash: Blockhash, feeCalculator: FeeCalculator}>>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; feeCalculator: FeeCalculator}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getRecentBlockhash', args);\n    const res = create(unsafeRes, GetRecentBlockhashAndContextRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get recent blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch recent performance samples\n   * @return {Promise<Array<PerfSample>>}\n   */\n  async getRecentPerformanceSamples(\n    limit?: number,\n  ): Promise<Array<PerfSample>> {\n    const args = this._buildArgs(limit ? [limit] : []);\n    const unsafeRes = await this._rpcRequest(\n      'getRecentPerformanceSamples',\n      args,\n    );\n    const res = create(unsafeRes, GetRecentPerformanceSamplesRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get recent performance samples: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch the fee calculator for a recent blockhash from the cluster, return with context\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getFeeForMessage} instead.\n   */\n  async getFeeCalculatorForBlockhash(\n    blockhash: Blockhash,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<FeeCalculator | null>> {\n    const args = this._buildArgs([blockhash], commitment);\n    const unsafeRes = await this._rpcRequest(\n      'getFeeCalculatorForBlockhash',\n      args,\n    );\n\n    const res = create(unsafeRes, GetFeeCalculatorRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get fee calculator: ' + res.error.message);\n    }\n    const {context, value} = res.result;\n    return {\n      context,\n      value: value !== null ? value.feeCalculator : null,\n    };\n  }\n\n  /**\n   * Fetch the fee for a message from the cluster, return with context\n   */\n  async getFeeForMessage(\n    message: Message,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<number>> {\n    const wireMessage = message.serialize().toString('base64');\n    const args = this._buildArgs([wireMessage], commitment);\n    const unsafeRes = await this._rpcRequest('getFeeForMessage', args);\n\n    const res = create(unsafeRes, jsonRpcResultAndContext(nullable(number())));\n    if ('error' in res) {\n      throw new Error('failed to get slot: ' + res.error.message);\n    }\n    if (res.result === null) {\n      throw new Error('invalid blockhash');\n    }\n    return res.result as unknown as RpcResponseAndContext<number>;\n  }\n\n  /**\n   * Fetch a recent blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, feeCalculator: FeeCalculator}>}\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getLatestBlockhash} instead.\n   */\n  async getRecentBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; feeCalculator: FeeCalculator}> {\n    try {\n      const res = await this.getRecentBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, lastValidBlockHeight: number}>}\n   */\n  async getLatestBlockhash(\n    commitment?: Commitment,\n  ): Promise<{blockhash: Blockhash; lastValidBlockHeight: number}> {\n    try {\n      const res = await this.getLatestBlockhashAndContext(commitment);\n      return res.value;\n    } catch (e) {\n      throw new Error('failed to get recent blockhash: ' + e);\n    }\n  }\n\n  /**\n   * Fetch the latest blockhash from the cluster\n   * @return {Promise<{blockhash: Blockhash, lastValidBlockHeight: number}>}\n   */\n  async getLatestBlockhashAndContext(\n    commitment?: Commitment,\n  ): Promise<\n    RpcResponseAndContext<{blockhash: Blockhash; lastValidBlockHeight: number}>\n  > {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getLatestBlockhash', args);\n    const res = create(unsafeRes, GetLatestBlockhashRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get latest blockhash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the node version\n   */\n  async getVersion(): Promise<Version> {\n    const unsafeRes = await this._rpcRequest('getVersion', []);\n    const res = create(unsafeRes, jsonRpcResult(VersionResult));\n    if ('error' in res) {\n      throw new Error('failed to get version: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the genesis hash\n   */\n  async getGenesisHash(): Promise<string> {\n    const unsafeRes = await this._rpcRequest('getGenesisHash', []);\n    const res = create(unsafeRes, jsonRpcResult(string()));\n    if ('error' in res) {\n      throw new Error('failed to get genesis hash: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a processed block from the cluster.\n   */\n  async getBlock(\n    slot: number,\n    opts?: {commitment?: Finality},\n  ): Promise<BlockResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n  }\n\n  /*\n   * Returns the current block height of the node\n   */\n  async getBlockHeight(commitment?: Commitment): Promise<number> {\n    const args = this._buildArgs([], commitment);\n    const unsafeRes = await this._rpcRequest('getBlockHeight', args);\n    const res = create(unsafeRes, jsonRpcResult(number()));\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block height information: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /*\n   * Returns recent block production information from the current or previous epoch\n   */\n  async getBlockProduction(\n    configOrCommitment?: GetBlockProductionConfig | Commitment,\n  ): Promise<RpcResponseAndContext<BlockProduction>> {\n    let extra: Omit<GetBlockProductionConfig, 'commitment'> | undefined;\n    let commitment: Commitment | undefined;\n\n    if (typeof configOrCommitment === 'string') {\n      commitment = configOrCommitment;\n    } else if (configOrCommitment) {\n      const {commitment: c, ...rest} = configOrCommitment;\n      commitment = c;\n      extra = rest;\n    }\n\n    const args = this._buildArgs([], commitment, 'base64', extra);\n    const unsafeRes = await this._rpcRequest('getBlockProduction', args);\n    const res = create(unsafeRes, BlockProductionResponseStruct);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get block production information: ' + res.error.message,\n      );\n    }\n\n    return res.result;\n  }\n\n  /**\n   * Fetch a confirmed or finalized transaction from the cluster.\n   */\n  async getTransaction(\n    signature: string,\n    opts?: {commitment?: Finality},\n  ): Promise<TransactionResponse | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      opts && opts.commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    return {\n      ...result,\n      transaction: {\n        ...result.transaction,\n        message: new Message(result.transaction.message),\n      },\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed or finalized transaction\n   */\n  async getParsedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   */\n  async getParsedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error('failed to get transactions: ' + res.error.message);\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of Transactions and transaction statuses from the cluster\n   * for a confirmed block.\n   *\n   * @deprecated Deprecated since v1.13.0. Please use {@link getBlock} instead.\n   */\n  async getConfirmedBlock(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<ConfirmedBlock> {\n    const args = this._buildArgsAtLeastConfirmed([slot], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetConfirmedBlockRpcResult);\n\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n\n    const block = {\n      ...result,\n      transactions: result.transactions.map(({transaction, meta}) => {\n        const message = new Message(transaction.message);\n        return {\n          meta,\n          transaction: {\n            ...transaction,\n            message,\n          },\n        };\n      }),\n    };\n\n    return {\n      ...block,\n      transactions: block.transactions.map(({transaction, meta}) => {\n        return {\n          meta,\n          transaction: Transaction.populate(\n            transaction.message,\n            transaction.signatures,\n          ),\n        };\n      }),\n    };\n  }\n\n  /**\n   * Fetch confirmed blocks between two slots\n   */\n  async getBlocks(\n    startSlot: number,\n    endSlot?: number,\n    commitment?: Finality,\n  ): Promise<Array<number>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      endSlot !== undefined ? [startSlot, endSlot] : [startSlot],\n      commitment,\n    );\n    const unsafeRes = await this._rpcRequest('getBlocks', args);\n    const res = create(unsafeRes, jsonRpcResult(array(number())));\n    if ('error' in res) {\n      throw new Error('failed to get blocks: ' + res.error.message);\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a block, excluding rewards\n   */\n  async getBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a list of Signatures from the cluster for a confirmed block, excluding rewards\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getBlockSignatures} instead.\n   */\n  async getConfirmedBlockSignatures(\n    slot: number,\n    commitment?: Finality,\n  ): Promise<BlockSignatures> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [slot],\n      commitment,\n      undefined,\n      {\n        transactionDetails: 'signatures',\n        rewards: false,\n      },\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedBlock', args);\n    const res = create(unsafeRes, GetBlockSignaturesRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get confirmed block: ' + res.error.message);\n    }\n    const result = res.result;\n    if (!result) {\n      throw new Error('Confirmed block ' + slot + ' not found');\n    }\n    return result;\n  }\n\n  /**\n   * Fetch a transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getTransaction} instead.\n   */\n  async getConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed([signature], commitment);\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error('failed to get transaction: ' + res.error.message);\n    }\n\n    const result = res.result;\n    if (!result) return result;\n\n    const message = new Message(result.transaction.message);\n    const signatures = result.transaction.signatures;\n    return {\n      ...result,\n      transaction: Transaction.populate(message, signatures),\n    };\n  }\n\n  /**\n   * Fetch parsed transaction details for a confirmed transaction\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransaction} instead.\n   */\n  async getParsedConfirmedTransaction(\n    signature: TransactionSignature,\n    commitment?: Finality,\n  ): Promise<ParsedConfirmedTransaction | null> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [signature],\n      commitment,\n      'jsonParsed',\n    );\n    const unsafeRes = await this._rpcRequest('getConfirmedTransaction', args);\n    const res = create(unsafeRes, GetParsedTransactionRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed transaction: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch parsed transaction details for a batch of confirmed transactions\n   *\n   * @deprecated Deprecated since Solana v1.8.0. Please use {@link getParsedTransactions} instead.\n   */\n  async getParsedConfirmedTransactions(\n    signatures: TransactionSignature[],\n    commitment?: Finality,\n  ): Promise<(ParsedConfirmedTransaction | null)[]> {\n    const batch = signatures.map(signature => {\n      const args = this._buildArgsAtLeastConfirmed(\n        [signature],\n        commitment,\n        'jsonParsed',\n      );\n      return {\n        methodName: 'getConfirmedTransaction',\n        args,\n      };\n    });\n\n    const unsafeRes = await this._rpcBatchRequest(batch);\n    const res = unsafeRes.map((unsafeRes: any) => {\n      const res = create(unsafeRes, GetParsedTransactionRpcResult);\n      if ('error' in res) {\n        throw new Error(\n          'failed to get confirmed transactions: ' + res.error.message,\n        );\n      }\n      return res.result;\n    });\n\n    return res;\n  }\n\n  /**\n   * Fetch a list of all the confirmed signatures for transactions involving an address\n   * within a specified slot range. Max range allowed is 10,000 slots.\n   *\n   * @deprecated Deprecated since v1.3. Please use {@link getConfirmedSignaturesForAddress2} instead.\n   *\n   * @param address queried address\n   * @param startSlot start slot, inclusive\n   * @param endSlot end slot, inclusive\n   */\n  async getConfirmedSignaturesForAddress(\n    address: PublicKey,\n    startSlot: number,\n    endSlot: number,\n  ): Promise<Array<TransactionSignature>> {\n    let options: any = {};\n\n    let firstAvailableBlock = await this.getFirstAvailableBlock();\n    while (!('until' in options)) {\n      startSlot--;\n      if (startSlot <= 0 || startSlot < firstAvailableBlock) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(\n          startSlot,\n          'finalized',\n        );\n        if (block.signatures.length > 0) {\n          options.until =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    let highestConfirmedRoot = await this.getSlot('finalized');\n    while (!('before' in options)) {\n      endSlot++;\n      if (endSlot > highestConfirmedRoot) {\n        break;\n      }\n\n      try {\n        const block = await this.getConfirmedBlockSignatures(endSlot);\n        if (block.signatures.length > 0) {\n          options.before =\n            block.signatures[block.signatures.length - 1].toString();\n        }\n      } catch (err) {\n        if (err instanceof Error && err.message.includes('skipped')) {\n          continue;\n        } else {\n          throw err;\n        }\n      }\n    }\n\n    const confirmedSignatureInfo = await this.getConfirmedSignaturesForAddress2(\n      address,\n      options,\n    );\n    return confirmedSignatureInfo.map(info => info.signature);\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getConfirmedSignaturesForAddress2(\n    address: PublicKey,\n    options?: ConfirmedSignaturesForAddress2Options,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest(\n      'getConfirmedSignaturesForAddress2',\n      args,\n    );\n    const res = create(unsafeRes, GetConfirmedSignaturesForAddress2RpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get confirmed signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Returns confirmed signatures for transactions involving an\n   * address backwards in time from the provided signature or most recent confirmed block\n   *\n   *\n   * @param address queried address\n   * @param options\n   */\n  async getSignaturesForAddress(\n    address: PublicKey,\n    options?: SignaturesForAddressOptions,\n    commitment?: Finality,\n  ): Promise<Array<ConfirmedSignatureInfo>> {\n    const args = this._buildArgsAtLeastConfirmed(\n      [address.toBase58()],\n      commitment,\n      undefined,\n      options,\n    );\n    const unsafeRes = await this._rpcRequest('getSignaturesForAddress', args);\n    const res = create(unsafeRes, GetSignaturesForAddressRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'failed to get signatures for address: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster, return with context\n   */\n  async getNonceAndContext(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<RpcResponseAndContext<NonceAccount | null>> {\n    const {context, value: accountInfo} = await this.getAccountInfoAndContext(\n      nonceAccount,\n      commitment,\n    );\n\n    let value = null;\n    if (accountInfo !== null) {\n      value = NonceAccount.fromAccountData(accountInfo.data);\n    }\n\n    return {\n      context,\n      value,\n    };\n  }\n\n  /**\n   * Fetch the contents of a Nonce account from the cluster\n   */\n  async getNonce(\n    nonceAccount: PublicKey,\n    commitment?: Commitment,\n  ): Promise<NonceAccount | null> {\n    return await this.getNonceAndContext(nonceAccount, commitment)\n      .then(x => x.value)\n      .catch(e => {\n        throw new Error(\n          'failed to get nonce for account ' +\n            nonceAccount.toBase58() +\n            ': ' +\n            e,\n        );\n      });\n  }\n\n  /**\n   * Request an allocation of lamports to the specified address\n   *\n   * ```typescript\n   * import { Connection, PublicKey, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n   *\n   * (async () => {\n   *   const connection = new Connection(\"https://api.testnet.solana.com\", \"confirmed\");\n   *   const myAddress = new PublicKey(\"2nr1bHFT86W9tGnyvmYW4vcHKsQB3sVQfnddasz4kExM\");\n   *   const signature = await connection.requestAirdrop(myAddress, LAMPORTS_PER_SOL);\n   *   await connection.confirmTransaction(signature);\n   * })();\n   * ```\n   */\n  async requestAirdrop(\n    to: PublicKey,\n    lamports: number,\n  ): Promise<TransactionSignature> {\n    const unsafeRes = await this._rpcRequest('requestAirdrop', [\n      to.toBase58(),\n      lamports,\n    ]);\n    const res = create(unsafeRes, RequestAirdropRpcResult);\n    if ('error' in res) {\n      throw new Error(\n        'airdrop to ' + to.toBase58() + ' failed: ' + res.error.message,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  async _recentBlockhash(disableCache: boolean): Promise<Blockhash> {\n    if (!disableCache) {\n      // Wait for polling to finish\n      while (this._pollingBlockhash) {\n        await sleep(100);\n      }\n      const timeSinceFetch = Date.now() - this._blockhashInfo.lastFetch;\n      const expired = timeSinceFetch >= BLOCKHASH_CACHE_TIMEOUT_MS;\n      if (this._blockhashInfo.recentBlockhash !== null && !expired) {\n        return this._blockhashInfo.recentBlockhash;\n      }\n    }\n\n    return await this._pollNewBlockhash();\n  }\n\n  /**\n   * @internal\n   */\n  async _pollNewBlockhash(): Promise<Blockhash> {\n    this._pollingBlockhash = true;\n    try {\n      const startTime = Date.now();\n      for (let i = 0; i < 50; i++) {\n        const {blockhash} = await this.getRecentBlockhash('finalized');\n\n        if (this._blockhashInfo.recentBlockhash != blockhash) {\n          this._blockhashInfo = {\n            recentBlockhash: blockhash,\n            lastFetch: Date.now(),\n            transactionSignatures: [],\n            simulatedSignatures: [],\n          };\n          return blockhash;\n        }\n\n        // Sleep for approximately half a slot\n        await sleep(MS_PER_SLOT / 2);\n      }\n\n      throw new Error(\n        `Unable to obtain a new blockhash after ${Date.now() - startTime}ms`,\n      );\n    } finally {\n      this._pollingBlockhash = false;\n    }\n  }\n\n  /**\n   * Simulate a transaction\n   */\n  async simulateTransaction(\n    transactionOrMessage: Transaction | Message,\n    signers?: Array<Signer>,\n    includeAccounts?: boolean | Array<PublicKey>,\n  ): Promise<RpcResponseAndContext<SimulatedTransactionResponse>> {\n    let transaction;\n    if (transactionOrMessage instanceof Transaction) {\n      transaction = transactionOrMessage;\n    } else {\n      transaction = Transaction.populate(transactionOrMessage);\n    }\n\n    if (transaction.nonceInfo && signers) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n\n        if (!signers) break;\n\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (\n          !this._blockhashInfo.simulatedSignatures.includes(signature) &&\n          !this._blockhashInfo.transactionSignatures.includes(signature)\n        ) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.simulatedSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const message = transaction._compile();\n    const signData = message.serialize();\n    const wireTransaction = transaction._serialize(signData);\n    const encodedTransaction = wireTransaction.toString('base64');\n    const config: any = {\n      encoding: 'base64',\n      commitment: this.commitment,\n    };\n\n    if (includeAccounts) {\n      const addresses = (\n        Array.isArray(includeAccounts)\n          ? includeAccounts\n          : message.nonProgramIds()\n      ).map(key => key.toBase58());\n\n      config['accounts'] = {\n        encoding: 'base64',\n        addresses,\n      };\n    }\n\n    if (signers) {\n      config.sigVerify = true;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('simulateTransaction', args);\n    const res = create(unsafeRes, SimulatedTransactionResponseStruct);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n        if (logs && Array.isArray(logs)) {\n          const traceIndent = '\\n    ';\n          const logTrace = traceIndent + logs.join(traceIndent);\n          console.error(res.error.message, logTrace);\n        }\n      }\n      throw new SendTransactionError(\n        'failed to simulate transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * Sign and send a transaction\n   */\n  async sendTransaction(\n    transaction: Transaction,\n    signers: Array<Signer>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    if (transaction.nonceInfo) {\n      transaction.sign(...signers);\n    } else {\n      let disableCache = this._disableBlockhashCaching;\n      for (;;) {\n        transaction.recentBlockhash = await this._recentBlockhash(disableCache);\n        transaction.sign(...signers);\n        if (!transaction.signature) {\n          throw new Error('!signature'); // should never happen\n        }\n\n        const signature = transaction.signature.toString('base64');\n        if (!this._blockhashInfo.transactionSignatures.includes(signature)) {\n          // The signature of this transaction has not been seen before with the\n          // current recentBlockhash, all done. Let's break\n          this._blockhashInfo.transactionSignatures.push(signature);\n          break;\n        } else {\n          // This transaction would be treated as duplicate (its derived signature\n          // matched to one of already recorded signatures).\n          // So, we must fetch a new blockhash for a different signature by disabling\n          // our cache not to wait for the cache expiration (BLOCKHASH_CACHE_TIMEOUT_MS).\n          disableCache = true;\n        }\n      }\n    }\n\n    const wireTransaction = transaction.serialize();\n    return await this.sendRawTransaction(wireTransaction, options);\n  }\n\n  /**\n   * Send a transaction that has already been signed and serialized into the\n   * wire format\n   */\n  async sendRawTransaction(\n    rawTransaction: Buffer | Uint8Array | Array<number>,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const encodedTransaction = toBuffer(rawTransaction).toString('base64');\n    const result = await this.sendEncodedTransaction(\n      encodedTransaction,\n      options,\n    );\n    return result;\n  }\n\n  /**\n   * Send a transaction that has already been signed, serialized into the\n   * wire format, and encoded as a base64 string\n   */\n  async sendEncodedTransaction(\n    encodedTransaction: string,\n    options?: SendOptions,\n  ): Promise<TransactionSignature> {\n    const config: any = {encoding: 'base64'};\n    const skipPreflight = options && options.skipPreflight;\n    const preflightCommitment =\n      (options && options.preflightCommitment) || this.commitment;\n\n    if (options && options.maxRetries) {\n      config.maxRetries = options.maxRetries;\n    }\n    if (skipPreflight) {\n      config.skipPreflight = skipPreflight;\n    }\n    if (preflightCommitment) {\n      config.preflightCommitment = preflightCommitment;\n    }\n\n    const args = [encodedTransaction, config];\n    const unsafeRes = await this._rpcRequest('sendTransaction', args);\n    const res = create(unsafeRes, SendTransactionRpcResult);\n    if ('error' in res) {\n      let logs;\n      if ('data' in res.error) {\n        logs = res.error.data.logs;\n      }\n      throw new SendTransactionError(\n        'failed to send transaction: ' + res.error.message,\n        logs,\n      );\n    }\n    return res.result;\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnOpen() {\n    this._rpcWebSocketConnected = true;\n    this._rpcWebSocketHeartbeat = setInterval(() => {\n      // Ping server every 5s to prevent idle timeouts\n      this._rpcWebSocket.notify('ping').catch(() => {});\n    }, 5000);\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnError(err: Error) {\n    console.error('ws error:', err.message);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnClose(code: number) {\n    if (this._rpcWebSocketHeartbeat) {\n      clearInterval(this._rpcWebSocketHeartbeat);\n      this._rpcWebSocketHeartbeat = null;\n    }\n\n    if (code === 1000) {\n      // explicit close, check if any subscriptions have been made since close\n      this._updateSubscriptions();\n      return;\n    }\n\n    // implicit close, prepare subscriptions for auto-reconnect\n    this._resetSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  async _subscribe(\n    sub: {subscriptionId: SubscriptionId | null},\n    rpcMethod: string,\n    rpcArgs: IWSRequestParams,\n  ) {\n    if (sub.subscriptionId == null) {\n      sub.subscriptionId = 'subscribing';\n      try {\n        const id = await this._rpcWebSocket.call(rpcMethod, rpcArgs);\n        if (typeof id === 'number' && sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = id;\n        }\n      } catch (err) {\n        if (sub.subscriptionId === 'subscribing') {\n          // eslint-disable-next-line require-atomic-updates\n          sub.subscriptionId = null;\n        }\n        if (err instanceof Error) {\n          console.error(\n            `${rpcMethod} error for argument`,\n            rpcArgs,\n            err.message,\n          );\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  async _unsubscribe(\n    sub: {subscriptionId: SubscriptionId | null},\n    rpcMethod: string,\n  ) {\n    const subscriptionId = sub.subscriptionId;\n    if (subscriptionId != null && typeof subscriptionId != 'string') {\n      const unsubscribeId: number = subscriptionId;\n      try {\n        await this._rpcWebSocket.call(rpcMethod, [unsubscribeId]);\n      } catch (err) {\n        if (err instanceof Error) {\n          console.error(`${rpcMethod} error:`, err.message);\n        }\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _resetSubscriptions() {\n    Object.values(this._accountChangeSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._programAccountChangeSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._rootSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._signatureSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._slotSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n    Object.values(this._slotUpdateSubscriptions).forEach(\n      s => (s.subscriptionId = null),\n    );\n  }\n\n  /**\n   * @internal\n   */\n  _updateSubscriptions() {\n    const accountKeys = Object.keys(this._accountChangeSubscriptions).map(\n      Number,\n    );\n    const programKeys = Object.keys(\n      this._programAccountChangeSubscriptions,\n    ).map(Number);\n    const slotKeys = Object.keys(this._slotSubscriptions).map(Number);\n    const slotUpdateKeys = Object.keys(this._slotUpdateSubscriptions).map(\n      Number,\n    );\n    const signatureKeys = Object.keys(this._signatureSubscriptions).map(Number);\n    const rootKeys = Object.keys(this._rootSubscriptions).map(Number);\n    const logsKeys = Object.keys(this._logsSubscriptions).map(Number);\n    if (\n      accountKeys.length === 0 &&\n      programKeys.length === 0 &&\n      slotKeys.length === 0 &&\n      slotUpdateKeys.length === 0 &&\n      signatureKeys.length === 0 &&\n      rootKeys.length === 0 &&\n      logsKeys.length === 0\n    ) {\n      if (this._rpcWebSocketConnected) {\n        this._rpcWebSocketConnected = false;\n        this._rpcWebSocketIdleTimeout = setTimeout(() => {\n          this._rpcWebSocketIdleTimeout = null;\n          try {\n            this._rpcWebSocket.close();\n          } catch (err) {\n            // swallow error if socket has already been closed.\n            if (err instanceof Error) {\n              console.log(\n                `Error when closing socket connection: ${err.message}`,\n              );\n            }\n          }\n        }, 500);\n      }\n      return;\n    }\n\n    if (this._rpcWebSocketIdleTimeout !== null) {\n      clearTimeout(this._rpcWebSocketIdleTimeout);\n      this._rpcWebSocketIdleTimeout = null;\n      this._rpcWebSocketConnected = true;\n    }\n\n    if (!this._rpcWebSocketConnected) {\n      this._rpcWebSocket.connect();\n      return;\n    }\n\n    for (let id of accountKeys) {\n      const sub = this._accountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'accountSubscribe',\n        this._buildArgs([sub.publicKey], sub.commitment, 'base64'),\n      );\n    }\n\n    for (let id of programKeys) {\n      const sub = this._programAccountChangeSubscriptions[id];\n      this._subscribe(\n        sub,\n        'programSubscribe',\n        this._buildArgs([sub.programId], sub.commitment, 'base64', {\n          filters: sub.filters,\n        }),\n      );\n    }\n\n    for (let id of slotKeys) {\n      const sub = this._slotSubscriptions[id];\n      this._subscribe(sub, 'slotSubscribe', []);\n    }\n\n    for (let id of slotUpdateKeys) {\n      const sub = this._slotUpdateSubscriptions[id];\n      this._subscribe(sub, 'slotsUpdatesSubscribe', []);\n    }\n\n    for (let id of signatureKeys) {\n      const sub = this._signatureSubscriptions[id];\n      const args: any[] = [sub.signature];\n      if (sub.options) args.push(sub.options);\n      this._subscribe(sub, 'signatureSubscribe', args);\n    }\n\n    for (let id of rootKeys) {\n      const sub = this._rootSubscriptions[id];\n      this._subscribe(sub, 'rootSubscribe', []);\n    }\n\n    for (let id of logsKeys) {\n      const sub = this._logsSubscriptions[id];\n      let filter;\n      if (typeof sub.filter === 'object') {\n        filter = {mentions: [sub.filter.toString()]};\n      } else {\n        filter = sub.filter;\n      }\n      this._subscribe(\n        sub,\n        'logsSubscribe',\n        this._buildArgs([filter], sub.commitment),\n      );\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnAccountNotification(notification: object) {\n    const res = create(notification, AccountNotificationResult);\n    for (const sub of Object.values(this._accountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever the specified account changes\n   *\n   * @param publicKey Public key of the account to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @return subscription id\n   */\n  onAccountChange(\n    publicKey: PublicKey,\n    callback: AccountChangeCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._accountChangeSubscriptionCounter;\n    this._accountChangeSubscriptions[id] = {\n      publicKey: publicKey.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeAccountChangeListener(id: number): Promise<void> {\n    if (this._accountChangeSubscriptions[id]) {\n      const subInfo = this._accountChangeSubscriptions[id];\n      delete this._accountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'accountUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown account change id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnProgramAccountNotification(notification: Object) {\n    const res = create(notification, ProgramAccountNotificationResult);\n    for (const sub of Object.values(this._programAccountChangeSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        const {value, context} = res.result;\n        sub.callback(\n          {\n            accountId: value.pubkey,\n            accountInfo: value.account,\n          },\n          context,\n        );\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked whenever accounts owned by the\n   * specified program change\n   *\n   * @param programId Public key of the program to monitor\n   * @param callback Function to invoke whenever the account is changed\n   * @param commitment Specify the commitment level account changes must reach before notification\n   * @param filters The program account filters to pass into the RPC method\n   * @return subscription id\n   */\n  onProgramAccountChange(\n    programId: PublicKey,\n    callback: ProgramAccountChangeCallback,\n    commitment?: Commitment,\n    filters?: GetProgramAccountsFilter[],\n  ): number {\n    const id = ++this._programAccountChangeSubscriptionCounter;\n    this._programAccountChangeSubscriptions[id] = {\n      programId: programId.toBase58(),\n      callback,\n      commitment,\n      subscriptionId: null,\n      filters,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister an account notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeProgramAccountChangeListener(id: number): Promise<void> {\n    if (this._programAccountChangeSubscriptions[id]) {\n      const subInfo = this._programAccountChangeSubscriptions[id];\n      delete this._programAccountChangeSubscriptions[id];\n      await this._unsubscribe(subInfo, 'programUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown program account change id: ${id}`);\n    }\n  }\n\n  /**\n   * Registers a callback to be invoked whenever logs are emitted.\n   */\n  onLogs(\n    filter: LogsFilter,\n    callback: LogsCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._logsSubscriptionCounter;\n    this._logsSubscriptions[id] = {\n      filter,\n      callback,\n      commitment,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a logs callback.\n   *\n   * @param id subscription id to deregister.\n   */\n  async removeOnLogsListener(id: number): Promise<void> {\n    if (!this._logsSubscriptions[id]) {\n      throw new Error(`Unknown logs id: ${id}`);\n    }\n    const subInfo = this._logsSubscriptions[id];\n    delete this._logsSubscriptions[id];\n    await this._unsubscribe(subInfo, 'logsUnsubscribe');\n    this._updateSubscriptions();\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnLogsNotification(notification: Object) {\n    const res = create(notification, LogsNotificationResult);\n    const keys = Object.keys(this._logsSubscriptions).map(Number);\n    for (let id of keys) {\n      const sub = this._logsSubscriptions[id];\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result.value, res.result.context);\n        return;\n      }\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotNotification(notification: Object) {\n    const res = create(notification, SlotNotificationResult);\n    for (const sub of Object.values(this._slotSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot changes\n   *\n   * @param callback Function to invoke whenever the slot changes\n   * @return subscription id\n   */\n  onSlotChange(callback: SlotChangeCallback): number {\n    const id = ++this._slotSubscriptionCounter;\n    this._slotSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotChangeListener(id: number): Promise<void> {\n    if (this._slotSubscriptions[id]) {\n      const subInfo = this._slotSubscriptions[id];\n      delete this._slotSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot change id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSlotUpdatesNotification(notification: Object) {\n    const res = create(notification, SlotUpdateNotificationResult);\n    for (const sub of Object.values(this._slotUpdateSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon slot updates. {@link SlotUpdate}'s\n   * may be useful to track live progress of a cluster.\n   *\n   * @param callback Function to invoke whenever the slot updates\n   * @return subscription id\n   */\n  onSlotUpdate(callback: SlotUpdateCallback): number {\n    const id = ++this._slotUpdateSubscriptionCounter;\n    this._slotUpdateSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a slot update notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSlotUpdateListener(id: number): Promise<void> {\n    if (this._slotUpdateSubscriptions[id]) {\n      const subInfo = this._slotUpdateSubscriptions[id];\n      delete this._slotUpdateSubscriptions[id];\n      await this._unsubscribe(subInfo, 'slotsUpdatesUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown slot update id: ${id}`);\n    }\n  }\n\n  _buildArgs(\n    args: Array<any>,\n    override?: Commitment,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment || encoding || extra) {\n      let options: any = {};\n      if (encoding) {\n        options.encoding = encoding;\n      }\n      if (commitment) {\n        options.commitment = commitment;\n      }\n      if (extra) {\n        options = Object.assign(options, extra);\n      }\n      args.push(options);\n    }\n    return args;\n  }\n\n  /**\n   * @internal\n   */\n  _buildArgsAtLeastConfirmed(\n    args: Array<any>,\n    override?: Finality,\n    encoding?: 'jsonParsed' | 'base64',\n    extra?: any,\n  ): Array<any> {\n    const commitment = override || this._commitment;\n    if (commitment && !['confirmed', 'finalized'].includes(commitment)) {\n      throw new Error(\n        'Using Connection with default commitment: `' +\n          this._commitment +\n          '`, but method requires at least `confirmed`',\n      );\n    }\n    return this._buildArgs(args, override, encoding, extra);\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnSignatureNotification(notification: Object) {\n    const res = create(notification, SignatureNotificationResult);\n    for (const [id, sub] of Object.entries(this._signatureSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        if (res.result.value === 'receivedSignature') {\n          sub.callback(\n            {\n              type: 'received',\n            },\n            res.result.context,\n          );\n        } else {\n          // Signatures subscriptions are auto-removed by the RPC service so\n          // no need to explicitly send an unsubscribe message\n          delete this._signatureSubscriptions[Number(id)];\n          this._updateSubscriptions();\n          sub.callback(\n            {\n              type: 'status',\n              result: res.result.value,\n            },\n            res.result.context,\n          );\n        }\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon signature updates\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param commitment Specify the commitment level signature must reach before notification\n   * @return subscription id\n   */\n  onSignature(\n    signature: TransactionSignature,\n    callback: SignatureResultCallback,\n    commitment?: Commitment,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback: (notification, context) => {\n        if (notification.type === 'status') {\n          callback(notification.result, context);\n        }\n      },\n      options: {commitment},\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Register a callback to be invoked when a transaction is\n   * received and/or processed.\n   *\n   * @param signature Transaction signature string in base 58\n   * @param callback Function to invoke on signature notifications\n   * @param options Enable received notifications and set the commitment\n   *   level that signature must reach before notification\n   * @return subscription id\n   */\n  onSignatureWithOptions(\n    signature: TransactionSignature,\n    callback: SignatureSubscriptionCallback,\n    options?: SignatureSubscriptionOptions,\n  ): number {\n    const id = ++this._signatureSubscriptionCounter;\n    this._signatureSubscriptions[id] = {\n      signature,\n      callback,\n      options,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a signature notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeSignatureListener(id: number): Promise<void> {\n    if (this._signatureSubscriptions[id]) {\n      const subInfo = this._signatureSubscriptions[id];\n      delete this._signatureSubscriptions[id];\n      await this._unsubscribe(subInfo, 'signatureUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown signature result id: ${id}`);\n    }\n  }\n\n  /**\n   * @internal\n   */\n  _wsOnRootNotification(notification: Object) {\n    const res = create(notification, RootNotificationResult);\n    for (const sub of Object.values(this._rootSubscriptions)) {\n      if (sub.subscriptionId === res.subscription) {\n        sub.callback(res.result);\n        return;\n      }\n    }\n  }\n\n  /**\n   * Register a callback to be invoked upon root changes\n   *\n   * @param callback Function to invoke whenever the root changes\n   * @return subscription id\n   */\n  onRootChange(callback: RootChangeCallback): number {\n    const id = ++this._rootSubscriptionCounter;\n    this._rootSubscriptions[id] = {\n      callback,\n      subscriptionId: null,\n    };\n    this._updateSubscriptions();\n    return id;\n  }\n\n  /**\n   * Deregister a root notification callback\n   *\n   * @param id subscription id to deregister\n   */\n  async removeRootChangeListener(id: number): Promise<void> {\n    if (this._rootSubscriptions[id]) {\n      const subInfo = this._rootSubscriptions[id];\n      delete this._rootSubscriptions[id];\n      await this._unsubscribe(subInfo, 'rootUnsubscribe');\n      this._updateSubscriptions();\n    } else {\n      throw new Error(`Unknown root change id: ${id}`);\n    }\n  }\n}\n","export function makeWebsocketUrl(endpoint: string) {\n  let url = new URL(endpoint);\n  const useHttps = url.protocol === 'https:';\n\n  url.protocol = useHttps ? 'wss:' : 'ws:';\n  url.host = '';\n\n  // Only shift the port by +1 as a convention for ws(s) only if given endpoint\n  // is explictly specifying the endpoint port (HTTP-based RPC), assuming\n  // we're directly trying to connect to solana-validator's ws listening port.\n  // When the endpoint omits the port, we're connecting to the protocol\n  // default ports: http(80) or https(443) and it's assumed we're behind a reverse\n  // proxy which manages WebSocket upgrade and backend port redirection.\n  if (url.port !== '') {\n    url.port = String(Number(url.port) + 1);\n  }\n  return url.toString();\n}\n","export function promiseTimeout<T>(\n  promise: Promise<T>,\n  timeoutMs: number,\n): Promise<T | null> {\n  let timeoutId: ReturnType<typeof setTimeout>;\n  const timeoutPromise: Promise<null> = new Promise(resolve => {\n    timeoutId = setTimeout(() => resolve(null), timeoutMs);\n  });\n\n  return Promise.race([promise, timeoutPromise]).then((result: T | null) => {\n    clearTimeout(timeoutId);\n    return result;\n  });\n}\n","import nacl from 'tweetnacl';\n\nimport {PublicKey} from './publickey';\n\n/**\n * Keypair signer interface\n */\nexport interface Signer {\n  publicKey: PublicKey;\n  secretKey: Uint8Array;\n}\n\n/**\n * Ed25519 Keypair\n */\nexport interface Ed25519Keypair {\n  publicKey: Uint8Array;\n  secretKey: Uint8Array;\n}\n\n/**\n * An account keypair used for signing transactions.\n */\nexport class Keypair {\n  private _keypair: Ed25519Keypair;\n\n  /**\n   * Create a new keypair instance.\n   * Generate random keypair if no {@link Ed25519Keypair} is provided.\n   *\n   * @param keypair ed25519 keypair\n   */\n  constructor(keypair?: Ed25519Keypair) {\n    if (keypair) {\n      this._keypair = keypair;\n    } else {\n      this._keypair = nacl.sign.keyPair();\n    }\n  }\n\n  /**\n   * Generate a new random keypair\n   */\n  static generate(): Keypair {\n    return new Keypair(nacl.sign.keyPair());\n  }\n\n  /**\n   * Create a keypair from a raw secret key byte array.\n   *\n   * This method should only be used to recreate a keypair from a previously\n   * generated secret key. Generating keypairs from a random seed should be done\n   * with the {@link Keypair.fromSeed} method.\n   *\n   * @throws error if the provided secret key is invalid and validation is not skipped.\n   *\n   * @param secretKey secret key byte array\n   * @param options: skip secret key validation\n   */\n  static fromSecretKey(\n    secretKey: Uint8Array,\n    options?: {skipValidation?: boolean},\n  ): Keypair {\n    const keypair = nacl.sign.keyPair.fromSecretKey(secretKey);\n    if (!options || !options.skipValidation) {\n      const encoder = new TextEncoder();\n      const signData = encoder.encode('@solana/web3.js-validation-v1');\n      const signature = nacl.sign.detached(signData, keypair.secretKey);\n      if (!nacl.sign.detached.verify(signData, signature, keypair.publicKey)) {\n        throw new Error('provided secretKey is invalid');\n      }\n    }\n    return new Keypair(keypair);\n  }\n\n  /**\n   * Generate a keypair from a 32 byte seed.\n   *\n   * @param seed seed byte array\n   */\n  static fromSeed(seed: Uint8Array): Keypair {\n    return new Keypair(nacl.sign.keyPair.fromSeed(seed));\n  }\n\n  /**\n   * The public key for this keypair\n   */\n  get publicKey(): PublicKey {\n    return new PublicKey(this._keypair.publicKey);\n  }\n\n  /**\n   * The raw secret key for this keypair\n   */\n  get secretKey(): Uint8Array {\n    return this._keypair.secretKey;\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport nacl from 'tweetnacl';\n\nimport {Keypair} from './keypair';\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\n\nconst PRIVATE_KEY_BYTES = 64;\nconst PUBLIC_KEY_BYTES = 32;\nconst SIGNATURE_BYTES = 64;\n\n/**\n * Params for creating an ed25519 instruction using a public key\n */\nexport type CreateEd25519InstructionWithPublicKeyParams = {\n  publicKey: Uint8Array;\n  message: Uint8Array;\n  signature: Uint8Array;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an ed25519 instruction using a private key\n */\nexport type CreateEd25519InstructionWithPrivateKeyParams = {\n  privateKey: Uint8Array;\n  message: Uint8Array;\n  instructionIndex?: number;\n};\n\nconst ED25519_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    padding: number;\n    publicKeyInstructionIndex: number;\n    publicKeyOffset: number;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u8('padding'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u16('signatureInstructionIndex'),\n  BufferLayout.u16('publicKeyOffset'),\n  BufferLayout.u16('publicKeyInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u16('messageInstructionIndex'),\n]);\n\nexport class Ed25519Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the ed25519 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Ed25519SigVerify111111111111111111111111111',\n  );\n\n  /**\n   * Create an ed25519 instruction with a public key and signature. The\n   * public key must be a buffer that is 32 bytes long, and the signature\n   * must be a buffer of 64 bytes.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateEd25519InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, instructionIndex} = params;\n\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public Key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    assert(\n      signature.length === SIGNATURE_BYTES,\n      `Signature must be ${SIGNATURE_BYTES} bytes but received ${signature.length} bytes`,\n    );\n\n    const publicKeyOffset = ED25519_INSTRUCTION_LAYOUT.span;\n    const signatureOffset = publicKeyOffset + publicKey.length;\n    const messageDataOffset = signatureOffset + signature.length;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(messageDataOffset + message.length);\n\n    const index =\n      instructionIndex == null\n        ? 0xffff // An index of `u16::MAX` makes it default to the current instruction.\n        : instructionIndex;\n\n    ED25519_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        padding: 0,\n        signatureOffset,\n        signatureInstructionIndex: index,\n        publicKeyOffset,\n        publicKeyInstructionIndex: index,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: index,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(publicKey, publicKeyOffset);\n    instructionData.fill(signature, signatureOffset);\n    instructionData.fill(message, messageDataOffset);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Ed25519Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an ed25519 instruction with a private key. The private key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateEd25519InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey, message, instructionIndex} = params;\n\n    assert(\n      privateKey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${privateKey.length} bytes`,\n    );\n\n    try {\n      const keypair = Keypair.fromSecretKey(privateKey);\n      const publicKey = keypair.publicKey.toBytes();\n      const signature = nacl.sign.detached(message, keypair.secretKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {\n  SYSVAR_CLOCK_PUBKEY,\n  SYSVAR_RENT_PUBKEY,\n  SYSVAR_STAKE_HISTORY_PUBKEY,\n} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Address of the stake config account which configures the rate\n * of stake warmup and cooldown as well as the slashing penalty.\n */\nexport const STAKE_CONFIG_ID = new PublicKey(\n  'StakeConfig11111111111111111111111111111111',\n);\n\n/**\n * Stake account authority info\n */\nexport class Authorized {\n  /** stake authority */\n  staker: PublicKey;\n  /** withdraw authority */\n  withdrawer: PublicKey;\n\n  /**\n   * Create a new Authorized object\n   * @param staker the stake authority\n   * @param withdrawer the withdraw authority\n   */\n  constructor(staker: PublicKey, withdrawer: PublicKey) {\n    this.staker = staker;\n    this.withdrawer = withdrawer;\n  }\n}\n\ntype AuthorizedRaw = Readonly<{\n  staker: Uint8Array;\n  withdrawer: Uint8Array;\n}>;\n\n/**\n * Stake account lockup info\n */\nexport class Lockup {\n  /** Unix timestamp of lockup expiration */\n  unixTimestamp: number;\n  /** Epoch of lockup expiration */\n  epoch: number;\n  /** Lockup custodian authority */\n  custodian: PublicKey;\n\n  /**\n   * Create a new Lockup object\n   */\n  constructor(unixTimestamp: number, epoch: number, custodian: PublicKey) {\n    this.unixTimestamp = unixTimestamp;\n    this.epoch = epoch;\n    this.custodian = custodian;\n  }\n\n  /**\n   * Default, inactive Lockup value\n   */\n  static default: Lockup = new Lockup(0, 0, PublicKey.default);\n}\n\ntype LockupRaw = Readonly<{\n  custodian: Uint8Array;\n  epoch: number;\n  unixTimestamp: number;\n}>;\n\n/**\n * Create stake account transaction params\n */\nexport type CreateStakeAccountParams = {\n  /** Address of the account which will fund creation */\n  fromPubkey: PublicKey;\n  /** Address of the new stake account */\n  stakePubkey: PublicKey;\n  /** Authorities of the new stake account */\n  authorized: Authorized;\n  /** Lockup of the new stake account */\n  lockup?: Lockup;\n  /** Funding amount */\n  lamports: number;\n};\n\n/**\n * Create stake account with seed transaction params\n */\nexport type CreateStakeAccountWithSeedParams = {\n  fromPubkey: PublicKey;\n  stakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  authorized: Authorized;\n  lockup?: Lockup;\n  lamports: number;\n};\n\n/**\n * Initialize stake instruction params\n */\nexport type InitializeStakeParams = {\n  stakePubkey: PublicKey;\n  authorized: Authorized;\n  lockup?: Lockup;\n};\n\n/**\n * Delegate stake instruction params\n */\nexport type DelegateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  votePubkey: PublicKey;\n};\n\n/**\n * Authorize stake instruction params\n */\nexport type AuthorizeStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Authorize stake instruction params using a derived key\n */\nexport type AuthorizeWithSeedStakeParams = {\n  stakePubkey: PublicKey;\n  authorityBase: PublicKey;\n  authoritySeed: string;\n  authorityOwner: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  stakeAuthorizationType: StakeAuthorizationType;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Split stake instruction params\n */\nexport type SplitStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  lamports: number;\n};\n\n/**\n * Split with seed transaction params\n */\nexport type SplitStakeWithSeedParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  splitStakePubkey: PublicKey;\n  basePubkey: PublicKey;\n  seed: string;\n  lamports: number;\n};\n\n/**\n * Withdraw stake instruction params\n */\nexport type WithdrawStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n  toPubkey: PublicKey;\n  lamports: number;\n  custodianPubkey?: PublicKey;\n};\n\n/**\n * Deactivate stake instruction params\n */\nexport type DeactivateStakeParams = {\n  stakePubkey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Merge stake instruction params\n */\nexport type MergeStakeParams = {\n  stakePubkey: PublicKey;\n  sourceStakePubKey: PublicKey;\n  authorizedPubkey: PublicKey;\n};\n\n/**\n * Stake Instruction class\n */\nexport class StakeInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a stake instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): StakeInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: StakeInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(STAKE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as StakeInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a StakeInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode a initialize stake instruction and retrieve the instruction params.\n   */\n  static decodeInitialize(\n    instruction: TransactionInstruction,\n  ): InitializeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {authorized, lockup} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Initialize,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorized: new Authorized(\n        new PublicKey(authorized.staker),\n        new PublicKey(authorized.withdrawer),\n      ),\n      lockup: new Lockup(\n        lockup.unixTimestamp,\n        lockup.epoch,\n        new PublicKey(lockup.custodian),\n      ),\n    };\n  }\n\n  /**\n   * Decode a delegate stake instruction and retrieve the instruction params.\n   */\n  static decodeDelegate(\n    instruction: TransactionInstruction,\n  ): DelegateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 6);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Delegate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      votePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[5].pubkey,\n    };\n  }\n\n  /**\n   * Decode an authorize stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {newAuthorized, stakeAuthorizationType} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    const o: AuthorizeStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode an authorize-with-seed stake instruction and retrieve the instruction params.\n   */\n  static decodeAuthorizeWithSeed(\n    instruction: TransactionInstruction,\n  ): AuthorizeWithSeedStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 2);\n\n    const {\n      newAuthorized,\n      stakeAuthorizationType,\n      authoritySeed,\n      authorityOwner,\n    } = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed,\n      instruction.data,\n    );\n\n    const o: AuthorizeWithSeedStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorityBase: instruction.keys[1].pubkey,\n      authoritySeed: authoritySeed,\n      authorityOwner: new PublicKey(authorityOwner),\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      stakeAuthorizationType: {\n        index: stakeAuthorizationType,\n      },\n    };\n    if (instruction.keys.length > 3) {\n      o.custodianPubkey = instruction.keys[3].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a split stake instruction and retrieve the instruction params.\n   */\n  static decodeSplit(instruction: TransactionInstruction): SplitStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Split,\n      instruction.data,\n    );\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      splitStakePubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      lamports,\n    };\n  }\n\n  /**\n   * Decode a merge stake instruction and retrieve the instruction params.\n   */\n  static decodeMerge(instruction: TransactionInstruction): MergeStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Merge, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      sourceStakePubKey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n    };\n  }\n\n  /**\n   * Decode a withdraw stake instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 5);\n    const {lamports} = decodeData(\n      STAKE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    const o: WithdrawStakeParams = {\n      stakePubkey: instruction.keys[0].pubkey,\n      toPubkey: instruction.keys[1].pubkey,\n      authorizedPubkey: instruction.keys[4].pubkey,\n      lamports,\n    };\n    if (instruction.keys.length > 5) {\n      o.custodianPubkey = instruction.keys[5].pubkey;\n    }\n    return o;\n  }\n\n  /**\n   * Decode a deactivate stake instruction and retrieve the instruction params.\n   */\n  static decodeDeactivate(\n    instruction: TransactionInstruction,\n  ): DeactivateStakeParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n    decodeData(STAKE_INSTRUCTION_LAYOUTS.Deactivate, instruction.data);\n\n    return {\n      stakePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(StakeProgram.programId)) {\n      throw new Error('invalid instruction; programId is not StakeProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid StakeInstructionType's\n */\nexport type StakeInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof StakeInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  | 'Authorize'\n  | 'AuthorizeWithSeed'\n  | 'Deactivate'\n  | 'Delegate'\n  | 'Initialize'\n  | 'Merge'\n  | 'Split'\n  | 'Withdraw';\n\ntype StakeInstructionInputData = {\n  Authorize: IInstructionInputData &\n    Readonly<{\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  AuthorizeWithSeed: IInstructionInputData &\n    Readonly<{\n      authorityOwner: Uint8Array;\n      authoritySeed: string;\n      instruction: number;\n      newAuthorized: Uint8Array;\n      stakeAuthorizationType: number;\n    }>;\n  Deactivate: IInstructionInputData;\n  Delegate: IInstructionInputData;\n  Initialize: IInstructionInputData &\n    Readonly<{\n      authorized: AuthorizedRaw;\n      lockup: LockupRaw;\n    }>;\n  Merge: IInstructionInputData;\n  Split: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n  Withdraw: IInstructionInputData &\n    Readonly<{\n      lamports: number;\n    }>;\n};\n\n/**\n * An enumeration of valid stake InstructionType's\n * @internal\n */\nexport const STAKE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in StakeInstructionType]: InstructionType<\n    StakeInstructionInputData[Instruction]\n  >;\n}>({\n  Initialize: {\n    index: 0,\n    layout: BufferLayout.struct<StakeInstructionInputData['Initialize']>([\n      BufferLayout.u32('instruction'),\n      Layout.authorized(),\n      Layout.lockup(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<StakeInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('stakeAuthorizationType'),\n    ]),\n  },\n  Delegate: {\n    index: 2,\n    layout: BufferLayout.struct<StakeInstructionInputData['Delegate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Split: {\n    index: 3,\n    layout: BufferLayout.struct<StakeInstructionInputData['Split']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Withdraw: {\n    index: 4,\n    layout: BufferLayout.struct<StakeInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n  Deactivate: {\n    index: 5,\n    layout: BufferLayout.struct<StakeInstructionInputData['Deactivate']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  Merge: {\n    index: 7,\n    layout: BufferLayout.struct<StakeInstructionInputData['Merge']>([\n      BufferLayout.u32('instruction'),\n    ]),\n  },\n  AuthorizeWithSeed: {\n    index: 8,\n    layout: BufferLayout.struct<StakeInstructionInputData['AuthorizeWithSeed']>(\n      [\n        BufferLayout.u32('instruction'),\n        Layout.publicKey('newAuthorized'),\n        BufferLayout.u32('stakeAuthorizationType'),\n        Layout.rustString('authoritySeed'),\n        Layout.publicKey('authorityOwner'),\n      ],\n    ),\n  },\n});\n\n/**\n * Stake authorization type\n */\nexport type StakeAuthorizationType = {\n  /** The Stake Authorization index (from solana-stake-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid StakeAuthorizationLayout's\n */\nexport const StakeAuthorizationLayout = Object.freeze({\n  Staker: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Stake program\n */\nexport class StakeProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Stake program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Stake11111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Stake account\n   *\n   * This is generated from the solana-stake-program StakeState struct as\n   * `std::mem::size_of::<StakeState>()`:\n   * https://docs.rs/solana-stake-program/1.4.4/solana_stake_program/stake_state/enum.StakeState.html\n   */\n  static space: number = 200;\n\n  /**\n   * Generate an Initialize instruction to add to a Stake Create transaction\n   */\n  static initialize(params: InitializeStakeParams): TransactionInstruction {\n    const {stakePubkey, authorized, lockup: maybeLockup} = params;\n    const lockup: Lockup = maybeLockup || Lockup.default;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Initialize;\n    const data = encodeData(type, {\n      authorized: {\n        staker: toBuffer(authorized.staker.toBuffer()),\n        withdrawer: toBuffer(authorized.withdrawer.toBuffer()),\n      },\n      lockup: {\n        unixTimestamp: lockup.unixTimestamp,\n        epoch: lockup.epoch,\n        custodian: toBuffer(lockup.custodian.toBuffer()),\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account at\n   *   an address generated with `from`, a seed, and the Stake programId\n   */\n  static createAccountWithSeed(\n    params: CreateStakeAccountWithSeedParams,\n  ): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccountWithSeed({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        basePubkey: params.basePubkey,\n        seed: params.seed,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that creates a new Stake account\n   */\n  static createAccount(params: CreateStakeAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.stakePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    const {stakePubkey, authorized, lockup} = params;\n    return transaction.add(this.initialize({stakePubkey, authorized, lockup}));\n  }\n\n  /**\n   * Generate a Transaction that delegates Stake tokens to a validator\n   * Vote PublicKey. This transaction can also be used to redelegate Stake\n   * to a new validator Vote PublicKey.\n   */\n  static delegate(params: DelegateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, votePubkey} = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Delegate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: votePubkey, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: STAKE_CONFIG_ID, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorize(params: AuthorizeStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: true},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that authorizes a new PublicKey as Staker\n   * or Withdrawer on the Stake account.\n   */\n  static authorizeWithSeed(params: AuthorizeWithSeedStakeParams): Transaction {\n    const {\n      stakePubkey,\n      authorityBase,\n      authoritySeed,\n      authorityOwner,\n      newAuthorizedPubkey,\n      stakeAuthorizationType,\n      custodianPubkey,\n    } = params;\n\n    const type = STAKE_INSTRUCTION_LAYOUTS.AuthorizeWithSeed;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      stakeAuthorizationType: stakeAuthorizationType.index,\n      authoritySeed: authoritySeed,\n      authorityOwner: toBuffer(authorityOwner.toBuffer()),\n    });\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: authorityBase, isSigner: true, isWritable: false},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * @internal\n   */\n  static splitInstruction(params: SplitStakeParams): TransactionInstruction {\n    const {stakePubkey, authorizedPubkey, splitStakePubkey, lamports} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Split;\n    const data = encodeData(type, {lamports});\n    return new TransactionInstruction({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: splitStakePubkey, isSigner: false, isWritable: true},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another stake account\n   */\n  static split(params: SplitStakeParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.authorizedPubkey,\n        newAccountPubkey: params.splitStakePubkey,\n        lamports: 0,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(this.splitInstruction(params));\n  }\n\n  /**\n   * Generate a Transaction that splits Stake tokens into another account\n   * derived from a base public key and seed\n   */\n  static splitWithSeed(params: SplitStakeWithSeedParams): Transaction {\n    const {\n      stakePubkey,\n      authorizedPubkey,\n      splitStakePubkey,\n      basePubkey,\n      seed,\n      lamports,\n    } = params;\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.allocate({\n        accountPubkey: splitStakePubkey,\n        basePubkey,\n        seed,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n    return transaction.add(\n      this.splitInstruction({\n        stakePubkey,\n        authorizedPubkey,\n        splitStakePubkey,\n        lamports,\n      }),\n    );\n  }\n\n  /**\n   * Generate a Transaction that merges Stake accounts.\n   */\n  static merge(params: MergeStakeParams): Transaction {\n    const {stakePubkey, sourceStakePubKey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Merge;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: sourceStakePubKey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {\n          pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that withdraws deactivated Stake tokens.\n   */\n  static withdraw(params: WithdrawStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey, toPubkey, lamports, custodianPubkey} =\n      params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: stakePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {\n        pubkey: SYSVAR_STAKE_HISTORY_PUBKEY,\n        isSigner: false,\n        isWritable: false,\n      },\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n    if (custodianPubkey) {\n      keys.push({pubkey: custodianPubkey, isSigner: false, isWritable: false});\n    }\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a Transaction that deactivates Stake tokens.\n   */\n  static deactivate(params: DeactivateStakeParams): Transaction {\n    const {stakePubkey, authorizedPubkey} = params;\n    const type = STAKE_INSTRUCTION_LAYOUTS.Deactivate;\n    const data = encodeData(type);\n\n    return new Transaction().add({\n      keys: [\n        {pubkey: stakePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import {Buffer} from 'buffer';\nimport * as BufferLayout from '@solana/buffer-layout';\nimport secp256k1 from 'secp256k1';\nimport sha3 from 'js-sha3';\n\nimport {PublicKey} from './publickey';\nimport {TransactionInstruction} from './transaction';\nimport assert from './util/assert';\nimport {toBuffer} from './util/to-buffer';\n\nconst {publicKeyCreate, ecdsaSign} = secp256k1;\n\nconst PRIVATE_KEY_BYTES = 32;\nconst ETHEREUM_ADDRESS_BYTES = 20;\nconst PUBLIC_KEY_BYTES = 64;\nconst SIGNATURE_OFFSETS_SERIALIZED_SIZE = 11;\n\n/**\n * Params for creating an secp256k1 instruction using a public key\n */\nexport type CreateSecp256k1InstructionWithPublicKeyParams = {\n  publicKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using an Ethereum address\n */\nexport type CreateSecp256k1InstructionWithEthAddressParams = {\n  ethAddress: Buffer | Uint8Array | Array<number> | string;\n  message: Buffer | Uint8Array | Array<number>;\n  signature: Buffer | Uint8Array | Array<number>;\n  recoveryId: number;\n  instructionIndex?: number;\n};\n\n/**\n * Params for creating an secp256k1 instruction using a private key\n */\nexport type CreateSecp256k1InstructionWithPrivateKeyParams = {\n  privateKey: Buffer | Uint8Array | Array<number>;\n  message: Buffer | Uint8Array | Array<number>;\n  instructionIndex?: number;\n};\n\nconst SECP256K1_INSTRUCTION_LAYOUT = BufferLayout.struct<\n  Readonly<{\n    ethAddress: Uint8Array;\n    ethAddressInstructionIndex: number;\n    ethAddressOffset: number;\n    messageDataOffset: number;\n    messageDataSize: number;\n    messageInstructionIndex: number;\n    numSignatures: number;\n    recoveryId: number;\n    signature: Uint8Array;\n    signatureInstructionIndex: number;\n    signatureOffset: number;\n  }>\n>([\n  BufferLayout.u8('numSignatures'),\n  BufferLayout.u16('signatureOffset'),\n  BufferLayout.u8('signatureInstructionIndex'),\n  BufferLayout.u16('ethAddressOffset'),\n  BufferLayout.u8('ethAddressInstructionIndex'),\n  BufferLayout.u16('messageDataOffset'),\n  BufferLayout.u16('messageDataSize'),\n  BufferLayout.u8('messageInstructionIndex'),\n  BufferLayout.blob(20, 'ethAddress'),\n  BufferLayout.blob(64, 'signature'),\n  BufferLayout.u8('recoveryId'),\n]);\n\nexport class Secp256k1Program {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the secp256k1 program\n   */\n  static programId: PublicKey = new PublicKey(\n    'KeccakSecp256k11111111111111111111111111111',\n  );\n\n  /**\n   * Construct an Ethereum address from a secp256k1 public key buffer.\n   * @param {Buffer} publicKey a 64 byte secp256k1 public key buffer\n   */\n  static publicKeyToEthAddress(\n    publicKey: Buffer | Uint8Array | Array<number>,\n  ): Buffer {\n    assert(\n      publicKey.length === PUBLIC_KEY_BYTES,\n      `Public key must be ${PUBLIC_KEY_BYTES} bytes but received ${publicKey.length} bytes`,\n    );\n\n    try {\n      return Buffer.from(\n        sha3.keccak_256.update(toBuffer(publicKey)).digest(),\n      ).slice(-ETHEREUM_ADDRESS_BYTES);\n    } catch (error) {\n      throw new Error(`Error constructing Ethereum address: ${error}`);\n    }\n  }\n\n  /**\n   * Create an secp256k1 instruction with a public key. The public key\n   * must be a buffer that is 64 bytes long.\n   */\n  static createInstructionWithPublicKey(\n    params: CreateSecp256k1InstructionWithPublicKeyParams,\n  ): TransactionInstruction {\n    const {publicKey, message, signature, recoveryId, instructionIndex} =\n      params;\n    return Secp256k1Program.createInstructionWithEthAddress({\n      ethAddress: Secp256k1Program.publicKeyToEthAddress(publicKey),\n      message,\n      signature,\n      recoveryId,\n      instructionIndex,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with an Ethereum address. The address\n   * must be a hex string or a buffer that is 20 bytes long.\n   */\n  static createInstructionWithEthAddress(\n    params: CreateSecp256k1InstructionWithEthAddressParams,\n  ): TransactionInstruction {\n    const {\n      ethAddress: rawAddress,\n      message,\n      signature,\n      recoveryId,\n      instructionIndex = 0,\n    } = params;\n\n    let ethAddress;\n    if (typeof rawAddress === 'string') {\n      if (rawAddress.startsWith('0x')) {\n        ethAddress = Buffer.from(rawAddress.substr(2), 'hex');\n      } else {\n        ethAddress = Buffer.from(rawAddress, 'hex');\n      }\n    } else {\n      ethAddress = rawAddress;\n    }\n\n    assert(\n      ethAddress.length === ETHEREUM_ADDRESS_BYTES,\n      `Address must be ${ETHEREUM_ADDRESS_BYTES} bytes but received ${ethAddress.length} bytes`,\n    );\n\n    const dataStart = 1 + SIGNATURE_OFFSETS_SERIALIZED_SIZE;\n    const ethAddressOffset = dataStart;\n    const signatureOffset = dataStart + ethAddress.length;\n    const messageDataOffset = signatureOffset + signature.length + 1;\n    const numSignatures = 1;\n\n    const instructionData = Buffer.alloc(\n      SECP256K1_INSTRUCTION_LAYOUT.span + message.length,\n    );\n\n    SECP256K1_INSTRUCTION_LAYOUT.encode(\n      {\n        numSignatures,\n        signatureOffset,\n        signatureInstructionIndex: instructionIndex,\n        ethAddressOffset,\n        ethAddressInstructionIndex: instructionIndex,\n        messageDataOffset,\n        messageDataSize: message.length,\n        messageInstructionIndex: instructionIndex,\n        signature: toBuffer(signature),\n        ethAddress: toBuffer(ethAddress),\n        recoveryId,\n      },\n      instructionData,\n    );\n\n    instructionData.fill(toBuffer(message), SECP256K1_INSTRUCTION_LAYOUT.span);\n\n    return new TransactionInstruction({\n      keys: [],\n      programId: Secp256k1Program.programId,\n      data: instructionData,\n    });\n  }\n\n  /**\n   * Create an secp256k1 instruction with a private key. The private key\n   * must be a buffer that is 32 bytes long.\n   */\n  static createInstructionWithPrivateKey(\n    params: CreateSecp256k1InstructionWithPrivateKeyParams,\n  ): TransactionInstruction {\n    const {privateKey: pkey, message, instructionIndex} = params;\n\n    assert(\n      pkey.length === PRIVATE_KEY_BYTES,\n      `Private key must be ${PRIVATE_KEY_BYTES} bytes but received ${pkey.length} bytes`,\n    );\n\n    try {\n      const privateKey = toBuffer(pkey);\n      const publicKey = publicKeyCreate(privateKey, false).slice(1); // throw away leading byte\n      const messageHash = Buffer.from(\n        sha3.keccak_256.update(toBuffer(message)).digest(),\n      );\n      const {signature, recid: recoveryId} = ecdsaSign(messageHash, privateKey);\n\n      return this.createInstructionWithPublicKey({\n        publicKey,\n        message,\n        signature,\n        recoveryId,\n        instructionIndex,\n      });\n    } catch (error) {\n      throw new Error(`Error creating instruction; ${error}`);\n    }\n  }\n}\n","import {Buffer} from 'buffer';\nimport {\n  assert as assertType,\n  optional,\n  string,\n  type as pick,\n} from 'superstruct';\n\nimport * as Layout from './layout';\nimport * as shortvec from './util/shortvec-encoding';\nimport {PublicKey} from './publickey';\n\nexport const VALIDATOR_INFO_KEY = new PublicKey(\n  'Va1idator1nfo111111111111111111111111111111',\n);\n\n/**\n * @internal\n */\ntype ConfigKey = {\n  publicKey: PublicKey;\n  isSigner: boolean;\n};\n\n/**\n * Info used to identity validators.\n */\nexport type Info = {\n  /** validator name */\n  name: string;\n  /** optional, validator website */\n  website?: string;\n  /** optional, extra information the validator chose to share */\n  details?: string;\n  /** optional, used to identify validators on keybase.io */\n  keybaseUsername?: string;\n};\n\nconst InfoString = pick({\n  name: string(),\n  website: optional(string()),\n  details: optional(string()),\n  keybaseUsername: optional(string()),\n});\n\n/**\n * ValidatorInfo class\n */\nexport class ValidatorInfo {\n  /**\n   * validator public key\n   */\n  key: PublicKey;\n  /**\n   * validator information\n   */\n  info: Info;\n\n  /**\n   * Construct a valid ValidatorInfo\n   *\n   * @param key validator public key\n   * @param info validator information\n   */\n  constructor(key: PublicKey, info: Info) {\n    this.key = key;\n    this.info = info;\n  }\n\n  /**\n   * Deserialize ValidatorInfo from the config account data. Exactly two config\n   * keys are required in the data.\n   *\n   * @param buffer config account data\n   * @return null if info was not found\n   */\n  static fromConfigData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): ValidatorInfo | null {\n    const PUBKEY_LENGTH = 32;\n\n    let byteArray = [...buffer];\n    const configKeyCount = shortvec.decodeLength(byteArray);\n    if (configKeyCount !== 2) return null;\n\n    const configKeys: Array<ConfigKey> = [];\n    for (let i = 0; i < 2; i++) {\n      const publicKey = new PublicKey(byteArray.slice(0, PUBKEY_LENGTH));\n      byteArray = byteArray.slice(PUBKEY_LENGTH);\n      const isSigner = byteArray.slice(0, 1)[0] === 1;\n      byteArray = byteArray.slice(1);\n      configKeys.push({publicKey, isSigner});\n    }\n\n    if (configKeys[0].publicKey.equals(VALIDATOR_INFO_KEY)) {\n      if (configKeys[1].isSigner) {\n        const rawInfo: any = Layout.rustString().decode(Buffer.from(byteArray));\n        const info = JSON.parse(rawInfo as string);\n        assertType(info, InfoString);\n        return new ValidatorInfo(configKeys[1].publicKey, info);\n      }\n    }\n\n    return null;\n  }\n}\n","import * as BufferLayout from '@solana/buffer-layout';\nimport type {Buffer} from 'buffer';\n\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {toBuffer} from './util/to-buffer';\n\nexport const VOTE_PROGRAM_ID = new PublicKey(\n  'Vote111111111111111111111111111111111111111',\n);\n\nexport type Lockout = {\n  slot: number;\n  confirmationCount: number;\n};\n\n/**\n * History of how many credits earned by the end of each epoch\n */\nexport type EpochCredits = Readonly<{\n  epoch: number;\n  credits: number;\n  prevCredits: number;\n}>;\n\nexport type AuthorizedVoter = Readonly<{\n  epoch: number;\n  authorizedVoter: PublicKey;\n}>;\n\ntype AuthorizedVoterRaw = Readonly<{\n  authorizedVoter: Uint8Array;\n  epoch: number;\n}>;\n\ntype PriorVoters = Readonly<{\n  buf: PriorVoterRaw[];\n  idx: number;\n  isEmpty: number;\n}>;\n\nexport type PriorVoter = Readonly<{\n  authorizedPubkey: PublicKey;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\ntype PriorVoterRaw = Readonly<{\n  authorizedPubkey: Uint8Array;\n  epochOfLastAuthorizedSwitch: number;\n  targetEpoch: number;\n}>;\n\nexport type BlockTimestamp = Readonly<{\n  slot: number;\n  timestamp: number;\n}>;\n\ntype VoteAccountData = Readonly<{\n  authorizedVoters: AuthorizedVoterRaw[];\n  authorizedWithdrawer: Uint8Array;\n  commission: number;\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n  nodePubkey: Uint8Array;\n  priorVoters: PriorVoters;\n  rootSlot: number;\n  rootSlotValid: number;\n  votes: Lockout[];\n}>;\n\n/**\n * See https://github.com/solana-labs/solana/blob/8a12ed029cfa38d4a45400916c2463fb82bbec8c/programs/vote_api/src/vote_state.rs#L68-L88\n *\n * @internal\n */\nconst VoteAccountLayout = BufferLayout.struct<VoteAccountData>([\n  Layout.publicKey('nodePubkey'),\n  Layout.publicKey('authorizedWithdrawer'),\n  BufferLayout.u8('commission'),\n  BufferLayout.nu64(), // votes.length\n  BufferLayout.seq<Lockout>(\n    BufferLayout.struct([\n      BufferLayout.nu64('slot'),\n      BufferLayout.u32('confirmationCount'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'votes',\n  ),\n  BufferLayout.u8('rootSlotValid'),\n  BufferLayout.nu64('rootSlot'),\n  BufferLayout.nu64(), // authorizedVoters.length\n  BufferLayout.seq<AuthorizedVoterRaw>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      Layout.publicKey('authorizedVoter'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'authorizedVoters',\n  ),\n  BufferLayout.struct<PriorVoters>(\n    [\n      BufferLayout.seq(\n        BufferLayout.struct([\n          Layout.publicKey('authorizedPubkey'),\n          BufferLayout.nu64('epochOfLastAuthorizedSwitch'),\n          BufferLayout.nu64('targetEpoch'),\n        ]),\n        32,\n        'buf',\n      ),\n      BufferLayout.nu64('idx'),\n      BufferLayout.u8('isEmpty'),\n    ],\n    'priorVoters',\n  ),\n  BufferLayout.nu64(), // epochCredits.length\n  BufferLayout.seq<EpochCredits>(\n    BufferLayout.struct([\n      BufferLayout.nu64('epoch'),\n      BufferLayout.nu64('credits'),\n      BufferLayout.nu64('prevCredits'),\n    ]),\n    BufferLayout.offset(BufferLayout.u32(), -8),\n    'epochCredits',\n  ),\n  BufferLayout.struct<BlockTimestamp>(\n    [BufferLayout.nu64('slot'), BufferLayout.nu64('timestamp')],\n    'lastTimestamp',\n  ),\n]);\n\ntype VoteAccountArgs = {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n};\n\n/**\n * VoteAccount class\n */\nexport class VoteAccount {\n  nodePubkey: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number;\n  rootSlot: number | null;\n  votes: Lockout[];\n  authorizedVoters: AuthorizedVoter[];\n  priorVoters: PriorVoter[];\n  epochCredits: EpochCredits[];\n  lastTimestamp: BlockTimestamp;\n\n  /**\n   * @internal\n   */\n  constructor(args: VoteAccountArgs) {\n    this.nodePubkey = args.nodePubkey;\n    this.authorizedWithdrawer = args.authorizedWithdrawer;\n    this.commission = args.commission;\n    this.rootSlot = args.rootSlot;\n    this.votes = args.votes;\n    this.authorizedVoters = args.authorizedVoters;\n    this.priorVoters = args.priorVoters;\n    this.epochCredits = args.epochCredits;\n    this.lastTimestamp = args.lastTimestamp;\n  }\n\n  /**\n   * Deserialize VoteAccount from the account data.\n   *\n   * @param buffer account data\n   * @return VoteAccount\n   */\n  static fromAccountData(\n    buffer: Buffer | Uint8Array | Array<number>,\n  ): VoteAccount {\n    const versionOffset = 4;\n    const va = VoteAccountLayout.decode(toBuffer(buffer), versionOffset);\n\n    let rootSlot: number | null = va.rootSlot;\n    if (!va.rootSlotValid) {\n      rootSlot = null;\n    }\n\n    return new VoteAccount({\n      nodePubkey: new PublicKey(va.nodePubkey),\n      authorizedWithdrawer: new PublicKey(va.authorizedWithdrawer),\n      commission: va.commission,\n      votes: va.votes,\n      rootSlot,\n      authorizedVoters: va.authorizedVoters.map(parseAuthorizedVoter),\n      priorVoters: getPriorVoters(va.priorVoters),\n      epochCredits: va.epochCredits,\n      lastTimestamp: va.lastTimestamp,\n    });\n  }\n}\n\nfunction parseAuthorizedVoter({\n  authorizedVoter,\n  epoch,\n}: AuthorizedVoterRaw): AuthorizedVoter {\n  return {\n    epoch,\n    authorizedVoter: new PublicKey(authorizedVoter),\n  };\n}\n\nfunction parsePriorVoters({\n  authorizedPubkey,\n  epochOfLastAuthorizedSwitch,\n  targetEpoch,\n}: PriorVoterRaw): PriorVoter {\n  return {\n    authorizedPubkey: new PublicKey(authorizedPubkey),\n    epochOfLastAuthorizedSwitch,\n    targetEpoch,\n  };\n}\n\nfunction getPriorVoters({buf, idx, isEmpty}: PriorVoters): PriorVoter[] {\n  if (isEmpty) {\n    return [];\n  }\n\n  return [\n    ...buf.slice(idx + 1).map(parsePriorVoters),\n    ...buf.slice(0, idx).map(parsePriorVoters),\n  ];\n}\n","import * as BufferLayout from '@solana/buffer-layout';\n\nimport {\n  encodeData,\n  decodeData,\n  InstructionType,\n  IInstructionInputData,\n} from './instruction';\nimport * as Layout from './layout';\nimport {PublicKey} from './publickey';\nimport {SystemProgram} from './system-program';\nimport {SYSVAR_CLOCK_PUBKEY, SYSVAR_RENT_PUBKEY} from './sysvar';\nimport {Transaction, TransactionInstruction} from './transaction';\nimport {toBuffer} from './util/to-buffer';\n\n/**\n * Vote account info\n */\nexport class VoteInit {\n  nodePubkey: PublicKey;\n  authorizedVoter: PublicKey;\n  authorizedWithdrawer: PublicKey;\n  commission: number; /** [0, 100] */\n\n  constructor(\n    nodePubkey: PublicKey,\n    authorizedVoter: PublicKey,\n    authorizedWithdrawer: PublicKey,\n    commission: number,\n  ) {\n    this.nodePubkey = nodePubkey;\n    this.authorizedVoter = authorizedVoter;\n    this.authorizedWithdrawer = authorizedWithdrawer;\n    this.commission = commission;\n  }\n}\n\n/**\n * Create vote account transaction params\n */\nexport type CreateVoteAccountParams = {\n  fromPubkey: PublicKey;\n  votePubkey: PublicKey;\n  voteInit: VoteInit;\n  lamports: number;\n};\n\n/**\n * InitializeAccount instruction params\n */\nexport type InitializeAccountParams = {\n  votePubkey: PublicKey;\n  nodePubkey: PublicKey;\n  voteInit: VoteInit;\n};\n\n/**\n * Authorize instruction params\n */\nexport type AuthorizeVoteParams = {\n  votePubkey: PublicKey;\n  /** Current vote or withdraw authority, depending on `voteAuthorizationType` */\n  authorizedPubkey: PublicKey;\n  newAuthorizedPubkey: PublicKey;\n  voteAuthorizationType: VoteAuthorizationType;\n};\n\n/**\n * Withdraw from vote account transaction params\n */\nexport type WithdrawFromVoteAccountParams = {\n  votePubkey: PublicKey;\n  authorizedWithdrawerPubkey: PublicKey;\n  lamports: number;\n  toPubkey: PublicKey;\n};\n\n/**\n * Vote Instruction class\n */\nexport class VoteInstruction {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Decode a vote instruction and retrieve the instruction type.\n   */\n  static decodeInstructionType(\n    instruction: TransactionInstruction,\n  ): VoteInstructionType {\n    this.checkProgramId(instruction.programId);\n\n    const instructionTypeLayout = BufferLayout.u32('instruction');\n    const typeIndex = instructionTypeLayout.decode(instruction.data);\n\n    let type: VoteInstructionType | undefined;\n    for (const [ixType, layout] of Object.entries(VOTE_INSTRUCTION_LAYOUTS)) {\n      if (layout.index == typeIndex) {\n        type = ixType as VoteInstructionType;\n        break;\n      }\n    }\n\n    if (!type) {\n      throw new Error('Instruction type incorrect; not a VoteInstruction');\n    }\n\n    return type;\n  }\n\n  /**\n   * Decode an initialize vote instruction and retrieve the instruction params.\n   */\n  static decodeInitializeAccount(\n    instruction: TransactionInstruction,\n  ): InitializeAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 4);\n\n    const {voteInit} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.InitializeAccount,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      nodePubkey: instruction.keys[3].pubkey,\n      voteInit: new VoteInit(\n        new PublicKey(voteInit.nodePubkey),\n        new PublicKey(voteInit.authorizedVoter),\n        new PublicKey(voteInit.authorizedWithdrawer),\n        voteInit.commission,\n      ),\n    };\n  }\n\n  /**\n   * Decode an authorize instruction and retrieve the instruction params.\n   */\n  static decodeAuthorize(\n    instruction: TransactionInstruction,\n  ): AuthorizeVoteParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {newAuthorized, voteAuthorizationType} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Authorize,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedPubkey: instruction.keys[2].pubkey,\n      newAuthorizedPubkey: new PublicKey(newAuthorized),\n      voteAuthorizationType: {\n        index: voteAuthorizationType,\n      },\n    };\n  }\n\n  /**\n   * Decode a withdraw instruction and retrieve the instruction params.\n   */\n  static decodeWithdraw(\n    instruction: TransactionInstruction,\n  ): WithdrawFromVoteAccountParams {\n    this.checkProgramId(instruction.programId);\n    this.checkKeyLength(instruction.keys, 3);\n\n    const {lamports} = decodeData(\n      VOTE_INSTRUCTION_LAYOUTS.Withdraw,\n      instruction.data,\n    );\n\n    return {\n      votePubkey: instruction.keys[0].pubkey,\n      authorizedWithdrawerPubkey: instruction.keys[2].pubkey,\n      lamports,\n      toPubkey: instruction.keys[1].pubkey,\n    };\n  }\n\n  /**\n   * @internal\n   */\n  static checkProgramId(programId: PublicKey) {\n    if (!programId.equals(VoteProgram.programId)) {\n      throw new Error('invalid instruction; programId is not VoteProgram');\n    }\n  }\n\n  /**\n   * @internal\n   */\n  static checkKeyLength(keys: Array<any>, expectedLength: number) {\n    if (keys.length < expectedLength) {\n      throw new Error(\n        `invalid instruction; found ${keys.length} keys, expected at least ${expectedLength}`,\n      );\n    }\n  }\n}\n\n/**\n * An enumeration of valid VoteInstructionType's\n */\nexport type VoteInstructionType =\n  // FIXME\n  // It would be preferable for this type to be `keyof VoteInstructionInputData`\n  // but Typedoc does not transpile `keyof` expressions.\n  // See https://github.com/TypeStrong/typedoc/issues/1894\n  'Authorize' | 'InitializeAccount' | 'Withdraw';\n\ntype VoteInstructionInputData = {\n  Authorize: IInstructionInputData & {\n    newAuthorized: Uint8Array;\n    voteAuthorizationType: number;\n  };\n  InitializeAccount: IInstructionInputData & {\n    voteInit: Readonly<{\n      authorizedVoter: Uint8Array;\n      authorizedWithdrawer: Uint8Array;\n      commission: number;\n      nodePubkey: Uint8Array;\n    }>;\n  };\n  Withdraw: IInstructionInputData & {\n    lamports: number;\n  };\n};\n\nconst VOTE_INSTRUCTION_LAYOUTS = Object.freeze<{\n  [Instruction in VoteInstructionType]: InstructionType<\n    VoteInstructionInputData[Instruction]\n  >;\n}>({\n  InitializeAccount: {\n    index: 0,\n    layout: BufferLayout.struct<VoteInstructionInputData['InitializeAccount']>([\n      BufferLayout.u32('instruction'),\n      Layout.voteInit(),\n    ]),\n  },\n  Authorize: {\n    index: 1,\n    layout: BufferLayout.struct<VoteInstructionInputData['Authorize']>([\n      BufferLayout.u32('instruction'),\n      Layout.publicKey('newAuthorized'),\n      BufferLayout.u32('voteAuthorizationType'),\n    ]),\n  },\n  Withdraw: {\n    index: 3,\n    layout: BufferLayout.struct<VoteInstructionInputData['Withdraw']>([\n      BufferLayout.u32('instruction'),\n      BufferLayout.ns64('lamports'),\n    ]),\n  },\n});\n\n/**\n * VoteAuthorize type\n */\nexport type VoteAuthorizationType = {\n  /** The VoteAuthorize index (from solana-vote-program) */\n  index: number;\n};\n\n/**\n * An enumeration of valid VoteAuthorization layouts.\n */\nexport const VoteAuthorizationLayout = Object.freeze({\n  Voter: {\n    index: 0,\n  },\n  Withdrawer: {\n    index: 1,\n  },\n});\n\n/**\n * Factory class for transactions to interact with the Vote program\n */\nexport class VoteProgram {\n  /**\n   * @internal\n   */\n  constructor() {}\n\n  /**\n   * Public key that identifies the Vote program\n   */\n  static programId: PublicKey = new PublicKey(\n    'Vote111111111111111111111111111111111111111',\n  );\n\n  /**\n   * Max space of a Vote account\n   *\n   * This is generated from the solana-vote-program VoteState struct as\n   * `VoteState::size_of()`:\n   * https://docs.rs/solana-vote-program/1.9.5/solana_vote_program/vote_state/struct.VoteState.html#method.size_of\n   */\n  static space: number = 3731;\n\n  /**\n   * Generate an Initialize instruction.\n   */\n  static initializeAccount(\n    params: InitializeAccountParams,\n  ): TransactionInstruction {\n    const {votePubkey, nodePubkey, voteInit} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.InitializeAccount;\n    const data = encodeData(type, {\n      voteInit: {\n        nodePubkey: toBuffer(voteInit.nodePubkey.toBuffer()),\n        authorizedVoter: toBuffer(voteInit.authorizedVoter.toBuffer()),\n        authorizedWithdrawer: toBuffer(\n          voteInit.authorizedWithdrawer.toBuffer(),\n        ),\n        commission: voteInit.commission,\n      },\n    });\n    const instructionData = {\n      keys: [\n        {pubkey: votePubkey, isSigner: false, isWritable: true},\n        {pubkey: SYSVAR_RENT_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n        {pubkey: nodePubkey, isSigner: true, isWritable: false},\n      ],\n      programId: this.programId,\n      data,\n    };\n    return new TransactionInstruction(instructionData);\n  }\n\n  /**\n   * Generate a transaction that creates a new Vote account.\n   */\n  static createAccount(params: CreateVoteAccountParams): Transaction {\n    const transaction = new Transaction();\n    transaction.add(\n      SystemProgram.createAccount({\n        fromPubkey: params.fromPubkey,\n        newAccountPubkey: params.votePubkey,\n        lamports: params.lamports,\n        space: this.space,\n        programId: this.programId,\n      }),\n    );\n\n    return transaction.add(\n      this.initializeAccount({\n        votePubkey: params.votePubkey,\n        nodePubkey: params.voteInit.nodePubkey,\n        voteInit: params.voteInit,\n      }),\n    );\n  }\n\n  /**\n   * Generate a transaction that authorizes a new Voter or Withdrawer on the Vote account.\n   */\n  static authorize(params: AuthorizeVoteParams): Transaction {\n    const {\n      votePubkey,\n      authorizedPubkey,\n      newAuthorizedPubkey,\n      voteAuthorizationType,\n    } = params;\n\n    const type = VOTE_INSTRUCTION_LAYOUTS.Authorize;\n    const data = encodeData(type, {\n      newAuthorized: toBuffer(newAuthorizedPubkey.toBuffer()),\n      voteAuthorizationType: voteAuthorizationType.index,\n    });\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: SYSVAR_CLOCK_PUBKEY, isSigner: false, isWritable: false},\n      {pubkey: authorizedPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n\n  /**\n   * Generate a transaction to withdraw from a Vote account.\n   */\n  static withdraw(params: WithdrawFromVoteAccountParams): Transaction {\n    const {votePubkey, authorizedWithdrawerPubkey, lamports, toPubkey} = params;\n    const type = VOTE_INSTRUCTION_LAYOUTS.Withdraw;\n    const data = encodeData(type, {lamports});\n\n    const keys = [\n      {pubkey: votePubkey, isSigner: false, isWritable: true},\n      {pubkey: toPubkey, isSigner: false, isWritable: true},\n      {pubkey: authorizedWithdrawerPubkey, isSigner: true, isWritable: false},\n    ];\n\n    return new Transaction().add({\n      keys,\n      programId: this.programId,\n      data,\n    });\n  }\n}\n","import type {Buffer} from 'buffer';\n\nimport {Connection} from '../connection';\nimport type {TransactionSignature} from '../transaction';\nimport type {ConfirmOptions} from '../connection';\n\n/**\n * Send and confirm a raw transaction\n *\n * If `commitment` option is not specified, defaults to 'max' commitment.\n *\n * @param {Connection} connection\n * @param {Buffer} rawTransaction\n * @param {ConfirmOptions} [options]\n * @returns {Promise<TransactionSignature>}\n */\nexport async function sendAndConfirmRawTransaction(\n  connection: Connection,\n  rawTransaction: Buffer,\n  options?: ConfirmOptions,\n): Promise<TransactionSignature> {\n  const sendOptions = options && {\n    skipPreflight: options.skipPreflight,\n    preflightCommitment: options.preflightCommitment || options.commitment,\n  };\n\n  const signature = await connection.sendRawTransaction(\n    rawTransaction,\n    sendOptions,\n  );\n\n  const status = (\n    await connection.confirmTransaction(\n      signature,\n      options && options.commitment,\n    )\n  ).value;\n\n  if (status.err) {\n    throw new Error(\n      `Raw transaction ${signature} failed (${JSON.stringify(status)})`,\n    );\n  }\n\n  return signature;\n}\n","const endpoint = {\n  http: {\n    devnet: 'http://api.devnet.solana.com',\n    testnet: 'http://api.testnet.solana.com',\n    'mainnet-beta': 'http://api.mainnet-beta.solana.com/',\n  },\n  https: {\n    devnet: 'https://api.devnet.solana.com',\n    testnet: 'https://api.testnet.solana.com',\n    'mainnet-beta': 'https://api.mainnet-beta.solana.com/',\n  },\n};\n\nexport type Cluster = 'devnet' | 'testnet' | 'mainnet-beta';\n\n/**\n * Retrieves the RPC API URL for the specified cluster\n */\nexport function clusterApiUrl(cluster?: Cluster, tls?: boolean): string {\n  const key = tls === false ? 'http' : 'https';\n\n  if (!cluster) {\n    return endpoint[key]['devnet'];\n  }\n\n  const url = endpoint[key][cluster];\n  if (!url) {\n    throw new Error(`Unknown ${key} cluster: ${cluster}`);\n  }\n  return url;\n}\n","export * from './account';\nexport * from './blockhash';\nexport * from './bpf-loader-deprecated';\nexport * from './bpf-loader';\nexport * from './connection';\nexport * from './epoch-schedule';\nexport * from './ed25519-program';\nexport * from './fee-calculator';\nexport * from './keypair';\nexport * from './loader';\nexport * from './message';\nexport * from './nonce-account';\nexport * from './publickey';\nexport * from './stake-program';\nexport * from './system-program';\nexport * from './secp256k1-program';\nexport * from './transaction';\nexport * from './validator-info';\nexport * from './vote-account';\nexport * from './vote-program';\nexport * from './sysvar';\nexport * from './errors';\nexport * from './util/borsh-schema';\nexport * from './util/send-and-confirm-transaction';\nexport * from './util/send-and-confirm-raw-transaction';\nexport * from './util/cluster';\n\n/**\n * There are 1-billion lamports in one SOL\n */\nexport const LAMPORTS_PER_SOL = 1000000000;\n","// Currently in sync with Node.js lib/assert.js\n// https://github.com/nodejs/node/commit/2a51ae424a513ec9a6aa3466baa0cc1d55dd4f3b\n// Originally from narwhal.js (http://narwhaljs.org)\n// Copyright (c) 2009 Thomas Robinson <280north.com>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the 'Software'), to\n// deal in the Software without restriction, including without limitation the\n// rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n// sell copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN\n// ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n'use strict';\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _require = require('./internal/errors'),\n    _require$codes = _require.codes,\n    ERR_AMBIGUOUS_ARGUMENT = _require$codes.ERR_AMBIGUOUS_ARGUMENT,\n    ERR_INVALID_ARG_TYPE = _require$codes.ERR_INVALID_ARG_TYPE,\n    ERR_INVALID_ARG_VALUE = _require$codes.ERR_INVALID_ARG_VALUE,\n    ERR_INVALID_RETURN_VALUE = _require$codes.ERR_INVALID_RETURN_VALUE,\n    ERR_MISSING_ARGS = _require$codes.ERR_MISSING_ARGS;\n\nvar AssertionError = require('./internal/assert/assertion_error');\n\nvar _require2 = require('util/'),\n    inspect = _require2.inspect;\n\nvar _require$types = require('util/').types,\n    isPromise = _require$types.isPromise,\n    isRegExp = _require$types.isRegExp;\n\nvar objectAssign = Object.assign ? Object.assign : require('es6-object-assign').assign;\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar errorCache = new Map();\nvar isDeepEqual;\nvar isDeepStrictEqual;\nvar parseExpressionAt;\nvar findNodeAround;\nvar decoder;\n\nfunction lazyLoadComparison() {\n  var comparison = require('./internal/util/comparisons');\n\n  isDeepEqual = comparison.isDeepEqual;\n  isDeepStrictEqual = comparison.isDeepStrictEqual;\n} // Escape control characters but not \\n and \\t to keep the line breaks and\n// indentation intact.\n// eslint-disable-next-line no-control-regex\n\n\nvar escapeSequencesRegExp = /[\\x00-\\x08\\x0b\\x0c\\x0e-\\x1f]/g;\nvar meta = [\"\\\\u0000\", \"\\\\u0001\", \"\\\\u0002\", \"\\\\u0003\", \"\\\\u0004\", \"\\\\u0005\", \"\\\\u0006\", \"\\\\u0007\", '\\\\b', '', '', \"\\\\u000b\", '\\\\f', '', \"\\\\u000e\", \"\\\\u000f\", \"\\\\u0010\", \"\\\\u0011\", \"\\\\u0012\", \"\\\\u0013\", \"\\\\u0014\", \"\\\\u0015\", \"\\\\u0016\", \"\\\\u0017\", \"\\\\u0018\", \"\\\\u0019\", \"\\\\u001a\", \"\\\\u001b\", \"\\\\u001c\", \"\\\\u001d\", \"\\\\u001e\", \"\\\\u001f\"];\n\nvar escapeFn = function escapeFn(str) {\n  return meta[str.charCodeAt(0)];\n};\n\nvar warned = false; // The assert module provides functions that throw\n// AssertionError's when particular conditions are not met. The\n// assert module must conform to the following interface.\n\nvar assert = module.exports = ok;\nvar NO_EXCEPTION_SENTINEL = {}; // All of the following functions must throw an AssertionError\n// when a corresponding condition is not met, with a message that\n// may be undefined if not provided. All assertion methods provide\n// both the actual and expected values to the assertion error for\n// display purposes.\n\nfunction innerFail(obj) {\n  if (obj.message instanceof Error) throw obj.message;\n  throw new AssertionError(obj);\n}\n\nfunction fail(actual, expected, message, operator, stackStartFn) {\n  var argsLen = arguments.length;\n  var internalMessage;\n\n  if (argsLen === 0) {\n    internalMessage = 'Failed';\n  } else if (argsLen === 1) {\n    message = actual;\n    actual = undefined;\n  } else {\n    if (warned === false) {\n      warned = true;\n      var warn = process.emitWarning ? process.emitWarning : console.warn.bind(console);\n      warn('assert.fail() with more than one argument is deprecated. ' + 'Please use assert.strictEqual() instead or only pass a message.', 'DeprecationWarning', 'DEP0094');\n    }\n\n    if (argsLen === 2) operator = '!=';\n  }\n\n  if (message instanceof Error) throw message;\n  var errArgs = {\n    actual: actual,\n    expected: expected,\n    operator: operator === undefined ? 'fail' : operator,\n    stackStartFn: stackStartFn || fail\n  };\n\n  if (message !== undefined) {\n    errArgs.message = message;\n  }\n\n  var err = new AssertionError(errArgs);\n\n  if (internalMessage) {\n    err.message = internalMessage;\n    err.generatedMessage = true;\n  }\n\n  throw err;\n}\n\nassert.fail = fail; // The AssertionError is defined in internal/error.\n\nassert.AssertionError = AssertionError;\n\nfunction innerOk(fn, argLen, value, message) {\n  if (!value) {\n    var generatedMessage = false;\n\n    if (argLen === 0) {\n      generatedMessage = true;\n      message = 'No value argument passed to `assert.ok()`';\n    } else if (message instanceof Error) {\n      throw message;\n    }\n\n    var err = new AssertionError({\n      actual: value,\n      expected: true,\n      message: message,\n      operator: '==',\n      stackStartFn: fn\n    });\n    err.generatedMessage = generatedMessage;\n    throw err;\n  }\n} // Pure assertion tests whether a value is truthy, as determined\n// by !!value.\n\n\nfunction ok() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  innerOk.apply(void 0, [ok, args.length].concat(args));\n}\n\nassert.ok = ok; // The equality assertion tests shallow, coercive equality with ==.\n\n/* eslint-disable no-restricted-properties */\n\nassert.equal = function equal(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual != expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '==',\n      stackStartFn: equal\n    });\n  }\n}; // The non-equality assertion tests for whether two objects are not\n// equal with !=.\n\n\nassert.notEqual = function notEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  } // eslint-disable-next-line eqeqeq\n\n\n  if (actual == expected) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: '!=',\n      stackStartFn: notEqual\n    });\n  }\n}; // The equivalence assertion tests a deep equality relation.\n\n\nassert.deepEqual = function deepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepEqual',\n      stackStartFn: deepEqual\n    });\n  }\n}; // The non-equivalence assertion tests for any deep inequality.\n\n\nassert.notDeepEqual = function notDeepEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepEqual',\n      stackStartFn: notDeepEqual\n    });\n  }\n};\n/* eslint-enable */\n\n\nassert.deepStrictEqual = function deepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (!isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'deepStrictEqual',\n      stackStartFn: deepStrictEqual\n    });\n  }\n};\n\nassert.notDeepStrictEqual = notDeepStrictEqual;\n\nfunction notDeepStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (isDeepEqual === undefined) lazyLoadComparison();\n\n  if (isDeepStrictEqual(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notDeepStrictEqual',\n      stackStartFn: notDeepStrictEqual\n    });\n  }\n}\n\nassert.strictEqual = function strictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (!objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'strictEqual',\n      stackStartFn: strictEqual\n    });\n  }\n};\n\nassert.notStrictEqual = function notStrictEqual(actual, expected, message) {\n  if (arguments.length < 2) {\n    throw new ERR_MISSING_ARGS('actual', 'expected');\n  }\n\n  if (objectIs(actual, expected)) {\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: 'notStrictEqual',\n      stackStartFn: notStrictEqual\n    });\n  }\n};\n\nvar Comparison = function Comparison(obj, keys, actual) {\n  var _this = this;\n\n  _classCallCheck(this, Comparison);\n\n  keys.forEach(function (key) {\n    if (key in obj) {\n      if (actual !== undefined && typeof actual[key] === 'string' && isRegExp(obj[key]) && obj[key].test(actual[key])) {\n        _this[key] = actual[key];\n      } else {\n        _this[key] = obj[key];\n      }\n    }\n  });\n};\n\nfunction compareExceptionKey(actual, expected, key, message, keys, fn) {\n  if (!(key in actual) || !isDeepStrictEqual(actual[key], expected[key])) {\n    if (!message) {\n      // Create placeholder objects to create a nice output.\n      var a = new Comparison(actual, keys);\n      var b = new Comparison(expected, keys, actual);\n      var err = new AssertionError({\n        actual: a,\n        expected: b,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.actual = actual;\n      err.expected = expected;\n      err.operator = fn.name;\n      throw err;\n    }\n\n    innerFail({\n      actual: actual,\n      expected: expected,\n      message: message,\n      operator: fn.name,\n      stackStartFn: fn\n    });\n  }\n}\n\nfunction expectedException(actual, expected, msg, fn) {\n  if (typeof expected !== 'function') {\n    if (isRegExp(expected)) return expected.test(actual); // assert.doesNotThrow does not accept objects.\n\n    if (arguments.length === 2) {\n      throw new ERR_INVALID_ARG_TYPE('expected', ['Function', 'RegExp'], expected);\n    } // Handle primitives properly.\n\n\n    if (_typeof(actual) !== 'object' || actual === null) {\n      var err = new AssertionError({\n        actual: actual,\n        expected: expected,\n        message: msg,\n        operator: 'deepStrictEqual',\n        stackStartFn: fn\n      });\n      err.operator = fn.name;\n      throw err;\n    }\n\n    var keys = Object.keys(expected); // Special handle errors to make sure the name and the message are compared\n    // as well.\n\n    if (expected instanceof Error) {\n      keys.push('name', 'message');\n    } else if (keys.length === 0) {\n      throw new ERR_INVALID_ARG_VALUE('error', expected, 'may not be an empty object');\n    }\n\n    if (isDeepEqual === undefined) lazyLoadComparison();\n    keys.forEach(function (key) {\n      if (typeof actual[key] === 'string' && isRegExp(expected[key]) && expected[key].test(actual[key])) {\n        return;\n      }\n\n      compareExceptionKey(actual, expected, key, msg, keys, fn);\n    });\n    return true;\n  } // Guard instanceof against arrow functions as they don't have a prototype.\n\n\n  if (expected.prototype !== undefined && actual instanceof expected) {\n    return true;\n  }\n\n  if (Error.isPrototypeOf(expected)) {\n    return false;\n  }\n\n  return expected.call({}, actual) === true;\n}\n\nfunction getActual(fn) {\n  if (typeof fn !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('fn', 'Function', fn);\n  }\n\n  try {\n    fn();\n  } catch (e) {\n    return e;\n  }\n\n  return NO_EXCEPTION_SENTINEL;\n}\n\nfunction checkIsPromise(obj) {\n  // Accept native ES6 promises and promises that are implemented in a similar\n  // way. Do not accept thenables that use a function as `obj` and that have no\n  // `catch` handler.\n  // TODO: thenables are checked up until they have the correct methods,\n  // but according to documentation, the `then` method should receive\n  // the `fulfill` and `reject` arguments as well or it may be never resolved.\n  return isPromise(obj) || obj !== null && _typeof(obj) === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function';\n}\n\nfunction waitForActual(promiseFn) {\n  return Promise.resolve().then(function () {\n    var resultPromise;\n\n    if (typeof promiseFn === 'function') {\n      // Return a rejected promise if `promiseFn` throws synchronously.\n      resultPromise = promiseFn(); // Fail in case no promise is returned.\n\n      if (!checkIsPromise(resultPromise)) {\n        throw new ERR_INVALID_RETURN_VALUE('instance of Promise', 'promiseFn', resultPromise);\n      }\n    } else if (checkIsPromise(promiseFn)) {\n      resultPromise = promiseFn;\n    } else {\n      throw new ERR_INVALID_ARG_TYPE('promiseFn', ['Function', 'Promise'], promiseFn);\n    }\n\n    return Promise.resolve().then(function () {\n      return resultPromise;\n    }).then(function () {\n      return NO_EXCEPTION_SENTINEL;\n    }).catch(function (e) {\n      return e;\n    });\n  });\n}\n\nfunction expectsError(stackStartFn, actual, error, message) {\n  if (typeof error === 'string') {\n    if (arguments.length === 4) {\n      throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n    }\n\n    if (_typeof(actual) === 'object' && actual !== null) {\n      if (actual.message === error) {\n        throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error message \\\"\".concat(actual.message, \"\\\" is identical to the message.\"));\n      }\n    } else if (actual === error) {\n      throw new ERR_AMBIGUOUS_ARGUMENT('error/message', \"The error \\\"\".concat(actual, \"\\\" is identical to the message.\"));\n    }\n\n    message = error;\n    error = undefined;\n  } else if (error != null && _typeof(error) !== 'object' && typeof error !== 'function') {\n    throw new ERR_INVALID_ARG_TYPE('error', ['Object', 'Error', 'Function', 'RegExp'], error);\n  }\n\n  if (actual === NO_EXCEPTION_SENTINEL) {\n    var details = '';\n\n    if (error && error.name) {\n      details += \" (\".concat(error.name, \")\");\n    }\n\n    details += message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'rejects' ? 'rejection' : 'exception';\n    innerFail({\n      actual: undefined,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Missing expected \".concat(fnType).concat(details),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  if (error && !expectedException(actual, error, message, stackStartFn)) {\n    throw actual;\n  }\n}\n\nfunction expectsNoError(stackStartFn, actual, error, message) {\n  if (actual === NO_EXCEPTION_SENTINEL) return;\n\n  if (typeof error === 'string') {\n    message = error;\n    error = undefined;\n  }\n\n  if (!error || expectedException(actual, error)) {\n    var details = message ? \": \".concat(message) : '.';\n    var fnType = stackStartFn.name === 'doesNotReject' ? 'rejection' : 'exception';\n    innerFail({\n      actual: actual,\n      expected: error,\n      operator: stackStartFn.name,\n      message: \"Got unwanted \".concat(fnType).concat(details, \"\\n\") + \"Actual message: \\\"\".concat(actual && actual.message, \"\\\"\"),\n      stackStartFn: stackStartFn\n    });\n  }\n\n  throw actual;\n}\n\nassert.throws = function throws(promiseFn) {\n  for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n    args[_key2 - 1] = arguments[_key2];\n  }\n\n  expectsError.apply(void 0, [throws, getActual(promiseFn)].concat(args));\n};\n\nassert.rejects = function rejects(promiseFn) {\n  for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n    args[_key3 - 1] = arguments[_key3];\n  }\n\n  return waitForActual(promiseFn).then(function (result) {\n    return expectsError.apply(void 0, [rejects, result].concat(args));\n  });\n};\n\nassert.doesNotThrow = function doesNotThrow(fn) {\n  for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n    args[_key4 - 1] = arguments[_key4];\n  }\n\n  expectsNoError.apply(void 0, [doesNotThrow, getActual(fn)].concat(args));\n};\n\nassert.doesNotReject = function doesNotReject(fn) {\n  for (var _len5 = arguments.length, args = new Array(_len5 > 1 ? _len5 - 1 : 0), _key5 = 1; _key5 < _len5; _key5++) {\n    args[_key5 - 1] = arguments[_key5];\n  }\n\n  return waitForActual(fn).then(function (result) {\n    return expectsNoError.apply(void 0, [doesNotReject, result].concat(args));\n  });\n};\n\nassert.ifError = function ifError(err) {\n  if (err !== null && err !== undefined) {\n    var message = 'ifError got unwanted exception: ';\n\n    if (_typeof(err) === 'object' && typeof err.message === 'string') {\n      if (err.message.length === 0 && err.constructor) {\n        message += err.constructor.name;\n      } else {\n        message += err.message;\n      }\n    } else {\n      message += inspect(err);\n    }\n\n    var newErr = new AssertionError({\n      actual: err,\n      expected: null,\n      operator: 'ifError',\n      message: message,\n      stackStartFn: ifError\n    }); // Make sure we actually have a stack trace!\n\n    var origStack = err.stack;\n\n    if (typeof origStack === 'string') {\n      // This will remove any duplicated frames from the error frames taken\n      // from within `ifError` and add the original error frames to the newly\n      // created ones.\n      var tmp2 = origStack.split('\\n');\n      tmp2.shift(); // Filter all frames existing in err.stack.\n\n      var tmp1 = newErr.stack.split('\\n');\n\n      for (var i = 0; i < tmp2.length; i++) {\n        // Find the first occurrence of the frame.\n        var pos = tmp1.indexOf(tmp2[i]);\n\n        if (pos !== -1) {\n          // Only keep new frames.\n          tmp1 = tmp1.slice(0, pos);\n          break;\n        }\n      }\n\n      newErr.stack = \"\".concat(tmp1.join('\\n'), \"\\n\").concat(tmp2.join('\\n'));\n    }\n\n    throw newErr;\n  }\n}; // Expose a strict only variant of assert\n\n\nfunction strict() {\n  for (var _len6 = arguments.length, args = new Array(_len6), _key6 = 0; _key6 < _len6; _key6++) {\n    args[_key6] = arguments[_key6];\n  }\n\n  innerOk.apply(void 0, [strict, args.length].concat(args));\n}\n\nassert.strict = objectAssign(strict, assert, {\n  equal: assert.strictEqual,\n  deepEqual: assert.deepStrictEqual,\n  notEqual: assert.notStrictEqual,\n  notDeepEqual: assert.notDeepStrictEqual\n});\nassert.strict.strict = assert.strict;","// Currently in sync with Node.js lib/internal/assert/assertion_error.js\n// https://github.com/nodejs/node/commit/0817840f775032169ddd70c85ac059f18ffcc81c\n'use strict';\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _construct(Parent, args, Class) { if (isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar _require = require('util/'),\n    inspect = _require.inspect;\n\nvar _require2 = require('../errors'),\n    ERR_INVALID_ARG_TYPE = _require2.codes.ERR_INVALID_ARG_TYPE; // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/repeat\n\n\nfunction repeat(str, count) {\n  count = Math.floor(count);\n  if (str.length == 0 || count == 0) return '';\n  var maxCount = str.length * count;\n  count = Math.floor(Math.log(count) / Math.log(2));\n\n  while (count) {\n    str += str;\n    count--;\n  }\n\n  str += str.substring(0, maxCount - str.length);\n  return str;\n}\n\nvar blue = '';\nvar green = '';\nvar red = '';\nvar white = '';\nvar kReadableOperator = {\n  deepStrictEqual: 'Expected values to be strictly deep-equal:',\n  strictEqual: 'Expected values to be strictly equal:',\n  strictEqualObject: 'Expected \"actual\" to be reference-equal to \"expected\":',\n  deepEqual: 'Expected values to be loosely deep-equal:',\n  equal: 'Expected values to be loosely equal:',\n  notDeepStrictEqual: 'Expected \"actual\" not to be strictly deep-equal to:',\n  notStrictEqual: 'Expected \"actual\" to be strictly unequal to:',\n  notStrictEqualObject: 'Expected \"actual\" not to be reference-equal to \"expected\":',\n  notDeepEqual: 'Expected \"actual\" not to be loosely deep-equal to:',\n  notEqual: 'Expected \"actual\" to be loosely unequal to:',\n  notIdentical: 'Values identical but not reference-equal:'\n}; // Comparing short primitives should just show === / !== instead of using the\n// diff.\n\nvar kMaxShortLength = 10;\n\nfunction copyError(source) {\n  var keys = Object.keys(source);\n  var target = Object.create(Object.getPrototypeOf(source));\n  keys.forEach(function (key) {\n    target[key] = source[key];\n  });\n  Object.defineProperty(target, 'message', {\n    value: source.message\n  });\n  return target;\n}\n\nfunction inspectValue(val) {\n  // The util.inspect default values could be changed. This makes sure the\n  // error messages contain the necessary information nevertheless.\n  return inspect(val, {\n    compact: false,\n    customInspect: false,\n    depth: 1000,\n    maxArrayLength: Infinity,\n    // Assert compares only enumerable properties (with a few exceptions).\n    showHidden: false,\n    // Having a long line as error is better than wrapping the line for\n    // comparison for now.\n    // TODO(BridgeAR): `breakLength` should be limited as soon as soon as we\n    // have meta information about the inspected properties (i.e., know where\n    // in what line the property starts and ends).\n    breakLength: Infinity,\n    // Assert does not detect proxies currently.\n    showProxy: false,\n    sorted: true,\n    // Inspect getters as we also check them when comparing entries.\n    getters: true\n  });\n}\n\nfunction createErrDiff(actual, expected, operator) {\n  var other = '';\n  var res = '';\n  var lastPos = 0;\n  var end = '';\n  var skipped = false;\n  var actualInspected = inspectValue(actual);\n  var actualLines = actualInspected.split('\\n');\n  var expectedLines = inspectValue(expected).split('\\n');\n  var i = 0;\n  var indicator = ''; // In case both values are objects explicitly mark them as not reference equal\n  // for the `strictEqual` operator.\n\n  if (operator === 'strictEqual' && _typeof(actual) === 'object' && _typeof(expected) === 'object' && actual !== null && expected !== null) {\n    operator = 'strictEqualObject';\n  } // If \"actual\" and \"expected\" fit on a single line and they are not strictly\n  // equal, check further special handling.\n\n\n  if (actualLines.length === 1 && expectedLines.length === 1 && actualLines[0] !== expectedLines[0]) {\n    var inputLength = actualLines[0].length + expectedLines[0].length; // If the character length of \"actual\" and \"expected\" together is less than\n    // kMaxShortLength and if neither is an object and at least one of them is\n    // not `zero`, use the strict equal comparison to visualize the output.\n\n    if (inputLength <= kMaxShortLength) {\n      if ((_typeof(actual) !== 'object' || actual === null) && (_typeof(expected) !== 'object' || expected === null) && (actual !== 0 || expected !== 0)) {\n        // -0 === +0\n        return \"\".concat(kReadableOperator[operator], \"\\n\\n\") + \"\".concat(actualLines[0], \" !== \").concat(expectedLines[0], \"\\n\");\n      }\n    } else if (operator !== 'strictEqualObject') {\n      // If the stderr is a tty and the input length is lower than the current\n      // columns per line, add a mismatch indicator below the output. If it is\n      // not a tty, use a default value of 80 characters.\n      var maxLength = process.stderr && process.stderr.isTTY ? process.stderr.columns : 80;\n\n      if (inputLength < maxLength) {\n        while (actualLines[0][i] === expectedLines[0][i]) {\n          i++;\n        } // Ignore the first characters.\n\n\n        if (i > 2) {\n          // Add position indicator for the first mismatch in case it is a\n          // single line and the input length is less than the column length.\n          indicator = \"\\n  \".concat(repeat(' ', i), \"^\");\n          i = 0;\n        }\n      }\n    }\n  } // Remove all ending lines that match (this optimizes the output for\n  // readability by reducing the number of total changed lines).\n\n\n  var a = actualLines[actualLines.length - 1];\n  var b = expectedLines[expectedLines.length - 1];\n\n  while (a === b) {\n    if (i++ < 2) {\n      end = \"\\n  \".concat(a).concat(end);\n    } else {\n      other = a;\n    }\n\n    actualLines.pop();\n    expectedLines.pop();\n    if (actualLines.length === 0 || expectedLines.length === 0) break;\n    a = actualLines[actualLines.length - 1];\n    b = expectedLines[expectedLines.length - 1];\n  }\n\n  var maxLines = Math.max(actualLines.length, expectedLines.length); // Strict equal with identical objects that are not identical by reference.\n  // E.g., assert.deepStrictEqual({ a: Symbol() }, { a: Symbol() })\n\n  if (maxLines === 0) {\n    // We have to get the result again. The lines were all removed before.\n    var _actualLines = actualInspected.split('\\n'); // Only remove lines in case it makes sense to collapse those.\n    // TODO: Accept env to always show the full error.\n\n\n    if (_actualLines.length > 30) {\n      _actualLines[26] = \"\".concat(blue, \"...\").concat(white);\n\n      while (_actualLines.length > 27) {\n        _actualLines.pop();\n      }\n    }\n\n    return \"\".concat(kReadableOperator.notIdentical, \"\\n\\n\").concat(_actualLines.join('\\n'), \"\\n\");\n  }\n\n  if (i > 3) {\n    end = \"\\n\".concat(blue, \"...\").concat(white).concat(end);\n    skipped = true;\n  }\n\n  if (other !== '') {\n    end = \"\\n  \".concat(other).concat(end);\n    other = '';\n  }\n\n  var printedLines = 0;\n  var msg = kReadableOperator[operator] + \"\\n\".concat(green, \"+ actual\").concat(white, \" \").concat(red, \"- expected\").concat(white);\n  var skippedMsg = \" \".concat(blue, \"...\").concat(white, \" Lines skipped\");\n\n  for (i = 0; i < maxLines; i++) {\n    // Only extra expected lines exist\n    var cur = i - lastPos;\n\n    if (actualLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(expectedLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(expectedLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the expected line to the cache.\n\n      other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLines[i]);\n      printedLines++; // Only extra actual lines exist\n    } else if (expectedLines.length < i + 1) {\n      // If the last diverging line is more than one line above and the\n      // current line is at least line three, add some of the former lines and\n      // also add dots to indicate skipped entries.\n      if (cur > 1 && i > 2) {\n        if (cur > 4) {\n          res += \"\\n\".concat(blue, \"...\").concat(white);\n          skipped = true;\n        } else if (cur > 3) {\n          res += \"\\n  \".concat(actualLines[i - 2]);\n          printedLines++;\n        }\n\n        res += \"\\n  \".concat(actualLines[i - 1]);\n        printedLines++;\n      } // Mark the current line as the last diverging one.\n\n\n      lastPos = i; // Add the actual line to the result.\n\n      res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLines[i]);\n      printedLines++; // Lines diverge\n    } else {\n      var expectedLine = expectedLines[i];\n      var actualLine = actualLines[i]; // If the lines diverge, specifically check for lines that only diverge by\n      // a trailing comma. In that case it is actually identical and we should\n      // mark it as such.\n\n      var divergingLines = actualLine !== expectedLine && (!endsWith(actualLine, ',') || actualLine.slice(0, -1) !== expectedLine); // If the expected line has a trailing comma but is otherwise identical,\n      // add a comma at the end of the actual line. Otherwise the output could\n      // look weird as in:\n      //\n      //   [\n      //     1         // No comma at the end!\n      // +   2\n      //   ]\n      //\n\n      if (divergingLines && endsWith(expectedLine, ',') && expectedLine.slice(0, -1) === actualLine) {\n        divergingLines = false;\n        actualLine += ',';\n      }\n\n      if (divergingLines) {\n        // If the last diverging line is more than one line above and the\n        // current line is at least line three, add some of the former lines and\n        // also add dots to indicate skipped entries.\n        if (cur > 1 && i > 2) {\n          if (cur > 4) {\n            res += \"\\n\".concat(blue, \"...\").concat(white);\n            skipped = true;\n          } else if (cur > 3) {\n            res += \"\\n  \".concat(actualLines[i - 2]);\n            printedLines++;\n          }\n\n          res += \"\\n  \".concat(actualLines[i - 1]);\n          printedLines++;\n        } // Mark the current line as the last diverging one.\n\n\n        lastPos = i; // Add the actual line to the result and cache the expected diverging\n        // line so consecutive diverging lines show up as +++--- and not +-+-+-.\n\n        res += \"\\n\".concat(green, \"+\").concat(white, \" \").concat(actualLine);\n        other += \"\\n\".concat(red, \"-\").concat(white, \" \").concat(expectedLine);\n        printedLines += 2; // Lines are identical\n      } else {\n        // Add all cached information to the result before adding other things\n        // and reset the cache.\n        res += other;\n        other = ''; // If the last diverging line is exactly one line above or if it is the\n        // very first line, add the line to the result.\n\n        if (cur === 1 || i === 0) {\n          res += \"\\n  \".concat(actualLine);\n          printedLines++;\n        }\n      }\n    } // Inspected object to big (Show ~20 rows max)\n\n\n    if (printedLines > 20 && i < maxLines - 2) {\n      return \"\".concat(msg).concat(skippedMsg, \"\\n\").concat(res, \"\\n\").concat(blue, \"...\").concat(white).concat(other, \"\\n\") + \"\".concat(blue, \"...\").concat(white);\n    }\n  }\n\n  return \"\".concat(msg).concat(skipped ? skippedMsg : '', \"\\n\").concat(res).concat(other).concat(end).concat(indicator);\n}\n\nvar AssertionError =\n/*#__PURE__*/\nfunction (_Error) {\n  _inherits(AssertionError, _Error);\n\n  function AssertionError(options) {\n    var _this;\n\n    _classCallCheck(this, AssertionError);\n\n    if (_typeof(options) !== 'object' || options === null) {\n      throw new ERR_INVALID_ARG_TYPE('options', 'Object', options);\n    }\n\n    var message = options.message,\n        operator = options.operator,\n        stackStartFn = options.stackStartFn;\n    var actual = options.actual,\n        expected = options.expected;\n    var limit = Error.stackTraceLimit;\n    Error.stackTraceLimit = 0;\n\n    if (message != null) {\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, String(message)));\n    } else {\n      if (process.stderr && process.stderr.isTTY) {\n        // Reset on each call to make sure we handle dynamically set environment\n        // variables correct.\n        if (process.stderr && process.stderr.getColorDepth && process.stderr.getColorDepth() !== 1) {\n          blue = \"\\x1B[34m\";\n          green = \"\\x1B[32m\";\n          white = \"\\x1B[39m\";\n          red = \"\\x1B[31m\";\n        } else {\n          blue = '';\n          green = '';\n          white = '';\n          red = '';\n        }\n      } // Prevent the error stack from being visible by duplicating the error\n      // in a very close way to the original in case both sides are actually\n      // instances of Error.\n\n\n      if (_typeof(actual) === 'object' && actual !== null && _typeof(expected) === 'object' && expected !== null && 'stack' in actual && actual instanceof Error && 'stack' in expected && expected instanceof Error) {\n        actual = copyError(actual);\n        expected = copyError(expected);\n      }\n\n      if (operator === 'deepStrictEqual' || operator === 'strictEqual') {\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, createErrDiff(actual, expected, operator)));\n      } else if (operator === 'notDeepStrictEqual' || operator === 'notStrictEqual') {\n        // In case the objects are equal but the operator requires unequal, show\n        // the first object and say A equals B\n        var base = kReadableOperator[operator];\n        var res = inspectValue(actual).split('\\n'); // In case \"actual\" is an object, it should not be reference equal.\n\n        if (operator === 'notStrictEqual' && _typeof(actual) === 'object' && actual !== null) {\n          base = kReadableOperator.notStrictEqualObject;\n        } // Only remove lines in case it makes sense to collapse those.\n        // TODO: Accept env to always show the full error.\n\n\n        if (res.length > 30) {\n          res[26] = \"\".concat(blue, \"...\").concat(white);\n\n          while (res.length > 27) {\n            res.pop();\n          }\n        } // Only print a single input.\n\n\n        if (res.length === 1) {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \" \").concat(res[0])));\n        } else {\n          _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(base, \"\\n\\n\").concat(res.join('\\n'), \"\\n\")));\n        }\n      } else {\n        var _res = inspectValue(actual);\n\n        var other = '';\n        var knownOperators = kReadableOperator[operator];\n\n        if (operator === 'notDeepEqual' || operator === 'notEqual') {\n          _res = \"\".concat(kReadableOperator[operator], \"\\n\\n\").concat(_res);\n\n          if (_res.length > 1024) {\n            _res = \"\".concat(_res.slice(0, 1021), \"...\");\n          }\n        } else {\n          other = \"\".concat(inspectValue(expected));\n\n          if (_res.length > 512) {\n            _res = \"\".concat(_res.slice(0, 509), \"...\");\n          }\n\n          if (other.length > 512) {\n            other = \"\".concat(other.slice(0, 509), \"...\");\n          }\n\n          if (operator === 'deepEqual' || operator === 'equal') {\n            _res = \"\".concat(knownOperators, \"\\n\\n\").concat(_res, \"\\n\\nshould equal\\n\\n\");\n          } else {\n            other = \" \".concat(operator, \" \").concat(other);\n          }\n        }\n\n        _this = _possibleConstructorReturn(this, _getPrototypeOf(AssertionError).call(this, \"\".concat(_res).concat(other)));\n      }\n    }\n\n    Error.stackTraceLimit = limit;\n    _this.generatedMessage = !message;\n    Object.defineProperty(_assertThisInitialized(_this), 'name', {\n      value: 'AssertionError [ERR_ASSERTION]',\n      enumerable: false,\n      writable: true,\n      configurable: true\n    });\n    _this.code = 'ERR_ASSERTION';\n    _this.actual = actual;\n    _this.expected = expected;\n    _this.operator = operator;\n\n    if (Error.captureStackTrace) {\n      // eslint-disable-next-line no-restricted-syntax\n      Error.captureStackTrace(_assertThisInitialized(_this), stackStartFn);\n    } // Create error message including the error code in the name.\n\n\n    _this.stack; // Reset the name.\n\n    _this.name = 'AssertionError';\n    return _possibleConstructorReturn(_this);\n  }\n\n  _createClass(AssertionError, [{\n    key: \"toString\",\n    value: function toString() {\n      return \"\".concat(this.name, \" [\").concat(this.code, \"]: \").concat(this.message);\n    }\n  }, {\n    key: inspect.custom,\n    value: function value(recurseTimes, ctx) {\n      // This limits the `actual` and `expected` property default inspection to\n      // the minimum depth. Otherwise those values would be too verbose compared\n      // to the actual error message which contains a combined view of these two\n      // input values.\n      return inspect(this, _objectSpread({}, ctx, {\n        customInspect: false,\n        depth: 0\n      }));\n    }\n  }]);\n\n  return AssertionError;\n}(_wrapNativeSuper(Error));\n\nmodule.exports = AssertionError;","// Currently in sync with Node.js lib/internal/errors.js\n// https://github.com/nodejs/node/commit/3b044962c48fe313905877a96b5d0894a5404f6f\n\n/* eslint node-core/documented-errors: \"error\" */\n\n/* eslint node-core/alphabetize-errors: \"error\" */\n\n/* eslint node-core/prefer-util-format-errors: \"error\" */\n'use strict'; // The whole point behind this internal module is to allow Node.js to no\n// longer be forced to treat every error message change as a semver-major\n// change. The NodeError classes here all expose a `code` property whose\n// value statically and permanently identifies the error. While the error\n// message may change, the code should not.\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nvar codes = {}; // Lazy loaded\n\nvar assert;\nvar util;\n\nfunction createErrorType(code, message, Base) {\n  if (!Base) {\n    Base = Error;\n  }\n\n  function getMessage(arg1, arg2, arg3) {\n    if (typeof message === 'string') {\n      return message;\n    } else {\n      return message(arg1, arg2, arg3);\n    }\n  }\n\n  var NodeError =\n  /*#__PURE__*/\n  function (_Base) {\n    _inherits(NodeError, _Base);\n\n    function NodeError(arg1, arg2, arg3) {\n      var _this;\n\n      _classCallCheck(this, NodeError);\n\n      _this = _possibleConstructorReturn(this, _getPrototypeOf(NodeError).call(this, getMessage(arg1, arg2, arg3)));\n      _this.code = code;\n      return _this;\n    }\n\n    return NodeError;\n  }(Base);\n\n  codes[code] = NodeError;\n} // https://github.com/nodejs/node/blob/v10.8.0/lib/internal/errors.js\n\n\nfunction oneOf(expected, thing) {\n  if (Array.isArray(expected)) {\n    var len = expected.length;\n    expected = expected.map(function (i) {\n      return String(i);\n    });\n\n    if (len > 2) {\n      return \"one of \".concat(thing, \" \").concat(expected.slice(0, len - 1).join(', '), \", or \") + expected[len - 1];\n    } else if (len === 2) {\n      return \"one of \".concat(thing, \" \").concat(expected[0], \" or \").concat(expected[1]);\n    } else {\n      return \"of \".concat(thing, \" \").concat(expected[0]);\n    }\n  } else {\n    return \"of \".concat(thing, \" \").concat(String(expected));\n  }\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/startsWith\n\n\nfunction startsWith(str, search, pos) {\n  return str.substr(!pos || pos < 0 ? 0 : +pos, search.length) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/endsWith\n\n\nfunction endsWith(str, search, this_len) {\n  if (this_len === undefined || this_len > str.length) {\n    this_len = str.length;\n  }\n\n  return str.substring(this_len - search.length, this_len) === search;\n} // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/includes\n\n\nfunction includes(str, search, start) {\n  if (typeof start !== 'number') {\n    start = 0;\n  }\n\n  if (start + search.length > str.length) {\n    return false;\n  } else {\n    return str.indexOf(search, start) !== -1;\n  }\n}\n\ncreateErrorType('ERR_AMBIGUOUS_ARGUMENT', 'The \"%s\" argument is ambiguous. %s', TypeError);\ncreateErrorType('ERR_INVALID_ARG_TYPE', function (name, expected, actual) {\n  if (assert === undefined) assert = require('../assert');\n  assert(typeof name === 'string', \"'name' must be a string\"); // determiner: 'must be' or 'must not be'\n\n  var determiner;\n\n  if (typeof expected === 'string' && startsWith(expected, 'not ')) {\n    determiner = 'must not be';\n    expected = expected.replace(/^not /, '');\n  } else {\n    determiner = 'must be';\n  }\n\n  var msg;\n\n  if (endsWith(name, ' argument')) {\n    // For cases like 'first argument'\n    msg = \"The \".concat(name, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } else {\n    var type = includes(name, '.') ? 'property' : 'argument';\n    msg = \"The \\\"\".concat(name, \"\\\" \").concat(type, \" \").concat(determiner, \" \").concat(oneOf(expected, 'type'));\n  } // TODO(BridgeAR): Improve the output by showing `null` and similar.\n\n\n  msg += \". Received type \".concat(_typeof(actual));\n  return msg;\n}, TypeError);\ncreateErrorType('ERR_INVALID_ARG_VALUE', function (name, value) {\n  var reason = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'is invalid';\n  if (util === undefined) util = require('util/');\n  var inspected = util.inspect(value);\n\n  if (inspected.length > 128) {\n    inspected = \"\".concat(inspected.slice(0, 128), \"...\");\n  }\n\n  return \"The argument '\".concat(name, \"' \").concat(reason, \". Received \").concat(inspected);\n}, TypeError, RangeError);\ncreateErrorType('ERR_INVALID_RETURN_VALUE', function (input, name, value) {\n  var type;\n\n  if (value && value.constructor && value.constructor.name) {\n    type = \"instance of \".concat(value.constructor.name);\n  } else {\n    type = \"type \".concat(_typeof(value));\n  }\n\n  return \"Expected \".concat(input, \" to be returned from the \\\"\").concat(name, \"\\\"\") + \" function but got \".concat(type, \".\");\n}, TypeError);\ncreateErrorType('ERR_MISSING_ARGS', function () {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  if (assert === undefined) assert = require('../assert');\n  assert(args.length > 0, 'At least one arg needs to be specified');\n  var msg = 'The ';\n  var len = args.length;\n  args = args.map(function (a) {\n    return \"\\\"\".concat(a, \"\\\"\");\n  });\n\n  switch (len) {\n    case 1:\n      msg += \"\".concat(args[0], \" argument\");\n      break;\n\n    case 2:\n      msg += \"\".concat(args[0], \" and \").concat(args[1], \" arguments\");\n      break;\n\n    default:\n      msg += args.slice(0, len - 1).join(', ');\n      msg += \", and \".concat(args[len - 1], \" arguments\");\n      break;\n  }\n\n  return \"\".concat(msg, \" must be specified\");\n}, TypeError);\nmodule.exports.codes = codes;","// Currently in sync with Node.js lib/internal/util/comparisons.js\n// https://github.com/nodejs/node/commit/112cc7c27551254aa2b17098fb774867f05ed0d9\n'use strict';\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); }\n\nfunction _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nvar regexFlagsSupported = /a/g.flags !== undefined;\n\nvar arrayFromSet = function arrayFromSet(set) {\n  var array = [];\n  set.forEach(function (value) {\n    return array.push(value);\n  });\n  return array;\n};\n\nvar arrayFromMap = function arrayFromMap(map) {\n  var array = [];\n  map.forEach(function (value, key) {\n    return array.push([key, value]);\n  });\n  return array;\n};\n\nvar objectIs = Object.is ? Object.is : require('object-is');\nvar objectGetOwnPropertySymbols = Object.getOwnPropertySymbols ? Object.getOwnPropertySymbols : function () {\n  return [];\n};\nvar numberIsNaN = Number.isNaN ? Number.isNaN : require('is-nan');\n\nfunction uncurryThis(f) {\n  return f.call.bind(f);\n}\n\nvar hasOwnProperty = uncurryThis(Object.prototype.hasOwnProperty);\nvar propertyIsEnumerable = uncurryThis(Object.prototype.propertyIsEnumerable);\nvar objectToString = uncurryThis(Object.prototype.toString);\n\nvar _require$types = require('util/').types,\n    isAnyArrayBuffer = _require$types.isAnyArrayBuffer,\n    isArrayBufferView = _require$types.isArrayBufferView,\n    isDate = _require$types.isDate,\n    isMap = _require$types.isMap,\n    isRegExp = _require$types.isRegExp,\n    isSet = _require$types.isSet,\n    isNativeError = _require$types.isNativeError,\n    isBoxedPrimitive = _require$types.isBoxedPrimitive,\n    isNumberObject = _require$types.isNumberObject,\n    isStringObject = _require$types.isStringObject,\n    isBooleanObject = _require$types.isBooleanObject,\n    isBigIntObject = _require$types.isBigIntObject,\n    isSymbolObject = _require$types.isSymbolObject,\n    isFloat32Array = _require$types.isFloat32Array,\n    isFloat64Array = _require$types.isFloat64Array;\n\nfunction isNonIndex(key) {\n  if (key.length === 0 || key.length > 10) return true;\n\n  for (var i = 0; i < key.length; i++) {\n    var code = key.charCodeAt(i);\n    if (code < 48 || code > 57) return true;\n  } // The maximum size for an array is 2 ** 32 -1.\n\n\n  return key.length === 10 && key >= Math.pow(2, 32);\n}\n\nfunction getOwnNonIndexProperties(value) {\n  return Object.keys(value).filter(isNonIndex).concat(objectGetOwnPropertySymbols(value).filter(Object.prototype.propertyIsEnumerable.bind(value)));\n} // Taken from https://github.com/feross/buffer/blob/680e9e5e488f22aac27599a57dc844a6315928dd/index.js\n// original notice:\n\n/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n\nfunction compare(a, b) {\n  if (a === b) {\n    return 0;\n  }\n\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) {\n    return -1;\n  }\n\n  if (y < x) {\n    return 1;\n  }\n\n  return 0;\n}\n\nvar ONLY_ENUMERABLE = undefined;\nvar kStrict = true;\nvar kLoose = false;\nvar kNoIterator = 0;\nvar kIsArray = 1;\nvar kIsSet = 2;\nvar kIsMap = 3; // Check if they have the same source and flags\n\nfunction areSimilarRegExps(a, b) {\n  return regexFlagsSupported ? a.source === b.source && a.flags === b.flags : RegExp.prototype.toString.call(a) === RegExp.prototype.toString.call(b);\n}\n\nfunction areSimilarFloatArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  for (var offset = 0; offset < a.byteLength; offset++) {\n    if (a[offset] !== b[offset]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction areSimilarTypedArrays(a, b) {\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n\n  return compare(new Uint8Array(a.buffer, a.byteOffset, a.byteLength), new Uint8Array(b.buffer, b.byteOffset, b.byteLength)) === 0;\n}\n\nfunction areEqualArrayBuffers(buf1, buf2) {\n  return buf1.byteLength === buf2.byteLength && compare(new Uint8Array(buf1), new Uint8Array(buf2)) === 0;\n}\n\nfunction isEqualBoxedPrimitive(val1, val2) {\n  if (isNumberObject(val1)) {\n    return isNumberObject(val2) && objectIs(Number.prototype.valueOf.call(val1), Number.prototype.valueOf.call(val2));\n  }\n\n  if (isStringObject(val1)) {\n    return isStringObject(val2) && String.prototype.valueOf.call(val1) === String.prototype.valueOf.call(val2);\n  }\n\n  if (isBooleanObject(val1)) {\n    return isBooleanObject(val2) && Boolean.prototype.valueOf.call(val1) === Boolean.prototype.valueOf.call(val2);\n  }\n\n  if (isBigIntObject(val1)) {\n    return isBigIntObject(val2) && BigInt.prototype.valueOf.call(val1) === BigInt.prototype.valueOf.call(val2);\n  }\n\n  return isSymbolObject(val2) && Symbol.prototype.valueOf.call(val1) === Symbol.prototype.valueOf.call(val2);\n} // Notes: Type tags are historical [[Class]] properties that can be set by\n// FunctionTemplate::SetClassName() in C++ or Symbol.toStringTag in JS\n// and retrieved using Object.prototype.toString.call(obj) in JS\n// See https://tc39.github.io/ecma262/#sec-object.prototype.tostring\n// for a list of tags pre-defined in the spec.\n// There are some unspecified tags in the wild too (e.g. typed array tags).\n// Since tags can be altered, they only serve fast failures\n//\n// Typed arrays and buffers are checked by comparing the content in their\n// underlying ArrayBuffer. This optimization requires that it's\n// reasonable to interpret their underlying memory in the same way,\n// which is checked by comparing their type tags.\n// (e.g. a Uint8Array and a Uint16Array with the same memory content\n// could still be different because they will be interpreted differently).\n//\n// For strict comparison, objects should have\n// a) The same built-in type tags\n// b) The same prototypes.\n\n\nfunction innerDeepEqual(val1, val2, strict, memos) {\n  // All identical values are equivalent, as determined by ===.\n  if (val1 === val2) {\n    if (val1 !== 0) return true;\n    return strict ? objectIs(val1, val2) : true;\n  } // Check more closely if val1 and val2 are equal.\n\n\n  if (strict) {\n    if (_typeof(val1) !== 'object') {\n      return typeof val1 === 'number' && numberIsNaN(val1) && numberIsNaN(val2);\n    }\n\n    if (_typeof(val2) !== 'object' || val1 === null || val2 === null) {\n      return false;\n    }\n\n    if (Object.getPrototypeOf(val1) !== Object.getPrototypeOf(val2)) {\n      return false;\n    }\n  } else {\n    if (val1 === null || _typeof(val1) !== 'object') {\n      if (val2 === null || _typeof(val2) !== 'object') {\n        // eslint-disable-next-line eqeqeq\n        return val1 == val2;\n      }\n\n      return false;\n    }\n\n    if (val2 === null || _typeof(val2) !== 'object') {\n      return false;\n    }\n  }\n\n  var val1Tag = objectToString(val1);\n  var val2Tag = objectToString(val2);\n\n  if (val1Tag !== val2Tag) {\n    return false;\n  }\n\n  if (Array.isArray(val1)) {\n    // Check for sparse arrays and general fast path\n    if (val1.length !== val2.length) {\n      return false;\n    }\n\n    var keys1 = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n    var keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (keys1.length !== keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsArray, keys1);\n  } // [browserify] This triggers on certain types in IE (Map/Set) so we don't\n  // wan't to early return out of the rest of the checks. However we can check\n  // if the second value is one of these values and the first isn't.\n\n\n  if (val1Tag === '[object Object]') {\n    // return keyCheck(val1, val2, strict, memos, kNoIterator);\n    if (!isMap(val1) && isMap(val2) || !isSet(val1) && isSet(val2)) {\n      return false;\n    }\n  }\n\n  if (isDate(val1)) {\n    if (!isDate(val2) || Date.prototype.getTime.call(val1) !== Date.prototype.getTime.call(val2)) {\n      return false;\n    }\n  } else if (isRegExp(val1)) {\n    if (!isRegExp(val2) || !areSimilarRegExps(val1, val2)) {\n      return false;\n    }\n  } else if (isNativeError(val1) || val1 instanceof Error) {\n    // Do not compare the stack as it might differ even though the error itself\n    // is otherwise identical.\n    if (val1.message !== val2.message || val1.name !== val2.name) {\n      return false;\n    }\n  } else if (isArrayBufferView(val1)) {\n    if (!strict && (isFloat32Array(val1) || isFloat64Array(val1))) {\n      if (!areSimilarFloatArrays(val1, val2)) {\n        return false;\n      }\n    } else if (!areSimilarTypedArrays(val1, val2)) {\n      return false;\n    } // Buffer.compare returns true, so val1.length === val2.length. If they both\n    // only contain numeric keys, we don't need to exam further than checking\n    // the symbols.\n\n\n    var _keys = getOwnNonIndexProperties(val1, ONLY_ENUMERABLE);\n\n    var _keys2 = getOwnNonIndexProperties(val2, ONLY_ENUMERABLE);\n\n    if (_keys.length !== _keys2.length) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kNoIterator, _keys);\n  } else if (isSet(val1)) {\n    if (!isSet(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsSet);\n  } else if (isMap(val1)) {\n    if (!isMap(val2) || val1.size !== val2.size) {\n      return false;\n    }\n\n    return keyCheck(val1, val2, strict, memos, kIsMap);\n  } else if (isAnyArrayBuffer(val1)) {\n    if (!areEqualArrayBuffers(val1, val2)) {\n      return false;\n    }\n  } else if (isBoxedPrimitive(val1) && !isEqualBoxedPrimitive(val1, val2)) {\n    return false;\n  }\n\n  return keyCheck(val1, val2, strict, memos, kNoIterator);\n}\n\nfunction getEnumerables(val, keys) {\n  return keys.filter(function (k) {\n    return propertyIsEnumerable(val, k);\n  });\n}\n\nfunction keyCheck(val1, val2, strict, memos, iterationType, aKeys) {\n  // For all remaining Object pairs, including Array, objects and Maps,\n  // equivalence is determined by having:\n  // a) The same number of owned enumerable properties\n  // b) The same set of keys/indexes (although not necessarily the same order)\n  // c) Equivalent values for every corresponding key/index\n  // d) For Sets and Maps, equal contents\n  // Note: this accounts for both named and indexed properties on Arrays.\n  if (arguments.length === 5) {\n    aKeys = Object.keys(val1);\n    var bKeys = Object.keys(val2); // The pair must have the same number of owned properties.\n\n    if (aKeys.length !== bKeys.length) {\n      return false;\n    }\n  } // Cheap key test\n\n\n  var i = 0;\n\n  for (; i < aKeys.length; i++) {\n    if (!hasOwnProperty(val2, aKeys[i])) {\n      return false;\n    }\n  }\n\n  if (strict && arguments.length === 5) {\n    var symbolKeysA = objectGetOwnPropertySymbols(val1);\n\n    if (symbolKeysA.length !== 0) {\n      var count = 0;\n\n      for (i = 0; i < symbolKeysA.length; i++) {\n        var key = symbolKeysA[i];\n\n        if (propertyIsEnumerable(val1, key)) {\n          if (!propertyIsEnumerable(val2, key)) {\n            return false;\n          }\n\n          aKeys.push(key);\n          count++;\n        } else if (propertyIsEnumerable(val2, key)) {\n          return false;\n        }\n      }\n\n      var symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (symbolKeysA.length !== symbolKeysB.length && getEnumerables(val2, symbolKeysB).length !== count) {\n        return false;\n      }\n    } else {\n      var _symbolKeysB = objectGetOwnPropertySymbols(val2);\n\n      if (_symbolKeysB.length !== 0 && getEnumerables(val2, _symbolKeysB).length !== 0) {\n        return false;\n      }\n    }\n  }\n\n  if (aKeys.length === 0 && (iterationType === kNoIterator || iterationType === kIsArray && val1.length === 0 || val1.size === 0)) {\n    return true;\n  } // Use memos to handle cycles.\n\n\n  if (memos === undefined) {\n    memos = {\n      val1: new Map(),\n      val2: new Map(),\n      position: 0\n    };\n  } else {\n    // We prevent up to two map.has(x) calls by directly retrieving the value\n    // and checking for undefined. The map can only contain numbers, so it is\n    // safe to check for undefined only.\n    var val2MemoA = memos.val1.get(val1);\n\n    if (val2MemoA !== undefined) {\n      var val2MemoB = memos.val2.get(val2);\n\n      if (val2MemoB !== undefined) {\n        return val2MemoA === val2MemoB;\n      }\n    }\n\n    memos.position++;\n  }\n\n  memos.val1.set(val1, memos.position);\n  memos.val2.set(val2, memos.position);\n  var areEq = objEquiv(val1, val2, strict, aKeys, memos, iterationType);\n  memos.val1.delete(val1);\n  memos.val2.delete(val2);\n  return areEq;\n}\n\nfunction setHasEqualElement(set, val1, strict, memo) {\n  // Go looking.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var val2 = setValues[i];\n\n    if (innerDeepEqual(val1, val2, strict, memo)) {\n      // Remove the matching element to make sure we do not check that again.\n      set.delete(val2);\n      return true;\n    }\n  }\n\n  return false;\n} // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Equality_comparisons_and_sameness#Loose_equality_using\n// Sadly it is not possible to detect corresponding values properly in case the\n// type is a string, number, bigint or boolean. The reason is that those values\n// can match lots of different string values (e.g., 1n == '+00001').\n\n\nfunction findLooseMatchingPrimitives(prim) {\n  switch (_typeof(prim)) {\n    case 'undefined':\n      return null;\n\n    case 'object':\n      // Only pass in null as object!\n      return undefined;\n\n    case 'symbol':\n      return false;\n\n    case 'string':\n      prim = +prim;\n    // Loose equal entries exist only if the string is possible to convert to\n    // a regular number and not NaN.\n    // Fall through\n\n    case 'number':\n      if (numberIsNaN(prim)) {\n        return false;\n      }\n\n  }\n\n  return true;\n}\n\nfunction setMightHaveLoosePrim(a, b, prim) {\n  var altValue = findLooseMatchingPrimitives(prim);\n  if (altValue != null) return altValue;\n  return b.has(altValue) && !a.has(altValue);\n}\n\nfunction mapMightHaveLoosePrim(a, b, prim, item, memo) {\n  var altValue = findLooseMatchingPrimitives(prim);\n\n  if (altValue != null) {\n    return altValue;\n  }\n\n  var curB = b.get(altValue);\n\n  if (curB === undefined && !b.has(altValue) || !innerDeepEqual(item, curB, false, memo)) {\n    return false;\n  }\n\n  return !a.has(altValue) && innerDeepEqual(item, curB, false, memo);\n}\n\nfunction setEquiv(a, b, strict, memo) {\n  // This is a lazily initiated Set of entries which have to be compared\n  // pairwise.\n  var set = null;\n  var aValues = arrayFromSet(a);\n\n  for (var i = 0; i < aValues.length; i++) {\n    var val = aValues[i]; // Note: Checking for the objects first improves the performance for object\n    // heavy sets but it is a minor slow down for primitives. As they are fast\n    // to check this improves the worst case scenario instead.\n\n    if (_typeof(val) === 'object' && val !== null) {\n      if (set === null) {\n        set = new Set();\n      } // If the specified value doesn't exist in the second set its an not null\n      // object (or non strict only: a not matching primitive) we'll need to go\n      // hunting for something thats deep-(strict-)equal to it. To make this\n      // O(n log n) complexity we have to copy these values in a new set first.\n\n\n      set.add(val);\n    } else if (!b.has(val)) {\n      if (strict) return false; // Fast path to detect missing string, symbol, undefined and null values.\n\n      if (!setMightHaveLoosePrim(a, b, val)) {\n        return false;\n      }\n\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(val);\n    }\n  }\n\n  if (set !== null) {\n    var bValues = arrayFromSet(b);\n\n    for (var _i = 0; _i < bValues.length; _i++) {\n      var _val = bValues[_i]; // We have to check if a primitive value is already\n      // matching and only if it's not, go hunting for it.\n\n      if (_typeof(_val) === 'object' && _val !== null) {\n        if (!setHasEqualElement(set, _val, strict, memo)) return false;\n      } else if (!strict && !a.has(_val) && !setHasEqualElement(set, _val, strict, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction mapHasEqualEntry(set, map, key1, item1, strict, memo) {\n  // To be able to handle cases like:\n  //   Map([[{}, 'a'], [{}, 'b']]) vs Map([[{}, 'b'], [{}, 'a']])\n  // ... we need to consider *all* matching keys, not just the first we find.\n  var setValues = arrayFromSet(set);\n\n  for (var i = 0; i < setValues.length; i++) {\n    var key2 = setValues[i];\n\n    if (innerDeepEqual(key1, key2, strict, memo) && innerDeepEqual(item1, map.get(key2), strict, memo)) {\n      set.delete(key2);\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction mapEquiv(a, b, strict, memo) {\n  var set = null;\n  var aEntries = arrayFromMap(a);\n\n  for (var i = 0; i < aEntries.length; i++) {\n    var _aEntries$i = _slicedToArray(aEntries[i], 2),\n        key = _aEntries$i[0],\n        item1 = _aEntries$i[1];\n\n    if (_typeof(key) === 'object' && key !== null) {\n      if (set === null) {\n        set = new Set();\n      }\n\n      set.add(key);\n    } else {\n      // By directly retrieving the value we prevent another b.has(key) check in\n      // almost all possible cases.\n      var item2 = b.get(key);\n\n      if (item2 === undefined && !b.has(key) || !innerDeepEqual(item1, item2, strict, memo)) {\n        if (strict) return false; // Fast path to detect missing string, symbol, undefined and null\n        // keys.\n\n        if (!mapMightHaveLoosePrim(a, b, key, item1, memo)) return false;\n\n        if (set === null) {\n          set = new Set();\n        }\n\n        set.add(key);\n      }\n    }\n  }\n\n  if (set !== null) {\n    var bEntries = arrayFromMap(b);\n\n    for (var _i2 = 0; _i2 < bEntries.length; _i2++) {\n      var _bEntries$_i = _slicedToArray(bEntries[_i2], 2),\n          key = _bEntries$_i[0],\n          item = _bEntries$_i[1];\n\n      if (_typeof(key) === 'object' && key !== null) {\n        if (!mapHasEqualEntry(set, a, key, item, strict, memo)) return false;\n      } else if (!strict && (!a.has(key) || !innerDeepEqual(a.get(key), item, false, memo)) && !mapHasEqualEntry(set, a, key, item, false, memo)) {\n        return false;\n      }\n    }\n\n    return set.size === 0;\n  }\n\n  return true;\n}\n\nfunction objEquiv(a, b, strict, keys, memos, iterationType) {\n  // Sets and maps don't have their entries accessible via normal object\n  // properties.\n  var i = 0;\n\n  if (iterationType === kIsSet) {\n    if (!setEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsMap) {\n    if (!mapEquiv(a, b, strict, memos)) {\n      return false;\n    }\n  } else if (iterationType === kIsArray) {\n    for (; i < a.length; i++) {\n      if (hasOwnProperty(a, i)) {\n        if (!hasOwnProperty(b, i) || !innerDeepEqual(a[i], b[i], strict, memos)) {\n          return false;\n        }\n      } else if (hasOwnProperty(b, i)) {\n        return false;\n      } else {\n        // Array is sparse.\n        var keysA = Object.keys(a);\n\n        for (; i < keysA.length; i++) {\n          var key = keysA[i];\n\n          if (!hasOwnProperty(b, key) || !innerDeepEqual(a[key], b[key], strict, memos)) {\n            return false;\n          }\n        }\n\n        if (keysA.length !== Object.keys(b).length) {\n          return false;\n        }\n\n        return true;\n      }\n    }\n  } // The pair must have equivalent values for every corresponding key.\n  // Possibly expensive deep test:\n\n\n  for (i = 0; i < keys.length; i++) {\n    var _key = keys[i];\n\n    if (!innerDeepEqual(a[_key], b[_key], strict, memos)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nfunction isDeepEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kLoose);\n}\n\nfunction isDeepStrictEqual(val1, val2) {\n  return innerDeepEqual(val1, val2, kStrict);\n}\n\nmodule.exports = {\n  isDeepEqual: isDeepEqual,\n  isDeepStrictEqual: isDeepStrictEqual\n};","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","/* The MIT License (MIT)\n *\n * Copyright 2015-2018 Peter A. Bigot\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\n/**\n * Support for translating between Buffer instances and JavaScript\n * native types.\n *\n * {@link module:Layout~Layout|Layout} is the basis of a class\n * hierarchy that associates property names with sequences of encoded\n * bytes.\n *\n * Layouts are supported for these scalar (numeric) types:\n * * {@link module:Layout~UInt|Unsigned integers in little-endian\n *   format} with {@link module:Layout.u8|8-bit}, {@link\n *   module:Layout.u16|16-bit}, {@link module:Layout.u24|24-bit},\n *   {@link module:Layout.u32|32-bit}, {@link\n *   module:Layout.u40|40-bit}, and {@link module:Layout.u48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~UIntBE|Unsigned integers in big-endian\n *   format} with {@link module:Layout.u16be|16-bit}, {@link\n *   module:Layout.u24be|24-bit}, {@link module:Layout.u32be|32-bit},\n *   {@link module:Layout.u40be|40-bit}, and {@link\n *   module:Layout.u48be|48-bit} representation ranges;\n * * {@link module:Layout~Int|Signed integers in little-endian\n *   format} with {@link module:Layout.s8|8-bit}, {@link\n *   module:Layout.s16|16-bit}, {@link module:Layout.s24|24-bit},\n *   {@link module:Layout.s32|32-bit}, {@link\n *   module:Layout.s40|40-bit}, and {@link module:Layout.s48|48-bit}\n *   representation ranges;\n * * {@link module:Layout~IntBE|Signed integers in big-endian format}\n *   with {@link module:Layout.s16be|16-bit}, {@link\n *   module:Layout.s24be|24-bit}, {@link module:Layout.s32be|32-bit},\n *   {@link module:Layout.s40be|40-bit}, and {@link\n *   module:Layout.s48be|48-bit} representation ranges;\n * * 64-bit integral values that decode to an exact (if magnitude is\n *   less than 2^53) or nearby integral Number in {@link\n *   module:Layout.nu64|unsigned little-endian}, {@link\n *   module:Layout.nu64be|unsigned big-endian}, {@link\n *   module:Layout.ns64|signed little-endian}, and {@link\n *   module:Layout.ns64be|unsigned big-endian} encodings;\n * * 32-bit floating point values with {@link\n *   module:Layout.f32|little-endian} and {@link\n *   module:Layout.f32be|big-endian} representations;\n * * 64-bit floating point values with {@link\n *   module:Layout.f64|little-endian} and {@link\n *   module:Layout.f64be|big-endian} representations;\n * * {@link module:Layout.const|Constants} that take no space in the\n *   encoded expression.\n *\n * and for these aggregate types:\n * * {@link module:Layout.seq|Sequence}s of instances of a {@link\n *   module:Layout~Layout|Layout}, with JavaScript representation as\n *   an Array and constant or data-dependent {@link\n *   module:Layout~Sequence#count|length};\n * * {@link module:Layout.struct|Structure}s that aggregate a\n *   heterogeneous sequence of {@link module:Layout~Layout|Layout}\n *   instances, with JavaScript representation as an Object;\n * * {@link module:Layout.union|Union}s that support multiple {@link\n *   module:Layout~VariantLayout|variant layouts} over a fixed\n *   (padded) or variable (not padded) span of bytes, using an\n *   unsigned integer at the start of the data or a separate {@link\n *   module:Layout.unionLayoutDiscriminator|layout element} to\n *   determine which layout to use when interpreting the buffer\n *   contents;\n * * {@link module:Layout.bits|BitStructure}s that contain a sequence\n *   of individual {@link\n *   module:Layout~BitStructure#addField|BitField}s packed into an 8,\n *   16, 24, or 32-bit unsigned integer starting at the least- or\n *   most-significant bit;\n * * {@link module:Layout.cstr|C strings} of varying length;\n * * {@link module:Layout.blob|Blobs} of fixed- or variable-{@link\n *   module:Layout~Blob#length|length} raw data.\n *\n * All {@link module:Layout~Layout|Layout} instances are immutable\n * after construction, to prevent internal state from becoming\n * inconsistent.\n *\n * @local Layout\n * @local ExternalLayout\n * @local GreedyCount\n * @local OffsetLayout\n * @local UInt\n * @local UIntBE\n * @local Int\n * @local IntBE\n * @local NearUInt64\n * @local NearUInt64BE\n * @local NearInt64\n * @local NearInt64BE\n * @local Float\n * @local FloatBE\n * @local Double\n * @local DoubleBE\n * @local Sequence\n * @local Structure\n * @local UnionDiscriminator\n * @local UnionLayoutDiscriminator\n * @local Union\n * @local VariantLayout\n * @local BitStructure\n * @local BitField\n * @local Boolean\n * @local Blob\n * @local CString\n * @local Constant\n * @local bindConstructorLayout\n * @module Layout\n * @license MIT\n * @author Peter A. Bigot\n * @see {@link https://github.com/pabigot/buffer-layout|buffer-layout on GitHub}\n */\n\n'use strict';\n\n/**\n * Base class for layout objects.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * Layout#encode|encode} or {@link Layout#decode|decode} functions.\n *\n * @param {Number} span - Initializer for {@link Layout#span|span}.  The\n * parameter must be an integer; a negative value signifies that the\n * span is {@link Layout#getSpan|value-specific}.\n *\n * @param {string} [property] - Initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n */\nclass Layout {\n  constructor(span, property) {\n    if (!Number.isInteger(span)) {\n      throw new TypeError('span must be an integer');\n    }\n\n    /** The span of the layout in bytes.\n     *\n     * Positive values are generally expected.\n     *\n     * Zero will only appear in {@link Constant}s and in {@link\n     * Sequence}s where the {@link Sequence#count|count} is zero.\n     *\n     * A negative value indicates that the span is value-specific, and\n     * must be obtained using {@link Layout#getSpan|getSpan}. */\n    this.span = span;\n\n    /** The property name used when this layout is represented in an\n     * Object.\n     *\n     * Used only for layouts that {@link Layout#decode|decode} to Object\n     * instances.  If left undefined the span of the unnamed layout will\n     * be treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Function to create an Object into which decoded properties will\n   * be written.\n   *\n   * Used only for layouts that {@link Layout#decode|decode} to Object\n   * instances, which means:\n   * * {@link Structure}\n   * * {@link Union}\n   * * {@link VariantLayout}\n   * * {@link BitStructure}\n   *\n   * If left undefined the JavaScript representation of these layouts\n   * will be Object instances.\n   *\n   * See {@link bindConstructorLayout}.\n   */\n  makeDestinationObject() {\n    return {};\n  }\n\n  /**\n   * Decode from a Buffer into an JavaScript value.\n   *\n   * @param {Buffer} b - the buffer from which encoded data is read.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {(Number|Array|Object)} - the value of the decoded data.\n   *\n   * @abstract\n   */\n  decode(b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Encode a JavaScript value into a Buffer.\n   *\n   * @param {(Number|Array|Object)} src - the value to be encoded into\n   * the buffer.  The type accepted depends on the (sub-)type of {@link\n   * Layout}.\n   *\n   * @param {Buffer} b - the buffer into which encoded data will be\n   * written.\n   *\n   * @param {Number} [offset] - the offset at which the encoded data\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @returns {Number} - the number of bytes encoded, including the\n   * space skipped for internal padding, but excluding data such as\n   * {@link Sequence#count|lengths} when stored {@link\n   * ExternalLayout|externally}.  This is the adjustment to `offset`\n   * producing the offset where data for the next layout would be\n   * written.\n   *\n   * @abstract\n   */\n  encode(src, b, offset) {\n    throw new Error('Layout is abstract');\n  }\n\n  /**\n   * Calculate the span of a specific instance of a layout.\n   *\n   * @param {Buffer} b - the buffer that contains an encoded instance.\n   *\n   * @param {Number} [offset] - the offset at which the encoded instance\n   * starts.  If absent a zero offset is inferred.\n   *\n   * @return {Number} - the number of bytes covered by the layout\n   * instance.  If this method is not overridden in a subclass the\n   * definition-time constant {@link Layout#span|span} will be\n   * returned.\n   *\n   * @throws {RangeError} - if the length of the value cannot be\n   * determined.\n   */\n  getSpan(b, offset) {\n    if (0 > this.span) {\n      throw new RangeError('indeterminate span');\n    }\n    return this.span;\n  }\n\n  /**\n   * Replicate the layout using a new property.\n   *\n   * This function must be used to get a structurally-equivalent layout\n   * with a different name since all {@link Layout} instances are\n   * immutable.\n   *\n   * **NOTE** This is a shallow copy.  All fields except {@link\n   * Layout#property|property} are strictly equal to the origin layout.\n   *\n   * @param {String} property - the value for {@link\n   * Layout#property|property} in the replica.\n   *\n   * @returns {Layout} - the copy with {@link Layout#property|property}\n   * set to `property`.\n   */\n  replicate(property) {\n    const rv = Object.create(this.constructor.prototype);\n    Object.assign(rv, this);\n    rv.property = property;\n    return rv;\n  }\n\n  /**\n   * Create an object from layout properties and an array of values.\n   *\n   * **NOTE** This function returns `undefined` if invoked on a layout\n   * that does not return its value as an Object.  Objects are\n   * returned for things that are a {@link Structure}, which includes\n   * {@link VariantLayout|variant layouts} if they are structures, and\n   * excludes {@link Union}s.  If you want this feature for a union\n   * you must use {@link Union.getVariant|getVariant} to select the\n   * desired layout.\n   *\n   * @param {Array} values - an array of values that correspond to the\n   * default order for properties.  As with {@link Layout#decode|decode}\n   * layout elements that have no property name are skipped when\n   * iterating over the array values.  Only the top-level properties are\n   * assigned; arguments are not assigned to properties of contained\n   * layouts.  Any unused values are ignored.\n   *\n   * @return {(Object|undefined)}\n   */\n  fromArray(values) {\n    return undefined;\n  }\n}\nexports.Layout = Layout;\n\n/* Provide text that carries a name (such as for a function that will\n * be throwing an error) annotated with the property of a given layout\n * (such as one for which the value was unacceptable).\n *\n * @ignore */\nfunction nameWithProperty(name, lo) {\n  if (lo.property) {\n    return name + '[' + lo.property + ']';\n  }\n  return name;\n}\nexports.nameWithProperty = nameWithProperty;\n\n/**\n * Augment a class so that instances can be encoded/decoded using a\n * given layout.\n *\n * Calling this function couples `Class` with `layout` in several ways:\n *\n * * `Class.layout_` becomes a static member property equal to `layout`;\n * * `layout.boundConstructor_` becomes a static member property equal\n *    to `Class`;\n * * The {@link Layout#makeDestinationObject|makeDestinationObject()}\n *   property of `layout` is set to a function that returns a `new\n *   Class()`;\n * * `Class.decode(b, offset)` becomes a static member function that\n *   delegates to {@link Layout#decode|layout.decode}.  The\n *   synthesized function may be captured and extended.\n * * `Class.prototype.encode(b, offset)` provides an instance member\n *   function that delegates to {@link Layout#encode|layout.encode}\n *   with `src` set to `this`.  The synthesized function may be\n *   captured and extended, but when the extension is invoked `this`\n *   must be explicitly bound to the instance.\n *\n * @param {class} Class - a JavaScript class with a nullary\n * constructor.\n *\n * @param {Layout} layout - the {@link Layout} instance used to encode\n * instances of `Class`.\n */\nfunction bindConstructorLayout(Class, layout) {\n  if ('function' !== typeof Class) {\n    throw new TypeError('Class must be constructor');\n  }\n  if (Class.hasOwnProperty('layout_')) {\n    throw new Error('Class is already bound to a layout');\n  }\n  if (!(layout && (layout instanceof Layout))) {\n    throw new TypeError('layout must be a Layout');\n  }\n  if (layout.hasOwnProperty('boundConstructor_')) {\n    throw new Error('layout is already bound to a constructor');\n  }\n  Class.layout_ = layout;\n  layout.boundConstructor_ = Class;\n  layout.makeDestinationObject = (() => new Class());\n  Object.defineProperty(Class.prototype, 'encode', {\n    value: function(b, offset) {\n      return layout.encode(this, b, offset);\n    },\n    writable: true,\n  });\n  Object.defineProperty(Class, 'decode', {\n    value: function(b, offset) {\n      return layout.decode(b, offset);\n    },\n    writable: true,\n  });\n}\nexports.bindConstructorLayout = bindConstructorLayout;\n\n/**\n * An object that behaves like a layout but does not consume space\n * within its containing layout.\n *\n * This is primarily used to obtain metadata about a member, such as a\n * {@link OffsetLayout} that can provide data about a {@link\n * Layout#getSpan|value-specific span}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support {@link\n * ExternalLayout#isCount|isCount} or other {@link Layout} functions.\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @abstract\n * @augments {Layout}\n */\nclass ExternalLayout extends Layout {\n  /**\n   * Return `true` iff the external layout decodes to an unsigned\n   * integer layout.\n   *\n   * In that case it can be used as the source of {@link\n   * Sequence#count|Sequence counts}, {@link Blob#length|Blob lengths},\n   * or as {@link UnionLayoutDiscriminator#layout|external union\n   * discriminators}.\n   *\n   * @abstract\n   */\n  isCount() {\n    throw new Error('ExternalLayout is abstract');\n  }\n}\n\n/**\n * An {@link ExternalLayout} that determines its {@link\n * Layout#decode|value} based on offset into and length of the buffer\n * on which it is invoked.\n *\n * *Factory*: {@link module:Layout.greedy|greedy}\n *\n * @param {Number} [elementSpan] - initializer for {@link\n * GreedyCount#elementSpan|elementSpan}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {ExternalLayout}\n */\nclass GreedyCount extends ExternalLayout {\n  constructor(elementSpan, property) {\n    if (undefined === elementSpan) {\n      elementSpan = 1;\n    }\n    if ((!Number.isInteger(elementSpan)) || (0 >= elementSpan)) {\n      throw new TypeError('elementSpan must be a (positive) integer');\n    }\n    super(-1, property);\n\n    /** The layout for individual elements of the sequence.  The value\n     * must be a positive integer.  If not provided, the value will be\n     * 1. */\n    this.elementSpan = elementSpan;\n  }\n\n  /** @override */\n  isCount() {\n    return true;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rem = b.length - offset;\n    return Math.floor(rem / this.elementSpan);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    return 0;\n  }\n}\n\n/**\n * An {@link ExternalLayout} that supports accessing a {@link Layout}\n * at a fixed offset from the start of another Layout.  The offset may\n * be before, within, or after the base layout.\n *\n * *Factory*: {@link module:Layout.offset|offset}\n *\n * @param {Layout} layout - initializer for {@link\n * OffsetLayout#layout|layout}, modulo `property`.\n *\n * @param {Number} [offset] - Initializes {@link\n * OffsetLayout#offset|offset}.  Defaults to zero.\n *\n * @param {string} [property] - Optional new property name for a\n * {@link Layout#replicate| replica} of `layout` to be used as {@link\n * OffsetLayout#layout|layout}.  If not provided the `layout` is used\n * unchanged.\n *\n * @augments {Layout}\n */\nclass OffsetLayout extends ExternalLayout {\n  constructor(layout, offset, property) {\n    if (!(layout instanceof Layout)) {\n      throw new TypeError('layout must be a Layout');\n    }\n\n    if (undefined === offset) {\n      offset = 0;\n    } else if (!Number.isInteger(offset)) {\n      throw new TypeError('offset must be integer or undefined');\n    }\n\n    super(layout.span, property || layout.property);\n\n    /** The subordinated layout. */\n    this.layout = layout;\n\n    /** The location of {@link OffsetLayout#layout} relative to the\n     * start of another layout.\n     *\n     * The value may be positive or negative, but an error will thrown\n     * if at the point of use it goes outside the span of the Buffer\n     * being accessed.  */\n    this.offset = offset;\n  }\n\n  /** @override */\n  isCount() {\n    return ((this.layout instanceof UInt)\n            || (this.layout instanceof UIntBE));\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.decode(b, offset + this.offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return this.layout.encode(src, b, offset + this.offset);\n  }\n}\n\n/**\n * Represent an unsigned integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.u8|u8}, {@link\n *  module:Layout.u16|u16}, {@link module:Layout.u24|u24}, {@link\n *  module:Layout.u32|u32}, {@link module:Layout.u40|u40}, {@link\n *  module:Layout.u48|u48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UInt extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent an unsigned integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.u8be|u8be}, {@link\n * module:Layout.u16be|u16be}, {@link module:Layout.u24be|u24be},\n * {@link module:Layout.u32be|u32be}, {@link\n * module:Layout.u40be|u40be}, {@link module:Layout.u48be|u48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UIntBE extends Layout {\n  constructor(span, property) {\n    super( span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readUIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeUIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in little-endian format.\n *\n * *Factory*: {@link module:Layout.s8|s8}, {@link\n *  module:Layout.s16|s16}, {@link module:Layout.s24|s24}, {@link\n *  module:Layout.s32|s32}, {@link module:Layout.s40|s40}, {@link\n *  module:Layout.s48|s48}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Int extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntLE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntLE(src, offset, this.span);\n    return this.span;\n  }\n}\n\n/**\n * Represent a signed integer in big-endian format.\n *\n * *Factory*: {@link module:Layout.s8be|s8be}, {@link\n * module:Layout.s16be|s16be}, {@link module:Layout.s24be|s24be},\n * {@link module:Layout.s32be|s32be}, {@link\n * module:Layout.s40be|s40be}, {@link module:Layout.s48be|s48be}\n *\n * @param {Number} span - initializer for {@link Layout#span|span}.\n * The parameter can range from 1 through 6.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass IntBE extends Layout {\n  constructor(span, property) {\n    super(span, property);\n    if (6 < this.span) {\n      throw new RangeError('span must not exceed 6 bytes');\n    }\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readIntBE(offset, this.span);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeIntBE(src, offset, this.span);\n    return this.span;\n  }\n}\n\nconst V2E32 = Math.pow(2, 32);\n\n/* True modulus high and low 32-bit words, where low word is always\n * non-negative. */\nfunction divmodInt64(src) {\n  const hi32 = Math.floor(src / V2E32);\n  const lo32 = src - (hi32 * V2E32);\n  return {hi32, lo32};\n}\n/* Reconstruct Number from quotient and non-negative remainder */\nfunction roundedInt64(hi32, lo32) {\n  return hi32 * V2E32 + lo32;\n}\n\n/**\n * Represent an unsigned 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64|nu64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readUInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeUInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent an unsigned 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.nu64be|nu64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearUInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readUInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in little-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64|ns64}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64 extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const lo32 = b.readUInt32LE(offset);\n    const hi32 = b.readInt32LE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeUInt32LE(split.lo32, offset);\n    b.writeInt32LE(split.hi32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a signed 64-bit integer in big-endian format when\n * encoded and as a near integral JavaScript Number when decoded.\n *\n * *Factory*: {@link module:Layout.ns64be|ns64be}\n *\n * **NOTE** Values with magnitude greater than 2^52 may not decode to\n * the exact value of the encoded representation.\n *\n * @augments {Layout}\n */\nclass NearInt64BE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const hi32 = b.readInt32BE(offset);\n    const lo32 = b.readUInt32BE(offset + 4);\n    return roundedInt64(hi32, lo32);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const split = divmodInt64(src);\n    b.writeInt32BE(split.hi32, offset);\n    b.writeUInt32BE(split.lo32, offset + 4);\n    return 8;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f32|f32}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Float extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatLE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 32-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f32be|f32be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass FloatBE extends Layout {\n  constructor(property) {\n    super(4, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readFloatBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeFloatBE(src, offset);\n    return 4;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in little-endian format.\n *\n * *Factory*: {@link module:Layout.f64|f64}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Double extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleLE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleLE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a 64-bit floating point number in big-endian format.\n *\n * *Factory*: {@link module:Layout.f64be|f64be}\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass DoubleBE extends Layout {\n  constructor(property) {\n    super(8, property);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.readDoubleBE(offset);\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    b.writeDoubleBE(src, offset);\n    return 8;\n  }\n}\n\n/**\n * Represent a contiguous sequence of a specific layout as an Array.\n *\n * *Factory*: {@link module:Layout.seq|seq}\n *\n * @param {Layout} elementLayout - initializer for {@link\n * Sequence#elementLayout|elementLayout}.\n *\n * @param {(Number|ExternalLayout)} count - initializer for {@link\n * Sequence#count|count}.  The parameter must be either a positive\n * integer or an instance of {@link ExternalLayout}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Sequence extends Layout {\n  constructor(elementLayout, count, property) {\n    if (!(elementLayout instanceof Layout)) {\n      throw new TypeError('elementLayout must be a Layout');\n    }\n    if (!(((count instanceof ExternalLayout) && count.isCount())\n          || (Number.isInteger(count) && (0 <= count)))) {\n      throw new TypeError('count must be non-negative integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n    let span = -1;\n    if ((!(count instanceof ExternalLayout))\n        && (0 < elementLayout.span)) {\n      span = count * elementLayout.span;\n    }\n\n    super(span, property);\n\n    /** The layout for individual elements of the sequence. */\n    this.elementLayout = elementLayout;\n\n    /** The number of elements in the sequence.\n     *\n     * This will be either a non-negative integer or an instance of\n     * {@link ExternalLayout} for which {@link\n     * ExternalLayout#isCount|isCount()} is `true`. */\n    this.count = count;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    if (0 < this.elementLayout.span) {\n      span = count * this.elementLayout.span;\n    } else {\n      let idx = 0;\n      while (idx < count) {\n        span += this.elementLayout.getSpan(b, offset + span);\n        ++idx;\n      }\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const rv = [];\n    let i = 0;\n    let count = this.count;\n    if (count instanceof ExternalLayout) {\n      count = count.decode(b, offset);\n    }\n    while (i < count) {\n      rv.push(this.elementLayout.decode(b, offset));\n      offset += this.elementLayout.getSpan(b, offset);\n      i += 1;\n    }\n    return rv;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Sequence}.\n   *\n   * **NOTE** If `src` is shorter than {@link Sequence#count|count} then\n   * the unused space in the buffer is left unchanged.  If `src` is\n   * longer than {@link Sequence#count|count} the unneeded elements are\n   * ignored.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const elo = this.elementLayout;\n    const span = src.reduce((span, v) => {\n      return span + elo.encode(v, b, offset + span);\n    }, 0);\n    if (this.count instanceof ExternalLayout) {\n      this.count.encode(src.length, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Represent a contiguous sequence of arbitrary layout elements as an\n * Object.\n *\n * *Factory*: {@link module:Layout.struct|struct}\n *\n * **NOTE** The {@link Layout#span|span} of the structure is variable\n * if any layout in {@link Structure#fields|fields} has a variable\n * span.  When {@link Layout#encode|encoding} we must have a value for\n * all variable-length fields, or we wouldn't be able to figure out\n * how much space to use for storage.  We can only identify the value\n * for a field when it has a {@link Layout#property|property}.  As\n * such, although a structure may contain both unnamed fields and\n * variable-length fields, it cannot contain an unnamed\n * variable-length field.\n *\n * @param {Layout[]} fields - initializer for {@link\n * Structure#fields|fields}.  An error is raised if this contains a\n * variable-length field for which a {@link Layout#property|property}\n * is not defined.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @param {Boolean} [decodePrefixes] - initializer for {@link\n * Structure#decodePrefixes|property}.\n *\n * @throws {Error} - if `fields` contains an unnamed variable-length\n * layout.\n *\n * @augments {Layout}\n */\nclass Structure extends Layout {\n  constructor(fields, property, decodePrefixes) {\n    if (!(Array.isArray(fields)\n          && fields.reduce((acc, v) => acc && (v instanceof Layout), true))) {\n      throw new TypeError('fields must be array of Layout instances');\n    }\n    if (('boolean' === typeof property)\n        && (undefined === decodePrefixes)) {\n      decodePrefixes = property;\n      property = undefined;\n    }\n\n    /* Verify absence of unnamed variable-length fields. */\n    for (const fd of fields) {\n      if ((0 > fd.span)\n          && (undefined === fd.property)) {\n        throw new Error('fields cannot contain unnamed variable-length layout');\n      }\n    }\n\n    let span = -1;\n    try {\n      span = fields.reduce((span, fd) => span + fd.getSpan(), 0);\n    } catch (e) {\n    }\n    super(span, property);\n\n    /** The sequence of {@link Layout} values that comprise the\n     * structure.\n     *\n     * The individual elements need not be the same type, and may be\n     * either scalar or aggregate layouts.  If a member layout leaves\n     * its {@link Layout#property|property} undefined the\n     * corresponding region of the buffer associated with the element\n     * will not be mutated.\n     *\n     * @type {Layout[]} */\n    this.fields = fields;\n\n    /** Control behavior of {@link Layout#decode|decode()} given short\n     * buffers.\n     *\n     * In some situations a structure many be extended with additional\n     * fields over time, with older installations providing only a\n     * prefix of the full structure.  If this property is `true`\n     * decoding will accept those buffers and leave subsequent fields\n     * undefined, as long as the buffer ends at a field boundary.\n     * Defaults to `false`. */\n    this.decodePrefixes = !!decodePrefixes;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = 0;\n    try {\n      span = this.fields.reduce((span, fd) => {\n        const fsp = fd.getSpan(b, offset);\n        offset += fsp;\n        return span + fsp;\n      }, 0);\n    } catch (e) {\n      throw new RangeError('indeterminate span');\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(b, offset);\n      }\n      offset += fd.getSpan(b, offset);\n      if (this.decodePrefixes\n          && (b.length === offset)) {\n        break;\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Structure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the buffer is\n   * left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const firstOffset = offset;\n    let lastOffset = 0;\n    let lastWrote = 0;\n    for (const fd of this.fields) {\n      let span = fd.span;\n      lastWrote = (0 < span) ? span : 0;\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          lastWrote = fd.encode(fv, b, offset);\n          if (0 > span) {\n            /* Read the as-encoded span, which is not necessarily the\n             * same as what we wrote. */\n            span = fd.getSpan(b, offset);\n          }\n        }\n      }\n      lastOffset = offset;\n      offset += span;\n    }\n    /* Use (lastOffset + lastWrote) instead of offset because the last\n     * item may have had a dynamic length and we don't want to include\n     * the padding between it and the end of the space reserved for\n     * it. */\n    return (lastOffset + lastWrote) - firstOffset;\n  }\n\n  /** @override */\n  fromArray(values) {\n    const dest = this.makeDestinationObject();\n    for (const fd of this.fields) {\n      if ((undefined !== fd.property)\n          && (0 < values.length)) {\n        dest[fd.property] = values.shift();\n      }\n    }\n    return dest;\n  }\n\n  /**\n   * Get access to the layout of a given property.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Layout} - the layout associated with `property`, or\n   * undefined if there is no such property.\n   */\n  layoutFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n\n  /**\n   * Get the offset of a structure member.\n   *\n   * @param {String} property - the structure member of interest.\n   *\n   * @return {Number} - the offset in bytes to the start of `property`\n   * within the structure, or undefined if `property` is not a field\n   * within the structure.  If the property is a member but follows a\n   * variable-length structure member a negative number will be\n   * returned.\n   */\n  offsetOf(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    let offset = 0;\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return offset;\n      }\n      if (0 > fd.span) {\n        offset = -1;\n      } else if (0 <= offset) {\n        offset += fd.span;\n      }\n    }\n  }\n}\n\n/**\n * An object that can provide a {@link\n * Union#discriminator|discriminator} API for {@link Union}.\n *\n * **NOTE** This is an abstract base class; you can create instances\n * if it amuses you, but they won't support the {@link\n * UnionDiscriminator#encode|encode} or {@link\n * UnionDiscriminator#decode|decode} functions.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}.\n *\n * @abstract\n */\nclass UnionDiscriminator {\n  constructor(property) {\n    /** The {@link Layout#property|property} to be used when the\n     * discriminator is referenced in isolation (generally when {@link\n     * Union#decode|Union decode} cannot delegate to a specific\n     * variant). */\n    this.property = property;\n  }\n\n  /** Analog to {@link Layout#decode|Layout decode} for union discriminators.\n   *\n   * The implementation of this method need not reference the buffer if\n   * variant information is available through other means. */\n  decode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n\n  /** Analog to {@link Layout#decode|Layout encode} for union discriminators.\n   *\n   * The implementation of this method need not store the value if\n   * variant information is maintained through other means. */\n  encode() {\n    throw new Error('UnionDiscriminator is abstract');\n  }\n}\n\n/**\n * An object that can provide a {@link\n * UnionDiscriminator|discriminator API} for {@link Union} using an\n * unsigned integral {@link Layout} instance located either inside or\n * outside the union.\n *\n * @param {ExternalLayout} layout - initializes {@link\n * UnionLayoutDiscriminator#layout|layout}.  Must satisfy {@link\n * ExternalLayout#isCount|isCount()}.\n *\n * @param {string} [property] - Default for {@link\n * UnionDiscriminator#property|property}, superseding the property\n * from `layout`, but defaulting to `variant` if neither `property`\n * nor layout provide a property name.\n *\n * @augments {UnionDiscriminator}\n */\nclass UnionLayoutDiscriminator extends UnionDiscriminator {\n  constructor(layout, property) {\n    if (!((layout instanceof ExternalLayout)\n          && layout.isCount())) {\n      throw new TypeError('layout must be an unsigned integer ExternalLayout');\n    }\n\n    super(property || layout.property || 'variant');\n\n    /** The {@link ExternalLayout} used to access the discriminator\n     * value. */\n    this.layout = layout;\n  }\n\n  /** Delegate decoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  decode(b, offset) {\n    return this.layout.decode(b, offset);\n  }\n\n  /** Delegate encoding to {@link UnionLayoutDiscriminator#layout|layout}. */\n  encode(src, b, offset) {\n    return this.layout.encode(src, b, offset);\n  }\n}\n\n/**\n * Represent any number of span-compatible layouts.\n *\n * *Factory*: {@link module:Layout.union|union}\n *\n * If the union has a {@link Union#defaultLayout|default layout} that\n * layout must have a non-negative {@link Layout#span|span}.  The span\n * of a fixed-span union includes its {@link\n * Union#discriminator|discriminator} if the variant is a {@link\n * Union#usesPrefixDiscriminator|prefix of the union}, plus the span\n * of its {@link Union#defaultLayout|default layout}.\n *\n * If the union does not have a default layout then the encoded span\n * of the union depends on the encoded span of its variant (which may\n * be fixed or variable).\n *\n * {@link VariantLayout#layout|Variant layout}s are added through\n * {@link Union#addVariant|addVariant}.  If the union has a default\n * layout, the span of the {@link VariantLayout#layout|layout\n * contained by the variant} must not exceed the span of the {@link\n * Union#defaultLayout|default layout} (minus the span of a {@link\n * Union#usesPrefixDiscriminator|prefix disriminator}, if used).  The\n * span of the variant will equal the span of the union itself.\n *\n * The variant for a buffer can only be identified from the {@link\n * Union#discriminator|discriminator} {@link\n * UnionDiscriminator#property|property} (in the case of the {@link\n * Union#defaultLayout|default layout}), or by using {@link\n * Union#getVariant|getVariant} and examining the resulting {@link\n * VariantLayout} instance.\n *\n * A variant compatible with a JavaScript object can be identified\n * using {@link Union#getSourceVariant|getSourceVariant}.\n *\n * @param {(UnionDiscriminator|ExternalLayout|Layout)} discr - How to\n * identify the layout used to interpret the union contents.  The\n * parameter must be an instance of {@link UnionDiscriminator}, an\n * {@link ExternalLayout} that satisfies {@link\n * ExternalLayout#isCount|isCount()}, or {@link UInt} (or {@link\n * UIntBE}).  When a non-external layout element is passed the layout\n * appears at the start of the union.  In all cases the (synthesized)\n * {@link UnionDiscriminator} instance is recorded as {@link\n * Union#discriminator|discriminator}.\n *\n * @param {(Layout|null)} defaultLayout - initializer for {@link\n * Union#defaultLayout|defaultLayout}.  If absent defaults to `null`.\n * If `null` there is no default layout: the union has data-dependent\n * length and attempts to decode or encode unrecognized variants will\n * throw an exception.  A {@link Layout} instance must have a\n * non-negative {@link Layout#span|span}, and if it lacks a {@link\n * Layout#property|property} the {@link\n * Union#defaultLayout|defaultLayout} will be a {@link\n * Layout#replicate|replica} with property `content`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Union extends Layout {\n  constructor(discr, defaultLayout, property) {\n    const upv = ((discr instanceof UInt)\n               || (discr instanceof UIntBE));\n    if (upv) {\n      discr = new UnionLayoutDiscriminator(new OffsetLayout(discr));\n    } else if ((discr instanceof ExternalLayout)\n               && discr.isCount()) {\n      discr = new UnionLayoutDiscriminator(discr);\n    } else if (!(discr instanceof UnionDiscriminator)) {\n      throw new TypeError('discr must be a UnionDiscriminator '\n                          + 'or an unsigned integer layout');\n    }\n    if (undefined === defaultLayout) {\n      defaultLayout = null;\n    }\n    if (!((null === defaultLayout)\n          || (defaultLayout instanceof Layout))) {\n      throw new TypeError('defaultLayout must be null or a Layout');\n    }\n    if (null !== defaultLayout) {\n      if (0 > defaultLayout.span) {\n        throw new Error('defaultLayout must have constant span');\n      }\n      if (undefined === defaultLayout.property) {\n        defaultLayout = defaultLayout.replicate('content');\n      }\n    }\n\n    /* The union span can be estimated only if there's a default\n     * layout.  The union spans its default layout, plus any prefix\n     * variant layout.  By construction both layouts, if present, have\n     * non-negative span. */\n    let span = -1;\n    if (defaultLayout) {\n      span = defaultLayout.span;\n      if ((0 <= span) && upv) {\n        span += discr.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The interface for the discriminator value in isolation.\n     *\n     * This a {@link UnionDiscriminator} either passed to the\n     * constructor or synthesized from the `discr` constructor\n     * argument.  {@link\n     * Union#usesPrefixDiscriminator|usesPrefixDiscriminator} will be\n     * `true` iff the `discr` parameter was a non-offset {@link\n     * Layout} instance. */\n    this.discriminator = discr;\n\n    /** `true` if the {@link Union#discriminator|discriminator} is the\n     * first field in the union.\n     *\n     * If `false` the discriminator is obtained from somewhere\n     * else. */\n    this.usesPrefixDiscriminator = upv;\n\n    /** The layout for non-discriminator content when the value of the\n     * discriminator is not recognized.\n     *\n     * This is the value passed to the constructor.  It is\n     * structurally equivalent to the second component of {@link\n     * Union#layout|layout} but may have a different property\n     * name. */\n    this.defaultLayout = defaultLayout;\n\n    /** A registry of allowed variants.\n     *\n     * The keys are unsigned integers which should be compatible with\n     * {@link Union.discriminator|discriminator}.  The property value\n     * is the corresponding {@link VariantLayout} instances assigned\n     * to this union by {@link Union#addVariant|addVariant}.\n     *\n     * **NOTE** The registry remains mutable so that variants can be\n     * {@link Union#addVariant|added} at any time.  Users should not\n     * manipulate the content of this property. */\n    this.registry = {};\n\n    /* Private variable used when invoking getSourceVariant */\n    let boundGetSourceVariant = this.defaultGetSourceVariant.bind(this);\n\n    /** Function to infer the variant selected by a source object.\n     *\n     * Defaults to {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant} but may\n     * be overridden using {@link\n     * Union#configGetSourceVariant|configGetSourceVariant}.\n     *\n     * @param {Object} src - as with {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * @returns {(undefined|VariantLayout)} The default variant\n     * (`undefined`) or first registered variant that uses a property\n     * available in `src`. */\n    this.getSourceVariant = function(src) {\n      return boundGetSourceVariant(src);\n    };\n\n    /** Function to override the implementation of {@link\n     * Union#getSourceVariant|getSourceVariant}.\n     *\n     * Use this if the desired variant cannot be identified using the\n     * algorithm of {@link\n     * Union#defaultGetSourceVariant|defaultGetSourceVariant}.\n     *\n     * **NOTE** The provided function will be invoked bound to this\n     * Union instance, providing local access to {@link\n     * Union#registry|registry}.\n     *\n     * @param {Function} gsv - a function that follows the API of\n     * {@link Union#defaultGetSourceVariant|defaultGetSourceVariant}. */\n    this.configGetSourceVariant = function(gsv) {\n      boundGetSourceVariant = gsv.bind(this);\n    };\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Default layouts always have non-negative span, so we don't have\n     * one and we have to recognize the variant which will in turn\n     * determine the span. */\n    const vlo = this.getVariant(b, offset);\n    if (!vlo) {\n      throw new Error('unable to determine span for unrecognized variant');\n    }\n    return vlo.getSpan(b, offset);\n  }\n\n  /**\n   * Method to infer a registered Union variant compatible with `src`.\n   *\n   * The first satisified rule in the following sequence defines the\n   * return value:\n   * * If `src` has properties matching the Union discriminator and\n   *   the default layout, `undefined` is returned regardless of the\n   *   value of the discriminator property (this ensures the default\n   *   layout will be used);\n   * * If `src` has a property matching the Union discriminator, the\n   *   value of the discriminator identifies a registered variant, and\n   *   either (a) the variant has no layout, or (b) `src` has the\n   *   variant's property, then the variant is returned (because the\n   *   source satisfies the constraints of the variant it identifies);\n   * * If `src` does not have a property matching the Union\n   *   discriminator, but does have a property matching a registered\n   *   variant, then the variant is returned (because the source\n   *   matches a variant without an explicit conflict);\n   * * An error is thrown (because we either can't identify a variant,\n   *   or we were explicitly told the variant but can't satisfy it).\n   *\n   * @param {Object} src - an object presumed to be compatible with\n   * the content of the Union.\n   *\n   * @return {(undefined|VariantLayout)} - as described above.\n   *\n   * @throws {Error} - if `src` cannot be associated with a default or\n   * registered variant.\n   */\n  defaultGetSourceVariant(src) {\n    if (src.hasOwnProperty(this.discriminator.property)) {\n      if (this.defaultLayout\n          && src.hasOwnProperty(this.defaultLayout.property)) {\n        return undefined;\n      }\n      const vlo = this.registry[src[this.discriminator.property]];\n      if (vlo\n          && ((!vlo.layout)\n              || src.hasOwnProperty(vlo.property))) {\n        return vlo;\n      }\n    } else {\n      for (const tag in this.registry) {\n        const vlo = this.registry[tag];\n        if (src.hasOwnProperty(vlo.property)) {\n          return vlo;\n        }\n      }\n    }\n    throw new Error('unable to infer src variant');\n  }\n\n  /** Implement {@link Layout#decode|decode} for {@link Union}.\n   *\n   * If the variant is {@link Union#addVariant|registered} the return\n   * value is an instance of that variant, with no explicit\n   * discriminator.  Otherwise the {@link Union#defaultLayout|default\n   * layout} is used to decode the content. */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let dest;\n    const dlo = this.discriminator;\n    const discr = dlo.decode(b, offset);\n    let clo = this.registry[discr];\n    if (undefined === clo) {\n      let contentOffset = 0;\n      clo = this.defaultLayout;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dest = this.makeDestinationObject();\n      dest[dlo.property] = discr;\n      dest[clo.property] = this.defaultLayout.decode(b, offset + contentOffset);\n    } else {\n      dest = clo.decode(b, offset);\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Union}.\n   *\n   * This API assumes the `src` object is consistent with the union's\n   * {@link Union#defaultLayout|default layout}.  To encode variants\n   * use the appropriate variant-specific {@link VariantLayout#encode}\n   * method. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const vlo = this.getSourceVariant(src);\n    if (undefined === vlo) {\n      const dlo = this.discriminator;\n      const clo = this.defaultLayout;\n      let contentOffset = 0;\n      if (this.usesPrefixDiscriminator) {\n        contentOffset = dlo.layout.span;\n      }\n      dlo.encode(src[dlo.property], b, offset);\n      return contentOffset + clo.encode(src[clo.property], b,\n                                        offset + contentOffset);\n    }\n    return vlo.encode(src, b, offset);\n  }\n\n  /** Register a new variant structure within a union.  The newly\n   * created variant is returned.\n   *\n   * @param {Number} variant - initializer for {@link\n   * VariantLayout#variant|variant}.\n   *\n   * @param {Layout} layout - initializer for {@link\n   * VariantLayout#layout|layout}.\n   *\n   * @param {String} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {VariantLayout} */\n  addVariant(variant, layout, property) {\n    const rv = new VariantLayout(this, variant, layout, property);\n    this.registry[variant] = rv;\n    return rv;\n  }\n\n  /**\n   * Get the layout associated with a registered variant.\n   *\n   * If `vb` does not produce a registered variant the function returns\n   * `undefined`.\n   *\n   * @param {(Number|Buffer)} vb - either the variant number, or a\n   * buffer from which the discriminator is to be read.\n   *\n   * @param {Number} offset - offset into `vb` for the start of the\n   * union.  Used only when `vb` is an instance of {Buffer}.\n   *\n   * @return {({VariantLayout}|undefined)}\n   */\n  getVariant(vb, offset) {\n    let variant = vb;\n    if (Buffer.isBuffer(vb)) {\n      if (undefined === offset) {\n        offset = 0;\n      }\n      variant = this.discriminator.decode(vb, offset);\n    }\n    return this.registry[variant];\n  }\n}\n\n/**\n * Represent a specific variant within a containing union.\n *\n * **NOTE** The {@link Layout#span|span} of the variant may include\n * the span of the {@link Union#discriminator|discriminator} used to\n * identify it, but values read and written using the variant strictly\n * conform to the content of {@link VariantLayout#layout|layout}.\n *\n * **NOTE** User code should not invoke this constructor directly.  Use\n * the union {@link Union#addVariant|addVariant} helper method.\n *\n * @param {Union} union - initializer for {@link\n * VariantLayout#union|union}.\n *\n * @param {Number} variant - initializer for {@link\n * VariantLayout#variant|variant}.\n *\n * @param {Layout} [layout] - initializer for {@link\n * VariantLayout#layout|layout}.  If absent the variant carries no\n * data.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.  Unlike many other layouts, variant\n * layouts normally include a property name so they can be identified\n * within their containing {@link Union}.  The property identifier may\n * be absent only if `layout` is is absent.\n *\n * @augments {Layout}\n */\nclass VariantLayout extends Layout {\n  constructor(union, variant, layout, property) {\n    if (!(union instanceof Union)) {\n      throw new TypeError('union must be a Union');\n    }\n    if ((!Number.isInteger(variant)) || (0 > variant)) {\n      throw new TypeError('variant must be a (non-negative) integer');\n    }\n    if (('string' === typeof layout)\n        && (undefined === property)) {\n      property = layout;\n      layout = null;\n    }\n    if (layout) {\n      if (!(layout instanceof Layout)) {\n        throw new TypeError('layout must be a Layout');\n      }\n      if ((null !== union.defaultLayout)\n          && (0 <= layout.span)\n          && (layout.span > union.defaultLayout.span)) {\n        throw new Error('variant span exceeds span of containing union');\n      }\n      if ('string' !== typeof property) {\n        throw new TypeError('variant must have a String property');\n      }\n    }\n    let span = union.span;\n    if (0 > union.span) {\n      span = layout ? layout.span : 0;\n      if ((0 <= span) && union.usesPrefixDiscriminator) {\n        span += union.discriminator.layout.span;\n      }\n    }\n    super(span, property);\n\n    /** The {@link Union} to which this variant belongs. */\n    this.union = union;\n\n    /** The unsigned integral value identifying this variant within\n     * the {@link Union#discriminator|discriminator} of the containing\n     * union. */\n    this.variant = variant;\n\n    /** The {@link Layout} to be used when reading/writing the\n     * non-discriminator part of the {@link\n     * VariantLayout#union|union}.  If `null` the variant carries no\n     * data. */\n    this.layout = layout || null;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (0 <= this.span) {\n      /* Will be equal to the containing union span if that is not\n       * variable. */\n      return this.span;\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    /* Span is defined solely by the variant (and prefix discriminator) */\n    return contentOffset + this.layout.getSpan(b, offset + contentOffset);\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    if (this !== this.union.getVariant(b, offset)) {\n      throw new Error('variant mismatch');\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout) {\n      dest[this.property] = this.layout.decode(b, offset + contentOffset);\n    } else if (this.property) {\n      dest[this.property] = true;\n    } else if (this.union.usesPrefixDiscriminator) {\n      dest[this.union.discriminator.property] = this.variant;\n    }\n    return dest;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let contentOffset = 0;\n    if (this.union.usesPrefixDiscriminator) {\n      contentOffset = this.union.discriminator.layout.span;\n    }\n    if (this.layout\n        && (!src.hasOwnProperty(this.property))) {\n      throw new TypeError('variant lacks property ' + this.property);\n    }\n    this.union.discriminator.encode(this.variant, b, offset);\n    let span = contentOffset;\n    if (this.layout) {\n      this.layout.encode(src[this.property], b, offset + contentOffset);\n      span += this.layout.getSpan(b, offset + contentOffset);\n      if ((0 <= this.union.span)\n          && (span > this.union.span)) {\n        throw new Error('encoded variant overruns containing union');\n      }\n    }\n    return span;\n  }\n\n  /** Delegate {@link Layout#fromArray|fromArray} to {@link\n   * VariantLayout#layout|layout}. */\n  fromArray(values) {\n    if (this.layout) {\n      return this.layout.fromArray(values);\n    }\n  }\n}\n\n/** JavaScript chose to define bitwise operations as operating on\n * signed 32-bit values in 2's complement form, meaning any integer\n * with bit 31 set is going to look negative.  For right shifts that's\n * not a problem, because `>>>` is a logical shift, but for every\n * other bitwise operator we have to compensate for possible negative\n * results. */\nfunction fixBitwiseResult(v) {\n  if (0 > v) {\n    v += 0x100000000;\n  }\n  return v;\n}\n\n/**\n * Contain a sequence of bit fields as an unsigned integer.\n *\n * *Factory*: {@link module:Layout.bits|bits}\n *\n * This is a container element; within it there are {@link BitField}\n * instances that provide the extracted properties.  The container\n * simply defines the aggregate representation and its bit ordering.\n * The representation is an object containing properties with numeric\n * or {@link Boolean} values.\n *\n * {@link BitField}s are added with the {@link\n * BitStructure#addField|addField} and {@link\n * BitStructure#addBoolean|addBoolean} methods.\n\n * @param {Layout} word - initializer for {@link\n * BitStructure#word|word}.  The parameter must be an instance of\n * {@link UInt} (or {@link UIntBE}) that is no more than 4 bytes wide.\n *\n * @param {bool} [msb] - `true` if the bit numbering starts at the\n * most significant bit of the containing word; `false` (default) if\n * it starts at the least significant bit of the containing word.  If\n * the parameter at this position is a string and `property` is\n * `undefined` the value of this argument will instead be used as the\n * value of `property`.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass BitStructure extends Layout {\n  constructor(word, msb, property) {\n    if (!((word instanceof UInt)\n          || (word instanceof UIntBE))) {\n      throw new TypeError('word must be a UInt or UIntBE layout');\n    }\n    if (('string' === typeof msb)\n        && (undefined === property)) {\n      property = msb;\n      msb = undefined;\n    }\n    if (4 < word.span) {\n      throw new RangeError('word cannot exceed 32 bits');\n    }\n    super(word.span, property);\n\n    /** The layout used for the packed value.  {@link BitField}\n     * instances are packed sequentially depending on {@link\n     * BitStructure#msb|msb}. */\n    this.word = word;\n\n    /** Whether the bit sequences are packed starting at the most\n     * significant bit growing down (`true`), or the least significant\n     * bit growing up (`false`).\n     *\n     * **NOTE** Regardless of this value, the least significant bit of\n     * any {@link BitField} value is the least significant bit of the\n     * corresponding section of the packed value. */\n    this.msb = !!msb;\n\n    /** The sequence of {@link BitField} layouts that comprise the\n     * packed structure.\n     *\n     * **NOTE** The array remains mutable to allow fields to be {@link\n     * BitStructure#addField|added} after construction.  Users should\n     * not manipulate the content of this property.*/\n    this.fields = [];\n\n    /* Storage for the value.  Capture a variable instead of using an\n     * instance property because we don't want anything to change the\n     * value without going through the mutator. */\n    let value = 0;\n    this._packedSetValue = function(v) {\n      value = fixBitwiseResult(v);\n      return this;\n    };\n    this._packedGetValue = function() {\n      return value;\n    };\n  }\n\n  /** @override */\n  decode(b, offset) {\n    const dest = this.makeDestinationObject();\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        dest[fd.property] = fd.decode(value);\n      }\n    }\n    return dest;\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link BitStructure}.\n   *\n   * If `src` is missing a property for a member with a defined {@link\n   * Layout#property|property} the corresponding region of the packed\n   * value is left unmodified.  Unused bits are also left unmodified. */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    const value = this.word.decode(b, offset);\n    this._packedSetValue(value);\n    for (const fd of this.fields) {\n      if (undefined !== fd.property) {\n        const fv = src[fd.property];\n        if (undefined !== fv) {\n          fd.encode(fv);\n        }\n      }\n    }\n    return this.word.encode(this._packedGetValue(), b, offset);\n  }\n\n  /** Register a new bitfield with a containing bit structure.  The\n   * resulting bitfield is returned.\n   *\n   * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {BitField} */\n  addField(bits, property) {\n    const bf = new BitField(this, bits, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /** As with {@link BitStructure#addField|addField} for single-bit\n   * fields with `boolean` value representation.\n   *\n   * @param {string} property - initializer for {@link\n   * Layout#property|property}.\n   *\n   * @return {Boolean} */\n  addBoolean(property) {\n    // This is my Boolean, not the Javascript one.\n    // eslint-disable-next-line no-new-wrappers\n    const bf = new Boolean(this, property);\n    this.fields.push(bf);\n    return bf;\n  }\n\n  /**\n   * Get access to the bit field for a given property.\n   *\n   * @param {String} property - the bit field of interest.\n   *\n   * @return {BitField} - the field associated with `property`, or\n   * undefined if there is no such property.\n   */\n  fieldFor(property) {\n    if ('string' !== typeof property) {\n      throw new TypeError('property must be string');\n    }\n    for (const fd of this.fields) {\n      if (fd.property === property) {\n        return fd;\n      }\n    }\n  }\n}\n\n/**\n * Represent a sequence of bits within a {@link BitStructure}.\n *\n * All bit field values are represented as unsigned integers.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addField|addField} helper\n * method.\n *\n * **NOTE** BitField instances are not instances of {@link Layout}\n * since {@link Layout#span|span} measures 8-bit units.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {Number} bits - initializer for {@link BitField#bits|bits}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n */\nclass BitField {\n  constructor(container, bits, property) {\n    if (!(container instanceof BitStructure)) {\n      throw new TypeError('container must be a BitStructure');\n    }\n    if ((!Number.isInteger(bits)) || (0 >= bits)) {\n      throw new TypeError('bits must be positive integer');\n    }\n    const totalBits = 8 * container.span;\n    const usedBits = container.fields.reduce((sum, fd) => sum + fd.bits, 0);\n    if ((bits + usedBits) > totalBits) {\n      throw new Error('bits too long for span remainder ('\n                      + (totalBits - usedBits) + ' of '\n                      + totalBits + ' remain)');\n    }\n\n    /** The {@link BitStructure} instance to which this bit field\n     * belongs. */\n    this.container = container;\n\n    /** The span of this value in bits. */\n    this.bits = bits;\n\n    /** A mask of {@link BitField#bits|bits} bits isolating value bits\n     * that fit within the field.\n     *\n     * That is, it masks a value that has not yet been shifted into\n     * position within its containing packed integer. */\n    this.valueMask = (1 << bits) - 1;\n    if (32 === bits) { // shifted value out of range\n      this.valueMask = 0xFFFFFFFF;\n    }\n\n    /** The offset of the value within the containing packed unsigned\n     * integer.  The least significant bit of the packed value is at\n     * offset zero, regardless of bit ordering used. */\n    this.start = usedBits;\n    if (this.container.msb) {\n      this.start = totalBits - usedBits - bits;\n    }\n\n    /** A mask of {@link BitField#bits|bits} isolating the field value\n     * within the containing packed unsigned integer. */\n    this.wordMask = fixBitwiseResult(this.valueMask << this.start);\n\n    /** The property name used when this bitfield is represented in an\n     * Object.\n     *\n     * Intended to be functionally equivalent to {@link\n     * Layout#property}.\n     *\n     * If left undefined the corresponding span of bits will be\n     * treated as padding: it will not be mutated by {@link\n     * Layout#encode|encode} nor represented as a property in the\n     * decoded Object. */\n    this.property = property;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field. */\n  decode() {\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(word & this.wordMask);\n    const value = wordValue >>> this.start;\n    return value;\n  }\n\n  /** Store a value into the corresponding subsequence of the containing\n   * bit field.\n   *\n   * **NOTE** This is not a specialization of {@link\n   * Layout#encode|Layout.encode} and there is no return value. */\n  encode(value) {\n    if ((!Number.isInteger(value))\n        || (value !== fixBitwiseResult(value & this.valueMask))) {\n      throw new TypeError(nameWithProperty('BitField.encode', this)\n                          + ' value must be integer not exceeding ' + this.valueMask);\n    }\n    const word = this.container._packedGetValue();\n    const wordValue = fixBitwiseResult(value << this.start);\n    this.container._packedSetValue(fixBitwiseResult(word & ~this.wordMask)\n                                   | wordValue);\n  };\n}\n\n/**\n * Represent a single bit within a {@link BitStructure} as a\n * JavaScript boolean.\n *\n * **NOTE** User code should not invoke this constructor directly.\n * Use the container {@link BitStructure#addBoolean|addBoolean} helper\n * method.\n *\n * @param {BitStructure} container - initializer for {@link\n * BitField#container|container}.\n *\n * @param {string} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {BitField}\n */\n/* eslint-disable no-extend-native */\nclass Boolean extends BitField {\n  constructor(container, property) {\n    super(container, 1, property);\n  }\n\n  /** Override {@link BitField#decode|decode} for {@link Boolean|Boolean}.\n   *\n   * @returns {boolean} */\n  decode(b, offset) {\n    return !!BitField.prototype.decode.call(this, b, offset);\n  }\n\n  /** @override */\n  encode(value) {\n    if ('boolean' === typeof value) {\n      // BitField requires integer values\n      value = +value;\n    }\n    return BitField.prototype.encode.call(this, value);\n  }\n}\n/* eslint-enable no-extend-native */\n\n/**\n * Contain a fixed-length block of arbitrary data, represented as a\n * Buffer.\n *\n * *Factory*: {@link module:Layout.blob|blob}\n *\n * @param {(Number|ExternalLayout)} length - initializes {@link\n * Blob#length|length}.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Blob extends Layout {\n  constructor(length, property) {\n    if (!(((length instanceof ExternalLayout) && length.isCount())\n          || (Number.isInteger(length) && (0 <= length)))) {\n      throw new TypeError('length must be positive integer '\n                          + 'or an unsigned integer ExternalLayout');\n    }\n\n    let span = -1;\n    if (!(length instanceof ExternalLayout)) {\n      span = length;\n    }\n    super(span, property);\n\n    /** The number of bytes in the blob.\n     *\n     * This may be a non-negative integer, or an instance of {@link\n     * ExternalLayout} that satisfies {@link\n     * ExternalLayout#isCount|isCount()}. */\n    this.length = length;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return span;\n  }\n\n  /** @override */\n  decode(b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.span;\n    if (0 > span) {\n      span = this.length.decode(b, offset);\n    }\n    return b.slice(offset, offset + span);\n  }\n\n  /** Implement {@link Layout#encode|encode} for {@link Blob}.\n   *\n   * **NOTE** If {@link Layout#count|count} is an instance of {@link\n   * ExternalLayout} then the length of `src` will be encoded as the\n   * count after `src` is encoded. */\n  encode(src, b, offset) {\n    let span = this.length;\n    if (this.length instanceof ExternalLayout) {\n      span = src.length;\n    }\n    if (!(Buffer.isBuffer(src)\n          && (span === src.length))) {\n      throw new TypeError(nameWithProperty('Blob.encode', this)\n                          + ' requires (length ' + span + ') Buffer as src');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    b.write(src.toString('hex'), offset, span, 'hex');\n    if (this.length instanceof ExternalLayout) {\n      this.length.encode(span, b, offset);\n    }\n    return span;\n  }\n}\n\n/**\n * Contain a `NUL`-terminated UTF8 string.\n *\n * *Factory*: {@link module:Layout.cstr|cstr}\n *\n * **NOTE** Any UTF8 string that incorporates a zero-valued byte will\n * not be correctly decoded by this layout.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass CString extends Layout {\n  constructor(property) {\n    super(-1, property);\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let idx = offset;\n    while ((idx < b.length) && (0 !== b[idx])) {\n      idx += 1;\n    }\n    return 1 + idx - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    return b.slice(offset, offset + span - 1).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    b[offset + span] = 0;\n    return span + 1;\n  }\n}\n\n/**\n * Contain a UTF8 string with implicit length.\n *\n * *Factory*: {@link module:Layout.utf8|utf8}\n *\n * **NOTE** Because the length is implicit in the size of the buffer\n * this layout should be used only in isolation, or in a situation\n * where the length can be expressed by operating on a slice of the\n * containing buffer.\n *\n * @param {Number} [maxSpan] - the maximum length allowed for encoded\n * string content.  If not provided there is no bound on the allowed\n * content.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass UTF8 extends Layout {\n  constructor(maxSpan, property) {\n    if (('string' === typeof maxSpan)\n        && (undefined === property)) {\n      property = maxSpan;\n      maxSpan = undefined;\n    }\n    if (undefined === maxSpan) {\n      maxSpan = -1;\n    } else if (!Number.isInteger(maxSpan)) {\n      throw new TypeError('maxSpan must be an integer');\n    }\n\n    super(-1, property);\n\n    /** The maximum span of the layout in bytes.\n     *\n     * Positive values are generally expected.  Zero is abnormal.\n     * Attempts to encode or decode a value that exceeds this length\n     * will throw a `RangeError`.\n     *\n     * A negative value indicates that there is no bound on the length\n     * of the content. */\n    this.maxSpan = maxSpan;\n  }\n\n  /** @override */\n  getSpan(b, offset) {\n    if (!Buffer.isBuffer(b)) {\n      throw new TypeError('b must be a Buffer');\n    }\n    if (undefined === offset) {\n      offset = 0;\n    }\n    return b.length - offset;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    let span = this.getSpan(b, offset);\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    return b.slice(offset, offset + span).toString('utf-8');\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    if (undefined === offset) {\n      offset = 0;\n    }\n    /* Must force this to a string, lest it be a number and the\n     * \"utf8-encoding\" below actually allocate a buffer of length\n     * src */\n    if ('string' !== typeof src) {\n      src = src.toString();\n    }\n    const srcb = new Buffer(src, 'utf8');\n    const span = srcb.length;\n    if ((0 <= this.maxSpan)\n        && (this.maxSpan < span)) {\n      throw new RangeError('text length exceeds maxSpan');\n    }\n    if ((offset + span) > b.length) {\n      throw new RangeError('encoding overruns Buffer');\n    }\n    srcb.copy(b, offset);\n    return span;\n  }\n}\n\n/**\n * Contain a constant value.\n *\n * This layout may be used in cases where a JavaScript value can be\n * inferred without an expression in the binary encoding.  An example\n * would be a {@link VariantLayout|variant layout} where the content\n * is implied by the union {@link Union#discriminator|discriminator}.\n *\n * @param {Object|Number|String} value - initializer for {@link\n * Constant#value|value}.  If the value is an object (or array) and\n * the application intends the object to remain unchanged regardless\n * of what is done to values decoded by this layout, the value should\n * be frozen prior passing it to this constructor.\n *\n * @param {String} [property] - initializer for {@link\n * Layout#property|property}.\n *\n * @augments {Layout}\n */\nclass Constant extends Layout {\n  constructor(value, property) {\n    super(0, property);\n\n    /** The value produced by this constant when the layout is {@link\n     * Constant#decode|decoded}.\n     *\n     * Any JavaScript value including `null` and `undefined` is\n     * permitted.\n     *\n     * **WARNING** If `value` passed in the constructor was not\n     * frozen, it is possible for users of decoded values to change\n     * the content of the value. */\n    this.value = value;\n  }\n\n  /** @override */\n  decode(b, offset, dest) {\n    return this.value;\n  }\n\n  /** @override */\n  encode(src, b, offset) {\n    /* Constants take no space */\n    return 0;\n  }\n}\n\nexports.ExternalLayout = ExternalLayout;\nexports.GreedyCount = GreedyCount;\nexports.OffsetLayout = OffsetLayout;\nexports.UInt = UInt;\nexports.UIntBE = UIntBE;\nexports.Int = Int;\nexports.IntBE = IntBE;\nexports.Float = Float;\nexports.FloatBE = FloatBE;\nexports.Double = Double;\nexports.DoubleBE = DoubleBE;\nexports.Sequence = Sequence;\nexports.Structure = Structure;\nexports.UnionDiscriminator = UnionDiscriminator;\nexports.UnionLayoutDiscriminator = UnionLayoutDiscriminator;\nexports.Union = Union;\nexports.VariantLayout = VariantLayout;\nexports.BitStructure = BitStructure;\nexports.BitField = BitField;\nexports.Boolean = Boolean;\nexports.Blob = Blob;\nexports.CString = CString;\nexports.UTF8 = UTF8;\nexports.Constant = Constant;\n\n/** Factory for {@link GreedyCount}. */\nexports.greedy = ((elementSpan, property) => new GreedyCount(elementSpan, property));\n\n/** Factory for {@link OffsetLayout}. */\nexports.offset = ((layout, offset, property) => new OffsetLayout(layout, offset, property));\n\n/** Factory for {@link UInt|unsigned int layouts} spanning one\n * byte. */\nexports.u8 = (property => new UInt(1, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16 = (property => new UInt(2, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24 = (property => new UInt(3, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32 = (property => new UInt(4, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40 = (property => new UInt(5, property));\n\n/** Factory for {@link UInt|little-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48 = (property => new UInt(6, property));\n\n/** Factory for {@link NearUInt64|little-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64 = (property => new NearUInt64(property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning two bytes. */\nexports.u16be = (property => new UIntBE(2, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning three bytes. */\nexports.u24be = (property => new UIntBE(3, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning four bytes. */\nexports.u32be = (property => new UIntBE(4, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning five bytes. */\nexports.u40be = (property => new UIntBE(5, property));\n\n/** Factory for {@link UInt|big-endian unsigned int layouts}\n * spanning six bytes. */\nexports.u48be = (property => new UIntBE(6, property));\n\n/** Factory for {@link NearUInt64BE|big-endian unsigned int\n * layouts} interpreted as Numbers. */\nexports.nu64be = (property => new NearUInt64BE(property));\n\n/** Factory for {@link Int|signed int layouts} spanning one\n * byte. */\nexports.s8 = (property => new Int(1, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning two bytes. */\nexports.s16 = (property => new Int(2, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning three bytes. */\nexports.s24 = (property => new Int(3, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning four bytes. */\nexports.s32 = (property => new Int(4, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning five bytes. */\nexports.s40 = (property => new Int(5, property));\n\n/** Factory for {@link Int|little-endian signed int layouts}\n * spanning six bytes. */\nexports.s48 = (property => new Int(6, property));\n\n/** Factory for {@link NearInt64|little-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64 = (property => new NearInt64(property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning two bytes. */\nexports.s16be = (property => new IntBE(2, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning three bytes. */\nexports.s24be = (property => new IntBE(3, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning four bytes. */\nexports.s32be = (property => new IntBE(4, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning five bytes. */\nexports.s40be = (property => new IntBE(5, property));\n\n/** Factory for {@link Int|big-endian signed int layouts}\n * spanning six bytes. */\nexports.s48be = (property => new IntBE(6, property));\n\n/** Factory for {@link NearInt64BE|big-endian signed int layouts}\n * interpreted as Numbers. */\nexports.ns64be = (property => new NearInt64BE(property));\n\n/** Factory for {@link Float|little-endian 32-bit floating point} values. */\nexports.f32 = (property => new Float(property));\n\n/** Factory for {@link FloatBE|big-endian 32-bit floating point} values. */\nexports.f32be = (property => new FloatBE(property));\n\n/** Factory for {@link Double|little-endian 64-bit floating point} values. */\nexports.f64 = (property => new Double(property));\n\n/** Factory for {@link DoubleBE|big-endian 64-bit floating point} values. */\nexports.f64be = (property => new DoubleBE(property));\n\n/** Factory for {@link Structure} values. */\nexports.struct = ((fields, property, decodePrefixes) => new Structure(fields, property, decodePrefixes));\n\n/** Factory for {@link BitStructure} values. */\nexports.bits = ((word, msb, property) => new BitStructure(word, msb, property));\n\n/** Factory for {@link Sequence} values. */\nexports.seq = ((elementLayout, count, property) => new Sequence(elementLayout, count, property));\n\n/** Factory for {@link Union} values. */\nexports.union = ((discr, defaultLayout, property) => new Union(discr, defaultLayout, property));\n\n/** Factory for {@link UnionLayoutDiscriminator} values. */\nexports.unionLayoutDiscriminator = ((layout, property) => new UnionLayoutDiscriminator(layout, property));\n\n/** Factory for {@link Blob} values. */\nexports.blob = ((length, property) => new Blob(length, property));\n\n/** Factory for {@link CString} values. */\nexports.cstr = (property => new CString(property));\n\n/** Factory for {@link UTF8} values. */\nexports.utf8 = ((maxSpan, property) => new UTF8(maxSpan, property));\n\n/** Factory for {@link Constant} values. */\nexports.const = ((value, property) => new Constant(value, property));\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","/**\n * Code refactored from Mozilla Developer Network:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n */\n\n'use strict';\n\nfunction assign(target, firstSource) {\n  if (target === undefined || target === null) {\n    throw new TypeError('Cannot convert first argument to object');\n  }\n\n  var to = Object(target);\n  for (var i = 1; i < arguments.length; i++) {\n    var nextSource = arguments[i];\n    if (nextSource === undefined || nextSource === null) {\n      continue;\n    }\n\n    var keysArray = Object.keys(Object(nextSource));\n    for (var nextIndex = 0, len = keysArray.length; nextIndex < len; nextIndex++) {\n      var nextKey = keysArray[nextIndex];\n      var desc = Object.getOwnPropertyDescriptor(nextSource, nextKey);\n      if (desc !== undefined && desc.enumerable) {\n        to[nextKey] = nextSource[nextKey];\n      }\n    }\n  }\n  return to;\n}\n\nfunction polyfill() {\n  if (!Object.assign) {\n    Object.defineProperty(Object, 'assign', {\n      enumerable: false,\n      configurable: true,\n      writable: true,\n      value: assign\n    });\n  }\n}\n\nmodule.exports = {\n  assign: assign,\n  polyfill: polyfill\n};\n","'use strict';\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function isNaN(value) {\n\treturn value !== value;\n};\n","'use strict';\n\nvar callBind = require('call-bind');\nvar define = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Number);\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (Number.isNaN && Number.isNaN(NaN) && !Number.isNaN('a')) {\n\t\treturn Number.isNaN;\n\t}\n\treturn implementation;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\n/* http://www.ecma-international.org/ecma-262/6.0/#sec-number.isnan */\n\nmodule.exports = function shimNumberIsNaN() {\n\tvar polyfill = getPolyfill();\n\tdefine(Number, { isNaN: polyfill }, {\n\t\tisNaN: function testIsNaN() {\n\t\t\treturn Number.isNaN !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","/**\n * [js-sha256]{@link https://github.com/emn178/js-sha256}\n *\n * @version 0.9.0\n * @author Chen, Yi-Cyuan [emn178@gmail.com]\n * @copyright Chen, Yi-Cyuan 2014-2017\n * @license MIT\n */\n/*jslint bitwise: true */\n(function () {\n  'use strict';\n\n  var ERROR = 'input is invalid type';\n  var WINDOW = typeof window === 'object';\n  var root = WINDOW ? window : {};\n  if (root.JS_SHA256_NO_WINDOW) {\n    WINDOW = false;\n  }\n  var WEB_WORKER = !WINDOW && typeof self === 'object';\n  var NODE_JS = !root.JS_SHA256_NO_NODE_JS && typeof process === 'object' && process.versions && process.versions.node;\n  if (NODE_JS) {\n    root = global;\n  } else if (WEB_WORKER) {\n    root = self;\n  }\n  var COMMON_JS = !root.JS_SHA256_NO_COMMON_JS && typeof module === 'object' && module.exports;\n  var AMD = typeof define === 'function' && define.amd;\n  var ARRAY_BUFFER = !root.JS_SHA256_NO_ARRAY_BUFFER && typeof ArrayBuffer !== 'undefined';\n  var HEX_CHARS = '0123456789abcdef'.split('');\n  var EXTRA = [-2147483648, 8388608, 32768, 128];\n  var SHIFT = [24, 16, 8, 0];\n  var K = [\n    0x428a2f98, 0x71374491, 0xb5c0fbcf, 0xe9b5dba5, 0x3956c25b, 0x59f111f1, 0x923f82a4, 0xab1c5ed5,\n    0xd807aa98, 0x12835b01, 0x243185be, 0x550c7dc3, 0x72be5d74, 0x80deb1fe, 0x9bdc06a7, 0xc19bf174,\n    0xe49b69c1, 0xefbe4786, 0x0fc19dc6, 0x240ca1cc, 0x2de92c6f, 0x4a7484aa, 0x5cb0a9dc, 0x76f988da,\n    0x983e5152, 0xa831c66d, 0xb00327c8, 0xbf597fc7, 0xc6e00bf3, 0xd5a79147, 0x06ca6351, 0x14292967,\n    0x27b70a85, 0x2e1b2138, 0x4d2c6dfc, 0x53380d13, 0x650a7354, 0x766a0abb, 0x81c2c92e, 0x92722c85,\n    0xa2bfe8a1, 0xa81a664b, 0xc24b8b70, 0xc76c51a3, 0xd192e819, 0xd6990624, 0xf40e3585, 0x106aa070,\n    0x19a4c116, 0x1e376c08, 0x2748774c, 0x34b0bcb5, 0x391c0cb3, 0x4ed8aa4a, 0x5b9cca4f, 0x682e6ff3,\n    0x748f82ee, 0x78a5636f, 0x84c87814, 0x8cc70208, 0x90befffa, 0xa4506ceb, 0xbef9a3f7, 0xc67178f2\n  ];\n  var OUTPUT_TYPES = ['hex', 'array', 'digest', 'arrayBuffer'];\n\n  var blocks = [];\n\n  if (root.JS_SHA256_NO_NODE_JS || !Array.isArray) {\n    Array.isArray = function (obj) {\n      return Object.prototype.toString.call(obj) === '[object Array]';\n    };\n  }\n\n  if (ARRAY_BUFFER && (root.JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW || !ArrayBuffer.isView)) {\n    ArrayBuffer.isView = function (obj) {\n      return typeof obj === 'object' && obj.buffer && obj.buffer.constructor === ArrayBuffer;\n    };\n  }\n\n  var createOutputMethod = function (outputType, is224) {\n    return function (message) {\n      return new Sha256(is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createMethod = function (is224) {\n    var method = createOutputMethod('hex', is224);\n    if (NODE_JS) {\n      method = nodeWrap(method, is224);\n    }\n    method.create = function () {\n      return new Sha256(is224);\n    };\n    method.update = function (message) {\n      return method.create().update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  var nodeWrap = function (method, is224) {\n    var crypto = eval(\"require('crypto')\");\n    var Buffer = eval(\"require('buffer').Buffer\");\n    var algorithm = is224 ? 'sha224' : 'sha256';\n    var nodeMethod = function (message) {\n      if (typeof message === 'string') {\n        return crypto.createHash(algorithm).update(message, 'utf8').digest('hex');\n      } else {\n        if (message === null || message === undefined) {\n          throw new Error(ERROR);\n        } else if (message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        }\n      }\n      if (Array.isArray(message) || ArrayBuffer.isView(message) ||\n        message.constructor === Buffer) {\n        return crypto.createHash(algorithm).update(new Buffer(message)).digest('hex');\n      } else {\n        return method(message);\n      }\n    };\n    return nodeMethod;\n  };\n\n  var createHmacOutputMethod = function (outputType, is224) {\n    return function (key, message) {\n      return new HmacSha256(key, is224, true).update(message)[outputType]();\n    };\n  };\n\n  var createHmacMethod = function (is224) {\n    var method = createHmacOutputMethod('hex', is224);\n    method.create = function (key) {\n      return new HmacSha256(key, is224);\n    };\n    method.update = function (key, message) {\n      return method.create(key).update(message);\n    };\n    for (var i = 0; i < OUTPUT_TYPES.length; ++i) {\n      var type = OUTPUT_TYPES[i];\n      method[type] = createHmacOutputMethod(type, is224);\n    }\n    return method;\n  };\n\n  function Sha256(is224, sharedMemory) {\n    if (sharedMemory) {\n      blocks[0] = blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      this.blocks = blocks;\n    } else {\n      this.blocks = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    }\n\n    if (is224) {\n      this.h0 = 0xc1059ed8;\n      this.h1 = 0x367cd507;\n      this.h2 = 0x3070dd17;\n      this.h3 = 0xf70e5939;\n      this.h4 = 0xffc00b31;\n      this.h5 = 0x68581511;\n      this.h6 = 0x64f98fa7;\n      this.h7 = 0xbefa4fa4;\n    } else { // 256\n      this.h0 = 0x6a09e667;\n      this.h1 = 0xbb67ae85;\n      this.h2 = 0x3c6ef372;\n      this.h3 = 0xa54ff53a;\n      this.h4 = 0x510e527f;\n      this.h5 = 0x9b05688c;\n      this.h6 = 0x1f83d9ab;\n      this.h7 = 0x5be0cd19;\n    }\n\n    this.block = this.start = this.bytes = this.hBytes = 0;\n    this.finalized = this.hashed = false;\n    this.first = true;\n    this.is224 = is224;\n  }\n\n  Sha256.prototype.update = function (message) {\n    if (this.finalized) {\n      return;\n    }\n    var notString, type = typeof message;\n    if (type !== 'string') {\n      if (type === 'object') {\n        if (message === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && message.constructor === ArrayBuffer) {\n          message = new Uint8Array(message);\n        } else if (!Array.isArray(message)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(message)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n      notString = true;\n    }\n    var code, index = 0, i, length = message.length, blocks = this.blocks;\n\n    while (index < length) {\n      if (this.hashed) {\n        this.hashed = false;\n        blocks[0] = this.block;\n        blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n          blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n          blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n          blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n      }\n\n      if (notString) {\n        for (i = this.start; index < length && i < 64; ++index) {\n          blocks[i >> 2] |= message[index] << SHIFT[i++ & 3];\n        }\n      } else {\n        for (i = this.start; index < length && i < 64; ++index) {\n          code = message.charCodeAt(index);\n          if (code < 0x80) {\n            blocks[i >> 2] |= code << SHIFT[i++ & 3];\n          } else if (code < 0x800) {\n            blocks[i >> 2] |= (0xc0 | (code >> 6)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else if (code < 0xd800 || code >= 0xe000) {\n            blocks[i >> 2] |= (0xe0 | (code >> 12)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          } else {\n            code = 0x10000 + (((code & 0x3ff) << 10) | (message.charCodeAt(++index) & 0x3ff));\n            blocks[i >> 2] |= (0xf0 | (code >> 18)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 12) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | ((code >> 6) & 0x3f)) << SHIFT[i++ & 3];\n            blocks[i >> 2] |= (0x80 | (code & 0x3f)) << SHIFT[i++ & 3];\n          }\n        }\n      }\n\n      this.lastByteIndex = i;\n      this.bytes += i - this.start;\n      if (i >= 64) {\n        this.block = blocks[16];\n        this.start = i - 64;\n        this.hash();\n        this.hashed = true;\n      } else {\n        this.start = i;\n      }\n    }\n    if (this.bytes > 4294967295) {\n      this.hBytes += this.bytes / 4294967296 << 0;\n      this.bytes = this.bytes % 4294967296;\n    }\n    return this;\n  };\n\n  Sha256.prototype.finalize = function () {\n    if (this.finalized) {\n      return;\n    }\n    this.finalized = true;\n    var blocks = this.blocks, i = this.lastByteIndex;\n    blocks[16] = this.block;\n    blocks[i >> 2] |= EXTRA[i & 3];\n    this.block = blocks[16];\n    if (i >= 56) {\n      if (!this.hashed) {\n        this.hash();\n      }\n      blocks[0] = this.block;\n      blocks[16] = blocks[1] = blocks[2] = blocks[3] =\n        blocks[4] = blocks[5] = blocks[6] = blocks[7] =\n        blocks[8] = blocks[9] = blocks[10] = blocks[11] =\n        blocks[12] = blocks[13] = blocks[14] = blocks[15] = 0;\n    }\n    blocks[14] = this.hBytes << 3 | this.bytes >>> 29;\n    blocks[15] = this.bytes << 3;\n    this.hash();\n  };\n\n  Sha256.prototype.hash = function () {\n    var a = this.h0, b = this.h1, c = this.h2, d = this.h3, e = this.h4, f = this.h5, g = this.h6,\n      h = this.h7, blocks = this.blocks, j, s0, s1, maj, t1, t2, ch, ab, da, cd, bc;\n\n    for (j = 16; j < 64; ++j) {\n      // rightrotate\n      t1 = blocks[j - 15];\n      s0 = ((t1 >>> 7) | (t1 << 25)) ^ ((t1 >>> 18) | (t1 << 14)) ^ (t1 >>> 3);\n      t1 = blocks[j - 2];\n      s1 = ((t1 >>> 17) | (t1 << 15)) ^ ((t1 >>> 19) | (t1 << 13)) ^ (t1 >>> 10);\n      blocks[j] = blocks[j - 16] + s0 + blocks[j - 7] + s1 << 0;\n    }\n\n    bc = b & c;\n    for (j = 0; j < 64; j += 4) {\n      if (this.first) {\n        if (this.is224) {\n          ab = 300032;\n          t1 = blocks[0] - 1413257819;\n          h = t1 - 150054599 << 0;\n          d = t1 + 24177077 << 0;\n        } else {\n          ab = 704751109;\n          t1 = blocks[0] - 210244248;\n          h = t1 - 1521486534 << 0;\n          d = t1 + 143694565 << 0;\n        }\n        this.first = false;\n      } else {\n        s0 = ((a >>> 2) | (a << 30)) ^ ((a >>> 13) | (a << 19)) ^ ((a >>> 22) | (a << 10));\n        s1 = ((e >>> 6) | (e << 26)) ^ ((e >>> 11) | (e << 21)) ^ ((e >>> 25) | (e << 7));\n        ab = a & b;\n        maj = ab ^ (a & c) ^ bc;\n        ch = (e & f) ^ (~e & g);\n        t1 = h + s1 + ch + K[j] + blocks[j];\n        t2 = s0 + maj;\n        h = d + t1 << 0;\n        d = t1 + t2 << 0;\n      }\n      s0 = ((d >>> 2) | (d << 30)) ^ ((d >>> 13) | (d << 19)) ^ ((d >>> 22) | (d << 10));\n      s1 = ((h >>> 6) | (h << 26)) ^ ((h >>> 11) | (h << 21)) ^ ((h >>> 25) | (h << 7));\n      da = d & a;\n      maj = da ^ (d & b) ^ ab;\n      ch = (h & e) ^ (~h & f);\n      t1 = g + s1 + ch + K[j + 1] + blocks[j + 1];\n      t2 = s0 + maj;\n      g = c + t1 << 0;\n      c = t1 + t2 << 0;\n      s0 = ((c >>> 2) | (c << 30)) ^ ((c >>> 13) | (c << 19)) ^ ((c >>> 22) | (c << 10));\n      s1 = ((g >>> 6) | (g << 26)) ^ ((g >>> 11) | (g << 21)) ^ ((g >>> 25) | (g << 7));\n      cd = c & d;\n      maj = cd ^ (c & a) ^ da;\n      ch = (g & h) ^ (~g & e);\n      t1 = f + s1 + ch + K[j + 2] + blocks[j + 2];\n      t2 = s0 + maj;\n      f = b + t1 << 0;\n      b = t1 + t2 << 0;\n      s0 = ((b >>> 2) | (b << 30)) ^ ((b >>> 13) | (b << 19)) ^ ((b >>> 22) | (b << 10));\n      s1 = ((f >>> 6) | (f << 26)) ^ ((f >>> 11) | (f << 21)) ^ ((f >>> 25) | (f << 7));\n      bc = b & c;\n      maj = bc ^ (b & d) ^ cd;\n      ch = (f & g) ^ (~f & h);\n      t1 = e + s1 + ch + K[j + 3] + blocks[j + 3];\n      t2 = s0 + maj;\n      e = a + t1 << 0;\n      a = t1 + t2 << 0;\n    }\n\n    this.h0 = this.h0 + a << 0;\n    this.h1 = this.h1 + b << 0;\n    this.h2 = this.h2 + c << 0;\n    this.h3 = this.h3 + d << 0;\n    this.h4 = this.h4 + e << 0;\n    this.h5 = this.h5 + f << 0;\n    this.h6 = this.h6 + g << 0;\n    this.h7 = this.h7 + h << 0;\n  };\n\n  Sha256.prototype.hex = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var hex = HEX_CHARS[(h0 >> 28) & 0x0F] + HEX_CHARS[(h0 >> 24) & 0x0F] +\n      HEX_CHARS[(h0 >> 20) & 0x0F] + HEX_CHARS[(h0 >> 16) & 0x0F] +\n      HEX_CHARS[(h0 >> 12) & 0x0F] + HEX_CHARS[(h0 >> 8) & 0x0F] +\n      HEX_CHARS[(h0 >> 4) & 0x0F] + HEX_CHARS[h0 & 0x0F] +\n      HEX_CHARS[(h1 >> 28) & 0x0F] + HEX_CHARS[(h1 >> 24) & 0x0F] +\n      HEX_CHARS[(h1 >> 20) & 0x0F] + HEX_CHARS[(h1 >> 16) & 0x0F] +\n      HEX_CHARS[(h1 >> 12) & 0x0F] + HEX_CHARS[(h1 >> 8) & 0x0F] +\n      HEX_CHARS[(h1 >> 4) & 0x0F] + HEX_CHARS[h1 & 0x0F] +\n      HEX_CHARS[(h2 >> 28) & 0x0F] + HEX_CHARS[(h2 >> 24) & 0x0F] +\n      HEX_CHARS[(h2 >> 20) & 0x0F] + HEX_CHARS[(h2 >> 16) & 0x0F] +\n      HEX_CHARS[(h2 >> 12) & 0x0F] + HEX_CHARS[(h2 >> 8) & 0x0F] +\n      HEX_CHARS[(h2 >> 4) & 0x0F] + HEX_CHARS[h2 & 0x0F] +\n      HEX_CHARS[(h3 >> 28) & 0x0F] + HEX_CHARS[(h3 >> 24) & 0x0F] +\n      HEX_CHARS[(h3 >> 20) & 0x0F] + HEX_CHARS[(h3 >> 16) & 0x0F] +\n      HEX_CHARS[(h3 >> 12) & 0x0F] + HEX_CHARS[(h3 >> 8) & 0x0F] +\n      HEX_CHARS[(h3 >> 4) & 0x0F] + HEX_CHARS[h3 & 0x0F] +\n      HEX_CHARS[(h4 >> 28) & 0x0F] + HEX_CHARS[(h4 >> 24) & 0x0F] +\n      HEX_CHARS[(h4 >> 20) & 0x0F] + HEX_CHARS[(h4 >> 16) & 0x0F] +\n      HEX_CHARS[(h4 >> 12) & 0x0F] + HEX_CHARS[(h4 >> 8) & 0x0F] +\n      HEX_CHARS[(h4 >> 4) & 0x0F] + HEX_CHARS[h4 & 0x0F] +\n      HEX_CHARS[(h5 >> 28) & 0x0F] + HEX_CHARS[(h5 >> 24) & 0x0F] +\n      HEX_CHARS[(h5 >> 20) & 0x0F] + HEX_CHARS[(h5 >> 16) & 0x0F] +\n      HEX_CHARS[(h5 >> 12) & 0x0F] + HEX_CHARS[(h5 >> 8) & 0x0F] +\n      HEX_CHARS[(h5 >> 4) & 0x0F] + HEX_CHARS[h5 & 0x0F] +\n      HEX_CHARS[(h6 >> 28) & 0x0F] + HEX_CHARS[(h6 >> 24) & 0x0F] +\n      HEX_CHARS[(h6 >> 20) & 0x0F] + HEX_CHARS[(h6 >> 16) & 0x0F] +\n      HEX_CHARS[(h6 >> 12) & 0x0F] + HEX_CHARS[(h6 >> 8) & 0x0F] +\n      HEX_CHARS[(h6 >> 4) & 0x0F] + HEX_CHARS[h6 & 0x0F];\n    if (!this.is224) {\n      hex += HEX_CHARS[(h7 >> 28) & 0x0F] + HEX_CHARS[(h7 >> 24) & 0x0F] +\n        HEX_CHARS[(h7 >> 20) & 0x0F] + HEX_CHARS[(h7 >> 16) & 0x0F] +\n        HEX_CHARS[(h7 >> 12) & 0x0F] + HEX_CHARS[(h7 >> 8) & 0x0F] +\n        HEX_CHARS[(h7 >> 4) & 0x0F] + HEX_CHARS[h7 & 0x0F];\n    }\n    return hex;\n  };\n\n  Sha256.prototype.toString = Sha256.prototype.hex;\n\n  Sha256.prototype.digest = function () {\n    this.finalize();\n\n    var h0 = this.h0, h1 = this.h1, h2 = this.h2, h3 = this.h3, h4 = this.h4, h5 = this.h5,\n      h6 = this.h6, h7 = this.h7;\n\n    var arr = [\n      (h0 >> 24) & 0xFF, (h0 >> 16) & 0xFF, (h0 >> 8) & 0xFF, h0 & 0xFF,\n      (h1 >> 24) & 0xFF, (h1 >> 16) & 0xFF, (h1 >> 8) & 0xFF, h1 & 0xFF,\n      (h2 >> 24) & 0xFF, (h2 >> 16) & 0xFF, (h2 >> 8) & 0xFF, h2 & 0xFF,\n      (h3 >> 24) & 0xFF, (h3 >> 16) & 0xFF, (h3 >> 8) & 0xFF, h3 & 0xFF,\n      (h4 >> 24) & 0xFF, (h4 >> 16) & 0xFF, (h4 >> 8) & 0xFF, h4 & 0xFF,\n      (h5 >> 24) & 0xFF, (h5 >> 16) & 0xFF, (h5 >> 8) & 0xFF, h5 & 0xFF,\n      (h6 >> 24) & 0xFF, (h6 >> 16) & 0xFF, (h6 >> 8) & 0xFF, h6 & 0xFF\n    ];\n    if (!this.is224) {\n      arr.push((h7 >> 24) & 0xFF, (h7 >> 16) & 0xFF, (h7 >> 8) & 0xFF, h7 & 0xFF);\n    }\n    return arr;\n  };\n\n  Sha256.prototype.array = Sha256.prototype.digest;\n\n  Sha256.prototype.arrayBuffer = function () {\n    this.finalize();\n\n    var buffer = new ArrayBuffer(this.is224 ? 28 : 32);\n    var dataView = new DataView(buffer);\n    dataView.setUint32(0, this.h0);\n    dataView.setUint32(4, this.h1);\n    dataView.setUint32(8, this.h2);\n    dataView.setUint32(12, this.h3);\n    dataView.setUint32(16, this.h4);\n    dataView.setUint32(20, this.h5);\n    dataView.setUint32(24, this.h6);\n    if (!this.is224) {\n      dataView.setUint32(28, this.h7);\n    }\n    return buffer;\n  };\n\n  function HmacSha256(key, is224, sharedMemory) {\n    var i, type = typeof key;\n    if (type === 'string') {\n      var bytes = [], length = key.length, index = 0, code;\n      for (i = 0; i < length; ++i) {\n        code = key.charCodeAt(i);\n        if (code < 0x80) {\n          bytes[index++] = code;\n        } else if (code < 0x800) {\n          bytes[index++] = (0xc0 | (code >> 6));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else if (code < 0xd800 || code >= 0xe000) {\n          bytes[index++] = (0xe0 | (code >> 12));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        } else {\n          code = 0x10000 + (((code & 0x3ff) << 10) | (key.charCodeAt(++i) & 0x3ff));\n          bytes[index++] = (0xf0 | (code >> 18));\n          bytes[index++] = (0x80 | ((code >> 12) & 0x3f));\n          bytes[index++] = (0x80 | ((code >> 6) & 0x3f));\n          bytes[index++] = (0x80 | (code & 0x3f));\n        }\n      }\n      key = bytes;\n    } else {\n      if (type === 'object') {\n        if (key === null) {\n          throw new Error(ERROR);\n        } else if (ARRAY_BUFFER && key.constructor === ArrayBuffer) {\n          key = new Uint8Array(key);\n        } else if (!Array.isArray(key)) {\n          if (!ARRAY_BUFFER || !ArrayBuffer.isView(key)) {\n            throw new Error(ERROR);\n          }\n        }\n      } else {\n        throw new Error(ERROR);\n      }\n    }\n\n    if (key.length > 64) {\n      key = (new Sha256(is224, true)).update(key).array();\n    }\n\n    var oKeyPad = [], iKeyPad = [];\n    for (i = 0; i < 64; ++i) {\n      var b = key[i] || 0;\n      oKeyPad[i] = 0x5c ^ b;\n      iKeyPad[i] = 0x36 ^ b;\n    }\n\n    Sha256.call(this, is224, sharedMemory);\n\n    this.update(iKeyPad);\n    this.oKeyPad = oKeyPad;\n    this.inner = true;\n    this.sharedMemory = sharedMemory;\n  }\n  HmacSha256.prototype = new Sha256();\n\n  HmacSha256.prototype.finalize = function () {\n    Sha256.prototype.finalize.call(this);\n    if (this.inner) {\n      this.inner = false;\n      var innerHash = this.array();\n      Sha256.call(this, this.is224, this.sharedMemory);\n      this.update(this.oKeyPad);\n      this.update(innerHash);\n      Sha256.prototype.finalize.call(this);\n    }\n  };\n\n  var exports = createMethod();\n  exports.sha256 = exports;\n  exports.sha224 = createMethod(true);\n  exports.sha256.hmac = createHmacMethod();\n  exports.sha224.hmac = createHmacMethod(true);\n\n  if (COMMON_JS) {\n    module.exports = exports;\n  } else {\n    root.sha256 = exports.sha256;\n    root.sha224 = exports.sha224;\n    if (AMD) {\n      define(function () {\n        return exports;\n      });\n    }\n  }\n})();\n","'use strict';\n\nvar numberIsNaN = function (value) {\n\treturn value !== value;\n};\n\nmodule.exports = function is(a, b) {\n\tif (a === 0 && b === 0) {\n\t\treturn 1 / a === 1 / b;\n\t}\n\tif (a === b) {\n\t\treturn true;\n\t}\n\tif (numberIsNaN(a) && numberIsNaN(b)) {\n\t\treturn true;\n\t}\n\treturn false;\n};\n\n","'use strict';\n\nvar define = require('define-properties');\nvar callBind = require('call-bind');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = callBind(getPolyfill(), Object);\n\ndefine(polyfill, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = polyfill;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\treturn typeof Object.is === 'function' ? Object.is : implementation;\n};\n","'use strict';\n\nvar getPolyfill = require('./polyfill');\nvar define = require('define-properties');\n\nmodule.exports = function shimObjectIs() {\n\tvar polyfill = getPolyfill();\n\tdefine(Object, { is: polyfill }, {\n\t\tis: function testObjectIs() {\n\t\t\treturn Object.is !== polyfill;\n\t\t}\n\t});\n\treturn polyfill;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","(function(nacl) {\n'use strict';\n\n// Ported in 2014 by Dmitry Chestnykh and Devi Mandiri.\n// Public domain.\n//\n// Implementation derived from TweetNaCl version 20140427.\n// See for details: http://tweetnacl.cr.yp.to/\n\nvar gf = function(init) {\n  var i, r = new Float64Array(16);\n  if (init) for (i = 0; i < init.length; i++) r[i] = init[i];\n  return r;\n};\n\n//  Pluggable, initialized in high-level API below.\nvar randombytes = function(/* x, n */) { throw new Error('no PRNG'); };\n\nvar _0 = new Uint8Array(16);\nvar _9 = new Uint8Array(32); _9[0] = 9;\n\nvar gf0 = gf(),\n    gf1 = gf([1]),\n    _121665 = gf([0xdb41, 1]),\n    D = gf([0x78a3, 0x1359, 0x4dca, 0x75eb, 0xd8ab, 0x4141, 0x0a4d, 0x0070, 0xe898, 0x7779, 0x4079, 0x8cc7, 0xfe73, 0x2b6f, 0x6cee, 0x5203]),\n    D2 = gf([0xf159, 0x26b2, 0x9b94, 0xebd6, 0xb156, 0x8283, 0x149a, 0x00e0, 0xd130, 0xeef3, 0x80f2, 0x198e, 0xfce7, 0x56df, 0xd9dc, 0x2406]),\n    X = gf([0xd51a, 0x8f25, 0x2d60, 0xc956, 0xa7b2, 0x9525, 0xc760, 0x692c, 0xdc5c, 0xfdd6, 0xe231, 0xc0a4, 0x53fe, 0xcd6e, 0x36d3, 0x2169]),\n    Y = gf([0x6658, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666, 0x6666]),\n    I = gf([0xa0b0, 0x4a0e, 0x1b27, 0xc4ee, 0xe478, 0xad2f, 0x1806, 0x2f43, 0xd7a7, 0x3dfb, 0x0099, 0x2b4d, 0xdf0b, 0x4fc1, 0x2480, 0x2b83]);\n\nfunction ts64(x, i, h, l) {\n  x[i]   = (h >> 24) & 0xff;\n  x[i+1] = (h >> 16) & 0xff;\n  x[i+2] = (h >>  8) & 0xff;\n  x[i+3] = h & 0xff;\n  x[i+4] = (l >> 24)  & 0xff;\n  x[i+5] = (l >> 16)  & 0xff;\n  x[i+6] = (l >>  8)  & 0xff;\n  x[i+7] = l & 0xff;\n}\n\nfunction vn(x, xi, y, yi, n) {\n  var i,d = 0;\n  for (i = 0; i < n; i++) d |= x[xi+i]^y[yi+i];\n  return (1 & ((d - 1) >>> 8)) - 1;\n}\n\nfunction crypto_verify_16(x, xi, y, yi) {\n  return vn(x,xi,y,yi,16);\n}\n\nfunction crypto_verify_32(x, xi, y, yi) {\n  return vn(x,xi,y,yi,32);\n}\n\nfunction core_salsa20(o, p, k, c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n   x0 =  x0 +  j0 | 0;\n   x1 =  x1 +  j1 | 0;\n   x2 =  x2 +  j2 | 0;\n   x3 =  x3 +  j3 | 0;\n   x4 =  x4 +  j4 | 0;\n   x5 =  x5 +  j5 | 0;\n   x6 =  x6 +  j6 | 0;\n   x7 =  x7 +  j7 | 0;\n   x8 =  x8 +  j8 | 0;\n   x9 =  x9 +  j9 | 0;\n  x10 = x10 + j10 | 0;\n  x11 = x11 + j11 | 0;\n  x12 = x12 + j12 | 0;\n  x13 = x13 + j13 | 0;\n  x14 = x14 + j14 | 0;\n  x15 = x15 + j15 | 0;\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x1 >>>  0 & 0xff;\n  o[ 5] = x1 >>>  8 & 0xff;\n  o[ 6] = x1 >>> 16 & 0xff;\n  o[ 7] = x1 >>> 24 & 0xff;\n\n  o[ 8] = x2 >>>  0 & 0xff;\n  o[ 9] = x2 >>>  8 & 0xff;\n  o[10] = x2 >>> 16 & 0xff;\n  o[11] = x2 >>> 24 & 0xff;\n\n  o[12] = x3 >>>  0 & 0xff;\n  o[13] = x3 >>>  8 & 0xff;\n  o[14] = x3 >>> 16 & 0xff;\n  o[15] = x3 >>> 24 & 0xff;\n\n  o[16] = x4 >>>  0 & 0xff;\n  o[17] = x4 >>>  8 & 0xff;\n  o[18] = x4 >>> 16 & 0xff;\n  o[19] = x4 >>> 24 & 0xff;\n\n  o[20] = x5 >>>  0 & 0xff;\n  o[21] = x5 >>>  8 & 0xff;\n  o[22] = x5 >>> 16 & 0xff;\n  o[23] = x5 >>> 24 & 0xff;\n\n  o[24] = x6 >>>  0 & 0xff;\n  o[25] = x6 >>>  8 & 0xff;\n  o[26] = x6 >>> 16 & 0xff;\n  o[27] = x6 >>> 24 & 0xff;\n\n  o[28] = x7 >>>  0 & 0xff;\n  o[29] = x7 >>>  8 & 0xff;\n  o[30] = x7 >>> 16 & 0xff;\n  o[31] = x7 >>> 24 & 0xff;\n\n  o[32] = x8 >>>  0 & 0xff;\n  o[33] = x8 >>>  8 & 0xff;\n  o[34] = x8 >>> 16 & 0xff;\n  o[35] = x8 >>> 24 & 0xff;\n\n  o[36] = x9 >>>  0 & 0xff;\n  o[37] = x9 >>>  8 & 0xff;\n  o[38] = x9 >>> 16 & 0xff;\n  o[39] = x9 >>> 24 & 0xff;\n\n  o[40] = x10 >>>  0 & 0xff;\n  o[41] = x10 >>>  8 & 0xff;\n  o[42] = x10 >>> 16 & 0xff;\n  o[43] = x10 >>> 24 & 0xff;\n\n  o[44] = x11 >>>  0 & 0xff;\n  o[45] = x11 >>>  8 & 0xff;\n  o[46] = x11 >>> 16 & 0xff;\n  o[47] = x11 >>> 24 & 0xff;\n\n  o[48] = x12 >>>  0 & 0xff;\n  o[49] = x12 >>>  8 & 0xff;\n  o[50] = x12 >>> 16 & 0xff;\n  o[51] = x12 >>> 24 & 0xff;\n\n  o[52] = x13 >>>  0 & 0xff;\n  o[53] = x13 >>>  8 & 0xff;\n  o[54] = x13 >>> 16 & 0xff;\n  o[55] = x13 >>> 24 & 0xff;\n\n  o[56] = x14 >>>  0 & 0xff;\n  o[57] = x14 >>>  8 & 0xff;\n  o[58] = x14 >>> 16 & 0xff;\n  o[59] = x14 >>> 24 & 0xff;\n\n  o[60] = x15 >>>  0 & 0xff;\n  o[61] = x15 >>>  8 & 0xff;\n  o[62] = x15 >>> 16 & 0xff;\n  o[63] = x15 >>> 24 & 0xff;\n}\n\nfunction core_hsalsa20(o,p,k,c) {\n  var j0  = c[ 0] & 0xff | (c[ 1] & 0xff)<<8 | (c[ 2] & 0xff)<<16 | (c[ 3] & 0xff)<<24,\n      j1  = k[ 0] & 0xff | (k[ 1] & 0xff)<<8 | (k[ 2] & 0xff)<<16 | (k[ 3] & 0xff)<<24,\n      j2  = k[ 4] & 0xff | (k[ 5] & 0xff)<<8 | (k[ 6] & 0xff)<<16 | (k[ 7] & 0xff)<<24,\n      j3  = k[ 8] & 0xff | (k[ 9] & 0xff)<<8 | (k[10] & 0xff)<<16 | (k[11] & 0xff)<<24,\n      j4  = k[12] & 0xff | (k[13] & 0xff)<<8 | (k[14] & 0xff)<<16 | (k[15] & 0xff)<<24,\n      j5  = c[ 4] & 0xff | (c[ 5] & 0xff)<<8 | (c[ 6] & 0xff)<<16 | (c[ 7] & 0xff)<<24,\n      j6  = p[ 0] & 0xff | (p[ 1] & 0xff)<<8 | (p[ 2] & 0xff)<<16 | (p[ 3] & 0xff)<<24,\n      j7  = p[ 4] & 0xff | (p[ 5] & 0xff)<<8 | (p[ 6] & 0xff)<<16 | (p[ 7] & 0xff)<<24,\n      j8  = p[ 8] & 0xff | (p[ 9] & 0xff)<<8 | (p[10] & 0xff)<<16 | (p[11] & 0xff)<<24,\n      j9  = p[12] & 0xff | (p[13] & 0xff)<<8 | (p[14] & 0xff)<<16 | (p[15] & 0xff)<<24,\n      j10 = c[ 8] & 0xff | (c[ 9] & 0xff)<<8 | (c[10] & 0xff)<<16 | (c[11] & 0xff)<<24,\n      j11 = k[16] & 0xff | (k[17] & 0xff)<<8 | (k[18] & 0xff)<<16 | (k[19] & 0xff)<<24,\n      j12 = k[20] & 0xff | (k[21] & 0xff)<<8 | (k[22] & 0xff)<<16 | (k[23] & 0xff)<<24,\n      j13 = k[24] & 0xff | (k[25] & 0xff)<<8 | (k[26] & 0xff)<<16 | (k[27] & 0xff)<<24,\n      j14 = k[28] & 0xff | (k[29] & 0xff)<<8 | (k[30] & 0xff)<<16 | (k[31] & 0xff)<<24,\n      j15 = c[12] & 0xff | (c[13] & 0xff)<<8 | (c[14] & 0xff)<<16 | (c[15] & 0xff)<<24;\n\n  var x0 = j0, x1 = j1, x2 = j2, x3 = j3, x4 = j4, x5 = j5, x6 = j6, x7 = j7,\n      x8 = j8, x9 = j9, x10 = j10, x11 = j11, x12 = j12, x13 = j13, x14 = j14,\n      x15 = j15, u;\n\n  for (var i = 0; i < 20; i += 2) {\n    u = x0 + x12 | 0;\n    x4 ^= u<<7 | u>>>(32-7);\n    u = x4 + x0 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x4 | 0;\n    x12 ^= u<<13 | u>>>(32-13);\n    u = x12 + x8 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x1 | 0;\n    x9 ^= u<<7 | u>>>(32-7);\n    u = x9 + x5 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x9 | 0;\n    x1 ^= u<<13 | u>>>(32-13);\n    u = x1 + x13 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x6 | 0;\n    x14 ^= u<<7 | u>>>(32-7);\n    u = x14 + x10 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x14 | 0;\n    x6 ^= u<<13 | u>>>(32-13);\n    u = x6 + x2 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x11 | 0;\n    x3 ^= u<<7 | u>>>(32-7);\n    u = x3 + x15 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x3 | 0;\n    x11 ^= u<<13 | u>>>(32-13);\n    u = x11 + x7 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n\n    u = x0 + x3 | 0;\n    x1 ^= u<<7 | u>>>(32-7);\n    u = x1 + x0 | 0;\n    x2 ^= u<<9 | u>>>(32-9);\n    u = x2 + x1 | 0;\n    x3 ^= u<<13 | u>>>(32-13);\n    u = x3 + x2 | 0;\n    x0 ^= u<<18 | u>>>(32-18);\n\n    u = x5 + x4 | 0;\n    x6 ^= u<<7 | u>>>(32-7);\n    u = x6 + x5 | 0;\n    x7 ^= u<<9 | u>>>(32-9);\n    u = x7 + x6 | 0;\n    x4 ^= u<<13 | u>>>(32-13);\n    u = x4 + x7 | 0;\n    x5 ^= u<<18 | u>>>(32-18);\n\n    u = x10 + x9 | 0;\n    x11 ^= u<<7 | u>>>(32-7);\n    u = x11 + x10 | 0;\n    x8 ^= u<<9 | u>>>(32-9);\n    u = x8 + x11 | 0;\n    x9 ^= u<<13 | u>>>(32-13);\n    u = x9 + x8 | 0;\n    x10 ^= u<<18 | u>>>(32-18);\n\n    u = x15 + x14 | 0;\n    x12 ^= u<<7 | u>>>(32-7);\n    u = x12 + x15 | 0;\n    x13 ^= u<<9 | u>>>(32-9);\n    u = x13 + x12 | 0;\n    x14 ^= u<<13 | u>>>(32-13);\n    u = x14 + x13 | 0;\n    x15 ^= u<<18 | u>>>(32-18);\n  }\n\n  o[ 0] = x0 >>>  0 & 0xff;\n  o[ 1] = x0 >>>  8 & 0xff;\n  o[ 2] = x0 >>> 16 & 0xff;\n  o[ 3] = x0 >>> 24 & 0xff;\n\n  o[ 4] = x5 >>>  0 & 0xff;\n  o[ 5] = x5 >>>  8 & 0xff;\n  o[ 6] = x5 >>> 16 & 0xff;\n  o[ 7] = x5 >>> 24 & 0xff;\n\n  o[ 8] = x10 >>>  0 & 0xff;\n  o[ 9] = x10 >>>  8 & 0xff;\n  o[10] = x10 >>> 16 & 0xff;\n  o[11] = x10 >>> 24 & 0xff;\n\n  o[12] = x15 >>>  0 & 0xff;\n  o[13] = x15 >>>  8 & 0xff;\n  o[14] = x15 >>> 16 & 0xff;\n  o[15] = x15 >>> 24 & 0xff;\n\n  o[16] = x6 >>>  0 & 0xff;\n  o[17] = x6 >>>  8 & 0xff;\n  o[18] = x6 >>> 16 & 0xff;\n  o[19] = x6 >>> 24 & 0xff;\n\n  o[20] = x7 >>>  0 & 0xff;\n  o[21] = x7 >>>  8 & 0xff;\n  o[22] = x7 >>> 16 & 0xff;\n  o[23] = x7 >>> 24 & 0xff;\n\n  o[24] = x8 >>>  0 & 0xff;\n  o[25] = x8 >>>  8 & 0xff;\n  o[26] = x8 >>> 16 & 0xff;\n  o[27] = x8 >>> 24 & 0xff;\n\n  o[28] = x9 >>>  0 & 0xff;\n  o[29] = x9 >>>  8 & 0xff;\n  o[30] = x9 >>> 16 & 0xff;\n  o[31] = x9 >>> 24 & 0xff;\n}\n\nfunction crypto_core_salsa20(out,inp,k,c) {\n  core_salsa20(out,inp,k,c);\n}\n\nfunction crypto_core_hsalsa20(out,inp,k,c) {\n  core_hsalsa20(out,inp,k,c);\n}\n\nvar sigma = new Uint8Array([101, 120, 112, 97, 110, 100, 32, 51, 50, 45, 98, 121, 116, 101, 32, 107]);\n            // \"expand 32-byte k\"\n\nfunction crypto_stream_salsa20_xor(c,cpos,m,mpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n    mpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = m[mpos+i] ^ x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream_salsa20(c,cpos,b,n,k) {\n  var z = new Uint8Array(16), x = new Uint8Array(64);\n  var u, i;\n  for (i = 0; i < 16; i++) z[i] = 0;\n  for (i = 0; i < 8; i++) z[i] = n[i];\n  while (b >= 64) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < 64; i++) c[cpos+i] = x[i];\n    u = 1;\n    for (i = 8; i < 16; i++) {\n      u = u + (z[i] & 0xff) | 0;\n      z[i] = u & 0xff;\n      u >>>= 8;\n    }\n    b -= 64;\n    cpos += 64;\n  }\n  if (b > 0) {\n    crypto_core_salsa20(x,z,k,sigma);\n    for (i = 0; i < b; i++) c[cpos+i] = x[i];\n  }\n  return 0;\n}\n\nfunction crypto_stream(c,cpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20(c,cpos,d,sn,s);\n}\n\nfunction crypto_stream_xor(c,cpos,m,mpos,d,n,k) {\n  var s = new Uint8Array(32);\n  crypto_core_hsalsa20(s,n,k,sigma);\n  var sn = new Uint8Array(8);\n  for (var i = 0; i < 8; i++) sn[i] = n[i+16];\n  return crypto_stream_salsa20_xor(c,cpos,m,mpos,d,sn,s);\n}\n\n/*\n* Port of Andrew Moon's Poly1305-donna-16. Public domain.\n* https://github.com/floodyberry/poly1305-donna\n*/\n\nvar poly1305 = function(key) {\n  this.buffer = new Uint8Array(16);\n  this.r = new Uint16Array(10);\n  this.h = new Uint16Array(10);\n  this.pad = new Uint16Array(8);\n  this.leftover = 0;\n  this.fin = 0;\n\n  var t0, t1, t2, t3, t4, t5, t6, t7;\n\n  t0 = key[ 0] & 0xff | (key[ 1] & 0xff) << 8; this.r[0] = ( t0                     ) & 0x1fff;\n  t1 = key[ 2] & 0xff | (key[ 3] & 0xff) << 8; this.r[1] = ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n  t2 = key[ 4] & 0xff | (key[ 5] & 0xff) << 8; this.r[2] = ((t1 >>> 10) | (t2 <<  6)) & 0x1f03;\n  t3 = key[ 6] & 0xff | (key[ 7] & 0xff) << 8; this.r[3] = ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n  t4 = key[ 8] & 0xff | (key[ 9] & 0xff) << 8; this.r[4] = ((t3 >>>  4) | (t4 << 12)) & 0x00ff;\n  this.r[5] = ((t4 >>>  1)) & 0x1ffe;\n  t5 = key[10] & 0xff | (key[11] & 0xff) << 8; this.r[6] = ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n  t6 = key[12] & 0xff | (key[13] & 0xff) << 8; this.r[7] = ((t5 >>> 11) | (t6 <<  5)) & 0x1f81;\n  t7 = key[14] & 0xff | (key[15] & 0xff) << 8; this.r[8] = ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n  this.r[9] = ((t7 >>>  5)) & 0x007f;\n\n  this.pad[0] = key[16] & 0xff | (key[17] & 0xff) << 8;\n  this.pad[1] = key[18] & 0xff | (key[19] & 0xff) << 8;\n  this.pad[2] = key[20] & 0xff | (key[21] & 0xff) << 8;\n  this.pad[3] = key[22] & 0xff | (key[23] & 0xff) << 8;\n  this.pad[4] = key[24] & 0xff | (key[25] & 0xff) << 8;\n  this.pad[5] = key[26] & 0xff | (key[27] & 0xff) << 8;\n  this.pad[6] = key[28] & 0xff | (key[29] & 0xff) << 8;\n  this.pad[7] = key[30] & 0xff | (key[31] & 0xff) << 8;\n};\n\npoly1305.prototype.blocks = function(m, mpos, bytes) {\n  var hibit = this.fin ? 0 : (1 << 11);\n  var t0, t1, t2, t3, t4, t5, t6, t7, c;\n  var d0, d1, d2, d3, d4, d5, d6, d7, d8, d9;\n\n  var h0 = this.h[0],\n      h1 = this.h[1],\n      h2 = this.h[2],\n      h3 = this.h[3],\n      h4 = this.h[4],\n      h5 = this.h[5],\n      h6 = this.h[6],\n      h7 = this.h[7],\n      h8 = this.h[8],\n      h9 = this.h[9];\n\n  var r0 = this.r[0],\n      r1 = this.r[1],\n      r2 = this.r[2],\n      r3 = this.r[3],\n      r4 = this.r[4],\n      r5 = this.r[5],\n      r6 = this.r[6],\n      r7 = this.r[7],\n      r8 = this.r[8],\n      r9 = this.r[9];\n\n  while (bytes >= 16) {\n    t0 = m[mpos+ 0] & 0xff | (m[mpos+ 1] & 0xff) << 8; h0 += ( t0                     ) & 0x1fff;\n    t1 = m[mpos+ 2] & 0xff | (m[mpos+ 3] & 0xff) << 8; h1 += ((t0 >>> 13) | (t1 <<  3)) & 0x1fff;\n    t2 = m[mpos+ 4] & 0xff | (m[mpos+ 5] & 0xff) << 8; h2 += ((t1 >>> 10) | (t2 <<  6)) & 0x1fff;\n    t3 = m[mpos+ 6] & 0xff | (m[mpos+ 7] & 0xff) << 8; h3 += ((t2 >>>  7) | (t3 <<  9)) & 0x1fff;\n    t4 = m[mpos+ 8] & 0xff | (m[mpos+ 9] & 0xff) << 8; h4 += ((t3 >>>  4) | (t4 << 12)) & 0x1fff;\n    h5 += ((t4 >>>  1)) & 0x1fff;\n    t5 = m[mpos+10] & 0xff | (m[mpos+11] & 0xff) << 8; h6 += ((t4 >>> 14) | (t5 <<  2)) & 0x1fff;\n    t6 = m[mpos+12] & 0xff | (m[mpos+13] & 0xff) << 8; h7 += ((t5 >>> 11) | (t6 <<  5)) & 0x1fff;\n    t7 = m[mpos+14] & 0xff | (m[mpos+15] & 0xff) << 8; h8 += ((t6 >>>  8) | (t7 <<  8)) & 0x1fff;\n    h9 += ((t7 >>> 5)) | hibit;\n\n    c = 0;\n\n    d0 = c;\n    d0 += h0 * r0;\n    d0 += h1 * (5 * r9);\n    d0 += h2 * (5 * r8);\n    d0 += h3 * (5 * r7);\n    d0 += h4 * (5 * r6);\n    c = (d0 >>> 13); d0 &= 0x1fff;\n    d0 += h5 * (5 * r5);\n    d0 += h6 * (5 * r4);\n    d0 += h7 * (5 * r3);\n    d0 += h8 * (5 * r2);\n    d0 += h9 * (5 * r1);\n    c += (d0 >>> 13); d0 &= 0x1fff;\n\n    d1 = c;\n    d1 += h0 * r1;\n    d1 += h1 * r0;\n    d1 += h2 * (5 * r9);\n    d1 += h3 * (5 * r8);\n    d1 += h4 * (5 * r7);\n    c = (d1 >>> 13); d1 &= 0x1fff;\n    d1 += h5 * (5 * r6);\n    d1 += h6 * (5 * r5);\n    d1 += h7 * (5 * r4);\n    d1 += h8 * (5 * r3);\n    d1 += h9 * (5 * r2);\n    c += (d1 >>> 13); d1 &= 0x1fff;\n\n    d2 = c;\n    d2 += h0 * r2;\n    d2 += h1 * r1;\n    d2 += h2 * r0;\n    d2 += h3 * (5 * r9);\n    d2 += h4 * (5 * r8);\n    c = (d2 >>> 13); d2 &= 0x1fff;\n    d2 += h5 * (5 * r7);\n    d2 += h6 * (5 * r6);\n    d2 += h7 * (5 * r5);\n    d2 += h8 * (5 * r4);\n    d2 += h9 * (5 * r3);\n    c += (d2 >>> 13); d2 &= 0x1fff;\n\n    d3 = c;\n    d3 += h0 * r3;\n    d3 += h1 * r2;\n    d3 += h2 * r1;\n    d3 += h3 * r0;\n    d3 += h4 * (5 * r9);\n    c = (d3 >>> 13); d3 &= 0x1fff;\n    d3 += h5 * (5 * r8);\n    d3 += h6 * (5 * r7);\n    d3 += h7 * (5 * r6);\n    d3 += h8 * (5 * r5);\n    d3 += h9 * (5 * r4);\n    c += (d3 >>> 13); d3 &= 0x1fff;\n\n    d4 = c;\n    d4 += h0 * r4;\n    d4 += h1 * r3;\n    d4 += h2 * r2;\n    d4 += h3 * r1;\n    d4 += h4 * r0;\n    c = (d4 >>> 13); d4 &= 0x1fff;\n    d4 += h5 * (5 * r9);\n    d4 += h6 * (5 * r8);\n    d4 += h7 * (5 * r7);\n    d4 += h8 * (5 * r6);\n    d4 += h9 * (5 * r5);\n    c += (d4 >>> 13); d4 &= 0x1fff;\n\n    d5 = c;\n    d5 += h0 * r5;\n    d5 += h1 * r4;\n    d5 += h2 * r3;\n    d5 += h3 * r2;\n    d5 += h4 * r1;\n    c = (d5 >>> 13); d5 &= 0x1fff;\n    d5 += h5 * r0;\n    d5 += h6 * (5 * r9);\n    d5 += h7 * (5 * r8);\n    d5 += h8 * (5 * r7);\n    d5 += h9 * (5 * r6);\n    c += (d5 >>> 13); d5 &= 0x1fff;\n\n    d6 = c;\n    d6 += h0 * r6;\n    d6 += h1 * r5;\n    d6 += h2 * r4;\n    d6 += h3 * r3;\n    d6 += h4 * r2;\n    c = (d6 >>> 13); d6 &= 0x1fff;\n    d6 += h5 * r1;\n    d6 += h6 * r0;\n    d6 += h7 * (5 * r9);\n    d6 += h8 * (5 * r8);\n    d6 += h9 * (5 * r7);\n    c += (d6 >>> 13); d6 &= 0x1fff;\n\n    d7 = c;\n    d7 += h0 * r7;\n    d7 += h1 * r6;\n    d7 += h2 * r5;\n    d7 += h3 * r4;\n    d7 += h4 * r3;\n    c = (d7 >>> 13); d7 &= 0x1fff;\n    d7 += h5 * r2;\n    d7 += h6 * r1;\n    d7 += h7 * r0;\n    d7 += h8 * (5 * r9);\n    d7 += h9 * (5 * r8);\n    c += (d7 >>> 13); d7 &= 0x1fff;\n\n    d8 = c;\n    d8 += h0 * r8;\n    d8 += h1 * r7;\n    d8 += h2 * r6;\n    d8 += h3 * r5;\n    d8 += h4 * r4;\n    c = (d8 >>> 13); d8 &= 0x1fff;\n    d8 += h5 * r3;\n    d8 += h6 * r2;\n    d8 += h7 * r1;\n    d8 += h8 * r0;\n    d8 += h9 * (5 * r9);\n    c += (d8 >>> 13); d8 &= 0x1fff;\n\n    d9 = c;\n    d9 += h0 * r9;\n    d9 += h1 * r8;\n    d9 += h2 * r7;\n    d9 += h3 * r6;\n    d9 += h4 * r5;\n    c = (d9 >>> 13); d9 &= 0x1fff;\n    d9 += h5 * r4;\n    d9 += h6 * r3;\n    d9 += h7 * r2;\n    d9 += h8 * r1;\n    d9 += h9 * r0;\n    c += (d9 >>> 13); d9 &= 0x1fff;\n\n    c = (((c << 2) + c)) | 0;\n    c = (c + d0) | 0;\n    d0 = c & 0x1fff;\n    c = (c >>> 13);\n    d1 += c;\n\n    h0 = d0;\n    h1 = d1;\n    h2 = d2;\n    h3 = d3;\n    h4 = d4;\n    h5 = d5;\n    h6 = d6;\n    h7 = d7;\n    h8 = d8;\n    h9 = d9;\n\n    mpos += 16;\n    bytes -= 16;\n  }\n  this.h[0] = h0;\n  this.h[1] = h1;\n  this.h[2] = h2;\n  this.h[3] = h3;\n  this.h[4] = h4;\n  this.h[5] = h5;\n  this.h[6] = h6;\n  this.h[7] = h7;\n  this.h[8] = h8;\n  this.h[9] = h9;\n};\n\npoly1305.prototype.finish = function(mac, macpos) {\n  var g = new Uint16Array(10);\n  var c, mask, f, i;\n\n  if (this.leftover) {\n    i = this.leftover;\n    this.buffer[i++] = 1;\n    for (; i < 16; i++) this.buffer[i] = 0;\n    this.fin = 1;\n    this.blocks(this.buffer, 0, 16);\n  }\n\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  for (i = 2; i < 10; i++) {\n    this.h[i] += c;\n    c = this.h[i] >>> 13;\n    this.h[i] &= 0x1fff;\n  }\n  this.h[0] += (c * 5);\n  c = this.h[0] >>> 13;\n  this.h[0] &= 0x1fff;\n  this.h[1] += c;\n  c = this.h[1] >>> 13;\n  this.h[1] &= 0x1fff;\n  this.h[2] += c;\n\n  g[0] = this.h[0] + 5;\n  c = g[0] >>> 13;\n  g[0] &= 0x1fff;\n  for (i = 1; i < 10; i++) {\n    g[i] = this.h[i] + c;\n    c = g[i] >>> 13;\n    g[i] &= 0x1fff;\n  }\n  g[9] -= (1 << 13);\n\n  mask = (c ^ 1) - 1;\n  for (i = 0; i < 10; i++) g[i] &= mask;\n  mask = ~mask;\n  for (i = 0; i < 10; i++) this.h[i] = (this.h[i] & mask) | g[i];\n\n  this.h[0] = ((this.h[0]       ) | (this.h[1] << 13)                    ) & 0xffff;\n  this.h[1] = ((this.h[1] >>>  3) | (this.h[2] << 10)                    ) & 0xffff;\n  this.h[2] = ((this.h[2] >>>  6) | (this.h[3] <<  7)                    ) & 0xffff;\n  this.h[3] = ((this.h[3] >>>  9) | (this.h[4] <<  4)                    ) & 0xffff;\n  this.h[4] = ((this.h[4] >>> 12) | (this.h[5] <<  1) | (this.h[6] << 14)) & 0xffff;\n  this.h[5] = ((this.h[6] >>>  2) | (this.h[7] << 11)                    ) & 0xffff;\n  this.h[6] = ((this.h[7] >>>  5) | (this.h[8] <<  8)                    ) & 0xffff;\n  this.h[7] = ((this.h[8] >>>  8) | (this.h[9] <<  5)                    ) & 0xffff;\n\n  f = this.h[0] + this.pad[0];\n  this.h[0] = f & 0xffff;\n  for (i = 1; i < 8; i++) {\n    f = (((this.h[i] + this.pad[i]) | 0) + (f >>> 16)) | 0;\n    this.h[i] = f & 0xffff;\n  }\n\n  mac[macpos+ 0] = (this.h[0] >>> 0) & 0xff;\n  mac[macpos+ 1] = (this.h[0] >>> 8) & 0xff;\n  mac[macpos+ 2] = (this.h[1] >>> 0) & 0xff;\n  mac[macpos+ 3] = (this.h[1] >>> 8) & 0xff;\n  mac[macpos+ 4] = (this.h[2] >>> 0) & 0xff;\n  mac[macpos+ 5] = (this.h[2] >>> 8) & 0xff;\n  mac[macpos+ 6] = (this.h[3] >>> 0) & 0xff;\n  mac[macpos+ 7] = (this.h[3] >>> 8) & 0xff;\n  mac[macpos+ 8] = (this.h[4] >>> 0) & 0xff;\n  mac[macpos+ 9] = (this.h[4] >>> 8) & 0xff;\n  mac[macpos+10] = (this.h[5] >>> 0) & 0xff;\n  mac[macpos+11] = (this.h[5] >>> 8) & 0xff;\n  mac[macpos+12] = (this.h[6] >>> 0) & 0xff;\n  mac[macpos+13] = (this.h[6] >>> 8) & 0xff;\n  mac[macpos+14] = (this.h[7] >>> 0) & 0xff;\n  mac[macpos+15] = (this.h[7] >>> 8) & 0xff;\n};\n\npoly1305.prototype.update = function(m, mpos, bytes) {\n  var i, want;\n\n  if (this.leftover) {\n    want = (16 - this.leftover);\n    if (want > bytes)\n      want = bytes;\n    for (i = 0; i < want; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    bytes -= want;\n    mpos += want;\n    this.leftover += want;\n    if (this.leftover < 16)\n      return;\n    this.blocks(this.buffer, 0, 16);\n    this.leftover = 0;\n  }\n\n  if (bytes >= 16) {\n    want = bytes - (bytes % 16);\n    this.blocks(m, mpos, want);\n    mpos += want;\n    bytes -= want;\n  }\n\n  if (bytes) {\n    for (i = 0; i < bytes; i++)\n      this.buffer[this.leftover + i] = m[mpos+i];\n    this.leftover += bytes;\n  }\n};\n\nfunction crypto_onetimeauth(out, outpos, m, mpos, n, k) {\n  var s = new poly1305(k);\n  s.update(m, mpos, n);\n  s.finish(out, outpos);\n  return 0;\n}\n\nfunction crypto_onetimeauth_verify(h, hpos, m, mpos, n, k) {\n  var x = new Uint8Array(16);\n  crypto_onetimeauth(x,0,m,mpos,n,k);\n  return crypto_verify_16(h,hpos,x,0);\n}\n\nfunction crypto_secretbox(c,m,d,n,k) {\n  var i;\n  if (d < 32) return -1;\n  crypto_stream_xor(c,0,m,0,d,n,k);\n  crypto_onetimeauth(c, 16, c, 32, d - 32, c);\n  for (i = 0; i < 16; i++) c[i] = 0;\n  return 0;\n}\n\nfunction crypto_secretbox_open(m,c,d,n,k) {\n  var i;\n  var x = new Uint8Array(32);\n  if (d < 32) return -1;\n  crypto_stream(x,0,32,n,k);\n  if (crypto_onetimeauth_verify(c, 16,c, 32,d - 32,x) !== 0) return -1;\n  crypto_stream_xor(m,0,c,0,d,n,k);\n  for (i = 0; i < 32; i++) m[i] = 0;\n  return 0;\n}\n\nfunction set25519(r, a) {\n  var i;\n  for (i = 0; i < 16; i++) r[i] = a[i]|0;\n}\n\nfunction car25519(o) {\n  var i, v, c = 1;\n  for (i = 0; i < 16; i++) {\n    v = o[i] + c + 65535;\n    c = Math.floor(v / 65536);\n    o[i] = v - c * 65536;\n  }\n  o[0] += c-1 + 37 * (c-1);\n}\n\nfunction sel25519(p, q, b) {\n  var t, c = ~(b-1);\n  for (var i = 0; i < 16; i++) {\n    t = c & (p[i] ^ q[i]);\n    p[i] ^= t;\n    q[i] ^= t;\n  }\n}\n\nfunction pack25519(o, n) {\n  var i, j, b;\n  var m = gf(), t = gf();\n  for (i = 0; i < 16; i++) t[i] = n[i];\n  car25519(t);\n  car25519(t);\n  car25519(t);\n  for (j = 0; j < 2; j++) {\n    m[0] = t[0] - 0xffed;\n    for (i = 1; i < 15; i++) {\n      m[i] = t[i] - 0xffff - ((m[i-1]>>16) & 1);\n      m[i-1] &= 0xffff;\n    }\n    m[15] = t[15] - 0x7fff - ((m[14]>>16) & 1);\n    b = (m[15]>>16) & 1;\n    m[14] &= 0xffff;\n    sel25519(t, m, 1-b);\n  }\n  for (i = 0; i < 16; i++) {\n    o[2*i] = t[i] & 0xff;\n    o[2*i+1] = t[i]>>8;\n  }\n}\n\nfunction neq25519(a, b) {\n  var c = new Uint8Array(32), d = new Uint8Array(32);\n  pack25519(c, a);\n  pack25519(d, b);\n  return crypto_verify_32(c, 0, d, 0);\n}\n\nfunction par25519(a) {\n  var d = new Uint8Array(32);\n  pack25519(d, a);\n  return d[0] & 1;\n}\n\nfunction unpack25519(o, n) {\n  var i;\n  for (i = 0; i < 16; i++) o[i] = n[2*i] + (n[2*i+1] << 8);\n  o[15] &= 0x7fff;\n}\n\nfunction A(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] + b[i];\n}\n\nfunction Z(o, a, b) {\n  for (var i = 0; i < 16; i++) o[i] = a[i] - b[i];\n}\n\nfunction M(o, a, b) {\n  var v, c,\n     t0 = 0,  t1 = 0,  t2 = 0,  t3 = 0,  t4 = 0,  t5 = 0,  t6 = 0,  t7 = 0,\n     t8 = 0,  t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0,\n    t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0,\n    t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0,\n    b0 = b[0],\n    b1 = b[1],\n    b2 = b[2],\n    b3 = b[3],\n    b4 = b[4],\n    b5 = b[5],\n    b6 = b[6],\n    b7 = b[7],\n    b8 = b[8],\n    b9 = b[9],\n    b10 = b[10],\n    b11 = b[11],\n    b12 = b[12],\n    b13 = b[13],\n    b14 = b[14],\n    b15 = b[15];\n\n  v = a[0];\n  t0 += v * b0;\n  t1 += v * b1;\n  t2 += v * b2;\n  t3 += v * b3;\n  t4 += v * b4;\n  t5 += v * b5;\n  t6 += v * b6;\n  t7 += v * b7;\n  t8 += v * b8;\n  t9 += v * b9;\n  t10 += v * b10;\n  t11 += v * b11;\n  t12 += v * b12;\n  t13 += v * b13;\n  t14 += v * b14;\n  t15 += v * b15;\n  v = a[1];\n  t1 += v * b0;\n  t2 += v * b1;\n  t3 += v * b2;\n  t4 += v * b3;\n  t5 += v * b4;\n  t6 += v * b5;\n  t7 += v * b6;\n  t8 += v * b7;\n  t9 += v * b8;\n  t10 += v * b9;\n  t11 += v * b10;\n  t12 += v * b11;\n  t13 += v * b12;\n  t14 += v * b13;\n  t15 += v * b14;\n  t16 += v * b15;\n  v = a[2];\n  t2 += v * b0;\n  t3 += v * b1;\n  t4 += v * b2;\n  t5 += v * b3;\n  t6 += v * b4;\n  t7 += v * b5;\n  t8 += v * b6;\n  t9 += v * b7;\n  t10 += v * b8;\n  t11 += v * b9;\n  t12 += v * b10;\n  t13 += v * b11;\n  t14 += v * b12;\n  t15 += v * b13;\n  t16 += v * b14;\n  t17 += v * b15;\n  v = a[3];\n  t3 += v * b0;\n  t4 += v * b1;\n  t5 += v * b2;\n  t6 += v * b3;\n  t7 += v * b4;\n  t8 += v * b5;\n  t9 += v * b6;\n  t10 += v * b7;\n  t11 += v * b8;\n  t12 += v * b9;\n  t13 += v * b10;\n  t14 += v * b11;\n  t15 += v * b12;\n  t16 += v * b13;\n  t17 += v * b14;\n  t18 += v * b15;\n  v = a[4];\n  t4 += v * b0;\n  t5 += v * b1;\n  t6 += v * b2;\n  t7 += v * b3;\n  t8 += v * b4;\n  t9 += v * b5;\n  t10 += v * b6;\n  t11 += v * b7;\n  t12 += v * b8;\n  t13 += v * b9;\n  t14 += v * b10;\n  t15 += v * b11;\n  t16 += v * b12;\n  t17 += v * b13;\n  t18 += v * b14;\n  t19 += v * b15;\n  v = a[5];\n  t5 += v * b0;\n  t6 += v * b1;\n  t7 += v * b2;\n  t8 += v * b3;\n  t9 += v * b4;\n  t10 += v * b5;\n  t11 += v * b6;\n  t12 += v * b7;\n  t13 += v * b8;\n  t14 += v * b9;\n  t15 += v * b10;\n  t16 += v * b11;\n  t17 += v * b12;\n  t18 += v * b13;\n  t19 += v * b14;\n  t20 += v * b15;\n  v = a[6];\n  t6 += v * b0;\n  t7 += v * b1;\n  t8 += v * b2;\n  t9 += v * b3;\n  t10 += v * b4;\n  t11 += v * b5;\n  t12 += v * b6;\n  t13 += v * b7;\n  t14 += v * b8;\n  t15 += v * b9;\n  t16 += v * b10;\n  t17 += v * b11;\n  t18 += v * b12;\n  t19 += v * b13;\n  t20 += v * b14;\n  t21 += v * b15;\n  v = a[7];\n  t7 += v * b0;\n  t8 += v * b1;\n  t9 += v * b2;\n  t10 += v * b3;\n  t11 += v * b4;\n  t12 += v * b5;\n  t13 += v * b6;\n  t14 += v * b7;\n  t15 += v * b8;\n  t16 += v * b9;\n  t17 += v * b10;\n  t18 += v * b11;\n  t19 += v * b12;\n  t20 += v * b13;\n  t21 += v * b14;\n  t22 += v * b15;\n  v = a[8];\n  t8 += v * b0;\n  t9 += v * b1;\n  t10 += v * b2;\n  t11 += v * b3;\n  t12 += v * b4;\n  t13 += v * b5;\n  t14 += v * b6;\n  t15 += v * b7;\n  t16 += v * b8;\n  t17 += v * b9;\n  t18 += v * b10;\n  t19 += v * b11;\n  t20 += v * b12;\n  t21 += v * b13;\n  t22 += v * b14;\n  t23 += v * b15;\n  v = a[9];\n  t9 += v * b0;\n  t10 += v * b1;\n  t11 += v * b2;\n  t12 += v * b3;\n  t13 += v * b4;\n  t14 += v * b5;\n  t15 += v * b6;\n  t16 += v * b7;\n  t17 += v * b8;\n  t18 += v * b9;\n  t19 += v * b10;\n  t20 += v * b11;\n  t21 += v * b12;\n  t22 += v * b13;\n  t23 += v * b14;\n  t24 += v * b15;\n  v = a[10];\n  t10 += v * b0;\n  t11 += v * b1;\n  t12 += v * b2;\n  t13 += v * b3;\n  t14 += v * b4;\n  t15 += v * b5;\n  t16 += v * b6;\n  t17 += v * b7;\n  t18 += v * b8;\n  t19 += v * b9;\n  t20 += v * b10;\n  t21 += v * b11;\n  t22 += v * b12;\n  t23 += v * b13;\n  t24 += v * b14;\n  t25 += v * b15;\n  v = a[11];\n  t11 += v * b0;\n  t12 += v * b1;\n  t13 += v * b2;\n  t14 += v * b3;\n  t15 += v * b4;\n  t16 += v * b5;\n  t17 += v * b6;\n  t18 += v * b7;\n  t19 += v * b8;\n  t20 += v * b9;\n  t21 += v * b10;\n  t22 += v * b11;\n  t23 += v * b12;\n  t24 += v * b13;\n  t25 += v * b14;\n  t26 += v * b15;\n  v = a[12];\n  t12 += v * b0;\n  t13 += v * b1;\n  t14 += v * b2;\n  t15 += v * b3;\n  t16 += v * b4;\n  t17 += v * b5;\n  t18 += v * b6;\n  t19 += v * b7;\n  t20 += v * b8;\n  t21 += v * b9;\n  t22 += v * b10;\n  t23 += v * b11;\n  t24 += v * b12;\n  t25 += v * b13;\n  t26 += v * b14;\n  t27 += v * b15;\n  v = a[13];\n  t13 += v * b0;\n  t14 += v * b1;\n  t15 += v * b2;\n  t16 += v * b3;\n  t17 += v * b4;\n  t18 += v * b5;\n  t19 += v * b6;\n  t20 += v * b7;\n  t21 += v * b8;\n  t22 += v * b9;\n  t23 += v * b10;\n  t24 += v * b11;\n  t25 += v * b12;\n  t26 += v * b13;\n  t27 += v * b14;\n  t28 += v * b15;\n  v = a[14];\n  t14 += v * b0;\n  t15 += v * b1;\n  t16 += v * b2;\n  t17 += v * b3;\n  t18 += v * b4;\n  t19 += v * b5;\n  t20 += v * b6;\n  t21 += v * b7;\n  t22 += v * b8;\n  t23 += v * b9;\n  t24 += v * b10;\n  t25 += v * b11;\n  t26 += v * b12;\n  t27 += v * b13;\n  t28 += v * b14;\n  t29 += v * b15;\n  v = a[15];\n  t15 += v * b0;\n  t16 += v * b1;\n  t17 += v * b2;\n  t18 += v * b3;\n  t19 += v * b4;\n  t20 += v * b5;\n  t21 += v * b6;\n  t22 += v * b7;\n  t23 += v * b8;\n  t24 += v * b9;\n  t25 += v * b10;\n  t26 += v * b11;\n  t27 += v * b12;\n  t28 += v * b13;\n  t29 += v * b14;\n  t30 += v * b15;\n\n  t0  += 38 * t16;\n  t1  += 38 * t17;\n  t2  += 38 * t18;\n  t3  += 38 * t19;\n  t4  += 38 * t20;\n  t5  += 38 * t21;\n  t6  += 38 * t22;\n  t7  += 38 * t23;\n  t8  += 38 * t24;\n  t9  += 38 * t25;\n  t10 += 38 * t26;\n  t11 += 38 * t27;\n  t12 += 38 * t28;\n  t13 += 38 * t29;\n  t14 += 38 * t30;\n  // t15 left as is\n\n  // first car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  // second car\n  c = 1;\n  v =  t0 + c + 65535; c = Math.floor(v / 65536);  t0 = v - c * 65536;\n  v =  t1 + c + 65535; c = Math.floor(v / 65536);  t1 = v - c * 65536;\n  v =  t2 + c + 65535; c = Math.floor(v / 65536);  t2 = v - c * 65536;\n  v =  t3 + c + 65535; c = Math.floor(v / 65536);  t3 = v - c * 65536;\n  v =  t4 + c + 65535; c = Math.floor(v / 65536);  t4 = v - c * 65536;\n  v =  t5 + c + 65535; c = Math.floor(v / 65536);  t5 = v - c * 65536;\n  v =  t6 + c + 65535; c = Math.floor(v / 65536);  t6 = v - c * 65536;\n  v =  t7 + c + 65535; c = Math.floor(v / 65536);  t7 = v - c * 65536;\n  v =  t8 + c + 65535; c = Math.floor(v / 65536);  t8 = v - c * 65536;\n  v =  t9 + c + 65535; c = Math.floor(v / 65536);  t9 = v - c * 65536;\n  v = t10 + c + 65535; c = Math.floor(v / 65536); t10 = v - c * 65536;\n  v = t11 + c + 65535; c = Math.floor(v / 65536); t11 = v - c * 65536;\n  v = t12 + c + 65535; c = Math.floor(v / 65536); t12 = v - c * 65536;\n  v = t13 + c + 65535; c = Math.floor(v / 65536); t13 = v - c * 65536;\n  v = t14 + c + 65535; c = Math.floor(v / 65536); t14 = v - c * 65536;\n  v = t15 + c + 65535; c = Math.floor(v / 65536); t15 = v - c * 65536;\n  t0 += c-1 + 37 * (c-1);\n\n  o[ 0] = t0;\n  o[ 1] = t1;\n  o[ 2] = t2;\n  o[ 3] = t3;\n  o[ 4] = t4;\n  o[ 5] = t5;\n  o[ 6] = t6;\n  o[ 7] = t7;\n  o[ 8] = t8;\n  o[ 9] = t9;\n  o[10] = t10;\n  o[11] = t11;\n  o[12] = t12;\n  o[13] = t13;\n  o[14] = t14;\n  o[15] = t15;\n}\n\nfunction S(o, a) {\n  M(o, a, a);\n}\n\nfunction inv25519(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 253; a >= 0; a--) {\n    S(c, c);\n    if(a !== 2 && a !== 4) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction pow2523(o, i) {\n  var c = gf();\n  var a;\n  for (a = 0; a < 16; a++) c[a] = i[a];\n  for (a = 250; a >= 0; a--) {\n      S(c, c);\n      if(a !== 1) M(c, c, i);\n  }\n  for (a = 0; a < 16; a++) o[a] = c[a];\n}\n\nfunction crypto_scalarmult(q, n, p) {\n  var z = new Uint8Array(32);\n  var x = new Float64Array(80), r, i;\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf();\n  for (i = 0; i < 31; i++) z[i] = n[i];\n  z[31]=(n[31]&127)|64;\n  z[0]&=248;\n  unpack25519(x,p);\n  for (i = 0; i < 16; i++) {\n    b[i]=x[i];\n    d[i]=a[i]=c[i]=0;\n  }\n  a[0]=d[0]=1;\n  for (i=254; i>=0; --i) {\n    r=(z[i>>>3]>>>(i&7))&1;\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n    A(e,a,c);\n    Z(a,a,c);\n    A(c,b,d);\n    Z(b,b,d);\n    S(d,e);\n    S(f,a);\n    M(a,c,a);\n    M(c,b,e);\n    A(e,a,c);\n    Z(a,a,c);\n    S(b,a);\n    Z(c,d,f);\n    M(a,c,_121665);\n    A(a,a,d);\n    M(c,c,a);\n    M(a,d,f);\n    M(d,b,x);\n    S(b,e);\n    sel25519(a,b,r);\n    sel25519(c,d,r);\n  }\n  for (i = 0; i < 16; i++) {\n    x[i+16]=a[i];\n    x[i+32]=c[i];\n    x[i+48]=b[i];\n    x[i+64]=d[i];\n  }\n  var x32 = x.subarray(32);\n  var x16 = x.subarray(16);\n  inv25519(x32,x32);\n  M(x16,x16,x32);\n  pack25519(q,x16);\n  return 0;\n}\n\nfunction crypto_scalarmult_base(q, n) {\n  return crypto_scalarmult(q, n, _9);\n}\n\nfunction crypto_box_keypair(y, x) {\n  randombytes(x, 32);\n  return crypto_scalarmult_base(y, x);\n}\n\nfunction crypto_box_beforenm(k, y, x) {\n  var s = new Uint8Array(32);\n  crypto_scalarmult(s, x, y);\n  return crypto_core_hsalsa20(k, _0, s, sigma);\n}\n\nvar crypto_box_afternm = crypto_secretbox;\nvar crypto_box_open_afternm = crypto_secretbox_open;\n\nfunction crypto_box(c, m, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_afternm(c, m, d, n, k);\n}\n\nfunction crypto_box_open(m, c, d, n, y, x) {\n  var k = new Uint8Array(32);\n  crypto_box_beforenm(k, y, x);\n  return crypto_box_open_afternm(m, c, d, n, k);\n}\n\nvar K = [\n  0x428a2f98, 0xd728ae22, 0x71374491, 0x23ef65cd,\n  0xb5c0fbcf, 0xec4d3b2f, 0xe9b5dba5, 0x8189dbbc,\n  0x3956c25b, 0xf348b538, 0x59f111f1, 0xb605d019,\n  0x923f82a4, 0xaf194f9b, 0xab1c5ed5, 0xda6d8118,\n  0xd807aa98, 0xa3030242, 0x12835b01, 0x45706fbe,\n  0x243185be, 0x4ee4b28c, 0x550c7dc3, 0xd5ffb4e2,\n  0x72be5d74, 0xf27b896f, 0x80deb1fe, 0x3b1696b1,\n  0x9bdc06a7, 0x25c71235, 0xc19bf174, 0xcf692694,\n  0xe49b69c1, 0x9ef14ad2, 0xefbe4786, 0x384f25e3,\n  0x0fc19dc6, 0x8b8cd5b5, 0x240ca1cc, 0x77ac9c65,\n  0x2de92c6f, 0x592b0275, 0x4a7484aa, 0x6ea6e483,\n  0x5cb0a9dc, 0xbd41fbd4, 0x76f988da, 0x831153b5,\n  0x983e5152, 0xee66dfab, 0xa831c66d, 0x2db43210,\n  0xb00327c8, 0x98fb213f, 0xbf597fc7, 0xbeef0ee4,\n  0xc6e00bf3, 0x3da88fc2, 0xd5a79147, 0x930aa725,\n  0x06ca6351, 0xe003826f, 0x14292967, 0x0a0e6e70,\n  0x27b70a85, 0x46d22ffc, 0x2e1b2138, 0x5c26c926,\n  0x4d2c6dfc, 0x5ac42aed, 0x53380d13, 0x9d95b3df,\n  0x650a7354, 0x8baf63de, 0x766a0abb, 0x3c77b2a8,\n  0x81c2c92e, 0x47edaee6, 0x92722c85, 0x1482353b,\n  0xa2bfe8a1, 0x4cf10364, 0xa81a664b, 0xbc423001,\n  0xc24b8b70, 0xd0f89791, 0xc76c51a3, 0x0654be30,\n  0xd192e819, 0xd6ef5218, 0xd6990624, 0x5565a910,\n  0xf40e3585, 0x5771202a, 0x106aa070, 0x32bbd1b8,\n  0x19a4c116, 0xb8d2d0c8, 0x1e376c08, 0x5141ab53,\n  0x2748774c, 0xdf8eeb99, 0x34b0bcb5, 0xe19b48a8,\n  0x391c0cb3, 0xc5c95a63, 0x4ed8aa4a, 0xe3418acb,\n  0x5b9cca4f, 0x7763e373, 0x682e6ff3, 0xd6b2b8a3,\n  0x748f82ee, 0x5defb2fc, 0x78a5636f, 0x43172f60,\n  0x84c87814, 0xa1f0ab72, 0x8cc70208, 0x1a6439ec,\n  0x90befffa, 0x23631e28, 0xa4506ceb, 0xde82bde9,\n  0xbef9a3f7, 0xb2c67915, 0xc67178f2, 0xe372532b,\n  0xca273ece, 0xea26619c, 0xd186b8c7, 0x21c0c207,\n  0xeada7dd6, 0xcde0eb1e, 0xf57d4f7f, 0xee6ed178,\n  0x06f067aa, 0x72176fba, 0x0a637dc5, 0xa2c898a6,\n  0x113f9804, 0xbef90dae, 0x1b710b35, 0x131c471b,\n  0x28db77f5, 0x23047d84, 0x32caab7b, 0x40c72493,\n  0x3c9ebe0a, 0x15c9bebc, 0x431d67c4, 0x9c100d4c,\n  0x4cc5d4be, 0xcb3e42b6, 0x597f299c, 0xfc657e2a,\n  0x5fcb6fab, 0x3ad6faec, 0x6c44198c, 0x4a475817\n];\n\nfunction crypto_hashblocks_hl(hh, hl, m, n) {\n  var wh = new Int32Array(16), wl = new Int32Array(16),\n      bh0, bh1, bh2, bh3, bh4, bh5, bh6, bh7,\n      bl0, bl1, bl2, bl3, bl4, bl5, bl6, bl7,\n      th, tl, i, j, h, l, a, b, c, d;\n\n  var ah0 = hh[0],\n      ah1 = hh[1],\n      ah2 = hh[2],\n      ah3 = hh[3],\n      ah4 = hh[4],\n      ah5 = hh[5],\n      ah6 = hh[6],\n      ah7 = hh[7],\n\n      al0 = hl[0],\n      al1 = hl[1],\n      al2 = hl[2],\n      al3 = hl[3],\n      al4 = hl[4],\n      al5 = hl[5],\n      al6 = hl[6],\n      al7 = hl[7];\n\n  var pos = 0;\n  while (n >= 128) {\n    for (i = 0; i < 16; i++) {\n      j = 8 * i + pos;\n      wh[i] = (m[j+0] << 24) | (m[j+1] << 16) | (m[j+2] << 8) | m[j+3];\n      wl[i] = (m[j+4] << 24) | (m[j+5] << 16) | (m[j+6] << 8) | m[j+7];\n    }\n    for (i = 0; i < 80; i++) {\n      bh0 = ah0;\n      bh1 = ah1;\n      bh2 = ah2;\n      bh3 = ah3;\n      bh4 = ah4;\n      bh5 = ah5;\n      bh6 = ah6;\n      bh7 = ah7;\n\n      bl0 = al0;\n      bl1 = al1;\n      bl2 = al2;\n      bl3 = al3;\n      bl4 = al4;\n      bl5 = al5;\n      bl6 = al6;\n      bl7 = al7;\n\n      // add\n      h = ah7;\n      l = al7;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma1\n      h = ((ah4 >>> 14) | (al4 << (32-14))) ^ ((ah4 >>> 18) | (al4 << (32-18))) ^ ((al4 >>> (41-32)) | (ah4 << (32-(41-32))));\n      l = ((al4 >>> 14) | (ah4 << (32-14))) ^ ((al4 >>> 18) | (ah4 << (32-18))) ^ ((ah4 >>> (41-32)) | (al4 << (32-(41-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Ch\n      h = (ah4 & ah5) ^ (~ah4 & ah6);\n      l = (al4 & al5) ^ (~al4 & al6);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // K\n      h = K[i*2];\n      l = K[i*2+1];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // w\n      h = wh[i%16];\n      l = wl[i%16];\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      th = c & 0xffff | d << 16;\n      tl = a & 0xffff | b << 16;\n\n      // add\n      h = th;\n      l = tl;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      // Sigma0\n      h = ((ah0 >>> 28) | (al0 << (32-28))) ^ ((al0 >>> (34-32)) | (ah0 << (32-(34-32)))) ^ ((al0 >>> (39-32)) | (ah0 << (32-(39-32))));\n      l = ((al0 >>> 28) | (ah0 << (32-28))) ^ ((ah0 >>> (34-32)) | (al0 << (32-(34-32)))) ^ ((ah0 >>> (39-32)) | (al0 << (32-(39-32))));\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      // Maj\n      h = (ah0 & ah1) ^ (ah0 & ah2) ^ (ah1 & ah2);\n      l = (al0 & al1) ^ (al0 & al2) ^ (al1 & al2);\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh7 = (c & 0xffff) | (d << 16);\n      bl7 = (a & 0xffff) | (b << 16);\n\n      // add\n      h = bh3;\n      l = bl3;\n\n      a = l & 0xffff; b = l >>> 16;\n      c = h & 0xffff; d = h >>> 16;\n\n      h = th;\n      l = tl;\n\n      a += l & 0xffff; b += l >>> 16;\n      c += h & 0xffff; d += h >>> 16;\n\n      b += a >>> 16;\n      c += b >>> 16;\n      d += c >>> 16;\n\n      bh3 = (c & 0xffff) | (d << 16);\n      bl3 = (a & 0xffff) | (b << 16);\n\n      ah1 = bh0;\n      ah2 = bh1;\n      ah3 = bh2;\n      ah4 = bh3;\n      ah5 = bh4;\n      ah6 = bh5;\n      ah7 = bh6;\n      ah0 = bh7;\n\n      al1 = bl0;\n      al2 = bl1;\n      al3 = bl2;\n      al4 = bl3;\n      al5 = bl4;\n      al6 = bl5;\n      al7 = bl6;\n      al0 = bl7;\n\n      if (i%16 === 15) {\n        for (j = 0; j < 16; j++) {\n          // add\n          h = wh[j];\n          l = wl[j];\n\n          a = l & 0xffff; b = l >>> 16;\n          c = h & 0xffff; d = h >>> 16;\n\n          h = wh[(j+9)%16];\n          l = wl[(j+9)%16];\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma0\n          th = wh[(j+1)%16];\n          tl = wl[(j+1)%16];\n          h = ((th >>> 1) | (tl << (32-1))) ^ ((th >>> 8) | (tl << (32-8))) ^ (th >>> 7);\n          l = ((tl >>> 1) | (th << (32-1))) ^ ((tl >>> 8) | (th << (32-8))) ^ ((tl >>> 7) | (th << (32-7)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          // sigma1\n          th = wh[(j+14)%16];\n          tl = wl[(j+14)%16];\n          h = ((th >>> 19) | (tl << (32-19))) ^ ((tl >>> (61-32)) | (th << (32-(61-32)))) ^ (th >>> 6);\n          l = ((tl >>> 19) | (th << (32-19))) ^ ((th >>> (61-32)) | (tl << (32-(61-32)))) ^ ((tl >>> 6) | (th << (32-6)));\n\n          a += l & 0xffff; b += l >>> 16;\n          c += h & 0xffff; d += h >>> 16;\n\n          b += a >>> 16;\n          c += b >>> 16;\n          d += c >>> 16;\n\n          wh[j] = (c & 0xffff) | (d << 16);\n          wl[j] = (a & 0xffff) | (b << 16);\n        }\n      }\n    }\n\n    // add\n    h = ah0;\n    l = al0;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[0];\n    l = hl[0];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[0] = ah0 = (c & 0xffff) | (d << 16);\n    hl[0] = al0 = (a & 0xffff) | (b << 16);\n\n    h = ah1;\n    l = al1;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[1];\n    l = hl[1];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[1] = ah1 = (c & 0xffff) | (d << 16);\n    hl[1] = al1 = (a & 0xffff) | (b << 16);\n\n    h = ah2;\n    l = al2;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[2];\n    l = hl[2];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[2] = ah2 = (c & 0xffff) | (d << 16);\n    hl[2] = al2 = (a & 0xffff) | (b << 16);\n\n    h = ah3;\n    l = al3;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[3];\n    l = hl[3];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[3] = ah3 = (c & 0xffff) | (d << 16);\n    hl[3] = al3 = (a & 0xffff) | (b << 16);\n\n    h = ah4;\n    l = al4;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[4];\n    l = hl[4];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[4] = ah4 = (c & 0xffff) | (d << 16);\n    hl[4] = al4 = (a & 0xffff) | (b << 16);\n\n    h = ah5;\n    l = al5;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[5];\n    l = hl[5];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[5] = ah5 = (c & 0xffff) | (d << 16);\n    hl[5] = al5 = (a & 0xffff) | (b << 16);\n\n    h = ah6;\n    l = al6;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[6];\n    l = hl[6];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[6] = ah6 = (c & 0xffff) | (d << 16);\n    hl[6] = al6 = (a & 0xffff) | (b << 16);\n\n    h = ah7;\n    l = al7;\n\n    a = l & 0xffff; b = l >>> 16;\n    c = h & 0xffff; d = h >>> 16;\n\n    h = hh[7];\n    l = hl[7];\n\n    a += l & 0xffff; b += l >>> 16;\n    c += h & 0xffff; d += h >>> 16;\n\n    b += a >>> 16;\n    c += b >>> 16;\n    d += c >>> 16;\n\n    hh[7] = ah7 = (c & 0xffff) | (d << 16);\n    hl[7] = al7 = (a & 0xffff) | (b << 16);\n\n    pos += 128;\n    n -= 128;\n  }\n\n  return n;\n}\n\nfunction crypto_hash(out, m, n) {\n  var hh = new Int32Array(8),\n      hl = new Int32Array(8),\n      x = new Uint8Array(256),\n      i, b = n;\n\n  hh[0] = 0x6a09e667;\n  hh[1] = 0xbb67ae85;\n  hh[2] = 0x3c6ef372;\n  hh[3] = 0xa54ff53a;\n  hh[4] = 0x510e527f;\n  hh[5] = 0x9b05688c;\n  hh[6] = 0x1f83d9ab;\n  hh[7] = 0x5be0cd19;\n\n  hl[0] = 0xf3bcc908;\n  hl[1] = 0x84caa73b;\n  hl[2] = 0xfe94f82b;\n  hl[3] = 0x5f1d36f1;\n  hl[4] = 0xade682d1;\n  hl[5] = 0x2b3e6c1f;\n  hl[6] = 0xfb41bd6b;\n  hl[7] = 0x137e2179;\n\n  crypto_hashblocks_hl(hh, hl, m, n);\n  n %= 128;\n\n  for (i = 0; i < n; i++) x[i] = m[b-n+i];\n  x[n] = 128;\n\n  n = 256-128*(n<112?1:0);\n  x[n-9] = 0;\n  ts64(x, n-8,  (b / 0x20000000) | 0, b << 3);\n  crypto_hashblocks_hl(hh, hl, x, n);\n\n  for (i = 0; i < 8; i++) ts64(out, 8*i, hh[i], hl[i]);\n\n  return 0;\n}\n\nfunction add(p, q) {\n  var a = gf(), b = gf(), c = gf(),\n      d = gf(), e = gf(), f = gf(),\n      g = gf(), h = gf(), t = gf();\n\n  Z(a, p[1], p[0]);\n  Z(t, q[1], q[0]);\n  M(a, a, t);\n  A(b, p[0], p[1]);\n  A(t, q[0], q[1]);\n  M(b, b, t);\n  M(c, p[3], q[3]);\n  M(c, c, D2);\n  M(d, p[2], q[2]);\n  A(d, d, d);\n  Z(e, b, a);\n  Z(f, d, c);\n  A(g, d, c);\n  A(h, b, a);\n\n  M(p[0], e, f);\n  M(p[1], h, g);\n  M(p[2], g, f);\n  M(p[3], e, h);\n}\n\nfunction cswap(p, q, b) {\n  var i;\n  for (i = 0; i < 4; i++) {\n    sel25519(p[i], q[i], b);\n  }\n}\n\nfunction pack(r, p) {\n  var tx = gf(), ty = gf(), zi = gf();\n  inv25519(zi, p[2]);\n  M(tx, p[0], zi);\n  M(ty, p[1], zi);\n  pack25519(r, ty);\n  r[31] ^= par25519(tx) << 7;\n}\n\nfunction scalarmult(p, q, s) {\n  var b, i;\n  set25519(p[0], gf0);\n  set25519(p[1], gf1);\n  set25519(p[2], gf1);\n  set25519(p[3], gf0);\n  for (i = 255; i >= 0; --i) {\n    b = (s[(i/8)|0] >> (i&7)) & 1;\n    cswap(p, q, b);\n    add(q, p);\n    add(p, p);\n    cswap(p, q, b);\n  }\n}\n\nfunction scalarbase(p, s) {\n  var q = [gf(), gf(), gf(), gf()];\n  set25519(q[0], X);\n  set25519(q[1], Y);\n  set25519(q[2], gf1);\n  M(q[3], X, Y);\n  scalarmult(p, q, s);\n}\n\nfunction crypto_sign_keypair(pk, sk, seeded) {\n  var d = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n  var i;\n\n  if (!seeded) randombytes(sk, 32);\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  scalarbase(p, d);\n  pack(pk, p);\n\n  for (i = 0; i < 32; i++) sk[i+32] = pk[i];\n  return 0;\n}\n\nvar L = new Float64Array([0xed, 0xd3, 0xf5, 0x5c, 0x1a, 0x63, 0x12, 0x58, 0xd6, 0x9c, 0xf7, 0xa2, 0xde, 0xf9, 0xde, 0x14, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x10]);\n\nfunction modL(r, x) {\n  var carry, i, j, k;\n  for (i = 63; i >= 32; --i) {\n    carry = 0;\n    for (j = i - 32, k = i - 12; j < k; ++j) {\n      x[j] += carry - 16 * x[i] * L[j - (i - 32)];\n      carry = Math.floor((x[j] + 128) / 256);\n      x[j] -= carry * 256;\n    }\n    x[j] += carry;\n    x[i] = 0;\n  }\n  carry = 0;\n  for (j = 0; j < 32; j++) {\n    x[j] += carry - (x[31] >> 4) * L[j];\n    carry = x[j] >> 8;\n    x[j] &= 255;\n  }\n  for (j = 0; j < 32; j++) x[j] -= carry * L[j];\n  for (i = 0; i < 32; i++) {\n    x[i+1] += x[i] >> 8;\n    r[i] = x[i] & 255;\n  }\n}\n\nfunction reduce(r) {\n  var x = new Float64Array(64), i;\n  for (i = 0; i < 64; i++) x[i] = r[i];\n  for (i = 0; i < 64; i++) r[i] = 0;\n  modL(r, x);\n}\n\n// Note: difference from C - smlen returned, not passed as argument.\nfunction crypto_sign(sm, m, n, sk) {\n  var d = new Uint8Array(64), h = new Uint8Array(64), r = new Uint8Array(64);\n  var i, j, x = new Float64Array(64);\n  var p = [gf(), gf(), gf(), gf()];\n\n  crypto_hash(d, sk, 32);\n  d[0] &= 248;\n  d[31] &= 127;\n  d[31] |= 64;\n\n  var smlen = n + 64;\n  for (i = 0; i < n; i++) sm[64 + i] = m[i];\n  for (i = 0; i < 32; i++) sm[32 + i] = d[32 + i];\n\n  crypto_hash(r, sm.subarray(32), n+32);\n  reduce(r);\n  scalarbase(p, r);\n  pack(sm, p);\n\n  for (i = 32; i < 64; i++) sm[i] = sk[i];\n  crypto_hash(h, sm, n + 64);\n  reduce(h);\n\n  for (i = 0; i < 64; i++) x[i] = 0;\n  for (i = 0; i < 32; i++) x[i] = r[i];\n  for (i = 0; i < 32; i++) {\n    for (j = 0; j < 32; j++) {\n      x[i+j] += h[i] * d[j];\n    }\n  }\n\n  modL(sm.subarray(32), x);\n  return smlen;\n}\n\nfunction unpackneg(r, p) {\n  var t = gf(), chk = gf(), num = gf(),\n      den = gf(), den2 = gf(), den4 = gf(),\n      den6 = gf();\n\n  set25519(r[2], gf1);\n  unpack25519(r[1], p);\n  S(num, r[1]);\n  M(den, num, D);\n  Z(num, num, r[2]);\n  A(den, r[2], den);\n\n  S(den2, den);\n  S(den4, den2);\n  M(den6, den4, den2);\n  M(t, den6, num);\n  M(t, t, den);\n\n  pow2523(t, t);\n  M(t, t, num);\n  M(t, t, den);\n  M(t, t, den);\n  M(r[0], t, den);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) M(r[0], r[0], I);\n\n  S(chk, r[0]);\n  M(chk, chk, den);\n  if (neq25519(chk, num)) return -1;\n\n  if (par25519(r[0]) === (p[31]>>7)) Z(r[0], gf0, r[0]);\n\n  M(r[3], r[0], r[1]);\n  return 0;\n}\n\nfunction crypto_sign_open(m, sm, n, pk) {\n  var i;\n  var t = new Uint8Array(32), h = new Uint8Array(64);\n  var p = [gf(), gf(), gf(), gf()],\n      q = [gf(), gf(), gf(), gf()];\n\n  if (n < 64) return -1;\n\n  if (unpackneg(q, pk)) return -1;\n\n  for (i = 0; i < n; i++) m[i] = sm[i];\n  for (i = 0; i < 32; i++) m[i+32] = pk[i];\n  crypto_hash(h, m, n);\n  reduce(h);\n  scalarmult(p, q, h);\n\n  scalarbase(q, sm.subarray(32));\n  add(p, q);\n  pack(t, p);\n\n  n -= 64;\n  if (crypto_verify_32(sm, 0, t, 0)) {\n    for (i = 0; i < n; i++) m[i] = 0;\n    return -1;\n  }\n\n  for (i = 0; i < n; i++) m[i] = sm[i + 64];\n  return n;\n}\n\nvar crypto_secretbox_KEYBYTES = 32,\n    crypto_secretbox_NONCEBYTES = 24,\n    crypto_secretbox_ZEROBYTES = 32,\n    crypto_secretbox_BOXZEROBYTES = 16,\n    crypto_scalarmult_BYTES = 32,\n    crypto_scalarmult_SCALARBYTES = 32,\n    crypto_box_PUBLICKEYBYTES = 32,\n    crypto_box_SECRETKEYBYTES = 32,\n    crypto_box_BEFORENMBYTES = 32,\n    crypto_box_NONCEBYTES = crypto_secretbox_NONCEBYTES,\n    crypto_box_ZEROBYTES = crypto_secretbox_ZEROBYTES,\n    crypto_box_BOXZEROBYTES = crypto_secretbox_BOXZEROBYTES,\n    crypto_sign_BYTES = 64,\n    crypto_sign_PUBLICKEYBYTES = 32,\n    crypto_sign_SECRETKEYBYTES = 64,\n    crypto_sign_SEEDBYTES = 32,\n    crypto_hash_BYTES = 64;\n\nnacl.lowlevel = {\n  crypto_core_hsalsa20: crypto_core_hsalsa20,\n  crypto_stream_xor: crypto_stream_xor,\n  crypto_stream: crypto_stream,\n  crypto_stream_salsa20_xor: crypto_stream_salsa20_xor,\n  crypto_stream_salsa20: crypto_stream_salsa20,\n  crypto_onetimeauth: crypto_onetimeauth,\n  crypto_onetimeauth_verify: crypto_onetimeauth_verify,\n  crypto_verify_16: crypto_verify_16,\n  crypto_verify_32: crypto_verify_32,\n  crypto_secretbox: crypto_secretbox,\n  crypto_secretbox_open: crypto_secretbox_open,\n  crypto_scalarmult: crypto_scalarmult,\n  crypto_scalarmult_base: crypto_scalarmult_base,\n  crypto_box_beforenm: crypto_box_beforenm,\n  crypto_box_afternm: crypto_box_afternm,\n  crypto_box: crypto_box,\n  crypto_box_open: crypto_box_open,\n  crypto_box_keypair: crypto_box_keypair,\n  crypto_hash: crypto_hash,\n  crypto_sign: crypto_sign,\n  crypto_sign_keypair: crypto_sign_keypair,\n  crypto_sign_open: crypto_sign_open,\n\n  crypto_secretbox_KEYBYTES: crypto_secretbox_KEYBYTES,\n  crypto_secretbox_NONCEBYTES: crypto_secretbox_NONCEBYTES,\n  crypto_secretbox_ZEROBYTES: crypto_secretbox_ZEROBYTES,\n  crypto_secretbox_BOXZEROBYTES: crypto_secretbox_BOXZEROBYTES,\n  crypto_scalarmult_BYTES: crypto_scalarmult_BYTES,\n  crypto_scalarmult_SCALARBYTES: crypto_scalarmult_SCALARBYTES,\n  crypto_box_PUBLICKEYBYTES: crypto_box_PUBLICKEYBYTES,\n  crypto_box_SECRETKEYBYTES: crypto_box_SECRETKEYBYTES,\n  crypto_box_BEFORENMBYTES: crypto_box_BEFORENMBYTES,\n  crypto_box_NONCEBYTES: crypto_box_NONCEBYTES,\n  crypto_box_ZEROBYTES: crypto_box_ZEROBYTES,\n  crypto_box_BOXZEROBYTES: crypto_box_BOXZEROBYTES,\n  crypto_sign_BYTES: crypto_sign_BYTES,\n  crypto_sign_PUBLICKEYBYTES: crypto_sign_PUBLICKEYBYTES,\n  crypto_sign_SECRETKEYBYTES: crypto_sign_SECRETKEYBYTES,\n  crypto_sign_SEEDBYTES: crypto_sign_SEEDBYTES,\n  crypto_hash_BYTES: crypto_hash_BYTES,\n\n  gf: gf,\n  D: D,\n  L: L,\n  pack25519: pack25519,\n  unpack25519: unpack25519,\n  M: M,\n  A: A,\n  S: S,\n  Z: Z,\n  pow2523: pow2523,\n  add: add,\n  set25519: set25519,\n  modL: modL,\n  scalarmult: scalarmult,\n  scalarbase: scalarbase,\n};\n\n/* High-level API */\n\nfunction checkLengths(k, n) {\n  if (k.length !== crypto_secretbox_KEYBYTES) throw new Error('bad key size');\n  if (n.length !== crypto_secretbox_NONCEBYTES) throw new Error('bad nonce size');\n}\n\nfunction checkBoxLengths(pk, sk) {\n  if (pk.length !== crypto_box_PUBLICKEYBYTES) throw new Error('bad public key size');\n  if (sk.length !== crypto_box_SECRETKEYBYTES) throw new Error('bad secret key size');\n}\n\nfunction checkArrayTypes() {\n  for (var i = 0; i < arguments.length; i++) {\n    if (!(arguments[i] instanceof Uint8Array))\n      throw new TypeError('unexpected type, use Uint8Array');\n  }\n}\n\nfunction cleanup(arr) {\n  for (var i = 0; i < arr.length; i++) arr[i] = 0;\n}\n\nnacl.randomBytes = function(n) {\n  var b = new Uint8Array(n);\n  randombytes(b, n);\n  return b;\n};\n\nnacl.secretbox = function(msg, nonce, key) {\n  checkArrayTypes(msg, nonce, key);\n  checkLengths(key, nonce);\n  var m = new Uint8Array(crypto_secretbox_ZEROBYTES + msg.length);\n  var c = new Uint8Array(m.length);\n  for (var i = 0; i < msg.length; i++) m[i+crypto_secretbox_ZEROBYTES] = msg[i];\n  crypto_secretbox(c, m, m.length, nonce, key);\n  return c.subarray(crypto_secretbox_BOXZEROBYTES);\n};\n\nnacl.secretbox.open = function(box, nonce, key) {\n  checkArrayTypes(box, nonce, key);\n  checkLengths(key, nonce);\n  var c = new Uint8Array(crypto_secretbox_BOXZEROBYTES + box.length);\n  var m = new Uint8Array(c.length);\n  for (var i = 0; i < box.length; i++) c[i+crypto_secretbox_BOXZEROBYTES] = box[i];\n  if (c.length < 32) return null;\n  if (crypto_secretbox_open(m, c, c.length, nonce, key) !== 0) return null;\n  return m.subarray(crypto_secretbox_ZEROBYTES);\n};\n\nnacl.secretbox.keyLength = crypto_secretbox_KEYBYTES;\nnacl.secretbox.nonceLength = crypto_secretbox_NONCEBYTES;\nnacl.secretbox.overheadLength = crypto_secretbox_BOXZEROBYTES;\n\nnacl.scalarMult = function(n, p) {\n  checkArrayTypes(n, p);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  if (p.length !== crypto_scalarmult_BYTES) throw new Error('bad p size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult(q, n, p);\n  return q;\n};\n\nnacl.scalarMult.base = function(n) {\n  checkArrayTypes(n);\n  if (n.length !== crypto_scalarmult_SCALARBYTES) throw new Error('bad n size');\n  var q = new Uint8Array(crypto_scalarmult_BYTES);\n  crypto_scalarmult_base(q, n);\n  return q;\n};\n\nnacl.scalarMult.scalarLength = crypto_scalarmult_SCALARBYTES;\nnacl.scalarMult.groupElementLength = crypto_scalarmult_BYTES;\n\nnacl.box = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox(msg, nonce, k);\n};\n\nnacl.box.before = function(publicKey, secretKey) {\n  checkArrayTypes(publicKey, secretKey);\n  checkBoxLengths(publicKey, secretKey);\n  var k = new Uint8Array(crypto_box_BEFORENMBYTES);\n  crypto_box_beforenm(k, publicKey, secretKey);\n  return k;\n};\n\nnacl.box.after = nacl.secretbox;\n\nnacl.box.open = function(msg, nonce, publicKey, secretKey) {\n  var k = nacl.box.before(publicKey, secretKey);\n  return nacl.secretbox.open(msg, nonce, k);\n};\n\nnacl.box.open.after = nacl.secretbox.open;\n\nnacl.box.keyPair = function() {\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_box_SECRETKEYBYTES);\n  crypto_box_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.box.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_box_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_box_PUBLICKEYBYTES);\n  crypto_scalarmult_base(pk, secretKey);\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.box.publicKeyLength = crypto_box_PUBLICKEYBYTES;\nnacl.box.secretKeyLength = crypto_box_SECRETKEYBYTES;\nnacl.box.sharedKeyLength = crypto_box_BEFORENMBYTES;\nnacl.box.nonceLength = crypto_box_NONCEBYTES;\nnacl.box.overheadLength = nacl.secretbox.overheadLength;\n\nnacl.sign = function(msg, secretKey) {\n  checkArrayTypes(msg, secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var signedMsg = new Uint8Array(crypto_sign_BYTES+msg.length);\n  crypto_sign(signedMsg, msg, msg.length, secretKey);\n  return signedMsg;\n};\n\nnacl.sign.open = function(signedMsg, publicKey) {\n  checkArrayTypes(signedMsg, publicKey);\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var tmp = new Uint8Array(signedMsg.length);\n  var mlen = crypto_sign_open(tmp, signedMsg, signedMsg.length, publicKey);\n  if (mlen < 0) return null;\n  var m = new Uint8Array(mlen);\n  for (var i = 0; i < m.length; i++) m[i] = tmp[i];\n  return m;\n};\n\nnacl.sign.detached = function(msg, secretKey) {\n  var signedMsg = nacl.sign(msg, secretKey);\n  var sig = new Uint8Array(crypto_sign_BYTES);\n  for (var i = 0; i < sig.length; i++) sig[i] = signedMsg[i];\n  return sig;\n};\n\nnacl.sign.detached.verify = function(msg, sig, publicKey) {\n  checkArrayTypes(msg, sig, publicKey);\n  if (sig.length !== crypto_sign_BYTES)\n    throw new Error('bad signature size');\n  if (publicKey.length !== crypto_sign_PUBLICKEYBYTES)\n    throw new Error('bad public key size');\n  var sm = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var m = new Uint8Array(crypto_sign_BYTES + msg.length);\n  var i;\n  for (i = 0; i < crypto_sign_BYTES; i++) sm[i] = sig[i];\n  for (i = 0; i < msg.length; i++) sm[i+crypto_sign_BYTES] = msg[i];\n  return (crypto_sign_open(m, sm, sm.length, publicKey) >= 0);\n};\n\nnacl.sign.keyPair = function() {\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  crypto_sign_keypair(pk, sk);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.keyPair.fromSecretKey = function(secretKey) {\n  checkArrayTypes(secretKey);\n  if (secretKey.length !== crypto_sign_SECRETKEYBYTES)\n    throw new Error('bad secret key size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  for (var i = 0; i < pk.length; i++) pk[i] = secretKey[32+i];\n  return {publicKey: pk, secretKey: new Uint8Array(secretKey)};\n};\n\nnacl.sign.keyPair.fromSeed = function(seed) {\n  checkArrayTypes(seed);\n  if (seed.length !== crypto_sign_SEEDBYTES)\n    throw new Error('bad seed size');\n  var pk = new Uint8Array(crypto_sign_PUBLICKEYBYTES);\n  var sk = new Uint8Array(crypto_sign_SECRETKEYBYTES);\n  for (var i = 0; i < 32; i++) sk[i] = seed[i];\n  crypto_sign_keypair(pk, sk, true);\n  return {publicKey: pk, secretKey: sk};\n};\n\nnacl.sign.publicKeyLength = crypto_sign_PUBLICKEYBYTES;\nnacl.sign.secretKeyLength = crypto_sign_SECRETKEYBYTES;\nnacl.sign.seedLength = crypto_sign_SEEDBYTES;\nnacl.sign.signatureLength = crypto_sign_BYTES;\n\nnacl.hash = function(msg) {\n  checkArrayTypes(msg);\n  var h = new Uint8Array(crypto_hash_BYTES);\n  crypto_hash(h, msg, msg.length);\n  return h;\n};\n\nnacl.hash.hashLength = crypto_hash_BYTES;\n\nnacl.verify = function(x, y) {\n  checkArrayTypes(x, y);\n  // Zero length arguments are considered not equal.\n  if (x.length === 0 || y.length === 0) return false;\n  if (x.length !== y.length) return false;\n  return (vn(x, 0, y, 0, x.length) === 0) ? true : false;\n};\n\nnacl.setPRNG = function(fn) {\n  randombytes = fn;\n};\n\n(function() {\n  // Initialize PRNG if environment provides CSPRNG.\n  // If not, methods calling randombytes will throw.\n  var crypto = typeof self !== 'undefined' ? (self.crypto || self.msCrypto) : null;\n  if (crypto && crypto.getRandomValues) {\n    // Browsers.\n    var QUOTA = 65536;\n    nacl.setPRNG(function(x, n) {\n      var i, v = new Uint8Array(n);\n      for (i = 0; i < n; i += QUOTA) {\n        crypto.getRandomValues(v.subarray(i, i + Math.min(n - i, QUOTA)));\n      }\n      for (i = 0; i < n; i++) x[i] = v[i];\n      cleanup(v);\n    });\n  } else if (typeof require !== 'undefined') {\n    // Node.js.\n    crypto = require('crypto');\n    if (crypto && crypto.randomBytes) {\n      nacl.setPRNG(function(x, n) {\n        var i, v = crypto.randomBytes(n);\n        for (i = 0; i < n; i++) x[i] = v[i];\n        cleanup(v);\n      });\n    }\n  }\n})();\n\n})(typeof module !== 'undefined' && module.exports ? module.exports : (self.nacl = self.nacl || {}));\n"],"names":["Object","defineProperty","exports","value","DEFAULT_INTERDAO_IDL","DEFAULT_INTERDAO_PROGRAM_ID","DEFAULT_RPC_ENDPOINT","inter_dao_1","require","IDL","__awaiter","this","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","e","rejected","result","done","then","apply","anchor_1","constant_1","types_1","utils_1","constructor","wallet","rpcEndpoint","programId","addListener","eventName","callback","program","addEventListener","data","removeListener","listenerId","removeEventListener","er","console","warn","parseDaoData","coder","accounts","decode","getDaoData","daoAddress","account","dao","fetch","parseProposalData","getProposalData","proposalAddress","proposal","parseReceiptData","getReceiptData","receiptAddress","receipt","deriveProposalAddress","proposalIndex","strict","isAddress","Error","isNeg","findProposal","BN","web3","PublicKey","toBase58","onchainDaoAddress","onchainIndex","index","eq","deriveReceiptAddress","receiptIndex","findReceipt","_provider","publicKey","onchainAuthorityAddress","onchainProposalAddress","authority","findAvailableReceiptIndex","authorityAddress","one","add","deriveTreasurerAddress","proposalPublicKey","treasurerPublicKey","findProgramAddress","Buffer","from","toBuffer","deriveMasterAddress","daoPublicKey","masterPublicKey","initializeDao","tokenAddress","tokenSupply","Keypair","generate","daoMechanism","DaoMechanisms","Dictatorial","gt","masterAddress","tokenPublicKey","txId","rpc","master","mint","systemProgram","SystemProgram","rent","SYSVAR_RENT_PUBKEY","signers","initializeProposal","invokedProgramAddress","pubkeys","prevIsSigners","prevIsWritables","nextIsSigners","nextIsWritables","startDate","endDate","consensusMechanism","ConsensusMechanisms","StakedTokenCounter","consensusQuorum","ConsensusQuorums","Half","length","currentTime","Math","ceil","Number","Date","nonce","invokedProgramPublicKey","caller","invokedProgram","executeProposal","remainingAccounts","map","pubkey","prevIsSigner","prevIsWritable","isSigner","isWritable","voteFor","amount","isZero","mintPublicKey","authorityPublicKey","srcPublicKey","utils","token","associatedAddress","owner","receiptPublicKey","treasurerAddress","treasuryPublicKey","src","treasurer","treasury","tokenProgram","TOKEN_PROGRAM_ID","associatedTokenProgram","ASSOCIATED_PROGRAM_ID","voteAgainst","close","dstPublicKey","dst","updateDaoSupply","supply","updateSupply","updateDaoMechanism","transferAuthority","newAuthority","_connection","Connection","Provider","skipPreflight","commitment","Program","events","idl","name","__createBinding","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","__exportStar","p","prototype","hasOwnProperty","call","__importDefault","mod","core_1","default","dictatorial","Democratic","democratic","Autonomous","autonomous","stakedTokenCounter","LockedTokenCounter","lockedTokenCounter","OneThird","oneThird","half","TwoThird","twoThird","address","zero$1","buf","len","LITERALS$1","L_CODES$1","D_CODES$1","MAX_BITS$1","extra_lbits","Uint8Array","extra_dbits","extra_blbits","bl_order","static_ltree","Array","static_dtree","_dist_code","_length_code","MAX_MATCH$1","base_length","base_dist","StaticTreeDesc","static_tree","extra_bits","extra_base","elems","max_length","has_stree","static_l_desc","static_d_desc","static_bl_desc","TreeDesc","dyn_tree","stat_desc","max_code","d_code","dist","put_short","s","w","pending_buf","pending","send_bits","bi_valid","bi_buf","send_code","c","tree","bi_reverse","code","res","gen_codes","bl_count","next_code","bits","n","init_block","dyn_ltree","dyn_dtree","bl_tree","END_BLOCK","opt_len","static_len","last_lit","matches","bi_windup","smaller","depth","_n2","_m2","pqdownheap","v","heap","j","heap_len","compress_block","ltree","dtree","lc","extra","lx","d_buf","l_buf","build_tree","stree","node","heap_max","base","h","xbits","f","overflow","gen_bitlen","scan_tree","curlen","prevlen","nextlen","count","max_count","min_count","REP_3_6","REPZ_3_10","REPZ_11_138","send_tree","static_init_done","_tr_stored_block$1","stored_len","last","header","set","window","subarray","copy_block","_tr_flush_block_1","opt_lenb","static_lenb","max_blindex","level","strm","data_type","black_mask","detect_data_type","l_desc","d_desc","bl_desc","BL_CODES$1","build_bl_tree","strategy","lcodes","dcodes","blcodes","rank","send_all_trees","trees","_tr_init","LENGTH_CODES$1","tr_static_init","_tr_stored_block","_tr_flush_block","_tr_tally","lit_bufsize","_tr_align","STATIC_TREES","bi_flush","adler32_1","adler","pos","s1","s2","crcTable","Uint32Array","table","makeTable","crc32_1","crc","t","end","i","messages","constants$2","Z_NO_FLUSH","Z_PARTIAL_FLUSH","Z_SYNC_FLUSH","Z_FULL_FLUSH","Z_FINISH","Z_BLOCK","Z_TREES","Z_OK","Z_STREAM_END","Z_NEED_DICT","Z_ERRNO","Z_STREAM_ERROR","Z_DATA_ERROR","Z_MEM_ERROR","Z_BUF_ERROR","Z_NO_COMPRESSION","Z_BEST_SPEED","Z_BEST_COMPRESSION","Z_DEFAULT_COMPRESSION","Z_FILTERED","Z_HUFFMAN_ONLY","Z_RLE","Z_FIXED","Z_DEFAULT_STRATEGY","Z_BINARY","Z_TEXT","Z_UNKNOWN","Z_DEFLATED","Z_NO_FLUSH$2","Z_FULL_FLUSH$1","Z_FINISH$3","Z_BLOCK$1","Z_OK$3","Z_STREAM_END$3","Z_STREAM_ERROR$2","Z_DATA_ERROR$2","Z_BUF_ERROR$1","Z_DEFAULT_COMPRESSION$1","Z_DEFAULT_STRATEGY$1","Z_DEFLATED$2","MAX_MATCH","MIN_LOOKAHEAD","HCRC_STATE","BUSY_STATE","FINISH_STATE","err","errorCode","msg","zero","HASH","prev","hash_shift","hash_mask","flush_pending","state","avail_out","output","pending_out","next_out","total_out","flush_block_only","block_start","strstart","put_byte","b","putShortMSB","read_buf","start","size","avail_in","input","next_in","wrap","total_in","longest_match","cur_match","match","chain_length","max_chain_length","scan","best_len","prev_length","nice_match","limit","w_size","_win","wmask","w_mask","strend","scan_end1","scan_end","good_match","lookahead","match_start","fill_window","_w_size","more","str","window_size","hash_size","head","insert","ins_h","deflate_fast","flush","hash_head","bflush","match_length","max_lazy_match","MIN_MATCH","deflate_slow","max_insert","prev_match","match_available","Config","good_length","max_lazy","nice_length","max_chain","func","configuration_table","max_block_size","pending_buf_size","max_start","DeflateState","status","gzhead","gzindex","method","last_flush","w_bits","hash_bits","Uint16Array","HEAP_SIZE","MAX_BITS","deflateResetKeep","deflateReset","ret","deflateInit2","windowBits","memLevel","deflate_1$2","deflateInit","deflateSetHeader","deflate","beg","val","old_flush","text","hcrc","comment","time","os","level_flags","charCodeAt","bstate","deflate_huff","deflate_rle","deflateEnd","deflateSetDictionary","dictionary","dictLength","tmpDict","avail","deflateInfo","_has","obj","key","common","sources","slice","arguments","source","shift","TypeError","chunks","l","chunk","STR_APPLY_UIA_OK","String","fromCharCode","__","_utf8len","q","strings","TextEncoder","encode","c2","m_pos","str_len","buf_len","max","TextDecoder","out","utf16buf","c_len","buf2binstring","zstream","toString$1","toString","Z_NO_FLUSH$1","Z_FINISH$2","Z_OK$2","Z_STREAM_END$2","Z_DEFLATED$1","Deflate$1","options","chunkSize","opt","raw","gzip","ended","dict","_dict_set","deflate$1","deflator","push","flush_mode","_flush_mode","onData","onEnd","deflate_1$1","Deflate","deflateRaw","constants","inffast","_in","_out","dmax","wsize","whave","wnext","s_window","hold","lcode","dcode","lmask","dmask","here","op","from_source","lencode","distcode","lenbits","distbits","top","dolen","mode","dodist","sane","MAXBITS","lbase","lext","dbase","dext","inftrees","type","lens","lens_index","codes","table_index","work","opts","incr","fill","low","mask","sym","min","root","curr","drop","left","used","huff","base_index","offs","here_bits","here_op","here_val","extra_index","Z_FINISH$1","Z_OK$1","Z_STREAM_END$1","Z_NEED_DICT$1","Z_STREAM_ERROR$1","Z_DATA_ERROR$1","Z_MEM_ERROR$1","TYPE","BAD","zswap32","InflateState","havedict","flags","check","total","wbits","offset","ncode","nlen","ndist","have","lendyn","distdyn","back","was","inflateResetKeep","Int32Array","inflateReset","inflateReset2","inflateInit2","lenfix","distfix","virgin","fixedtables","updatewindow","copy","inflate_1$2","inflateInit","inflate","put","last_bits","last_op","last_val","hbuf","order","inf_leave","xflags","extra_len","inflateEnd","inflateGetHeader","inflateSetDictionary","dictid","inflateInfo","gzheader","Inflate$1","to","inflate$1","inflator","last_avail_out","next_out_utf8","tail","utf8str","join","inflate_1$1","Inflate","inflateRaw","ungzip","inflate_1","reduce","byte","padStart","indexOf","substr","parseInt","array","bs58","base64","connection","static","preflightCommitment","url","async","tx","feePayer","recentBlockhash","getRecentBlockhash","blockhash","signTransaction","filter","forEach","kp","partialSign","rawTx","serialize","sendAndConfirmRawTransaction","ConfirmError","failedTx","getTransaction","bs58.encode","signature","logs","meta","logMessages","SendTransactionError","message","reqs","txs","r","signedTxs","signAllTransactions","sigs","transaction","_recentBlockhash","_disableBlockhashCaching","signData","serializeMessage","args","_serialize","encoding","_rpcRequest","error","rawTransaction","sendOptions","sendRawTransaction","confirmTransaction","JSON","stringify","super","setProvider","provider","getProvider","local","_AVAILABLE_FEATURES","Set","_FEATURES","Map","isSet","has","IdlError","ProgramErrorStack","stack","programKeyRegex","successRegex","programStack","exec","pop","programKey","AnchorError","errorMessage","errorLogs","origin","comparedValues","replace","_programErrorStack","parse","anchorErrorLogIndex","findIndex","log","startsWith","anchorErrorLog","pubkeyRegex","leftPubkey","rightPubkey","valueRegex","leftValue","rightValue","noInfoAnchorErrorLog","fileLineAnchorErrorLog","accountNameAnchorErrorLog","errorCodeString","errorNumber","number","file","line","fileLine","accountName","programErrorStack","ProgramError","idlErrors","errString","unparsedErrorCode","includes","components","split","parseErr","errorMsg","LangErrorMessage","translateError","features.isSet","anchorError","programError","handler","target","prop","Reflect","Proxy","__assign","assign","lowerCase","toLowerCase","DEFAULT_SPLIT_REGEXP","DEFAULT_STRIP_REGEXP","re","RegExp","IdlCoder","field","types","fieldName","camelCase","borsh","fieldLayout","vec","option","defined","filtered","typeDefLayout","arrayTy","arrayLen","innerLayout","typeDef","kind","fieldLayouts","fields","variants","variant","replicate","BorshInstructionCoder","ixLayout","parseIxLayout","sighashLayouts","instructions","ix","sh","sighash","layout","methods","ixName","_encode","encodeState","nameSpace","buffer","methodName","ixLayouts","arg","concat","decoder","format","accountMetas","InstructionFormatter","idlIx","idlField","formatIdlType","formatIdlData","flatIdlAccounts","flattenIdlAccounts","idx","idlType","d","formatIdlDataDefined","struct","keys","enumType","namedFields","fieldData","variantName","pascalCase","prefix","accName","charAt","toUpperCase","newPrefix","flat","preimage","_a","splitRegexp","_b","stripRegexp","_c","transform","_d","delimiter","dotCase","sha256","accountSize","idlAccount","variantSizes","typeSize","a","ty","coption","arraySize","ACCOUNT_DISCRIMINATOR_SIZE","BorshAccountsCoder","accountLayouts","layouts","acc","accountData","discriminator","accountDiscriminator","compare","decodeUnchecked","memcmp","appendData","bytes","camelcase","BorshEventCoder","event","eventTypeDef","discriminators","eventDiscriminator","logArr","disc","BorshStateCoder","stateDiscriminator","accData","ns","BorshCoder","instruction","Layout","span","property","isInteger","makeDestinationObject","getSpan","RangeError","rv","fromArray","values","ExternalLayout","isCount","OffsetLayout","UInt","UIntBE","readUIntLE","writeUIntLE","readUIntBE","writeUIntBE","V2E32","pow","NearUInt64","lo32","readUInt32LE","hi32","floor","writeUInt32LE","Structure","decodePrefixes","isArray","fd","fsp","dest","firstOffset","lastOffset","lastWrote","fv","layoutFor","offsetOf","UnionDiscriminator","UnionLayoutDiscriminator","Union","discr","defaultLayout","upv","usesPrefixDiscriminator","registry","boundGetSourceVariant","defaultGetSourceVariant","bind","getSourceVariant","configGetSourceVariant","gsv","vlo","getVariant","tag","dlo","clo","contentOffset","addVariant","VariantLayout","vb","isBuffer","union","Blob","write","SplTokenInstructionCoder","_","freezeAuthority","decimals","mintAuthority","encodeData","initializeMint","freezeAuthorityOption","initializeAccount","initializeMultisig","transfer","approve","revoke","authorityType","setAuthority","mintTo","burn","closeAccount","freezeAccount","thawAccount","transferChecked","approveChecked","mintToChecked","burnChecked","initilaizeAccount2","syncNative","initializeAccount3","initializeMultisig2","encodeInitializeMint2","_ixName","_ix","LAYOUT","BufferLayout.u8","BufferLayout.blob","alloc","instructionMaxSpan","BufferLayout.struct","BufferLayout.nu64","SplTokenStateCoder","_idl","_name","_account","uint64","WrappedLayout","u64","fromBuffer","COptionLayout","encoder","decodeBool","encodeBool","toArray","reverse","zeroPad","SplTokenAccountsCoder","TOKEN_ACCOUNT_LAYOUT","MINT_ACCOUNT_LAYOUT","_appendData","dataSize","SplTokenEventsCoder","_log","SplTokenCoder","parseIdlErrors","errors","toInstruction","ixArg","validateAccounts","ixAccounts","translateAddress","getMultipleAccounts","publicKeys","getMultipleAccountsCore","batches","all","batch","commitmentOverride","assert","executable","lamports","Transaction","TransactionInstruction","send","createWithSeedSync","fromPublicKey","seed","hash","sha256Sync","createProgramAddressSync","seeds","publicKeyBytes","findProgramAddressSync","arr","byteOffset","byteLength","associated","assoc","global","self","__self__","F","DOMException","support","Symbol","viewClasses","isArrayBufferView","ArrayBuffer","isView","normalizeName","test","normalizeValue","iteratorFor","items","iterator","Headers","headers","append","getOwnPropertyNames","consumed","body","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","promise","readAsArrayBuffer","bufferClone","view","Body","_initBody","_bodyInit","_bodyText","isPrototypeOf","_bodyBlob","FormData","_bodyFormData","URLSearchParams","DataView","_bodyArrayBuffer","arrayBuffer","readAsText","chars","formData","json","oldValue","entries","Request","upcased","credentials","signal","referrer","form","trim","decodeURIComponent","Response","bodyInit","ok","statusText","clone","response","redirectStatuses","redirect","location","init","request","aborted","xhr","XMLHttpRequest","abortXhr","abort","rawHeaders","getAllResponseHeaders","parts","responseURL","responseText","ontimeout","onabort","open","withCredentials","responseType","setRequestHeader","onreadystatechange","readyState","polyfill","ponyfill","ctx","module","fetchData","accountInfo","getAccountInfo","decodeUpgradeableLoaderState","programdataAccountInfo","programdataAddress","programData","UPGRADEABLE_LOADER_STATE_LAYOUT","u32","latestBuildsResp","latestBuilds","verified","build","slot","toNumber","verified_slot","IDL_ACCOUNT_LAYOUT","splitArgsAndCtx","inputLen","InstructionNamespaceFactory","encodeFn","ixArgs","accs","accountsArray","rpcAccs","isMut","RpcFactory","txFn","TransactionFactory","ixFn","preInstructions","postInstructions","StateClient","_programId","_address","programStateAddress","_sub","ixItem","programSigner","txItem","TransactionNamespaceFactory","rpcItem","RpcNamespaceFactory","addr","subscribe","ee","EventEmitter","listener","onAccountChange","emit","unsubscribe","removeAccountChangeListener","catch","registrySigner","AccountClient","_idlAccount","_coder","_size","fetchNullable","addresses","rpcUtil.getMultipleAccounts","filters","getProgramAccounts","sub","subscriptions","delete","signer","sizeOverride","fromPubkey","newAccountPubkey","space","getMinimumBalanceForRentExemption","pubkeyUtil.associated","PROGRAM_LOG_START_INDEX","PROGRAM_DATA_START_INDEX","EventManager","_eventParser","EventParser","_eventCallbacks","_eventListeners","_listenerIdCount","_onLogsSubscriptionId","onLogs","parseLogs","allListeners","listenerCb","listeners","removeOnLogsListener","logScanner","LogScanner","execution","ExecutionContext","newProgram","didPop","handleLog","handleProgramLog","handleSystemLog","logStr","logStart","version","AccountsResolver","_args","_accounts","_idlIx","_accountNamespace","_accountStore","AccountStore","accountDesc","accountDescName","pda","autoPopulatePda","CONST_ACCOUNTS","seedDesc","parseProgramId","toBufferConst","argValue","accountValue","toBufferArg","toBufferAccount","toBufferValue","seedArgName","path","idlArgPosition","argDesc","pathComponents","fieldPubkey","fetchAccount","parseAccountValue","accountField","writeUInt16LE","bU64","writeBigUInt64LE","BigInt","utf8.encode","_cache","MethodsBuilderFactory","rpcFn","simulateFn","accountNamespace","MethodsBuilder","_ixFn","_txFn","_rpcFn","_simulateFn","_accountsResolver","_signers","_remainingAccounts","ixs","_preInstructions","_postInstructions","_events","simulate","accountFns","InstructionFactory","simulateItem","resp","methodItem","fetchIdl","idlAddr","inflatedIdl","utf8.decode","Spl","x","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","character","preserveCamelCase","p1","Purchasing","Stake","IDO","Farming","Swap","SPLT","Lamports","schema","keystore","RawWallet","rawWallet_1","account_1","keystore_1","schema_1","lamports_1","splt_1","swap_1","farming_1","ido_1","stake_1","purchasing_1","equal","inherits_browserModule","ctor","superCtor","super_","TempCtor","require$$0","inherits","require$$1","isSurrogatePair","htonl","zero2","word","zero8","enc","endian","ah","al","bh","lo","hi","bl","ch","cl","dh","dl","carry","eh","el","num","BlockHash","pendingTotal","blockSize","outSize","hmacStrength","padLength","_delta8","_delta32","update","join32","_update","digest","_pad","_digest","rotr32","ch32","y","z","maj32","p32","shaCommon","require$$2","rotl32","sum32","sum32_5","ft_1","sha1_K","SHA1","W","toHex32","split32","require$$3","sum32_4","s0_256","s1_256","g0_256","g1_256","sha256_K","SHA256","g","T1","T2","SHA224","rotr64_hi","rotr64_lo","shr64_hi","shr64_lo","sum64","sum64_hi","sum64_lo","sum64_4_hi","sum64_4_lo","sum64_5_hi","sum64_5_lo","sha512_K","SHA512","ch64_hi","xh","xl","yh","yl","zh","ch64_lo","zl","maj64_hi","maj64_lo","s0_512_hi","s0_512_lo","s1_512_hi","s1_512_lo","g0_512_hi","g0_512_lo","g1_512_hi","g1_512_lo","_prepareBlock","c0_hi","c0_lo","c1_hi","c1_lo","c2_hi","c2_lo","c3_hi","c3_lo","fh","fl","gh","gl","hh","hl","c4_hi","c4_lo","T1_hi","T1_lo","T2_hi","T2_lo","SHA384","require$$4","sum32_3","RIPEMD160","K","Kh","A","B","C","D","E","Ah","Bh","Ch","Dh","Eh","T","rh","Hmac","Hash","inner","outer","_init","sha","ripemd","hmac","sha1","sha224","sha384","sha512","ripemd160","_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","off","_logLevel","_globalLogger","_normalizeError","missing","normalize","_checkNormalize","LogLevel","ErrorCode","HEX","Logger","logLevel","throwArgumentError","levels","DEBUG","INFO","WARNING","makeError","params","UNKNOWN_ERROR","messageDetails","hex","reason","NUMERIC_FAULT","fault","CALL_EXCEPTION","INSUFFICIENT_FUNDS","MISSING_NEW","NONCE_EXPIRED","REPLACEMENT_UNDERPRICED","TRANSACTION_REPLACED","UNPREDICTABLE_GAS_LIMIT","throwError","INVALID_ARGUMENT","argument","condition","assertArgument","checkNormalize","UNSUPPORTED_OPERATION","operation","checkSafeUint53","checkArgumentCount","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","checkNew","checkAbstract","censorship","permanent","globalLogger","logger","addSlice","arrayify","unshift","allowMissingPrefix","substring","toHexString","isHexable","isHexString","hexPad","isBytes","Struct","properties","SOLANA_SCHEMA","deserialize","deserializeUnchecked","Enum","enum","MAX_SEED_LENGTH","_bn","isPublicKeyData","decoded","equals","toJSON","toBytes","toArrayLike","is_on_curve","seedsWithNonce","createProgramAddress","naclLowLevel","nacl","chk","den","den2","den4","den6","neq25519","gf1","I","Account","secretKey","_keypair","BPF_LOADER_DEPRECATED_PROGRAM_ID","BufferLayout","rustString","rsl","_decode","rslShim","decodeLength","elem","encodeLength","rem_len","Message","accountKeys","indexToProgramIds","isAccountSigner","isAccountWritable","numRequiredSignatures","isProgramId","programIds","nonProgramIds","numKeys","keyCount","shortvec","programIdIndex","keyIndicesCount","dataCount","keyIndices","dataLength","instructionCount","instructionBuffer","instructionBufferLength","instructionLayout","signDataLayout","numReadonlySignedAccounts","numReadonlyUnsignedAccounts","byteArray","accountCount","dataSlice","messageArgs","DEFAULT_SIGNATURE","PACKET_DATA_SIZE","signatures","nonceInfo","item","compileMessage","accountMeta","pubkeySorting","checkSigner","checkWritable","uniqueMetas","pubkeyString","uniqueIndex","feePayerIndex","payerMeta","signedKeys","unsignedKeys","invariant","keyIndex","_compile","every","pair","setSigners","seen","sign","uniqueSigners","_partialSign","addSignature","_addSignature","sigpair","verifySignatures","_verifySignatures","config","requireAllSignatures","signatureCount","transactionLength","wireTransaction","keyObj","sigPubkeyPair","SYSVAR_CLOCK_PUBKEY","SYSVAR_EPOCH_SCHEDULE_PUBKEY","SYSVAR_INSTRUCTIONS_PUBKEY","SYSVAR_RECENT_BLOCKHASHES_PUBKEY","SYSVAR_REWARDS_PUBKEY","SYSVAR_SLOT_HASHES_PUBKEY","SYSVAR_SLOT_HISTORY_PUBKEY","SYSVAR_STAKE_HISTORY_PUBKEY","sendAndConfirmTransaction","maxRetries","sleep","ms","setTimeout","allocLength","layoutFields","decodeData","FeeCalculatorLayout","NonceAccountLayout","NONCE_ACCOUNT_LENGTH","NonceAccount","authorizedPubkey","feeCalculator","nonceAccount","SystemInstruction","typeIndex","instructionTypeLayout","ixType","SYSTEM_INSTRUCTION_LAYOUTS","toPubkey","basePubkey","accountPubkey","authorized","noncePubkey","newAuthorizedPubkey","expectedLength","Create","Assign","Transfer","CreateWithSeed","AdvanceNonceAccount","WithdrawNonceAccount","InitializeNonceAccount","AuthorizeNonceAccount","Allocate","AllocateWithSeed","AssignWithSeed","TransferWithSeed","initParams","nonceInitialize","instructionData","CHUNK_SIZE","Loader","balanceNeeded","programInfo","payer","dataLayout","transactions","bytesLength","bytesLengthPadding","REQUESTS_PER_SECOND","BPF_LOADER_PROGRAM_ID","BpfLoader","readBlobAsText","readArrayBufferAsText","normalizeMethod","parseHeaders","trailingZeros","EpochSchedule","slotsPerEpoch","leaderScheduleSlotOffset","warmup","firstNormalEpoch","firstNormalSlot","getEpoch","getEpochAndSlotIndex","epoch","getSlotsInEpoch","normalSlotIndex","normalEpochIndex","getFirstSlotInEpoch","getLastSlotInEpoch","PublicKeyFromString","coerce","instance","RawAccountDataResult","tuple","literal","BufferFromRawAccountData","BLOCKHASH_CACHE_TIMEOUT_MS","createRpcResult","pick","jsonrpc","id","unknown","optional","any","UnknownRpcResult","jsonRpcResult","jsonRpcResultAndContext","context","notificationResultAndContext","GetInflationGovernorResult","foundation","foundationTerm","initial","taper","terminal","GetInflationRewardResult","nullable","effectiveSlot","postBalance","GetEpochInfoResult","slotIndex","slotsInEpoch","absoluteSlot","blockHeight","transactionCount","GetEpochScheduleResult","boolean","GetLeaderScheduleResult","record","TransactionErrorResult","SignatureStatusResult","SignatureReceivedResult","VersionResult","SimulatedTransactionResponseStruct","rentEpoch","unitsConsumed","BlockProductionResponseStruct","byIdentity","range","firstSlot","lastSlot","GetInflationGovernorRpcResult","GetEpochInfoRpcResult","GetEpochScheduleRpcResult","GetLeaderScheduleRpcResult","SlotRpcResult","GetSupplyRpcResult","circulating","nonCirculating","nonCirculatingAccounts","TokenAmountResult","uiAmount","uiAmountString","GetTokenLargestAccountsResult","GetTokenAccountsByOwner","ParsedAccountDataResult","parsed","GetParsedTokenAccountsByOwner","GetLargestAccountsRpcResult","AccountInfoResult","KeyedAccountInfoResult","ParsedOrRawAccountData","ParsedAccountInfoResult","KeyedParsedAccountInfoResult","StakeActivationResult","active","inactive","GetConfirmedSignaturesForAddress2RpcResult","memo","blockTime","GetSignaturesForAddressRpcResult","AccountNotificationResult","subscription","ProgramAccountInfoResult","ProgramAccountNotificationResult","SlotInfoResult","parent","SlotNotificationResult","SlotUpdateResult","timestamp","stats","numTransactionEntries","numSuccessfulTransactions","numFailedTransactions","maxTransactionsPerEntry","SlotUpdateNotificationResult","SignatureNotificationResult","RootNotificationResult","ContactInfoResult","gossip","tpu","VoteAccountInfoResult","votePubkey","nodePubkey","activatedStake","epochVoteAccount","epochCredits","commission","lastVote","rootSlot","GetVoteAccounts","current","delinquent","ConfirmationStatus","SignatureStatusResponse","confirmations","confirmationStatus","GetSignatureStatusesRpcResult","GetMinimumBalanceForRentExemptionRpcResult","ConfirmedTransactionResult","ParsedInstructionResult","RawInstructionResult","InstructionResult","UnknownInstructionResult","ParsedOrRawInstruction","ParsedConfirmedTransactionResult","TokenBalanceResult","accountIndex","uiTokenAmount","ConfirmedTransactionMetaResult","fee","innerInstructions","preBalances","postBalances","preTokenBalances","postTokenBalances","ParsedConfirmedTransactionMetaResult","GetBlockRpcResult","previousBlockhash","parentSlot","rewards","rewardType","GetConfirmedBlockRpcResult","GetBlockSignaturesRpcResult","GetTransactionRpcResult","GetParsedTransactionRpcResult","GetRecentBlockhashAndContextRpcResult","lamportsPerSignature","GetLatestBlockhashRpcResult","lastValidBlockHeight","PerfSampleResult","numTransactions","numSlots","samplePeriodSecs","GetRecentPerformanceSamplesRpcResult","GetFeeCalculatorRpcResult","RequestAirdropRpcResult","SendTransactionRpcResult","LogsResult","LogsNotificationResult","_commitment","_confirmTransactionInitialTimeout","_rpcEndpoint","_rpcWsEndpoint","_rpcClient","_rpcBatchRequest","_rpcWebSocket","_rpcWebSocketConnected","_rpcWebSocketHeartbeat","_rpcWebSocketIdleTimeout","_pollingBlockhash","_blockhashInfo","lastFetch","transactionSignatures","simulatedSignatures","_accountChangeSubscriptionCounter","_accountChangeSubscriptions","_programAccountChangeSubscriptionCounter","_programAccountChangeSubscriptions","_rootSubscriptionCounter","_rootSubscriptions","_signatureSubscriptionCounter","_signatureSubscriptions","_slotSubscriptionCounter","_slotSubscriptions","_logsSubscriptionCounter","_logsSubscriptions","_slotUpdateSubscriptionCounter","_slotUpdateSubscriptions","URL","client","commitmentOrConfig","wsEndpoint","httpHeaders","fetchMiddleware","disableRetryOnRateLimit","endpoint","useHttps","makeWebsocketUrl","fetchWithMiddleware","modifiedFetchArgs","modifiedUrl","modifiedOptions","too_many_requests_retries","waitTime","createRpcClient","requests","createRpcBatchRequest","autoconnect","max_reconnects","Infinity","_wsOnOpen","_wsOnError","_wsOnClose","_wsOnAccountNotification","_wsOnProgramAccountNotification","_wsOnSlotNotification","_wsOnSlotUpdatesNotification","_wsOnSignatureNotification","_wsOnRootNotification","_wsOnLogsNotification","_buildArgs","unsafeRes","getBalanceAndContext","configArg","tokenMintAddress","ownerAddress","mintAddress","getAccountInfoAndContext","getMultipleAccountsInfoAndContext","configOrCommitment","decodedSignature","subscriptionCommitment","confirmPromise","subscriptionId","onSignature","timeoutMs","timeoutPromise","timeoutId","clearTimeout","promiseTimeout","duration","startSlot","getSignatureStatuses","getSupply","excludeNonCirculatingAccountsList","epochSchedule","wireMessage","getRecentBlockhashAndContext","getLatestBlockhashAndContext","_buildArgsAtLeastConfirmed","rest","block","endSlot","transactionDetails","firstAvailableBlock","getConfirmedBlockSignatures","highestConfirmedRoot","getSlot","getConfirmedSignaturesForAddress2","confirmedSignatureInfo","getNonceAndContext","disableCache","expired","startTime","MS_PER_SLOT","transactionOrMessage","encodedTransaction","traceIndent","logTrace","sendEncodedTransaction","setInterval","clearInterval","rpcMethod","unsubscribeId","_resetSubscriptions","_updateSubscriptions","programKeys","slotKeys","slotUpdateKeys","signatureKeys","rootKeys","logsKeys","mentions","notification","subInfo","_unsubscribe","accountId","onProgramAccountChange","onSlotChange","onSlotUpdate","override","onSignatureWithOptions","onRootChange","keypair","ED25519_INSTRUCTION_LAYOUT","Ed25519Program","instructionIndex","publicKeyOffset","signatureOffset","messageDataOffset","padding","signatureInstructionIndex","publicKeyInstructionIndex","messageDataSize","messageInstructionIndex","privateKey","createInstructionWithPublicKey","STAKE_CONFIG_ID","Authorized","staker","withdrawer","Lockup","unixTimestamp","custodian","StakeInstruction","lockup","STAKE_INSTRUCTION_LAYOUTS","stakePubkey","stakeAuthorizationType","authorityOwner","authorityBase","authoritySeed","splitStakePubkey","sourceStakePubKey","StakeProgram","Initialize","Authorize","Delegate","Split","Withdraw","Deactivate","Merge","AuthorizeWithSeed","StakeAuthorizationLayout","Staker","Withdrawer","maybeLockup","initialize","custodianPubkey","newAuthorized","splitInstruction","ecdsaSign","SECP256K1_INSTRUCTION_LAYOUT","Secp256k1Program","sha3","ethAddress","rawAddress","ethAddressInstructionIndex","recoveryId","pkey","publicKeyCreate","messageHash","recid","VALIDATOR_INFO_KEY","InfoString","website","details","keybaseUsername","ValidatorInfo","configKeys","rawInfo","assertType","VOTE_PROGRAM_ID","VoteAccountLayout","VoteAccount","authorizedWithdrawer","votes","authorizedVoters","priorVoters","lastTimestamp","va","getPriorVoters","parseAuthorizedVoter","authorizedVoter","parsePriorVoters","targetEpoch","isEmpty","VoteInit","VoteInstruction","voteInit","VOTE_INSTRUCTION_LAYOUTS","voteAuthorizationType","authorizedWithdrawerPubkey","VoteProgram","InitializeAccount","VoteAuthorizationLayout","Voter","http","devnet","testnet","https","clusterApiUrl","cluster","tls","LAMPORTS_PER_SOL","_typeof","isDeepEqual","isDeepStrictEqual","_require$codes","ERR_AMBIGUOUS_ARGUMENT","ERR_INVALID_ARG_TYPE","ERR_INVALID_ARG_VALUE","ERR_INVALID_RETURN_VALUE","ERR_MISSING_ARGS","AssertionError","inspect","_require$types","isPromise","isRegExp","objectAssign","objectIs","is","lazyLoadComparison","comparison","warned","NO_EXCEPTION_SENTINEL","innerFail","innerOk","fn","argLen","generatedMessage","actual","expected","operator","stackStartFn","_len","_key","fail","internalMessage","argsLen","process","emitWarning","errArgs","notEqual","deepEqual","notDeepEqual","deepStrictEqual","notDeepStrictEqual","strictEqual","notStrictEqual","Comparison","_this","Constructor","_classCallCheck","compareExceptionKey","expectedException","getActual","checkIsPromise","waitForActual","promiseFn","resultPromise","expectsError","fnType","expectsNoError","_len6","_key6","throws","_len2","_key2","rejects","_len3","_key3","doesNotThrow","_len4","_key4","doesNotReject","_len5","_key5","ifError","newErr","origStack","tmp2","tmp1","_defineProperty","_defineProperties","props","descriptor","_possibleConstructorReturn","_assertThisInitialized","ReferenceError","_wrapNativeSuper","Class","Function","Wrapper","_construct","_getPrototypeOf","_setPrototypeOf","isNativeReflectConstruct","construct","sham","Parent","setPrototypeOf","__proto__","getPrototypeOf","endsWith","search","this_len","blue","green","red","white","kReadableOperator","strictEqualObject","notStrictEqualObject","notIdentical","copyError","inspectValue","compact","customInspect","maxArrayLength","showHidden","breakLength","showProxy","sorted","getters","createErrDiff","other","lastPos","skipped","actualInspected","actualLines","expectedLines","indicator","inputLength","stderr","isTTY","columns","maxCount","repeat","maxLines","_actualLines","printedLines","skippedMsg","cur","expectedLine","actualLine","divergingLines","_Error","stackTraceLimit","getColorDepth","_res","knownOperators","captureStackTrace","protoProps","staticProps","subClass","superClass","_inherits","custom","recurseTimes","ownKeys","getOwnPropertySymbols","_objectSpread","util","createErrorType","Base","NodeError","_Base","arg1","arg2","arg3","getMessage","oneOf","thing","determiner","inspected","_slicedToArray","_arrayWithHoles","_arr","_n","_e","_s","_i","_iterableToArrayLimit","_nonIterableRest","regexFlagsSupported","arrayFromSet","arrayFromMap","objectGetOwnPropertySymbols","numberIsNaN","isNaN","uncurryThis","propertyIsEnumerable","objectToString","isAnyArrayBuffer","isDate","isMap","isNativeError","isBoxedPrimitive","isNumberObject","isStringObject","isBooleanObject","isBigIntObject","isSymbolObject","isFloat32Array","isFloat64Array","isNonIndex","getOwnNonIndexProperties","innerDeepEqual","val1","val2","memos","buf1","buf2","val1Tag","keys1","keys2","keyCheck","getTime","areSimilarTypedArrays","areSimilarFloatArrays","_keys","_keys2","valueOf","Boolean","isEqualBoxedPrimitive","getEnumerables","iterationType","aKeys","bKeys","symbolKeysA","symbolKeysB","_symbolKeysB","position","val2MemoA","val2MemoB","areEq","objEquiv","setHasEqualElement","setValues","findLooseMatchingPrimitives","prim","setMightHaveLoosePrim","altValue","mapMightHaveLoosePrim","curB","mapHasEqualEntry","key1","item1","key2","aValues","bValues","_val","setEquiv","aEntries","_aEntries$i","item2","bEntries","_i2","_bEntries$_i","mapEquiv","keysA","b64","getLens","validLen","placeHoldersLen","toByteArray","tmp","Arr","_byteLength","curByte","revLookup","fromByteArray","uint8","extraBytes","maxChunkLength","len2","encodeChunk","lookup","nameWithProperty","bindConstructorLayout","layout_","boundConstructor_","GreedyCount","elementSpan","rem","Int","readIntLE","writeIntLE","IntBE","readIntBE","writeIntBE","divmodInt64","roundedInt64","NearUInt64BE","readUInt32BE","writeUInt32BE","NearInt64","readInt32LE","writeInt32LE","NearInt64BE","readInt32BE","writeInt32BE","Float","readFloatLE","writeFloatLE","FloatBE","readFloatBE","writeFloatBE","Double","readDoubleLE","writeDoubleLE","DoubleBE","readDoubleBE","writeDoubleBE","Sequence","elementLayout","elo","fixBitwiseResult","BitStructure","msb","_packedSetValue","_packedGetValue","addField","bf","BitField","addBoolean","fieldFor","container","totalBits","usedBits","sum","valueMask","wordMask","wordValue","CString","srcb","UTF8","maxSpan","Constant","greedy","u8","u16","u24","u40","u48","nu64","u16be","u24be","u32be","u40be","u48be","nu64be","s8","s16","s24","s32","s40","s48","ns64","s16be","s24be","s32be","s40be","s48be","ns64be","f32","f32be","f64","f64be","seq","unionLayoutDiscriminator","cstr","utf8","hasSymbols","toStr","origDefineProperty","supportsDescriptors","arePropertyDescriptorsSupported","object","predicate","defineProperties","predicates","firstSource","nextSource","keysArray","nextIndex","nextKey","callBind","define","implementation","getPolyfill","shim","NaN","ERROR","WINDOW","JS_SHA256_NO_WINDOW","WEB_WORKER","NODE_JS","JS_SHA256_NO_NODE_JS","versions","COMMON_JS","JS_SHA256_NO_COMMON_JS","AMD","ARRAY_BUFFER","JS_SHA256_NO_ARRAY_BUFFER","HEX_CHARS","EXTRA","SHIFT","OUTPUT_TYPES","blocks","JS_SHA256_NO_ARRAY_BUFFER_IS_VIEW","createOutputMethod","outputType","is224","Sha256","createMethod","nodeWrap","crypto","eval","algorithm","nodeMethod","createHash","createHmacOutputMethod","HmacSha256","createHmacMethod","sharedMemory","h0","h1","h2","h3","h4","h5","h6","h7","hBytes","finalized","hashed","first","oKeyPad","iKeyPad","notString","lastByteIndex","finalize","s0","maj","t1","ab","da","cd","bc","dataView","setUint32","innerHash","keysShim","isArgs","isEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isObject","isFunction","isArguments","isString","theKeys","skipProto","skipConstructor","equalsConstructorPrototypeIfNotBuggy","origKeys","originalKeys","keysWorksWithArguments","callee","gf","Float64Array","randombytes","_0","_9","gf0","_121665","D2","X","Y","ts64","vn","xi","yi","crypto_verify_16","crypto_verify_32","crypto_core_salsa20","inp","u","j0","j1","j2","j3","j4","j5","j6","j7","j8","j9","j10","j11","j12","j13","j14","j15","x0","x1","x2","x3","x4","x5","x6","x7","x8","x9","x10","x11","x12","x13","x14","x15","core_salsa20","crypto_core_hsalsa20","core_hsalsa20","sigma","crypto_stream_salsa20_xor","cpos","mpos","crypto_stream_salsa20","crypto_stream","sn","crypto_stream_xor","poly1305","t0","t2","t3","t4","t5","t6","t7","pad","leftover","fin","crypto_onetimeauth","outpos","finish","crypto_onetimeauth_verify","hpos","crypto_secretbox","crypto_secretbox_open","set25519","car25519","sel25519","pack25519","par25519","unpack25519","Z","M","t8","t9","t10","t11","t12","t13","t14","t15","t16","t17","t18","t19","t20","t21","t22","t23","t24","t25","t26","t27","t28","t29","t30","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","b10","b11","b12","b13","b14","b15","S","inv25519","pow2523","crypto_scalarmult","x32","x16","crypto_scalarmult_base","crypto_box_keypair","crypto_box_beforenm","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","hibit","h8","h9","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","mac","macpos","want","crypto_box_afternm","crypto_box_open_afternm","crypto_hashblocks_hl","bh0","bh1","bh2","bh3","bh4","bh5","bh6","bh7","bl0","bl1","bl2","bl3","bl4","bl5","bl6","bl7","th","tl","wh","wl","ah0","ah1","ah2","ah3","ah4","ah5","ah6","ah7","al0","al1","al2","al3","al4","al5","al6","al7","crypto_hash","cswap","pack","zi","scalarmult","scalarbase","crypto_sign_keypair","pk","sk","seeded","L","modL","crypto_sign","sm","smlen","crypto_sign_open","unpackneg","crypto_secretbox_BOXZEROBYTES","crypto_sign_BYTES","crypto_sign_PUBLICKEYBYTES","crypto_sign_SECRETKEYBYTES","checkLengths","checkArrayTypes","cleanup","lowlevel","crypto_box","crypto_box_open","crypto_secretbox_KEYBYTES","crypto_secretbox_NONCEBYTES","crypto_secretbox_ZEROBYTES","crypto_scalarmult_BYTES","crypto_scalarmult_SCALARBYTES","crypto_box_PUBLICKEYBYTES","crypto_box_SECRETKEYBYTES","crypto_box_BEFORENMBYTES","crypto_box_NONCEBYTES","crypto_box_ZEROBYTES","crypto_box_BOXZEROBYTES","crypto_sign_SEEDBYTES","crypto_hash_BYTES","randomBytes","secretbox","box","keyLength","nonceLength","overheadLength","scalarMult","scalarLength","groupElementLength","before","checkBoxLengths","after","keyPair","fromSecretKey","publicKeyLength","secretKeyLength","sharedKeyLength","signedMsg","mlen","detached","sig","verify","fromSeed","seedLength","signatureLength","hashLength","setPRNG","msCrypto","getRandomValues"],"sourceRoot":""}