{"version":3,"file":"static/js/205.2548dbc9.chunk.js","mappings":"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","sources":["shared/antd/ionicon/assets/icon-telegram.svg","shared/antd/ionicon/customs.tsx","shared/antd/ionicon/index.tsx","app/view/dao/hero/banner.tsx","app/view/dao/hero/infoCard.tsx","app/view/dao/hero/index.tsx","app/components/statisticCard.tsx","app/components/regimeTag.tsx","shared/antd/mint/mintAvatar.tsx","shared/antd/mint/mintName.tsx","shared/antd/mint/mintSymbol.tsx","app/components/gradientAvatar/index.tsx","app/configs/manifest.config.ts","app/helpers/safeWallet.ts","app/configs/sol.config.ts","app/configs/index.ts","app/model/metadata.controller.tsx","app/hooks/useMembers.tsx","app/view/dao/daoList/daoCard.tsx","app/view/dao/daoList/index.tsx","app/view/dao/daoList/yourDao.tsx","app/view/dao/index.tsx","app/components/proposalStatus.tsx","app/view/proposal/proposalList/proposalCard.tsx","app/model/proposal.controller.tsx","app/view/proposal/proposalList/index.tsx","app/view/dao/daoDetails.tsx","app/view/proposal/index.tsx","app/view/proposal/proposalInitialization/consensusMechanismInput.tsx","app/view/proposal/proposalInitialization/consensusQuorumInput.tsx","app/view/proposal/proposalInitialization/durationInput.tsx","app/view/proposal/proposalInitialization/proposalPreview.tsx","app/components/mintSelection/mintTag.tsx","app/components/mintSelection/mintCard.tsx","app/components/mintSelection/useAllMintAddresses.ts","app/components/mintSelection/useSearchedMintAddresses.ts","app/components/mintSelection/index.tsx","app/components/mintSelection/useRecommendedMintAddresses.ts","app/view/templates/spl/transfer/index.tsx","app/view/proposal/proposalInitialization/templateInput.tsx","app/view/proposal/proposalInitialization/index.tsx","app/view/dao/daoInitialization/regimeInput.tsx","app/view/dao/daoInitialization/tokenAddressInput.tsx","shared/antd/numericInput.tsx","shared/hooks/useMintDecimals.ts","shared/hooks/useMintSupply.ts","app/view/dao/daoInitialization/circulatingSupplyInput.tsx","app/view/dao/daoInitialization/index.tsx","app/hooks/useProposal.tsx","app/view/proposal/proposalDetails.tsx","app/model/dao.controller.tsx","app/view/watcher/dao.watcher.tsx","app/view/watcher/proposal.watcher.tsx","app/model/receipt.controller.tsx","app/view/watcher/receipt.watcher.tsx","app/view/index.tsx","app/model/index.ts","app/bootstrap.app.tsx","shared/dataloader/cache.ts","shared/dataloader/constant.ts","shared/dataloader/index.ts","shared/dataloader/request.ts","shared/devTools.ts","shared/storage.ts","shared/runtime.ts","shared/util.ts"],"sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgIconTelegram(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"inherit\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    width: \"50px\",\n    height: \"50px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.137,6.552c-0.75-0.636-1.928-0.727-3.146-0.238l-0.002,0C41.708,6.828,6.728,21.832,5.304,22.445 c-0.259,0.09-2.521,0.934-2.288,2.814c0.208,1.695,2.026,2.397,2.248,2.478l8.893,3.045c0.59,1.964,2.765,9.21,3.246,10.758 c0.3,0.965,0.789,2.233,1.646,2.494c0.752,0.29,1.5,0.025,1.984-0.355l5.437-5.043l8.777,6.845l0.209,0.125 c0.596,0.264,1.167,0.396,1.712,0.396c0.421,0,0.825-0.079,1.211-0.237c1.315-0.54,1.841-1.793,1.896-1.935l6.556-34.077 C47.231,7.933,46.675,7.007,46.137,6.552z M22,32l-3,8l-3-10l23-17L22,32z\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconTelegram);\nexport default __webpack_public_path__ + \"static/media/icon-telegram.2450489f40d03000fe65fc1c6f238d85.svg\";\nexport { ForwardRef as ReactComponent };","import IconTele from './assets/icon-telegram.svg'\n\nexport const CUSTOM_ICONS: Record<string, string> = {\n  'logo-telegram': IconTele,\n}\n","/**\n * IonIcon 5\n * Credit https://ionic.io/ionicons\n */\n\nimport { forwardRef } from 'react'\nimport { CUSTOM_ICONS } from './customs'\n\n/**\n * IonIcon\n * @param name The icon name. You can find it here https://ionic.io/ionicons\n * @param className To modify the span class\n */\nconst IonIcon = forwardRef<\n  HTMLElement,\n  { name: string; className?: string } & any\n>(({ name, className, ...props }, ref) => {\n  const cln = className ? 'anticon ' + className : 'anticon'\n\n  return (\n    <span className={cln} {...props}>\n      {CUSTOM_ICONS[name] ? (\n        <ion-icon ref={ref} src={CUSTOM_ICONS[name]} />\n      ) : (\n        <ion-icon ref={ref} name={name} />\n      )}\n    </span>\n  )\n})\n\nexport default IonIcon\n","import { Card, Col, Row, Typography } from 'antd'\n\nconst Banner = () => {\n  return (\n    <Card className=\"glass\" bordered={false} bodyStyle={{ padding: 48 }}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title\n            level={1}\n            style={{ fontSize: 56, textAlign: 'center' }}\n          >\n            Let's build your own <span style={{ color: '#F9575E' }}>DAO</span>.\n          </Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph\n            type=\"secondary\"\n            style={{ fontSize: 20, textAlign: 'center' }}\n          >\n            Customize the DAO to your purpose - No coding needed.\n          </Typography.Paragraph>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Banner\n","import { ReactNode } from 'react'\n\nimport { Card, Col, Row, Space, Typography } from 'antd'\n\nexport type InfoCardProps = {\n  icon?: ReactNode\n  title?: string\n  value?: string\n}\n\nconst InfoCard = ({ icon, title, value }: InfoCardProps) => {\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Space>\n            {icon}\n            <Typography.Text type=\"secondary\">{title}</Typography.Text>\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Typography.Title level={4}>{value}</Typography.Title>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default InfoCard\n","import { Col, Row } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport { numeric } from 'shared/util'\nimport Banner from './banner'\nimport InfoCard from './infoCard'\n\nconst Hero = () => {\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Banner />\n      </Col>\n      <Col xs={24} md={12} lg={6}>\n        <InfoCard\n          icon={<IonIcon name=\"cash-outline\" />}\n          title=\"Total Value Locked\"\n          value={`$${numeric(900989.09).format('0,0.00')}`}\n        />\n      </Col>\n      <Col xs={24} md={12} lg={6}>\n        <InfoCard\n          icon={<IonIcon name=\"earth-outline\" />}\n          title=\"Total DAOs\"\n          value={numeric(36).format('0,0')}\n        />\n      </Col>\n      <Col xs={24} md={12} lg={6}>\n        <InfoCard\n          icon={<IonIcon name=\"pencil-outline\" />}\n          title=\"Total Proposals\"\n          value={numeric(245).format('0,0')}\n        />\n      </Col>\n      <Col xs={24} md={12} lg={6}>\n        <InfoCard\n          icon={<IonIcon name=\"people-outline\" />}\n          title=\"Total Members\"\n          value={numeric(8401).format('0,0')}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Hero\n","import { ReactNode } from 'react'\n\nimport { Space, Typography } from 'antd'\n\nexport type StatisticCardProps = {\n  title: string\n  value: string | number | ReactNode\n}\nconst StatisticCard = ({ title, value }: StatisticCardProps) => {\n  return (\n    <Space direction=\"vertical\">\n      <Typography.Text className=\"caption\" type=\"secondary\">\n        {title}\n      </Typography.Text>\n      {['number', 'string'].includes(typeof value) ? (\n        <Typography.Text>{value}</Typography.Text>\n      ) : (\n        value\n      )}\n    </Space>\n  )\n}\n\nexport default StatisticCard\n","import { useMemo } from 'react'\nimport { DaoRegime, DaoRegimes } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\n\nimport { Tag } from 'antd'\n\nimport { randomColor } from 'shared/util'\n\nexport type RegimeTagProps = { regime: DaoRegime }\n\nconst RegimeTag = ({ regime }: RegimeTagProps) => {\n  const tag = useMemo(() => {\n    if (isEqual(regime, DaoRegimes.Dictatorial)) return 'Dictatorial'\n    if (isEqual(regime, DaoRegimes.Democratic)) return 'Democratic'\n    if (isEqual(regime, DaoRegimes.Autonomous)) return 'Autonomous'\n    return 'DAO Regime'\n  }, [regime])\n\n  return (\n    <Tag\n      style={{ color: randomColor(tag), margin: 0 }}\n      color={randomColor(tag, 0.2)}\n    >\n      {tag}\n    </Tag>\n  )\n}\n\nexport default RegimeTag\n","import { ReactNode, useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nimport { Avatar } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst DEFAULT_AVATARS: Array<string | undefined> = [undefined]\n\nexport type MintAvatarProps = {\n  mintAddress: string\n  size?: number\n  icon?: ReactNode\n  reversed?: boolean\n}\n\n/**\n * Mint/Token avatar, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param size - Avatar size. Default 24px.\n * @param icon - Fallback icon for unknown token\n * @param reversed - (Optional) The default LP token avatar is A-B. The reversed is to change it to B-A\n * @returns name\n */\nconst MintAvatar = ({\n  mintAddress,\n  size = 24,\n  icon = <IonIcon name=\"diamond-outline\" />,\n  reversed = false,\n  ...props\n}: MintAvatarProps) => {\n  const [avatars, setAvatars] = useState(DEFAULT_AVATARS)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveAvatar = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.logoURI) return token.logoURI\n      return undefined\n    },\n    [tokenProvider],\n  )\n\n  const deriveAvatars = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setAvatars(DEFAULT_AVATARS)\n    // LP mint\n    const poolData = Object.values(pools).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const avatars = await Promise.all([mint_a, mint_b].map(deriveAvatar))\n      if (reversed) avatars.reverse()\n      return setAvatars(avatars)\n    }\n    // Normal mint\n    const avatar = await deriveAvatar(mintAddress)\n    return setAvatars([avatar])\n  }, [mintAddress, reversed, deriveAvatar, pools])\n\n  useEffect(() => {\n    deriveAvatars()\n  }, [deriveAvatars])\n\n  if (avatars.length === 1)\n    return (\n      <Avatar\n        src={avatars[0]}\n        size={size}\n        style={{ backgroundColor: '#2D3355', border: 'none' }}\n        {...props}\n      >\n        {icon}\n      </Avatar>\n    )\n  return (\n    <Avatar.Group style={{ display: 'block', whiteSpace: 'nowrap' }} {...props}>\n      {avatars.map((avatar, i) => (\n        <Avatar\n          key={i}\n          src={avatar}\n          size={size}\n          style={{ backgroundColor: '#2D3355', border: 'none' }}\n        >\n          {icon}\n        </Avatar>\n      ))}\n    </Avatar.Group>\n  )\n}\n\nexport default MintAvatar\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nconst DEFAULT_NAME = 'Unknown Token'\n\n/**\n * Mint/Token name, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param separator - (Optional) In case of LP tokens, the names is combined by 2 token names. The separator is to separate them.\n * @param reversed - (Optional) The default LP token names is A-B. The reversed is to change it to B-A\n * @returns name\n */\nconst MintName = ({\n  mintAddress,\n  separator = ' • ',\n  reversed = false,\n}: {\n  mintAddress: string\n  separator?: string\n  reversed?: boolean\n}) => {\n  const [name, setName] = useState(DEFAULT_NAME)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveName = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.name) return token.name\n      return DEFAULT_NAME\n    },\n    [tokenProvider],\n  )\n\n  const deriveNames = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setName(DEFAULT_NAME)\n    // LP mint\n    const poolData = Object.values(pools).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const names = await Promise.all([mint_a, mint_b].map(deriveName))\n      if (reversed) names.reverse()\n      return setName(`${names.join(separator)} LP`)\n    }\n    // Normal mint\n    const name = await deriveName(mintAddress)\n    return setName(name)\n  }, [mintAddress, reversed, deriveName, pools, separator])\n\n  useEffect(() => {\n    deriveNames()\n  }, [deriveNames])\n\n  return <span>{name}</span>\n}\n\nexport default MintName\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nconst DEFAULT_SYMBOL = 'TOKN'\n\n/**\n * Mint/Token symbol, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param separator - (Optional) In case of LP tokens, the symbols is combined by 2 token symbols. The separator is to separate them.\n * @param reversed - (Optional) The default LP token symbol is A-B. The reversed is to change it to B-A\n * @returns symbol\n */\nconst MintSymbol = ({\n  mintAddress,\n  separator = ' • ',\n  reversed = false,\n}: {\n  mintAddress: string\n  separator?: string\n  reversed?: boolean\n}) => {\n  const [symbol, setSymbol] = useState(DEFAULT_SYMBOL)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveSymbol = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.symbol) return token.symbol\n      return address.substring(0, 4)\n    },\n    [tokenProvider],\n  )\n\n  const deriveSymbols = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setSymbol(DEFAULT_SYMBOL)\n    // LP mint\n    const poolData = Object.values(pools).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const symbols = await Promise.all([mint_a, mint_b].map(deriveSymbol))\n      if (reversed) symbols.reverse()\n      return setSymbol(symbols.join(separator))\n    }\n    // Normal mint\n    const symbol = await deriveSymbol(mintAddress)\n    return setSymbol(symbol)\n  }, [mintAddress, reversed, deriveSymbol, pools, separator])\n\n  useEffect(() => {\n    deriveSymbols()\n  }, [deriveSymbols])\n\n  return <span>{symbol}</span>\n}\n\nexport default MintSymbol\n","import BN from 'bn.js'\n\nimport { Avatar, AvatarProps } from 'antd'\n\nimport gradients from './gradients.json'\n\nconst string2Number = (seed: string, limit: number) => {\n  const buf = Buffer.from(seed)\n  const index = new BN(buf).mod(new BN(limit))\n  return Number(index)\n}\n\nexport type GradientAvatarProps = { seed?: string; avatarProps?: AvatarProps }\n\nconst GradientAvatar = ({\n  seed = Math.random().toString(),\n  avatarProps = {},\n}: GradientAvatarProps) => {\n  const direction = string2Number(seed, 360)\n  const { name, colors } = gradients[string2Number(seed, gradients.length)]\n  return (\n    <Avatar\n      style={{\n        background: `linear-gradient(${direction}deg, ${colors.join(', ')})`,\n      }}\n      alt={name}\n      {...avatarProps}\n    />\n  )\n}\n\nexport default GradientAvatar\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Transaction, PublicKey } from '@solana/web3.js'\nimport { AnchorWallet } from '@interdao/core'\nimport { WalletInterface } from '@senswap/sen-js'\n\nclass SafeWallet implements AnchorWallet {\n  private _wallet: WalletInterface = window.sentre.wallet\n  private _publicKey: PublicKey = new PublicKey(\n    'GuestAccount11111111111111111111111111111111',\n  )\n\n  constructor() {\n    this._init()\n  }\n\n  private _init = async () => {\n    const address = await this._wallet.getAddress()\n    this._publicKey = new PublicKey(address)\n  }\n\n  signTransaction = async (tx: Transaction): Promise<Transaction> => {\n    return this._wallet.signTransaction(tx)\n  }\n\n  signAllTransactions = async (txs: Transaction[]): Promise<Transaction[]> => {\n    let signedTxs: Transaction[] = []\n    for (const tx of txs) {\n      const signedTx = await this.signTransaction(tx)\n      signedTxs.push(signedTx)\n    }\n    return signedTxs\n  }\n\n  get publicKey() {\n    console.warn(\n      'This is an async getter for interface consistency. Please do not fully rely on this function.',\n    )\n    return this._publicKey\n  }\n}\n\nexport default SafeWallet\n","import InterDAO from '@interdao/core'\nimport SafeWallet from 'app/helpers/safeWallet'\nimport { Net } from 'shared/runtime'\n\n/**\n * Contructor\n */\ntype Conf = {\n  rpc: string\n  interDao: InterDAO\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    rpc: 'https://api.devnet.solana.com',\n    interDao: new InterDAO(new SafeWallet()),\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    rpc: 'https://api.testnet.solana.com',\n    interDao: new InterDAO(new SafeWallet()),\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    rpc: 'https://ssc-dao.genesysgo.net',\n    interDao: new InterDAO(new SafeWallet()),\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from 'shared/runtime'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\nimport { utils } from '@project-serum/anchor'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type MetaData = {\n  members: number\n  description: string\n  bannel: string\n  avatar: string\n}\nexport type MetaDataState = Record<string, MetaData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'metadata'\nconst initialState: MetaDataState = {}\n\n/**\n * Actions\n */\n\nexport const getMember = createAsyncThunk<\n  MetaDataState,\n  { daoAddress: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getMember`, async ({ daoAddress, force }, { getState }) => {\n  if (!account.isAddress(daoAddress)) throw new Error('Invalid address')\n  const {\n    dao: {\n      [daoAddress]: { mint },\n    },\n    metadata: { [daoAddress]: data },\n  } = getState()\n  const mintAddress = mint.toBase58()\n  if (!account.isAddress(mintAddress)) return {}\n  if (data && !force) return { [daoAddress]: data }\n  const {\n    provider: { connection },\n  } = interDao.program\n  const accounts = await connection.getProgramAccounts(\n    utils.token.TOKEN_PROGRAM_ID,\n    {\n      filters: [\n        { dataSize: 165 },\n        { memcmp: { bytes: mintAddress, offset: 0 } },\n      ],\n    },\n  )\n  return { [daoAddress]: { members: accounts.length } }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      getMember.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { getMember, MetaData } from 'app/model/metadata.controller'\n\nconst useMembers = (daoAddress: string) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { metadata, dao } = useSelector((state: AppState) => state)\n\n  const { members } = useMemo(\n    () => metadata[daoAddress] || ({} as MetaData),\n    [daoAddress, metadata],\n  )\n  const isExistDao = useMemo(() => {\n    return !!Object.keys(dao).length\n  }, [dao])\n\n  useEffect(() => {\n    if (isExistDao && account.isAddress(daoAddress)) {\n      dispatch(getMember({ daoAddress }))\n    }\n  }, [dispatch, daoAddress, isExistDao])\n\n  return members || 0\n}\n\nexport default useMembers\n","import { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { DaoData } from '@interdao/core'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport StatisticCard from 'app/components/statisticCard'\nimport RegimeTag from 'app/components/regimeTag'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport GradientAvatar from 'app/components/gradientAvatar'\n\nimport { AppState } from 'app/model'\nimport { numeric, shortenAddress } from 'shared/util'\nimport useMembers from 'app/hooks/useMembers'\n\nexport type DaoCardProps = { daoAddress: string }\n\nconst DaoCard = ({ daoAddress }: DaoCardProps) => {\n  const { dao } = useSelector((state: AppState) => state)\n  const history = useHistory()\n\n  const { regime, nonce, mint } = dao[daoAddress] || ({} as DaoData)\n  const members = useMembers(daoAddress)\n\n  return (\n    <Card\n      bordered={false}\n      onClick={() => history.push(`dao/${daoAddress}`)}\n      hoverable\n    >\n      <Row gutter={[20, 20]}>\n        <Col span={24}>\n          <Row gutter={[16, 16]} wrap={false}>\n            <Col>\n              <GradientAvatar\n                seed={daoAddress}\n                avatarProps={{ shape: 'square', size: 56 }}\n              />\n            </Col>\n            <Col flex=\"auto\">\n              <Space direction=\"vertical\" size={0}>\n                <Typography.Title level={4}>\n                  {shortenAddress(daoAddress)}\n                </Typography.Title>\n                <Space size={2} style={{ marginLeft: -8 }}>\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-discord\" />} />\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-twitter\" />} />\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-telegram\" />} />\n                </Space>\n              </Space>\n            </Col>\n            <Col>\n              <RegimeTag regime={regime} />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[16, 16]}>\n            <Col span={8}>\n              <StatisticCard\n                title=\"Token\"\n                value={\n                  <Space>\n                    <MintAvatar mintAddress={mint.toBase58()} />\n                    <MintSymbol mintAddress={mint.toBase58()} />\n                  </Space>\n                }\n              />\n            </Col>\n            <Col span={8}>\n              <StatisticCard\n                title=\"Proposals\"\n                value={numeric(Number(nonce)).format('0,0')}\n              />\n            </Col>\n            <Col span={8}>\n              <StatisticCard\n                title=\"Members\"\n                value={numeric(members).format('0,0')}\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph type=\"secondary\" ellipsis={{ rows: 3 }}>\n            About: dOrg is helping to build the SafeSnap app, which enables\n            cheap yet secure governance through on-chain execution of off-chain\n            votes. dOrg is helping to build the SafeSnap app, which enables\n            cheap yet secure governance through on-chain execution of off-chain\n            votes.\n          </Typography.Paragraph>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default DaoCard\n","import { useSelector } from 'react-redux'\nimport LazyLoad from '@senswap/react-lazyload'\n\nimport { Col, Row } from 'antd'\nimport DaoCard from './daoCard'\n\nimport { AppState } from 'app/model'\n\nconst DaoList = () => {\n  const { dao } = useSelector((state: AppState) => state)\n\n  return (\n    <Row gutter={[24, 24]}>\n      {Object.keys(dao).map((daoAddress) => (\n        <Col key={daoAddress} xs={24} md={12}>\n          <LazyLoad height={282.05}>\n            <DaoCard daoAddress={daoAddress} />\n          </LazyLoad>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default DaoList\n","import { useMemo } from 'react'\nimport LazyLoad from '@senswap/react-lazyload'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { useWallet } from '@senhub/providers'\nimport { account } from '@senswap/sen-js'\nimport { DaoData } from '@interdao/core'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport DaoCard from './daoCard'\n\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst YourDaos = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const { dao } = useSelector((state: AppState) => state)\n  const history = useHistory()\n\n  const filteredDaos = useMemo(\n    () =>\n      Object.keys(dao).filter((daoAddr) => {\n        const { authority } = dao[daoAddr] || ({} as DaoData)\n        const authAddress = authority.toBase58()\n        return account.isAddress(authAddress) && authAddress === walletAddress\n      }),\n    [dao, walletAddress],\n  )\n\n  if (!!filteredDaos.length)\n    return (\n      <Row gutter={[24, 24]}>\n        {filteredDaos.map((daoAddress) => (\n          <Col span={12} key={daoAddress}>\n            <LazyLoad height={191.5}>\n              <DaoCard daoAddress={daoAddress} />\n            </LazyLoad>\n          </Col>\n        ))}\n      </Row>\n    )\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Card bordered={false} bodyStyle={{ padding: 45, textAlign: 'center' }}>\n          <Space direction=\"vertical\" align=\"center\">\n            <Typography.Text type=\"secondary\">\n              You have no DAO yet!\n            </Typography.Text>\n            <Button onClick={() => history.push(`/app/${appId}/dao/new-dao`)}>\n              Build your DAO\n            </Button>\n          </Space>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default YourDaos\n","import { useHistory } from 'react-router-dom'\n\nimport { Row, Col, Button, Tabs } from 'antd'\nimport Hero from './hero'\nimport DaoList from './daoList'\nimport YourDaos from './daoList/yourDao'\n\nimport configs from 'app/configs'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst Dao = () => {\n  const history = useHistory()\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Hero />\n      </Col>\n      <Col span={24}>\n        <Tabs\n          style={{ overflow: 'visible' }}\n          tabBarExtraContent={\n            <Button\n              type=\"primary\"\n              onClick={() => history.push(`/app/${appId}/dao/new-dao`)}\n              icon={<IonIcon name=\"add-outline\" />}\n            >\n              New DAO\n            </Button>\n          }\n        >\n          <Tabs.TabPane tab=\"Community DAOs\" key=\"community-daos\">\n            <DaoList />\n          </Tabs.TabPane>\n          <Tabs.TabPane tab=\"Your DAOs\" key=\"your-daos\">\n            <YourDaos />\n          </Tabs.TabPane>\n        </Tabs>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Dao\n","import { Tag } from 'antd'\n\nimport { randomColor } from 'shared/util'\n\nexport type ProposalStatusType = 'Completed' | 'Voting' | 'Preparing'\nexport type ProposalStatusProps = {\n  status: ProposalStatusType\n}\n\nconst ProposalStatus = ({ status }: ProposalStatusProps) => {\n  return (\n    <Tag\n      style={{ color: randomColor(status), margin: 0 }}\n      color={randomColor(status, 0.2)}\n    >\n      {status}\n    </Tag>\n  )\n}\n\nexport default ProposalStatus\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { SystemProgram } from '@solana/web3.js'\nimport moment from 'moment'\nimport BN from 'bn.js'\n\nimport { Card, Col, Divider, Row, Space, Typography } from 'antd'\nimport GradientAvatar from 'app/components/gradientAvatar'\nimport ProposalStatus, {\n  ProposalStatusType,\n} from 'app/components/proposalStatus'\n\nimport { shortenAddress } from 'shared/util'\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport type ProposalCardProps = { proposalAddress: string }\n\nconst currentDate = Math.floor(Number(new Date()) / 1000)\n\nconst ProposalCard = ({ proposalAddress }: ProposalCardProps) => {\n  const history = useHistory()\n  const { proposal } = useSelector((state: AppState) => state)\n  const { dao, startDate, endDate, index } = proposal[proposalAddress] || {\n    dao: SystemProgram.programId,\n    startDate: new BN(currentDate),\n    endDate: new BN(currentDate),\n    index: new BN(0),\n  }\n\n  let status: ProposalStatusType = useMemo(() => {\n    if (currentDate < Number(startDate)) return 'Preparing'\n    if (currentDate < Number(endDate)) return 'Voting'\n    return 'Completed'\n  }, [startDate, endDate])\n\n  return (\n    <Card\n      bordered={false}\n      onClick={() =>\n        history.push(\n          `/app/${appId}/dao/${dao.toBase58()}/proposal/${proposalAddress}`,\n        )\n      }\n      hoverable\n    >\n      <Row gutter={[24, 24]}>\n        <Col span={24}>\n          <Row gutter={[16, 16]} wrap={false} align=\"middle\">\n            <Col>\n              <GradientAvatar seed={proposalAddress} />\n            </Col>\n            <Col flex=\"auto\">\n              <Row>\n                <Col span={24}>\n                  <Row>\n                    <Col>\n                      <Typography.Title level={5}>\n                        {shortenAddress(proposalAddress)}\n                      </Typography.Title>\n                    </Col>\n                    <Col>\n                      <Divider type=\"vertical\" />\n                    </Col>\n                    <Col flex=\"auto\">\n                      <Typography.Title level={5} type=\"secondary\">\n                        {`#${Number(index) + 1}`}\n                      </Typography.Title>\n                    </Col>\n                    <Col>\n                      <ProposalStatus status={status} />\n                    </Col>\n                  </Row>\n                </Col>\n                <Col span={24}>\n                  <Space>\n                    <Typography.Text className=\"caption\" type=\"secondary\">\n                      End Date:\n                    </Typography.Text>\n                    <Typography.Text className=\"caption\">\n                      {moment(Number(endDate) * 1000).format(\n                        'hh:mm A, MMM Do, YYYY',\n                      )}\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph type=\"secondary\" ellipsis={{ rows: 2 }}>\n            Lorem ipsum, sem, vulputate fusce magna non mattis, diam auctor,\n            commodo risus. Lorem ipsum, sem, vulputate fusce magna non mattis,\n            diam auctor, commodo risus. Lorem ipsum, sem, vulputate fusce magna\n            non mattis, diam auctor, commodo risus. Lorem ipsum, sem, vulputate\n            fusce magna non mattis, diam auctor, commodo risus.\n          </Typography.Paragraph>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default ProposalCard\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { ProposalData } from '@interdao/core'\nimport { account } from '@senswap/sen-js'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type ProposalState = Record<string, ProposalData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'proposal'\nconst initialState: ProposalState = {}\n\n/**\n * Actions\n */\n\nexport const getProposals = createAsyncThunk(\n  `${NAME}/getProposals`,\n  async ({ daoAddress }: { daoAddress: string }) => {\n    const {\n      provider: { connection },\n      programId,\n    } = interDao.program\n    const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n      await connection.getProgramAccounts(programId, {\n        filters: [\n          {\n            memcmp: {\n              offset: 48,\n              bytes: daoAddress,\n            },\n          },\n        ],\n      })\n    let bulk: ProposalState = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = interDao.parseProposalData(buf)\n      bulk[address] = data\n    })\n    return bulk\n  },\n)\n\nexport const getProposal = createAsyncThunk<\n  ProposalState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getProposal`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    dao: { [address]: data },\n  } = getState()\n  if (data && !force) return { [address]: data }\n  const raw = await interDao.getProposalData(address)\n  return { [address]: raw }\n})\n\nexport const upsetProposal = createAsyncThunk<\n  ProposalState,\n  { address: string; data: ProposalData },\n  { state: any }\n>(`${NAME}/upsetProposal`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteProposal = createAsyncThunk(\n  `${NAME}/deleteProposal`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getProposals.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport LazyLoad from '@senswap/react-lazyload'\nimport { useWallet } from '@senhub/providers'\nimport { DaoRegimes } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\nimport { SystemProgram } from '@solana/web3.js'\n\nimport { Button, Col, Row, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ProposalCard from './proposalCard'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { getProposals } from 'app/model/proposal.controller'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport type ProposalListProps = { daoAddress: string }\n\nconst ProposalList = ({ daoAddress }: ProposalListProps) => {\n  const { proposal, dao } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n  const history = useHistory()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const { regime, authority } = dao[daoAddress] || {\n    regime: DaoRegimes.Dictatorial,\n    authority: SystemProgram.programId,\n  }\n  const authorized = useMemo(() => {\n    if (isEqual(regime, DaoRegimes.Autonomous)) return true\n    if (authority.toBase58() === walletAddress) return true\n    return false\n  }, [regime, authority, walletAddress])\n\n  useEffect(() => {\n    dispatch(getProposals({ daoAddress }))\n  }, [dispatch, daoAddress])\n\n  const proposalAddresses = useMemo(() => {\n    const expandedProposal = Object.keys(proposal).map((address) => ({\n      address,\n      ...proposal[address],\n    }))\n    return expandedProposal\n      .filter(({ dao }) => dao.toBase58() === daoAddress)\n      .map(({ address }) => address)\n  }, [proposal, daoAddress])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row gutter={[16, 16]} wrap={false} align=\"bottom\">\n          <Col flex=\"auto\">\n            <Typography.Title level={4}>Proposals</Typography.Title>\n          </Col>\n          <Col>\n            <Button\n              type=\"primary\"\n              icon={<IonIcon name=\"add-outline\" />}\n              onClick={() =>\n                history.push(`/app/${appId}/dao/${daoAddress}/new-proposal`)\n              }\n              disabled={!authorized}\n            >\n              New Proposal\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n      {proposalAddresses.map((proposalAddress) => (\n        <Col key={proposalAddress} span={24}>\n          <LazyLoad height={176}>\n            <ProposalCard proposalAddress={proposalAddress} />\n          </LazyLoad>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default ProposalList\n","import { useSelector } from 'react-redux'\nimport { SystemProgram } from '@solana/web3.js'\nimport BN from 'bn.js'\n\nimport { Button, Card, Col, Divider, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport StatisticCard from 'app/components/statisticCard'\nimport RegimeTag from 'app/components/regimeTag'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport GradientAvatar from 'app/components/gradientAvatar'\n\nimport { AppState } from 'app/model'\nimport { numeric, shortenAddress } from 'shared/util'\nimport useMembers from 'app/hooks/useMembers'\n\nexport type DaoCardProps = { daoAddress: string }\n\nconst DaoCard = ({ daoAddress }: DaoCardProps) => {\n  const { dao } = useSelector((state: AppState) => state)\n\n  const { regime, nonce, mint } = dao[daoAddress] || {\n    regime: {},\n    nonce: new BN(0),\n    mint: SystemProgram.programId,\n  }\n  const members = useMembers(daoAddress)\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[24, 24]}>\n        <Col span={24}>\n          <Row gutter={[16, 16]} wrap={false}>\n            <Col>\n              <GradientAvatar\n                seed={daoAddress}\n                avatarProps={{ shape: 'square', size: 56 }}\n              />\n            </Col>\n            <Col>\n              <Space direction=\"vertical\" size={0}>\n                <Typography.Title level={4}>\n                  {shortenAddress(daoAddress)}\n                </Typography.Title>\n                <Space size={2} style={{ marginLeft: -8 }}>\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-discord\" />} />\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-twitter\" />} />\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-telegram\" />} />\n                </Space>\n              </Space>\n            </Col>\n            <Col>\n              <Divider type=\"vertical\" style={{ height: '100%' }} />\n            </Col>\n            <Col flex=\"auto\">\n              <Row gutter={[36, 36]} wrap={false}>\n                <Col>\n                  <StatisticCard\n                    title=\"Token\"\n                    value={\n                      <Space>\n                        <MintAvatar mintAddress={mint.toBase58()} />\n                        <MintSymbol mintAddress={mint.toBase58()} />\n                      </Space>\n                    }\n                  />\n                </Col>\n                <Col>\n                  <StatisticCard\n                    title=\"Proposals\"\n                    value={numeric(Number(nonce)).format('0,0')}\n                  />\n                </Col>\n                <Col>\n                  <StatisticCard\n                    title=\"Members\"\n                    value={numeric(members).format('0,0')}\n                  />\n                </Col>\n                <Col>\n                  <StatisticCard\n                    title=\"Regime\"\n                    value={<RegimeTag regime={regime} />}\n                  />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph type=\"secondary\">\n            About: dOrg is helping to build the SafeSnap app, which enables\n            cheap yet secure governance through on-chain execution of off-chain\n            votes. dOrg is helping to build the SafeSnap app, which enables\n            cheap yet secure governance through on-chain execution of off-chain\n            votes.\n          </Typography.Paragraph>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default DaoCard\n","import { useHistory, useParams } from 'react-router-dom'\n\nimport { Button, Col, Row } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ProposalList from './proposalList'\nimport DaoDetails from '../dao/daoDetails'\n\nimport configs from 'app/configs'\nimport './index.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst Proposal = () => {\n  const history = useHistory()\n  const { daoAddress } = useParams<{ daoAddress: string }>()\n\n  return (\n    <Row gutter={[24, 24]} align=\"middle\">\n      <Col span={24}>\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Button\n              icon={<IonIcon name=\"arrow-back-outline\" />}\n              type=\"text\"\n              onClick={() => history.push(`/app/${appId}/dao`)}\n              style={{ marginLeft: -8 }}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col span={24}>\n            <DaoDetails daoAddress={daoAddress} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <ProposalList daoAddress={daoAddress} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Proposal\n","import { ConsensusMechanism, ConsensusMechanisms } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\n\nimport { Button, Row, Col, Space, Typography, Popover } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nexport type ConsensusMechanismInputProps = {\n  value: ConsensusMechanism\n  onChange: (value: ConsensusMechanism) => void\n}\n\nconst ConsensusMechanismInput = ({\n  value = ConsensusMechanisms.StakedTokenCounter,\n  onChange = () => {},\n}: ConsensusMechanismInputProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space>\n          <Typography.Text>Consensus Mechanism</Typography.Text>\n          <Popover\n            overlayStyle={{ maxWidth: 300 }}\n            trigger=\"click\"\n            content={\n              <Row gutter={[16, 16]}>\n                <Col span={24}>\n                  <Typography.Title level={5}>\n                    What are Consensus Mechanisms?\n                  </Typography.Title>\n                </Col>\n                <Col span={24}>\n                  <Space direction=\"vertical\">\n                    <Typography.Text>\n                      <strong>Staked (Token) Counter.</strong> The power of a\n                      vote is only counted based on the number of staked tokens.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Locked (Token) Counter.</strong> The power of a\n                      vote is the product of the number of staked tokens and the\n                      lock time in seconds.\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            }\n          >\n            <Button\n              type=\"text\"\n              size=\"small\"\n              icon={<IonIcon name=\"information-circle-outline\" />}\n            />\n          </Popover>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space>\n          <Button\n            type={\n              isEqual(value, ConsensusMechanisms.StakedTokenCounter)\n                ? 'primary'\n                : 'default'\n            }\n            onClick={() => onChange(ConsensusMechanisms.StakedTokenCounter)}\n            ghost\n          >\n            Staked Counter\n          </Button>\n          <Button\n            type={\n              isEqual(value, ConsensusMechanisms.LockedTokenCounter)\n                ? 'primary'\n                : 'default'\n            }\n            onClick={() => onChange(ConsensusMechanisms.LockedTokenCounter)}\n            ghost\n          >\n            Locked Counter\n          </Button>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ConsensusMechanismInput\n","import { ConsensusQuorum, ConsensusQuorums } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\n\nimport { Button, Row, Col, Space, Typography } from 'antd'\n\nexport type ConsensusQuorumInputProps = {\n  value: ConsensusQuorum\n  onChange: (value: ConsensusQuorum) => void\n}\n\nconst ConsensusQuorumInput = ({\n  value = ConsensusQuorums.Half,\n  onChange = () => {},\n}: ConsensusQuorumInputProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Typography.Text>Consensus Quorum</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <Space>\n          <Button\n            type={\n              isEqual(value, ConsensusQuorums.OneThird) ? 'primary' : 'default'\n            }\n            onClick={() => onChange(ConsensusQuorums.OneThird)}\n            ghost\n          >\n            1/3\n          </Button>\n          <Button\n            type={isEqual(value, ConsensusQuorums.Half) ? 'primary' : 'default'}\n            onClick={() => onChange(ConsensusQuorums.Half)}\n            ghost\n          >\n            1/2\n          </Button>\n          <Button\n            type={\n              isEqual(value, ConsensusQuorums.TwoThird) ? 'primary' : 'default'\n            }\n            onClick={() => onChange(ConsensusQuorums.TwoThird)}\n            ghost\n          >\n            2/3\n          </Button>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ConsensusQuorumInput\n","import { Col, DatePicker, Row, Space, Typography } from 'antd'\nimport moment from 'moment'\n\nexport type DurationInputType = {\n  value: Array<number>\n  onChange: (value: Array<number>) => void\n}\n\nconst DurationInput = ({ value, onChange }: DurationInputType) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Typography.Text>Proposal Duration</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <Space>\n          <DatePicker\n            placeholder=\"Start Date\"\n            value={moment(value[0])}\n            onChange={(e) => onChange([e?.valueOf() || value[0], value[1]])}\n            showTime\n          />\n          <DatePicker\n            placeholder=\"End Date\"\n            value={moment(value[1])}\n            onChange={(e) => onChange([value[0], e?.valueOf() || value[1]])}\n            showTime\n          />\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DurationInput\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { DaoData } from '@interdao/core'\nimport { SystemProgram } from '@solana/web3.js'\n\nimport { Col, Divider, Row, Space, Typography } from 'antd'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport GradientAvatar from 'app/components/gradientAvatar'\nimport StatisticCard from 'app/components/statisticCard'\nimport RegimeTag from 'app/components/regimeTag'\n\nimport configs from 'app/configs'\nimport { AppState } from 'app/model'\nimport { numeric, shortenAddress } from 'shared/util'\nimport useMembers from 'app/hooks/useMembers'\n\nconst {\n  sol: { interDao },\n} = configs\n\nexport type ProposalPreviewProps = {\n  daoAddress: string\n}\n\nconst ProposalPreview = ({ daoAddress }: ProposalPreviewProps) => {\n  const [proposalAddress, setProposalAddress] = useState('')\n  const { dao } = useSelector((state: AppState) => state)\n\n  const { regime, nonce, mint } =\n    dao[daoAddress] ||\n    ({\n      regime: {},\n      mint: SystemProgram.programId,\n    } as DaoData)\n  const members = useMembers(daoAddress)\n\n  const findProposal = useCallback(async () => {\n    if (nonce === undefined || !account.isAddress(daoAddress)) return\n    const proposalAddress = await interDao.deriveProposalAddress(\n      daoAddress,\n      nonce,\n    )\n    return setProposalAddress(proposalAddress)\n  }, [daoAddress, nonce])\n\n  useEffect(() => {\n    findProposal()\n  }, [findProposal])\n\n  return (\n    <Row gutter={[16, 16]} wrap={false}>\n      <Col>\n        <GradientAvatar seed={proposalAddress} avatarProps={{ size: 48 }} />\n      </Col>\n      <Col>\n        <Space size={0} direction=\"vertical\">\n          <Typography.Title level={5}>\n            {shortenAddress(proposalAddress)}\n          </Typography.Title>\n          <Typography.Text type=\"secondary\">\n            {`Proposal #${Number(nonce) + 1}`}\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col>\n        <Divider type=\"vertical\" style={{ height: '100%' }} />\n      </Col>\n      <Col flex=\"auto\">\n        <Row gutter={[36, 36]}>\n          <Col>\n            <StatisticCard\n              title=\"DAO Address\"\n              value={shortenAddress(daoAddress)}\n            />\n          </Col>\n          <Col>\n            <StatisticCard\n              title=\"Token\"\n              value={\n                <Space>\n                  <MintAvatar mintAddress={mint.toBase58()} />\n                  <MintSymbol mintAddress={mint.toBase58()} />\n                </Space>\n              }\n            />\n          </Col>\n          <Col>\n            <StatisticCard\n              title=\"Members\"\n              value={numeric(members).format('0,0')}\n            />\n          </Col>\n          <Col>\n            <StatisticCard\n              title=\"Regime\"\n              value={<RegimeTag regime={regime} />}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProposalPreview\n","import { Card, Space, Typography } from 'antd'\nimport { MintAvatar, MintName } from 'shared/antd/mint'\n\nimport { randomColor } from 'shared/util'\n\nexport type MintTagProps = {\n  mintAddress: string\n  onClick?: (mintAddress: string) => void\n}\n\nconst MintTag = ({ mintAddress, onClick = () => {} }: MintTagProps) => {\n  return (\n    <Card\n      bodyStyle={{ padding: 8, cursor: 'pointer' }}\n      style={{ backgroundColor: randomColor(mintAddress, 0.2) }}\n      bordered={false}\n      onClick={() => onClick(mintAddress)}\n    >\n      <Space>\n        <MintAvatar mintAddress={mintAddress} />\n        <Typography.Text style={{ color: randomColor(mintAddress) }}>\n          <MintName mintAddress={mintAddress} />\n        </Typography.Text>\n      </Space>\n    </Card>\n  )\n}\nexport default MintTag\n","import { Card, Col, Row, Space, Typography } from 'antd'\nimport { MintAvatar, MintName, MintSymbol } from 'shared/antd/mint'\n\nexport type MintSelectionProps = {\n  mintAddress: string\n}\n\nconst MintCard = ({ mintAddress }: MintSelectionProps) => {\n  return (\n    <Card\n      bodyStyle={{ padding: 8 }}\n      style={{ boxShadow: 'unset', cursor: 'pointer' }}\n      bordered={false}\n    >\n      <Row gutter={[16, 16]} align=\"middle\">\n        <Col>\n          <MintAvatar mintAddress={mintAddress} size={36} />\n        </Col>\n        <Col>\n          <Space direction=\"vertical\" size={0}>\n            <Typography.Text>\n              <MintSymbol mintAddress={mintAddress} />\n            </Typography.Text>\n            <Typography.Text type=\"secondary\" className=\"caption\">\n              <MintName mintAddress={mintAddress} />\n            </Typography.Text>\n          </Space>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default MintCard\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\n\nexport const useAllMintAddresses = () => {\n  const [allMintAddresses, setAllMintAddresses] = useState<string[]>([])\n  const { tokenProvider } = useMint()\n\n  const getRecommendedMintAddresses = useCallback(async () => {\n    const allMintAddresses = (await tokenProvider.all()).map(\n      ({ address }) => address,\n    )\n    const addresses = allMintAddresses.filter((mintAddress) =>\n      allMintAddresses.includes(mintAddress),\n    )\n    return setAllMintAddresses(addresses)\n  }, [tokenProvider])\n\n  useEffect(() => {\n    getRecommendedMintAddresses()\n  }, [getRecommendedMintAddresses])\n\n  return allMintAddresses\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\n\nlet searching: NodeJS.Timeout\n\nexport const useSearchedMintAddresses = (keyword: string = '') => {\n  const [loading, setLoading] = useState(false)\n  const [searchedMintAddresses, setSearchedMintAddresses] = useState<\n    string[] | undefined\n  >()\n  const { tokenProvider } = useMint()\n\n  const getRecommendedMintAddresses = useCallback(async () => {\n    if (!keyword) {\n      setLoading(false)\n      return setSearchedMintAddresses(undefined)\n    }\n    if (searching) clearTimeout(searching)\n    setLoading(true)\n    searching = setTimeout(async () => {\n      const addresses = (await tokenProvider.find(keyword)).map(\n        ({ address }) => address,\n      )\n      setLoading(false)\n      return setSearchedMintAddresses(addresses)\n    }, 500)\n  }, [keyword, tokenProvider])\n\n  useEffect(() => {\n    getRecommendedMintAddresses()\n  }, [getRecommendedMintAddresses])\n\n  return { searchedMintAddresses, loading }\n}\n","import {\n  ChangeEvent,\n  CSSProperties,\n  Fragment,\n  useEffect,\n  useState,\n} from 'react'\nimport LazyLoad, { forceCheck } from '@senswap/react-lazyload'\n\nimport { Button, Col, Input, Modal, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport MintTag from './mintTag'\nimport MintCard from './mintCard'\n\nimport { useRecommendedMintAddresses } from './useRecommendedMintAddresses'\nimport { useSearchedMintAddresses } from './useSearchedMintAddresses'\nimport { useAllMintAddresses } from './useAllMintAddresses'\n\nexport type MintSelectionProps = {\n  value: string\n  onChange: (value: string) => void\n  style?: CSSProperties\n}\n\nconst MintSelection = ({ value, onChange, style = {} }: MintSelectionProps) => {\n  const [visible, setVisible] = useState(false)\n  const [keyword, setKeyword] = useState('')\n  const recommendedMintAddresses = useRecommendedMintAddresses()\n  const allMintAddresses = useAllMintAddresses()\n  const { searchedMintAddresses, loading } = useSearchedMintAddresses(keyword)\n\n  useEffect(() => {\n    forceCheck()\n  }, [searchedMintAddresses])\n\n  return (\n    <Fragment>\n      <Button\n        type=\"text\"\n        onClick={() => setVisible(true)}\n        style={{ padding: 4, ...style }}\n      >\n        <Space>\n          <MintAvatar mintAddress={value} />\n          <MintSymbol mintAddress={value} />\n          <IonIcon name=\"chevron-down-outline\" />\n        </Space>\n      </Button>\n      <Modal\n        visible={visible}\n        onCancel={() => setVisible(false)}\n        footer={null}\n        closeIcon={<IonIcon name=\"close-outline\" />}\n      >\n        <Row gutter={[36, 36]}>\n          <Col span={24}>\n            <Typography.Title level={5} type=\"secondary\">\n              Token Selection\n            </Typography.Title>\n          </Col>\n          <Col span={24}>\n            <Input\n              placeholder=\"Search token symbol, name, address, ...\"\n              suffix={\n                <Button\n                  type=\"text\"\n                  style={{ marginRight: -7 }}\n                  icon={\n                    <IonIcon\n                      name={keyword ? 'close-outline' : 'search-outline'}\n                    />\n                  }\n                  onClick={keyword ? () => setKeyword('') : () => {}}\n                  loading={loading}\n                />\n              }\n              value={keyword}\n              onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                setKeyword(e.target.value || '')\n              }\n            />\n          </Col>\n          <Col span={24}>\n            <Row gutter={[8, 8]}>\n              {recommendedMintAddresses.map((mintAddress) => (\n                <Col key={mintAddress}>\n                  <MintTag mintAddress={mintAddress} />\n                </Col>\n              ))}\n            </Row>\n          </Col>\n          <Col span={24}>\n            <Row\n              gutter={[8, 8]}\n              style={{ maxHeight: '45vh' }}\n              className=\"scrollbar\"\n            >\n              {(searchedMintAddresses || allMintAddresses).map(\n                (mintAddress) => (\n                  <Col span={24} key={mintAddress}>\n                    <LazyLoad height={56.05} overflow>\n                      <MintCard mintAddress={mintAddress} />\n                    </LazyLoad>\n                  </Col>\n                ),\n              )}\n            </Row>\n          </Col>\n        </Row>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default MintSelection\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useAccount } from '@senhub/providers'\n\nimport { useAllMintAddresses } from './useAllMintAddresses'\n\nexport const useRecommendedMintAddresses = () => {\n  const [recommendedMintAddresses, setRecommendedMintAddresses] = useState<\n    string[]\n  >([])\n  const { accounts } = useAccount()\n  const allMintAddresses = useAllMintAddresses()\n\n  const myMintAddresses = useMemo(() => {\n    return Object.values(accounts)\n      .map(({ mint }) => mint)\n      .filter((mintAddress, index, self) => self.indexOf(mintAddress) === index)\n  }, [accounts])\n\n  const getRecommendedMintAddresses = useCallback(async () => {\n    const addresses = myMintAddresses.filter((mintAddress) =>\n      allMintAddresses.includes(mintAddress),\n    )\n    return setRecommendedMintAddresses(addresses)\n  }, [myMintAddresses, allMintAddresses])\n\n  useEffect(() => {\n    getRecommendedMintAddresses()\n  }, [getRecommendedMintAddresses])\n\n  return recommendedMintAddresses\n}\n","import { useCallback, useState, Fragment, ChangeEvent } from 'react'\nimport { PublicKey, SystemProgram } from '@solana/web3.js'\nimport { utils } from '@project-serum/anchor'\nimport { BN } from 'bn.js'\n// @ts-ignore\nimport * as soproxABI from 'soprox-abi'\n\nimport { Card, Col, Input, Modal, Row, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport MintSelection from 'app/components/mintSelection'\n\nimport { ProposalAccountType, ProposalDataType } from 'app/view/templates/types'\n\nexport const toData = (amount = new BN(0)) => {\n  const schema = [\n    { key: 'code', type: 'u8' },\n    { key: 'amount', type: 'u64' },\n  ]\n  const buf = new soproxABI.struct(schema, {\n    code: 3,\n    amount: BigInt(amount.toString()),\n  })\n  return buf\n}\n\nexport type TransferSplPluginValueType = {\n  name: 'spl/transfer'\n  data: ProposalDataType\n  accounts: {\n    src: ProposalAccountType\n    dst: ProposalAccountType\n    payer: ProposalAccountType\n  }\n  programId: PublicKey\n}\n\nconst DEFAULT_VALUE: TransferSplPluginValueType = {\n  name: 'spl/transfer',\n  data: toData(),\n  accounts: {\n    src: {\n      pubkey: SystemProgram.programId,\n      isWritable: true,\n      isSigner: false,\n      isMaster: false,\n    },\n    dst: {\n      pubkey: SystemProgram.programId,\n      isWritable: true,\n      isSigner: false,\n      isMaster: false,\n    },\n    payer: {\n      pubkey: SystemProgram.programId,\n      isWritable: true,\n      isSigner: true,\n      isMaster: true,\n    },\n  },\n  programId: utils.token.TOKEN_PROGRAM_ID,\n}\n\nexport type TransferSplPluginProps = {\n  daoAddress: string\n  selected?: string\n  onChange?: (value: TransferSplPluginValueType) => void\n  onClick?: (value: string) => void\n}\n\nconst TransferSplPlugin = ({\n  daoAddress = '',\n  selected = '',\n  onChange = () => {},\n  onClick = () => {},\n}: TransferSplPluginProps) => {\n  const [visible, setVisible] = useState(false)\n  const [amount, setAmount] = useState('')\n  const [mintAddress, setMintAddress] = useState('')\n  const [receiverAddress, setReceiverAddress] = useState('')\n\n  const _onClick = useCallback(() => {\n    onClick(DEFAULT_VALUE.name)\n    return setVisible(true)\n  }, [onClick])\n\n  return (\n    <Fragment>\n      <Card\n        onClick={_onClick}\n        style={{ cursor: 'pointer' }}\n        bordered={selected === DEFAULT_VALUE.name}\n      >\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Typography.Title level={5} type=\"secondary\">\n              SPL/Transfer\n            </Typography.Title>\n          </Col>\n        </Row>\n      </Card>\n      <Modal\n        visible={true || visible}\n        onCancel={() => setVisible(false)}\n        closeIcon={<IonIcon name=\"close-outline\" />}\n        footer={null}\n      >\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Typography.Title level={5} type=\"secondary\">\n              SPL/Transfer\n            </Typography.Title>\n          </Col>\n          <Col span={24}>\n            <Input\n              placeholder=\"Input Amount\"\n              value={amount}\n              onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                setAmount(e.target.value || '')\n              }\n              prefix={\n                <MintSelection\n                  value={mintAddress}\n                  onChange={setMintAddress}\n                  style={{ marginLeft: -7 }}\n                />\n              }\n            />\n          </Col>\n          <Col span={24}>\n            <Input\n              placeholder=\"Input Receiver Address\"\n              value={receiverAddress}\n              onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                setReceiverAddress(e.target.value || '')\n              }\n            />\n          </Col>\n        </Row>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default TransferSplPlugin\n","import { useState } from 'react'\nimport { PublicKey } from '@solana/web3.js'\n\nimport { Col, Row, Typography } from 'antd'\nimport TransferSplPlugin from 'app/view/templates/spl/transfer'\n\nimport { ProposalAccountType, ProposalDataType } from 'app/view/templates/types'\n\nexport type TemplateInputProps = {\n  daoAddress: string\n  onChange?: (value: {\n    data: ProposalDataType\n    accounts: Record<string, ProposalAccountType>\n    programId: PublicKey\n  }) => void\n}\n\nconst TemplateInput = ({\n  daoAddress,\n  onChange = () => {},\n}: TemplateInputProps) => {\n  const [id, setId] = useState('')\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Typography.Text>Templates</Typography.Text>\n      </Col>\n      <Col span={12}>\n        <TransferSplPlugin\n          daoAddress={daoAddress}\n          onChange={console.log}\n          selected={id}\n          onClick={setId}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default TemplateInput\n","import { useCallback, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { ConsensusMechanisms, ConsensusQuorums } from '@interdao/core'\n\nimport { Button, Card, Col, Row, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ConsensusMechanismInput from './consensusMechanismInput'\nimport ConsensusQuorumInput from './consensusQuorumInput'\nimport DurationInput from './durationInput'\n\nimport configs from 'app/configs'\nimport ProposalPreview from './proposalPreview'\nimport TemplateInput from './templateInput'\n\nconst {\n  manifest: { appId },\n} = configs\nconst CURRENT_TIME = Number(new Date())\nconst ONE_DAY = 24 * 60 * 60 * 1000\n\nconst ProposalInitialization = () => {\n  const [consensusMechanism, setConsensusMechanism] = useState(\n    ConsensusMechanisms.StakedTokenCounter,\n  )\n  const [consensusQuorum, setConsensusQuorum] = useState(ConsensusQuorums.Half)\n  const [duration, setDuration] = useState([\n    CURRENT_TIME + ONE_DAY,\n    CURRENT_TIME + 15 * ONE_DAY,\n  ])\n  const [loading, setLoading] = useState(false)\n  const history = useHistory()\n  const { daoAddress } = useParams<{ daoAddress: string }>()\n\n  const newProposal = useCallback(() => {\n    try {\n      setLoading(true)\n      console.log(daoAddress, consensusMechanism, consensusQuorum, duration)\n    } catch (er: any) {\n      return window.notify({\n        type: 'error',\n        description: er.message,\n      })\n    } finally {\n      return setLoading(false)\n    }\n  }, [daoAddress, consensusMechanism, consensusQuorum, duration])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col xs={24} md={16}>\n        <Card bordered={false}>\n          <Row gutter={[24, 24]}>\n            <Col span={24}>\n              <Typography.Title level={3}>\n                New Proposal Information\n              </Typography.Title>\n            </Col>\n            <Col span={24} />\n            <Col span={24}>\n              <ProposalPreview daoAddress={daoAddress} />\n            </Col>\n            <Col span={24}>\n              <DurationInput value={duration} onChange={setDuration} />\n            </Col>\n            <Col span={24}>\n              <ConsensusMechanismInput\n                value={consensusMechanism}\n                onChange={setConsensusMechanism}\n              />\n            </Col>\n            <Col span={24}>\n              <ConsensusQuorumInput\n                value={consensusQuorum}\n                onChange={setConsensusQuorum}\n              />\n            </Col>\n            <Col span={24}>\n              <TemplateInput daoAddress={daoAddress} />\n            </Col>\n            <Col span={24} />\n            <Col flex=\"auto\">\n              <Button\n                type=\"text\"\n                icon={<IonIcon name=\"trash-outline\" />}\n                onClick={() => history.push(`/app/${appId}/dao/${daoAddress}`)}\n                size=\"large\"\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col>\n              <Button\n                onClick={newProposal}\n                loading={loading}\n                type=\"primary\"\n                size=\"large\"\n                icon={<IonIcon name=\"add-outline\" />}\n              >\n                Create the Proposal\n              </Button>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProposalInitialization\n","import { DaoRegime, DaoRegimes } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\n\nimport { Button, Row, Col, Space, Typography, Popover } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nexport type RegimeInputProps = {\n  value: DaoRegime\n  onChange: (value: DaoRegime) => void\n}\n\nconst RegimeInput = ({\n  value = DaoRegimes.Dictatorial,\n  onChange = () => {},\n}: RegimeInputProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space>\n          <Typography.Text>DAO Regime</Typography.Text>\n          <Popover\n            overlayStyle={{ maxWidth: 300 }}\n            trigger=\"click\"\n            content={\n              <Row gutter={[16, 16]}>\n                <Col span={24}>\n                  <Typography.Title level={5}>\n                    What is DAO Regime?\n                  </Typography.Title>\n                </Col>\n                <Col span={24}>\n                  <Space direction=\"vertical\">\n                    <Typography.Text>\n                      <strong>Dictatorial.</strong> Only DAO owner can create\n                      and execute proposals.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Democratic.</strong> Community can create\n                      proposals, DAO owner execute proposals.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Autonomous.</strong> Community can create and\n                      execute proposals.\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            }\n          >\n            <Button\n              type=\"text\"\n              size=\"small\"\n              icon={<IonIcon name=\"information-circle-outline\" />}\n            />\n          </Popover>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space>\n          <Button\n            type={\n              isEqual(value, DaoRegimes.Dictatorial) ? 'primary' : 'default'\n            }\n            onClick={() => onChange(DaoRegimes.Dictatorial)}\n            ghost\n          >\n            Dictatorial\n          </Button>\n          <Button\n            type={isEqual(value, DaoRegimes.Democratic) ? 'primary' : 'default'}\n            onClick={() => onChange(DaoRegimes.Democratic)}\n            ghost\n          >\n            Democratic\n          </Button>\n          <Button\n            type={isEqual(value, DaoRegimes.Autonomous) ? 'primary' : 'default'}\n            onClick={() => onChange(DaoRegimes.Autonomous)}\n            ghost\n          >\n            Autonomous\n          </Button>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default RegimeInput\n","import { ChangeEvent } from 'react'\n\nimport { Button, Col, Input, Row, Space, Typography } from 'antd'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport IonIcon from 'shared/antd/ionicon'\nimport { explorer } from 'shared/util'\n\nexport type TokenAddressInputProps = {\n  value: string\n  onChange: (value: string) => void\n}\n\nconst TokenAddressInput = ({ value, onChange }: TokenAddressInputProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Typography.Text>Token to Vote</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <Input\n          size=\"large\"\n          placeholder=\"Input Token Address\"\n          value={value}\n          onChange={(e: ChangeEvent<HTMLInputElement>) =>\n            onChange(e.target.value || '')\n          }\n          suffix={\n            <Button\n              type=\"text\"\n              icon={<IonIcon name=\"open-outline\" />}\n              onClick={() => window.open(explorer(value), '_blank')}\n              style={{ marginRight: -7 }}\n            >\n              <Space style={{ marginLeft: 7 }}>\n                <MintSymbol mintAddress={value} />\n                <MintAvatar mintAddress={value} />\n              </Space>\n            </Button>\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default TokenAddressInput\n","import { ChangeEvent, useState, forwardRef, useCallback, useRef } from 'react'\n\nimport { Input, Tooltip, Space, InputProps } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nlet timeoutId: ReturnType<typeof setTimeout> | undefined\n\n/**\n * Numeric Input\n * - Check balance based on the max\n * - Only accept numeric characters\n * @remarks The props of input follows the same as https://ant.design/components/input/#API. Extra & Overrided props\n * @param max - Maximum\n * @param onValue - A triggerred function if a valid number\n */\nconst NumericInput = forwardRef(\n  (\n    {\n      max,\n      onValue = () => {},\n      onChange = () => {},\n      ...props\n    }: InputProps & {\n      onValue?: (val: string) => void\n      max?: string | number\n    },\n    ref: any,\n  ) => {\n    const [error, setError] = useState('')\n    const [cursor, setCursor] = useState<number | null>(null)\n    const innerRef = useRef(ref)\n\n    // Handle amount\n    const onAmount = useCallback(\n      (val: string) => {\n        const onError = (er: string) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId)\n            timeoutId = undefined\n          }\n          setError(er)\n          timeoutId = setTimeout(() => setError(''), 500)\n        }\n        const reg = /^\\d*(\\.\\d*)?$/\n        if (!reg.test(val)) return onError('Invalid character')\n        if (max && parseFloat(val) > parseFloat(max.toString()))\n          return onError('Not enough balance')\n        return onValue(val)\n      },\n      [max, onValue],\n    )\n\n    // Handle cursor jumping\n    // To prevent autofocus on mobile, we must strictly check cursor different from null\n    if (cursor !== null) innerRef?.current?.setSelectionRange(cursor, cursor)\n\n    return (\n      <Tooltip\n        title={\n          <Space>\n            <IonIcon name=\"warning\" />\n            {error}\n          </Space>\n        }\n        visible={!!error}\n      >\n        <Input\n          {...props}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => {\n            onChange(e)\n            setCursor(e.target.selectionStart)\n            onAmount(e.target.value || '')\n          }}\n          ref={innerRef}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nexport default NumericInput\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\n\n/**\n * Get token decimals from multiple resources. This hook needs MintProvider for working.\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * @param mintAddress Mint address\n * @returns Decimals\n */\nconst useMintDecimals = (mintAddress: string) => {\n  const [decimals, setDecimals] = useState<number | undefined>(undefined)\n  const { getDecimals } = useMint()\n\n  const fetchDecimals = useCallback(async () => {\n    try {\n      const decimals = await getDecimals(mintAddress)\n      return setDecimals(decimals)\n    } catch (er: any) {\n      return setDecimals(undefined)\n    }\n  }, [mintAddress, getDecimals])\n\n  useEffect(() => {\n    fetchDecimals()\n  }, [fetchDecimals])\n\n  return decimals\n}\n\nexport default useMintDecimals\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\nimport BN from 'bn.js'\n\n/**\n * Get token's total supply. This hook needs MintProvider for working.\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * @param mintAddress Mint address\n * @returns Decimals\n */\nconst useMintSupply = (mintAddress: string) => {\n  const [supply, setSupply] = useState<BN | undefined>(undefined)\n  const { getMint } = useMint()\n\n  const fetchSupply = useCallback(async () => {\n    try {\n      const {\n        [mintAddress]: { supply },\n      } = await getMint({ address: mintAddress })\n      return setSupply(new BN(supply.toString()))\n    } catch (er: any) {\n      return setSupply(undefined)\n    }\n  }, [mintAddress, getMint])\n\n  useEffect(() => {\n    fetchSupply()\n  }, [fetchSupply])\n\n  return supply\n}\n\nexport default useMintSupply\n","import BN from 'bn.js'\n\nimport { Button, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport NumericInput from 'shared/antd/numericInput'\n\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport useMintSupply from 'shared/hooks/useMintSupply'\nimport { numeric } from 'shared/util'\n\nexport type CirculatingSupplyInputProps = {\n  mintAddress?: string\n  value: string\n  onChange: (value: string) => void\n}\n\nconst CirculatingSupplyInput = ({\n  mintAddress = '',\n  value,\n  onChange,\n}: CirculatingSupplyInputProps) => {\n  const decimals = useMintDecimals(mintAddress) || 0\n  const supply = useMintSupply(mintAddress)\n  const suggestion = String(supply?.div(new BN(10 ** decimals)) || new BN(0))\n\n  return (\n    <Row gutter={[8, 8]} justify=\"end\">\n      <Col span={24}>\n        <Typography.Text>Total DAO Power</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <NumericInput\n          value={value}\n          onValue={onChange}\n          size=\"large\"\n          placeholder=\"Input Total DAO Power\"\n          suffix={\n            <Button\n              type=\"text\"\n              onClick={() => onChange(suggestion)}\n              icon={<IonIcon name=\"copy-outline\" />}\n              style={{ marginRight: -7 }}\n            >\n              By Suggestion\n            </Button>\n          }\n        />\n      </Col>\n      <Col>\n        <Space>\n          <Typography.Text type=\"secondary\">\n            Suggestion (Token Supply):\n          </Typography.Text>\n          <Typography.Text>{numeric(suggestion).format('0,0')}</Typography.Text>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CirculatingSupplyInput\n","import { useCallback, useMemo, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { account } from '@senswap/sen-js'\nimport BN from 'bn.js'\nimport { DaoRegimes } from '@interdao/core'\n\nimport { Button, Card, Col, Row, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport RegimeInput from './regimeInput'\nimport TokenAddressInput from './tokenAddressInput'\nimport CirculatingSupplyInput from './circulatingSupplyInput'\n\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport configs from 'app/configs'\nimport { explorer } from 'shared/util'\n\nconst {\n  manifest: { appId },\n  sol: { interDao },\n} = configs\n\nconst DaoInitialization = () => {\n  const [regime, setRegime] = useState(DaoRegimes.Dictatorial)\n  const [mintAddress, setMintAddress] = useState('')\n  const [circulatingSupply, setCirculatingSupply] = useState('')\n  const [loading, setLoading] = useState(false)\n  const decimals = useMintDecimals(mintAddress) || 0\n  const history = useHistory()\n\n  const valid = useMemo(() => {\n    if (!account.isAddress(mintAddress)) return false\n    if (!circulatingSupply || !Number(circulatingSupply)) return false\n    if (!decimals) return false\n    return true\n  }, [mintAddress, circulatingSupply, decimals])\n\n  const newDao = useCallback(async () => {\n    if (!valid) return\n    try {\n      setLoading(true)\n      const supply = new BN(circulatingSupply).mul(\n        new BN(10).pow(new BN(decimals)),\n      )\n      const { txId, daoAddress } = await interDao.initializeDao(\n        mintAddress,\n        supply,\n        undefined,\n        regime,\n      )\n      window.notify({\n        type: 'success',\n        description: 'A new DAO is created. Click here to view details.',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n      return history.push(`/app/${appId}/dao/${daoAddress}`)\n    } catch (er: any) {\n      return window.notify({\n        type: 'error',\n        description: er.message,\n      })\n    } finally {\n      return setLoading(false)\n    }\n  }, [valid, regime, mintAddress, circulatingSupply, decimals, history])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col xs={24} md={16}>\n        <Card bordered={false}>\n          <Row gutter={[24, 24]}>\n            <Col span={24}>\n              <Typography.Title level={3}>New DAO Information</Typography.Title>\n            </Col>\n            <Col span={24} />\n            <Col span={24}>\n              <RegimeInput value={regime} onChange={setRegime} />\n            </Col>\n            <Col span={24}>\n              <TokenAddressInput\n                value={mintAddress}\n                onChange={setMintAddress}\n              />\n            </Col>\n            <Col span={24}>\n              <CirculatingSupplyInput\n                mintAddress={mintAddress}\n                value={circulatingSupply}\n                onChange={setCirculatingSupply}\n              />\n            </Col>\n            <Col span={24} />\n            <Col flex=\"auto\">\n              <Button\n                type=\"text\"\n                icon={<IonIcon name=\"trash-outline\" />}\n                onClick={() => history.push(`/app/${appId}/dao`)}\n                size=\"large\"\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col>\n              <Button\n                onClick={newDao}\n                loading={loading}\n                type=\"primary\"\n                size=\"large\"\n                icon={<IonIcon name=\"add-outline\" />}\n              >\n                Create the DAO\n              </Button>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoInitialization\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { ProposalData } from '@interdao/core'\nimport { getProposal, getProposals } from 'app/model/proposal.controller'\n\nconst useProposal = (proposalAddress: string, daoAddress: string) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { proposal } = useSelector((state: AppState) => state)\n\n  const data = useMemo(\n    () => proposal[proposalAddress] || ({} as ProposalData),\n    [proposal, proposalAddress],\n  )\n  const isExistProposal = useMemo(() => {\n    return !!Object.keys(proposal).length\n  }, [proposal])\n\n  useEffect(() => {\n    if (isExistProposal && account.isAddress(proposalAddress)) {\n      dispatch(getProposal({ address: proposalAddress }))\n    } else {\n      dispatch(getProposals({ daoAddress }))\n    }\n  }, [daoAddress, dispatch, isExistProposal, proposalAddress])\n\n  return { ...data }\n}\n\nexport default useProposal\n","import { useParams, useHistory } from 'react-router-dom'\nimport moment from 'moment'\n\nimport {\n  Button,\n  Card,\n  Col,\n  Row,\n  Space,\n  Typography,\n  Input,\n  Progress,\n} from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ProposalStatus from 'app/components/proposalStatus'\n\nimport useProposal from 'app/hooks/useProposal'\nimport { shortenAddress } from 'shared/util'\n\nimport configs from 'app/configs'\nimport { useSelector } from 'react-redux'\nimport { AppState } from 'app/model'\nimport { DaoData } from '@interdao/core'\nimport { MintSymbol } from 'shared/antd/mint'\n\nconst {\n  manifest: { appId },\n} = configs\n\ntype RowSpaceBetweenProps = {\n  label?: string\n  value?: string\n}\n\ntype ProposalChildCardProps = {\n  proposalAddress: string\n  daoAddress: string\n}\n\nconst RowSpaceBetween = ({ label = '', value = '' }: RowSpaceBetweenProps) => {\n  return (\n    <Row gutter={[24, 24]}>\n      <Col flex=\"auto\">{label}</Col>\n      <Col>{value}</Col>\n    </Row>\n  )\n}\n\nconst CardStatus = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const { dao } = useSelector((state: AppState) => state)\n  const { accountsLen } = useProposal(proposalAddress, daoAddress)\n\n  const { mint } = dao[daoAddress] || ({} as DaoData)\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col flex=\"auto\">\n          <Space direction=\"vertical\">\n            <Space>\n              <Typography.Title level={3}>\n                Donate to <MintSymbol mintAddress={mint?.toBase58()} />\n              </Typography.Title>\n              <ProposalStatus status={'Voting'} />\n            </Space>\n            <Space>\n              <IonIcon name=\"people-outline\" />\n              <Typography.Text>Member: {accountsLen}</Typography.Text>\n            </Space>\n          </Space>\n        </Col>\n        <Col>\n          <Button size=\"large\" type=\"primary\" disabled>\n            Excute\n          </Button>\n        </Col>\n        <Col span={24}>\n          <Typography.Text type=\"secondary\">\n            Lorem Ipsum is simply dummy text of the printing and typesetting\n            industry. Lorem Ipsum has been the industry's standard dummy text\n            ever since the 1500s, when an unknown printer took a galley of type\n            and scrambled it to make a type... View more\n          </Typography.Text>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nconst CardVote = ({ proposalAddress, daoAddress }: ProposalChildCardProps) => {\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Cast your vote</Typography.Title>\n        </Col>\n        <Col span={12}>\n          <Button\n            type=\"primary\"\n            icon={<IonIcon name=\"thumbs-up-outline\" />}\n            block\n          >\n            Yes\n          </Button>\n        </Col>\n        <Col span={12}>\n          <Button icon={<IonIcon name=\"thumbs-down-outline\" />} block>\n            No\n          </Button>\n        </Col>\n        <Col span={24}>\n          <Card\n            style={{ boxShadow: 'unset', borderRadius: 8 }}\n            bodyStyle={{ padding: 8 }}\n          >\n            <Row gutter={[8, 8]}>\n              <Col flex=\"auto\">\n                <Typography.Text>Amount vote</Typography.Text>\n              </Col>\n              <Col>\n                <Typography.Text>Available: {0}</Typography.Text>\n              </Col>\n              <Col span={24}>\n                <Input\n                  bordered={false}\n                  style={{ padding: 0 }}\n                  placeholder=\"0\"\n                  suffix={\n                    <Button size=\"small\" type=\"text\">\n                      Max\n                    </Button>\n                  }\n                />\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col span={24}>\n          <Button type=\"primary\" disabled block>\n            Vote\n          </Button>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nconst CardInfo = ({ proposalAddress, daoAddress }: ProposalChildCardProps) => {\n  const { consensusQuorum, startDate, endDate, consensusMechanism } =\n    useProposal(proposalAddress, daoAddress)\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Infomation</Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Space style={{ width: '100%' }} direction=\"vertical\">\n            <RowSpaceBetween\n              label=\"Proposal ID\"\n              value={shortenAddress(proposalAddress, 3)}\n            />\n            <RowSpaceBetween\n              label=\"Start time\"\n              value={moment(startDate?.toNumber()).format('MMM DD,yyyy HH:mm')}\n            />\n            <RowSpaceBetween\n              label=\"End time\"\n              value={moment(endDate?.toNumber()).format('MMM DD,yyyy HH:mm')}\n            />\n            <RowSpaceBetween label=\"Author\" value={'1'} />\n            <RowSpaceBetween\n              label=\"Quorum\"\n              value={consensusQuorum ? Object.keys(consensusQuorum)[0] : '1/2'}\n            />\n            <RowSpaceBetween\n              label=\"Vote method\"\n              value={\n                consensusMechanism ? Object.keys(consensusMechanism)[0] : ''\n              }\n            />\n          </Space>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nconst CardProgress = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Current results</Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Space size={0} style={{ width: '100%' }} direction=\"vertical\">\n            <Typography.Text type=\"secondary\">Quorum</Typography.Text>\n            <Typography.Text>989 more Yes votes required</Typography.Text>\n            <Progress\n              percent={100}\n              strokeColor=\"#d3d3d6\"\n              success={{ percent: 60, strokeColor: '#F9575E' }}\n              showInfo={false}\n            />\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Space className=\"space-full-width\">\n            <Row gutter={[0, 0]}>\n              <Col flex=\"auto\">\n                <Typography.Text type=\"secondary\">Yes vote</Typography.Text>\n              </Col>\n              <Col>\n                <Space>\n                  <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n                    55,07%\n                  </Typography.Text>\n                  <Typography.Title level={5}>102,161,162</Typography.Title>\n                </Space>\n              </Col>\n              <Col span={24}>\n                <Progress\n                  percent={100}\n                  strokeColor=\"#d3d3d6\"\n                  success={{ percent: 60, strokeColor: '#F9575E' }}\n                  showInfo={false}\n                />\n              </Col>\n            </Row>\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Space className=\"space-full-width\">\n            <Row gutter={[0, 0]}>\n              <Col flex=\"auto\">\n                <Typography.Text type=\"secondary\">No vote</Typography.Text>\n              </Col>\n              <Col>\n                <Space>\n                  <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n                    55,07%\n                  </Typography.Text>\n                  <Typography.Title level={5}>102,161,162</Typography.Title>\n                </Space>\n              </Col>\n              <Col span={24}>\n                <Progress\n                  percent={100}\n                  strokeColor=\"#d3d3d6\"\n                  success={{ percent: 60, strokeColor: '#F9575E' }}\n                  showInfo={false}\n                />\n              </Col>\n            </Row>\n          </Space>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nconst ProposalDetails = () => {\n  const history = useHistory()\n  const { proposalAddress, daoAddress } =\n    useParams<{ daoAddress: string; proposalAddress: string }>()\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Button\n          type=\"text\"\n          icon={<IonIcon name=\"arrow-back-outline\" />}\n          onClick={() => history.push(`/app/${appId}/dao/${daoAddress}`)}\n        />\n      </Col>\n      <Col span={24}>\n        <Row gutter={[24, 24]}>\n          <Col xs={24} md={16}>\n            <Row gutter={[24, 24]}>\n              <Col span={24}>\n                <CardStatus\n                  proposalAddress={proposalAddress}\n                  daoAddress={daoAddress}\n                />\n              </Col>\n              <Col span={24}>\n                <CardVote\n                  proposalAddress={proposalAddress}\n                  daoAddress={daoAddress}\n                />\n              </Col>\n            </Row>\n          </Col>\n          <Col xs={24} md={8}>\n            <Row gutter={[24, 24]}>\n              <Col span={24}>\n                <CardInfo\n                  proposalAddress={proposalAddress}\n                  daoAddress={daoAddress}\n                />\n              </Col>\n              <Col span={24}>\n                <CardProgress\n                  proposalAddress={proposalAddress}\n                  daoAddress={daoAddress}\n                />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\nexport default ProposalDetails\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { DaoData } from '@interdao/core'\nimport { account } from '@senswap/sen-js'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type DaoState = Record<string, DaoData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'dao'\nconst initialState: DaoState = {}\n\n/**\n * Actions\n */\n\nexport const getDaos = createAsyncThunk(`${NAME}/getDaos`, async () => {\n  const {\n    provider: { connection },\n    programId,\n    account: { dao },\n  } = interDao.program\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await connection.getProgramAccounts(programId, {\n      filters: [{ dataSize: dao.size }],\n    })\n  let bulk: DaoState = {}\n  value.forEach(({ pubkey, account: { data: buf } }) => {\n    const address = pubkey.toBase58()\n    const data = interDao.parseDaoData(buf)\n    bulk[address] = data\n  })\n  return bulk\n})\n\nexport const getDao = createAsyncThunk<\n  DaoState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getDao`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    dao: { [address]: data },\n  } = getState()\n  if (data && !force) return { [address]: data }\n  const raw = await interDao.getDaoData(address)\n  return { [address]: raw }\n})\n\nexport const upsetDao = createAsyncThunk<\n  DaoState,\n  { address: string; data: DaoData },\n  { state: any }\n>(`${NAME}/upsetDao`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteDao = createAsyncThunk(\n  `${NAME}/deleteDao`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getDaos.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getDao.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetDao.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteDao.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { useWallet } from '@senhub/providers'\nimport { PublicKey } from '@solana/web3.js'\n\nimport { AppDispatch } from 'app/model'\nimport configs from 'app/configs'\nimport { getDao, getDaos } from 'app/model/dao.controller'\n\nconst {\n  sol: { interDao },\n} = configs\n\n// Watch id\nlet initializeDAOEventId = 0\nlet updateDaoRegimeEventId = 0\nlet updateSupplyEventId = 0\nlet transferAuthorityEventId = 0\n\nconst DaoWatcher = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadDaoData = useCallback(\n    ({ dao: daoPublicKey }: { dao: PublicKey }) => {\n      const daoAddress = daoPublicKey.toBase58()\n      return dispatch(getDao({ address: daoAddress, force: true }))\n    },\n    [dispatch],\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getDaos()).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of DAOs',\n      })\n    }\n  }, [dispatch, walletAddress])\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    initializeDAOEventId = await interDao.addListener(\n      'InitializeDAOEvent',\n      reloadDaoData,\n    )\n    updateDaoRegimeEventId = await interDao.addListener(\n      'UpdateDaoRegimeEvent',\n      reloadDaoData,\n    )\n    updateSupplyEventId = await interDao.addListener(\n      'UpdateSupplyEvent',\n      reloadDaoData,\n    )\n    transferAuthorityEventId = await interDao.addListener(\n      'TransferAuthorityEvent',\n      reloadDaoData,\n    )\n  }, [reloadDaoData])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await interDao.removeListener(initializeDAOEventId)\n          await interDao.removeListener(updateDaoRegimeEventId)\n          await interDao.removeListener(updateSupplyEventId)\n          await interDao.removeListener(transferAuthorityEventId)\n        } catch (er: any) {\n          console.warn(er.message)\n        } finally {\n          initializeDAOEventId = 0\n          updateDaoRegimeEventId = 0\n          updateSupplyEventId = 0\n          transferAuthorityEventId = 0\n        }\n      })()\n    }\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default DaoWatcher\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { PublicKey } from '@solana/web3.js'\n\nimport { AppDispatch } from 'app/model'\nimport configs from 'app/configs'\nimport { getProposal } from 'app/model/proposal.controller'\n\nconst {\n  sol: { interDao },\n} = configs\n\n// Watch id\nlet initializeProposalEventId = 0\nlet voteForEventId = 0\nlet voteAgainstEventId = 0\nlet executeProposalEventId = 0\n\nconst ProposalWatcher = () => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadProposalData = useCallback(\n    ({ proposal: proposalPublicKey }: { proposal: PublicKey }) => {\n      const proposalAddress = proposalPublicKey.toBase58()\n      return dispatch(getProposal({ address: proposalAddress, force: true }))\n    },\n    [dispatch],\n  )\n\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    initializeProposalEventId = await interDao.addListener(\n      'InitializeProposalEvent',\n      reloadProposalData,\n    )\n    voteForEventId = await interDao.addListener(\n      'VoteForEvent',\n      reloadProposalData,\n    )\n    voteAgainstEventId = await interDao.addListener(\n      'VoteAgainstEvent',\n      reloadProposalData,\n    )\n    executeProposalEventId = await interDao.addListener(\n      'ExecuteProposalEvent',\n      reloadProposalData,\n    )\n  }, [reloadProposalData])\n\n  useEffect(() => {\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await interDao.removeListener(initializeProposalEventId)\n          await interDao.removeListener(voteForEventId)\n          await interDao.removeListener(voteAgainstEventId)\n          await interDao.removeListener(executeProposalEventId)\n        } catch (er: any) {\n          console.warn(er.message)\n        } finally {\n          initializeProposalEventId = 0\n          voteForEventId = 0\n          voteAgainstEventId = 0\n          executeProposalEventId = 0\n        }\n      })()\n    }\n  }, [watchData])\n\n  return <Fragment />\n}\n\nexport default ProposalWatcher\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { ProposalData, ReceiptData } from '@interdao/core'\nimport { account } from '@senswap/sen-js'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type ReceiptState = Record<string, ReceiptData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'receipt'\nconst initialState: ReceiptState = {}\n\n/**\n * Actions\n */\n\nexport const getReceipts = createAsyncThunk(\n  `${NAME}/getReceipts`,\n  async ({ authorityAddress }: { authorityAddress: string }) => {\n    if (!account.isAddress(authorityAddress)) throw new Error('Invalid address')\n    const {\n      provider: { connection },\n      programId,\n      account: { receipt },\n    } = interDao.program\n    const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n      await connection.getProgramAccounts(programId, {\n        filters: [\n          { dataSize: receipt.size },\n          {\n            memcmp: {\n              offset: 16,\n              bytes: authorityAddress,\n            },\n          },\n        ],\n      })\n    let bulk: ReceiptState = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = interDao.parseProposalData(buf)\n      bulk[address] = data\n    })\n    return bulk\n  },\n)\n\nexport const getReceipt = createAsyncThunk<\n  ReceiptState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getReceipt`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    dao: { [address]: data },\n  } = getState()\n  if (data && !force) return { [address]: data }\n  const raw = await interDao.getReceiptData(address)\n  return { [address]: raw }\n})\n\nexport const upsetReceipt = createAsyncThunk<\n  ReceiptState,\n  { address: string; data: ProposalData },\n  { state: any }\n>(`${NAME}/upsetReceipt`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteReceipt = createAsyncThunk(\n  `${NAME}/deleteReceipt`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getReceipts.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { PublicKey } from '@solana/web3.js'\nimport { useWallet } from '@senhub/providers'\nimport { account } from '@senswap/sen-js'\n\nimport { AppDispatch } from 'app/model'\nimport configs from 'app/configs'\nimport { getReceipt, getReceipts } from 'app/model/receipt.controller'\n\nconst {\n  sol: { interDao },\n} = configs\n\n// Watch id\nlet voteForEventId = 0\nlet voteAgainstEventId = 0\nlet closeEventId = 0\n\nconst ReceiptWatcher = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadReceiptData = useCallback(\n    ({ receipt: receiptPublicKey }: { receipt: PublicKey }) => {\n      const receiptAddress = receiptPublicKey.toBase58()\n      return dispatch(getReceipt({ address: receiptAddress, force: true }))\n    },\n    [dispatch],\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getReceipts({ authorityAddress: walletAddress })).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of DAOs',\n      })\n    }\n  }, [dispatch, walletAddress])\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    voteForEventId = await interDao.addListener(\n      'VoteForEvent',\n      reloadReceiptData,\n    )\n    voteAgainstEventId = await interDao.addListener(\n      'VoteAgainstEvent',\n      reloadReceiptData,\n    )\n    closeEventId = await interDao.addListener('CloseEvent', reloadReceiptData)\n  }, [reloadReceiptData])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await interDao.removeListener(voteForEventId)\n          await interDao.removeListener(voteAgainstEventId)\n          await interDao.removeListener(closeEventId)\n        } catch (er: any) {\n          console.warn(er.message)\n        } finally {\n          voteForEventId = 0\n          voteAgainstEventId = 0\n          closeEventId = 0\n        }\n      })()\n    }\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default ReceiptWatcher\n","import { Redirect, Route, Switch } from 'react-router-dom'\n\nimport { Row, Col } from 'antd'\nimport Dao from './dao'\nimport Proposal from './proposal'\nimport ProposalInitialization from './proposal/proposalInitialization'\nimport DaoInitialization from './dao/daoInitialization'\nimport ProposalDetails from './proposal/proposalDetails'\nimport DaoWatcher from './watcher/dao.watcher'\nimport ProposalWatcher from './watcher/proposal.watcher'\nimport ReceiptWatcher from './watcher/receipt.watcher'\n\nimport 'app/static/styles/index.less'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst View = () => {\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col xs={24} lg={18}>\n        <Switch>\n          <Route exact path={`/app/${appId}/dao`} component={Dao} />\n          <Route\n            exact\n            path={`/app/${appId}/dao/new-dao`}\n            component={DaoInitialization}\n          />\n          <Route\n            exact\n            path={`/app/${appId}/dao/:daoAddress`}\n            component={Proposal}\n          />\n          <Route\n            exact\n            path={`/app/${appId}/dao/:daoAddress/new-proposal`}\n            component={ProposalInitialization}\n          />\n          <Route\n            exact\n            path={`/app/${appId}/dao/:daoAddress/proposal/:proposalAddress`}\n            component={ProposalDetails}\n          />\n          <Redirect from=\"*\" to={`/app/${appId}/dao`} />\n        </Switch>\n      </Col>\n      <Col span={24} />\n      <DaoWatcher />\n      <ProposalWatcher />\n      <ReceiptWatcher />\n    </Row>\n  )\n}\n\nexport default View\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport dao from 'app/model/dao.controller'\nimport metadata from 'app/model/metadata.controller'\nimport proposal from 'app/model/proposal.controller'\nimport receipt from 'app/model/receipt.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools(process.env.REACT_APP_ID as string),\n  reducer: {\n    dao,\n    metadata,\n    proposal,\n    receipt,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { Provider } from 'react-redux'\nimport {\n  WalletProvider,\n  UIProvider,\n  AccountProvider,\n  PoolProvider,\n  MintProvider,\n} from '@senhub/providers'\n\nimport View from 'app/view'\n\nimport model from 'app/model'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <UIProvider appId={appId} antd>\n      <WalletProvider>\n        <AccountProvider>\n          <PoolProvider>\n            <MintProvider>\n              <Provider store={model}>\n                <View />\n              </Provider>\n            </MintProvider>\n          </PoolProvider>\n        </AccountProvider>\n      </WalletProvider>\n    </UIProvider>\n  )\n}\n","import { DEFAULT_CACHE_CONFIG } from './constant'\nimport { CacheConfig } from './constant'\n\nexport class SingleFlightCache {\n  private static mapCache = new Map<string, any>()\n\n  static set(\n    key: string,\n    value: any,\n    configs: CacheConfig = DEFAULT_CACHE_CONFIG,\n  ) {\n    this.mapCache.set(key, value)\n    setTimeout(() => {\n      this.mapCache.delete(key)\n    }, configs.ttl)\n  }\n\n  static get(key: string) {\n    return this.mapCache.get(key)\n  }\n}\n","export type LimitConfig = {\n  calls: number\n  time: number\n}\n\nexport type CacheConfig = {\n  ttl: number // millisecond\n}\n\nexport type SingleFlightConfig = {\n  limit?: LimitConfig\n  cache?: CacheConfig\n}\n\n// 10 request per 1 second\nexport const DEFAULT_LIMIT_CONFIG: LimitConfig = {\n  calls: 10,\n  time: 1000,\n}\n\n// 10 request per 1 second\nexport const DEFAULT_CACHE_CONFIG: CacheConfig = {\n  ttl: 30000,\n}\n\nexport const DEFAULT_SINGLE_FLIGHT_CONFIG: SingleFlightConfig = {\n  limit : DEFAULT_LIMIT_CONFIG,\n  cache: DEFAULT_CACHE_CONFIG\n}","import { DEFAULT_SINGLE_FLIGHT_CONFIG, SingleFlightConfig } from './constant'\n\nimport { IRequestQueue, RequestQueue } from './request'\nimport { SingleFlightCache } from './cache'\n\nexport class DataLoader {\n  static mapInstance = new Map<string, SingleFlight>()\n\n  private static getSingleFlight(configs: SingleFlightConfig): SingleFlight {\n    const instanceKey = JSON.stringify(configs)\n    if (this.mapInstance.has(instanceKey)) {\n      const instance = this.mapInstance.get(instanceKey)\n      if (instance) return instance\n    }\n\n    let newSingleFlight = new SingleFlight(configs)\n    this.mapInstance.set(instanceKey, newSingleFlight)\n    return newSingleFlight\n  }\n\n  static async load<T>(\n    requestKey: string | object,\n    callback: () => Promise<T>,\n    configs: SingleFlightConfig = {},\n  ): Promise<T> {\n    if (typeof requestKey === 'object') requestKey = JSON.stringify(requestKey)\n\n    let singleFlight = DataLoader.getSingleFlight(configs)\n    DataLoader.mapInstance.set(requestKey, singleFlight)\n    const newRequest = new RequestQueue(requestKey)\n    return singleFlight.load<T>(newRequest, callback)\n  }\n}\n\nclass SingleFlight {\n  private config: SingleFlightConfig\n  private intervalRequest: any\n  private timeLogs: number[] = []\n\n  private mapRequestCalling = new Map<string, IRequestQueue>()\n  private requestQueue: IRequestQueue[] = []\n\n  constructor(configs: SingleFlightConfig) {\n    this.config = Object.assign(DEFAULT_SINGLE_FLIGHT_CONFIG, configs)\n  }\n\n  async load<T>(newRequest: IRequestQueue, callback: () => Promise<T>) {\n    const cacheData = SingleFlightCache.get(newRequest.key)\n    if (cacheData) return Promise.resolve(cacheData)\n\n    let isFetch = false\n    let request = this.mapRequestCalling.get(newRequest.key)\n    if (!request) {\n      request = newRequest\n      isFetch = true\n      this.mapRequestCalling.set(request.key, request)\n    }\n\n    return new Promise((resolve, reject) => {\n      if (!request) return reject('Not found request!')\n      request.add(resolve, reject)\n      if (isFetch) {\n        this.fetch<T>(request, callback)\n      }\n    })\n  }\n\n  private fetch<T>(request: IRequestQueue, callback: () => Promise<T>) {\n    if (!this.validateLimit()) {\n      return this.addRequestQueue(request, callback)\n    }\n    this.createTimeLogs()\n\n    callback()\n      .then((response) => {\n        SingleFlightCache.set(request.key, response, this.config.cache)\n        request.resolves(response)\n      })\n      .catch((error) => {\n        request.rejects(error)\n      })\n      .finally(() => {\n        this.mapRequestCalling.delete(request.key)\n        this.fetchRequestQueue(callback)\n      })\n  }\n\n  private fetchRequestQueue(callback: () => Promise<any>) {\n    if (!this.validateLimit()) return\n    const request = this.requestQueue.shift()\n    if (request) this.load(request, callback)\n\n    if (this.requestQueue.length === 0 && this.intervalRequest) {\n      clearInterval(this.intervalRequest)\n    }\n  }\n\n  private addRequestQueue(\n    request: IRequestQueue,\n    callback: () => Promise<any>,\n  ) {\n    this.requestQueue.push(request)\n    this.intervalRequest = setInterval(() => {\n      this.fetchRequestQueue(callback)\n    }, this.config.limit?.time)\n  }\n\n  private validateLimit(): boolean {\n    return true\n  }\n\n  private createTimeLogs() {\n    if (!this.config.limit) return\n\n    const now = new Date().getTime()\n    this.timeLogs.push(now)\n    if (this.timeLogs.length > this.config.limit?.calls) {\n      this.timeLogs.shift()\n    }\n  }\n}\n","export interface IRequestQueue {\n  key: string\n  add(resolve: any, reject: any): void\n  resolves(data: any): void\n  rejects(error: any): void\n}\n\nexport class RequestQueue implements IRequestQueue {\n  key = ''\n  private resolveQueue: any[] = []\n  private rejectQueue: any[] = []\n  constructor(key: string) {\n    this.key = key\n  }\n\n  add(resolve: any, reject: any) {\n    this.resolveQueue.push(resolve)\n    this.rejectQueue.push(reject)\n  }\n\n  resolves(data: any) {\n    while (this.resolveQueue.length > 0) {\n      const resolve = this.resolveQueue.shift()\n      resolve(data)\n    }\n  }\n\n  rejects(error: any) {\n    while (this.rejectQueue.length > 0) {\n      const reject = this.rejectQueue.shift()\n      reject(error)\n    }\n  }\n}\n","import { PublicKey } from '@solana/web3.js'\nimport BN from 'bn.js'\n\n// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint' ||\n    val instanceof PublicKey ||\n    val instanceof BN ||\n    val instanceof Buffer\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  try {\n    if (!value) return null\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n","import storage from './storage'\n\n/**\n * Environment\n */\nconst getEnv = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'development':\n      return 'development'\n    case 'staging':\n      return 'staging'\n    case 'production':\n      return 'production'\n    default:\n      return 'development'\n  }\n}\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = getEnv()\n\n/**\n * Network\n */\nconst getNetwork = () => {\n  switch (storage.get('network')) {\n    case 'devnet':\n      return 'devnet'\n    case 'testnet':\n      return 'testnet'\n    case 'mainnet':\n      return 'mainnet'\n    default:\n      return 'mainnet'\n  }\n}\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = getNetwork()\n\nexport const onSwitchNetwork = (value: Net) => {\n  storage.set('network', value)\n  return window.location.reload()\n}\n\n/**\n * Chain ID\n */\nconst getChainId = () => {\n  switch (net) {\n    case 'devnet':\n      return 103\n    case 'testnet':\n      return 102\n    case 'mainnet':\n      return 101\n    default:\n      return 101\n  }\n}\nexport type ChainId = 101 | 102 | 103\nexport const chainId: ChainId = getChainId()\n","import { account, utils } from '@senswap/sen-js'\nimport numbro from 'numbro'\n\nimport { net } from 'shared/runtime'\nimport { DataLoader } from './dataloader'\n\n/**\n * Delay by async/await\n * @param ms - milisenconds\n * @returns\n */\nexport const asyncWait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\n/**\n * Shorten a long address\n * @param address - The long address\n * @param num - The number of the heading and trailing characters\n * @param delimiter - The delimiter\n * @returns Shortened address\n */\nexport const shortenAddress = (address: string, num = 4, delimiter = '...') => {\n  return (\n    address.substring(0, num) +\n    delimiter +\n    address.substring(address.length - num, address.length)\n  )\n}\n\n/**\n * Build a explorer url by context including addresses or transaction ids\n * @param addressOrTxId - Address or TxId\n * @returns\n */\nexport const explorer = (addressOrTxId: string): string => {\n  if (account.isAddress(addressOrTxId)) {\n    return `https://explorer.solana.com/address/${addressOrTxId}?cluster=${net}`\n  }\n  return `https://explorer.solana.com/tx/${addressOrTxId}?cluster=${net}`\n}\n\n/**\n * Wrapped Numbro - https://numbrojs.com/old-format.html\n * @param value - value\n * @returns\n */\nexport const numeric = (\n  value?: number | string | BigInt,\n): ReturnType<typeof numbro> => {\n  if (!value) return numbro('0')\n  return numbro(value)\n}\n\n/**\n * Generate a random color\n * @param seed - Seed\n * @param opacity - Opacity\n * @returns\n */\nexport const randomColor = (seed?: string, opacity?: string | number) => {\n  let hash = Math.floor(Math.random() * 16777215)\n  if (seed) {\n    hash = 0\n    for (let i = 0; i < seed.length; i++) {\n      hash = seed.charCodeAt(i) + ((hash << 5) - hash)\n    }\n  }\n  var rgb = [0, 0, 0]\n  for (let i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 255\n    rgb[i] = value\n  }\n  return `rgba(${rgb[0]}, 100, ${rgb[1]},${opacity || 1})`\n}\n\n/**\n * Fetch coingecko data with cache\n * @param ticket - Token ticket\n * @returns\n */\nexport const fetchCGK = async (ticket = '') => {\n  return DataLoader.load('fetchCGK' + ticket, () => utils.parseCGK(ticket))\n}\n"],"names":["CUSTOM_ICONS","forwardRef","ref","name","className","props","cln","src","Card","bordered","bodyStyle","padding","Row","gutter","Col","span","Typography","level","style","fontSize","textAlign","color","type","icon","title","value","Space","xs","md","lg","numeric","format","direction","includes","regime","tag","useMemo","isEqual","DaoRegimes","Tag","randomColor","margin","DEFAULT_AVATARS","undefined","mintAddress","size","reversed","avatars","setAvatars","useState","tokenProvider","useMint","pools","usePool","deriveAvatar","useCallback","async","token","findByAddress","address","logoURI","deriveAvatars","account","poolData","Object","values","find","mint_lpt","mint_a","mint_b","Promise","all","map","reverse","avatar","useEffect","length","Avatar","backgroundColor","border","display","whiteSpace","i","DEFAULT_NAME","separator","setName","deriveName","deriveNames","names","join","DEFAULT_SYMBOL","symbol","setSymbol","deriveSymbol","substring","deriveSymbols","symbols","string2Number","seed","limit","buf","Buffer","from","index","BN","mod","Number","Math","random","toString","avatarProps","colors","gradients","background","alt","shared","appId","process","url","development","staging","production","constructor","_wallet","window","sentre","wallet","_publicKey","PublicKey","_init","this","getAddress","signTransaction","tx","signAllTransactions","signedTxs","txs","signedTx","push","publicKey","console","warn","devnet","rpc","interDao","InterDAO","SafeWallet","testnet","mainnet","manifest","env","sol","net","configs","NAME","getMember","createAsyncThunk","daoAddress","force","getState","Error","dao","mint","metadata","data","toBase58","provider","connection","program","members","getProgramAccounts","utils","filters","dataSize","memcmp","bytes","offset","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","payload","assign","dispatch","useDispatch","useSelector","isExistDao","keys","history","useHistory","nonce","useMembers","onClick","hoverable","wrap","shape","flex","shortenAddress","marginLeft","Button","ellipsis","rows","height","walletAddress","useWallet","filteredDaos","filter","daoAddr","authority","authAddress","align","Tabs","overflow","tabBarExtraContent","tab","status","currentDate","floor","Date","proposalAddress","proposal","startDate","endDate","SystemProgram","Divider","moment","getProposals","programId","bulk","forEach","pubkey","parseProposalData","getProposal","getProposalData","upsetProposal","deleteProposal","authorized","proposalAddresses","disabled","useParams","ConsensusMechanisms","onChange","Popover","overlayStyle","maxWidth","trigger","content","ghost","ConsensusQuorums","DatePicker","placeholder","e","valueOf","showTime","setProposalAddress","findProposal","deriveProposalAddress","cursor","boxShadow","useAllMintAddresses","allMintAddresses","setAllMintAddresses","getRecommendedMintAddresses","addresses","searching","visible","setVisible","keyword","setKeyword","recommendedMintAddresses","setRecommendedMintAddresses","accounts","useAccount","myMintAddresses","self","indexOf","useRecommendedMintAddresses","searchedMintAddresses","loading","setLoading","setSearchedMintAddresses","clearTimeout","setTimeout","useSearchedMintAddresses","forceCheck","Fragment","Modal","onCancel","footer","closeIcon","Input","suffix","marginRight","target","maxHeight","DEFAULT_VALUE","amount","schema","key","soproxABI","code","BigInt","toData","selected","setAmount","setMintAddress","receiverAddress","setReceiverAddress","_onClick","prefix","id","setId","log","CURRENT_TIME","ONE_DAY","consensusMechanism","setConsensusMechanism","consensusQuorum","setConsensusQuorum","duration","setDuration","newProposal","er","notify","description","message","justify","open","explorer","timeoutId","max","onValue","error","setError","setCursor","innerRef","useRef","onAmount","val","onError","test","parseFloat","current","setSelectionRange","Tooltip","selectionStart","decimals","setDecimals","getDecimals","fetchDecimals","supply","setSupply","getMint","fetchSupply","useMintDecimals","useMintSupply","suggestion","String","div","setRegime","circulatingSupply","setCirculatingSupply","valid","newDao","mul","pow","txId","initializeDao","isExistProposal","RowSpaceBetween","label","CardStatus","accountsLen","useProposal","CardVote","block","borderRadius","CardInfo","width","toNumber","CardProgress","Progress","percent","strokeColor","success","showInfo","getDaos","parseDaoData","getDao","getDaoData","upsetDao","deleteDao","initializeDAOEventId","updateDaoRegimeEventId","updateSupplyEventId","transferAuthorityEventId","reloadDaoData","daoPublicKey","fetchData","unwrap","watchData","addListener","removeListener","initializeProposalEventId","voteForEventId","voteAgainstEventId","executeProposalEventId","reloadProposalData","proposalPublicKey","getReceipts","authorityAddress","receipt","getReceipt","getReceiptData","upsetReceipt","deleteReceipt","closeEventId","reloadReceiptData","receiptPublicKey","receiptAddress","Switch","Route","exact","path","component","Dao","DaoInitialization","Proposal","ProposalInitialization","ProposalDetails","Redirect","to","configureStore","middleware","getDefaultMiddleware","bigintSerializationMiddleware","devTools","reducer","Page","UIProvider","antd","WalletProvider","AccountProvider","PoolProvider","MintProvider","Provider","store","model","SingleFlightCache","DEFAULT_CACHE_CONFIG","mapCache","set","delete","ttl","get","Map","DEFAULT_SINGLE_FLIGHT_CONFIG","calls","time","cache","DataLoader","instanceKey","JSON","stringify","mapInstance","has","instance","newSingleFlight","SingleFlight","requestKey","callback","singleFlight","getSingleFlight","newRequest","RequestQueue","load","config","intervalRequest","timeLogs","mapRequestCalling","requestQueue","cacheData","resolve","isFetch","request","reject","add","fetch","validateLimit","addRequestQueue","createTimeLogs","then","response","resolves","catch","rejects","finally","fetchRequestQueue","shift","clearInterval","setInterval","now","getTime","resolveQueue","rejectQueue","appName","prototype","toJSON","serializableCheck","isSerializable","Array","isArray","obj","proto","getPrototypeOf","isPlainObject","KEY","driver","localStorage","convert","parse","storage","getItem","setItem","clear","getNetwork","chainId","getChainId","asyncWait","ms","num","delimiter","addressOrTxId","numbro","opacity","hash","charCodeAt","rgb"],"sourceRoot":""}