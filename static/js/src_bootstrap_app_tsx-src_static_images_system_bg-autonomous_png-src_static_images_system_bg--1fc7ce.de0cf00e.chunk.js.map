{"version":3,"file":"static/js/src_bootstrap_app_tsx-src_static_images_system_bg-autonomous_png-src_static_images_system_bg--1fc7ce.de0cf00e.chunk.js","mappings":"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","sources":["static/images/logo.svg","static.app.tsx","components/loading/index.tsx","model/loading.controller.tsx","watcher/evens.watch.tsx","watcher/dao.watcher.tsx","watcher/proposal.watcher.tsx","model/receipt.controller.tsx","watcher/receipt.watcher.tsx","view/index.tsx","view/appLoader.tsx","model/devTools.ts","model/index.ts","bootstrap.app.tsx","components/proposalStatus.tsx","components/ui/rowSpaceVertical.tsx","configs/manifest.config.ts","configs/sol.config.ts","configs/index.ts","view/listDaos/hero/banner.tsx","view/listDaos/hero/infoCard.tsx","view/listDaos/hero/index.tsx","components/ui/statisticCard.tsx","components/regimeTag.tsx","components/gradientAvatar/index.tsx","hooks/dao/useDaoMetaData.ts","helpers/metaplex.ts","hooks/useOwnerNFT.ts","hooks/dao/useValidDaoMember.ts","components/dao/daoMember.tsx","view/listDaos/publicDaos/daoCard.tsx","view/listDaos/publicDaos/search/index.tsx","view/createDao/components/cardRegime.tsx","view/createDao/setRule/flexible/regimeInput.tsx","view/listDaos/publicDaos/mechanisms.tsx","view/listDaos/publicDaos/typeOfDao.tsx","view/listDaos/publicDaos/search/daoProvider.ts","hooks/useSearchDao.ts","hooks/daos/usePublicDaos.ts","view/listDaos/publicDaos/index.tsx","view/listDaos/publicDaos/yourDao.tsx","hooks/daos/useAvailableDaos.ts","view/listDaos/availabelDaos/index.tsx","components/withdrawNotificationModal/proposalItem.tsx","hooks/proposal/useWithdrawableReceipt.ts","hooks/useAnchorProvider.ts","components/withdrawNotificationModal/index.tsx","view/listDaos/index.tsx","view/createDao/initDAOHeader.tsx","view/createDao/chooseType/index.tsx","components/formInputDetail.tsx","view/createDao/daoInputDetail/index.tsx","view/createDao/review/flexibleDaoReview.tsx","hooks/instructions/useCreateDao.ts","view/createDao/review/confirmButton.tsx","view/createDao/review/index.tsx","hooks/useNftMetaData.ts","components/cardNFT.tsx","view/createDao/components/searchNftCollection.tsx","view/createDao/components/modalNftCollection.tsx","view/createDao/setRule/flexible/tokenAddressInput/voteInput/voteNftInput.tsx","view/createDao/setRule/flexible/tokenAddressInput/voteInput/voteTokenInput.tsx","view/createDao/setRule/flexible/tokenAddressInput/voteInput/index.tsx","view/createDao/setRule/flexible/tokenAddressInput/index.tsx","view/createDao/setRule/privacy.tsx","shared/hooks/useMintDecimals.ts","shared/hooks/useMintSupply.ts","view/createDao/setRule/flexible/circulatingSupply/circulatingSupplyInput.tsx","view/createDao/setRule/flexible/circulatingSupply/circulatingSupplyInputNFT.tsx","view/createDao/setRule/flexible/circulatingSupply/index.tsx","view/createDao/setRule/flexible/index.tsx","view/createDao/setRule/index.tsx","view/createDao/initDAOBody.tsx","view/createDao/index.tsx","view/editDao/actionButton.tsx","view/editDao/editDaoDetail.tsx","view/editDao/rule/editFlexibleDaoRule.tsx","view/editDao/rule/index.tsx","view/editDao/transferAuthority.tsx","view/editDao/editSupply.tsx","view/editDao/index.tsx","view/daoDetails/members.tsx","view/daoDetails/daoInfo.tsx","view/daoDetails/daoOwnerAssets/nftsTreasury/index.tsx","hooks/useBalance.ts","view/daoDetails/daoOwnerAssets/tokenTreasury/mintBalance.tsx","view/daoDetails/daoOwnerAssets/tokenTreasury/index.tsx","components/ui/rowSpaceBetween.tsx","view/daoDetails/daoOwnerAssets/masterWalletInfo.tsx","view/daoDetails/daoOwnerAssets/index.tsx","static/images/templates/solana.svg","components/iconCopy.tsx","components/shortenAddress.tsx","templates/components/proposalExplorer.tsx","templates/templateLoader.tsx","templates/hooks/useTemplateWithProposal.ts","view/templates/spl.tsx","static/images/sentre_logo.svg","view/templates/blank.tsx","static/images/templates/bg-sen-farming.svg","view/templates/senFarming.tsx","view/templates/solend.tsx","view/templates/francium.tsx","view/templates/meanfi.tsx","view/templates/index.tsx","view/proposalList/index.tsx","view/daoDetails/index.tsx","view/createProposal/consensusMechanismInput.tsx","components/consensusQuorumInput.tsx","view/createProposal/durationInput.tsx","view/createProposal/proposalPreview.tsx","view/createProposal/index.tsx","hooks/instructions/useInitProposalIx.ts","hooks/proposal/useReceipts.ts","view/proposalDetails/cardStatus.tsx","hooks/proposal/useProposalFee.tsx","hooks/useCommentProposal.ts","view/proposalDetails/cardVote/nft/modalVoteNFT.tsx","constant/index.ts","view/proposalDetails/history/columnType.tsx","view/proposalDetails/history/columnPower.tsx","view/proposalDetails/withdraw.tsx","helpers/countDown.ts","view/proposalDetails/cardVote/lockedVoting.tsx","hooks/useOwnerNftByCollection.ts","components/inputComment.tsx","view/proposalDetails/cardVote/nft/index.tsx","view/proposalDetails/cardVote/token/actionVote.tsx","shared/hooks/useAccountBalance.ts","view/proposalDetails/cardVote/token/index.tsx","view/proposalDetails/cardVote/index.tsx","view/proposalList/modalTemplateInfo/index.tsx","hooks/proposal/useParseQuorumText.ts","view/proposalDetails/cardInfo.tsx","view/proposalDetails/cardProgress.tsx","view/proposalDetails/history/column.tsx","view/proposalDetails/history/index.tsx","view/proposalList/components/listComments.tsx","components/rowBetweenNodeTitle.tsx","view/proposalList/components/actionCommentOnly.tsx","view/proposalList/components/commentLoading.tsx","helpers/useContentWatcher.ts","view/proposalList/components/comments.tsx","view/proposalDetails/index.tsx","view/pageNotFound.tsx","configs/route.ts","helpers/index.ts","helpers/ipfs.ts","hooks/dao/useDaoMembers.ts","hooks/dao/useDaoData.ts","hooks/proposal/useProposal.ts","hooks/proposal/useProposalMetaData.ts","hooks/proposal/useProposalStatus.ts","model/comments.controller.tsx","model/createDao.controller.tsx","model/daos.controller.tsx","model/proposals.controller.tsx","model/template.controller.tsx","helpers/tokenHolders.tsx","model/tokenHolder.controller.tsx","model/voteBid.controller.tsx","shared/antd/numericInput.tsx","templates/constant/index.ts","templates/view|lazy|/^/.//.*//create$/|groupOptions: {}|namespace object","templates/view|lazy|/^/.//.*//info$/|groupOptions: {}|namespace object","templates/view|lazy|/^/.//.*//proposal$/|groupOptions: {}|namespace object"],"sourcesContent":["var _path, _path2, _path3, _path4, _path5, _path6, _path7, _path8, _path9, _path10;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 24,\n    height: 24,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.9183 4.85506L23.3679 5.05527L20.2655 6.20646L16.8629 7.48279C16.6627 7.55787 16.4626 7.35766 16.5376 7.15746L17.8136 3.75391L18.9645 0.675704L19.1647 0.12513C18.7894 0.0500521 18.4141 0 18.0138 0H6.00459C5.60429 0 5.229 0.0500521 4.85371 0.100104L5.05386 0.650678L6.20474 3.75391L7.48072 7.18248C7.55578 7.38269 7.35562 7.5829 7.15547 7.50782L3.75287 6.20646L0.675517 5.05527L0.125096 4.85506C0.0250191 5.23045 0 5.60584 0 6.00626V18.0188C0 18.4192 0.0250191 18.7946 0.100077 19.17L0.650497 18.9698L3.75287 17.8186L7.15547 16.5422C7.35562 16.4672 7.55578 16.6674 7.48072 16.8676L6.20474 20.2711L5.05386 23.3493L4.85371 23.8999C5.229 23.975 5.60429 24 6.00459 24H18.0138C18.4141 24 18.7894 23.9499 19.1647 23.8999L18.9645 23.3493L17.8136 20.2711L16.5376 16.8676C16.4626 16.6674 16.6627 16.4672 16.8629 16.5422L20.2655 17.8186L23.3428 18.9698L23.8933 19.17C23.9683 18.7946 23.9933 18.4192 23.9933 18.0188V6.00626C24.0184 5.60584 23.9683 5.23045 23.9183 4.85506ZM14.336 14.0396C14.1358 13.9645 13.9357 14.1648 14.0107 14.365L15.9122 19.4953C14.8864 18.5693 13.5103 18.0188 12.0092 18.0188C10.508 18.0188 9.13198 18.5693 8.08118 19.4703L9.98263 14.3399C10.0577 14.1397 9.85754 13.9395 9.65738 14.0146L4.52846 15.9166C5.45417 14.8905 6.00459 13.5141 6.00459 12.0125C6.00459 10.5109 5.45417 9.13451 4.52846 8.08342L9.65738 10.0104C9.85754 10.0855 10.0577 9.8853 9.98263 9.68509L8.08118 4.55474C9.13198 5.45568 10.508 6.00626 12.0092 6.00626C13.5103 6.00626 14.8864 5.45568 15.9372 4.52972L14.0357 9.66006C13.9607 9.86027 14.1608 10.0605 14.361 9.9854L19.4899 8.05839C18.5642 9.13452 18.0138 10.5109 18.0138 12.0125C18.0138 13.5141 18.5642 14.8905 19.4899 15.9416L14.336 14.0396Z\",\n    fill: \"#F9DEB0\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.4429 3.45417L20.2655 4.65542L19.3648 5.00579C19.1647 5.08086 18.9645 4.88066 19.0396 4.68045L19.3898 3.75448L20.5908 0.576172C21.8417 1.15177 22.8675 2.20287 23.4429 3.45417Z\",\n    fill: \"#F9DEB0\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.65429 4.98076L3.7536 4.65542L0.576172 3.45417C1.15161 2.20287 2.20242 1.15177 3.45337 0.576172L4.65429 3.75448L5.00456 4.68045C5.0546 4.88066 4.87946 5.05584 4.65429 4.98076Z\",\n    fill: \"#F9DEB0\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M4.97819 19.3707L4.65294 20.2716L3.45202 23.475C2.17605 22.8743 1.15026 21.8483 0.549805 20.5719L3.75225 19.3707L4.65294 19.0203C4.87811 18.9703 5.05325 19.1454 4.97819 19.3707Z\",\n    fill: \"#F9DEB0\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.4426 20.5701C22.8421 21.8464 21.8163 22.8725 20.5403 23.4731L19.3644 20.2698L19.0142 19.3688C18.9391 19.1686 19.1393 18.9684 19.3394 19.0435L20.2401 19.3938L23.4426 20.5701Z\",\n    fill: \"#F9DEB0\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M14.0346 14.3665L15.9361 19.4968C14.8853 18.5709 13.5092 18.0203 12.0081 18.0203C10.5069 18.0203 9.13086 18.5709 8.08006 19.4718L9.98151 14.3415C10.0566 14.1413 9.85642 13.9411 9.65626 14.0161L4.52734 15.9181C5.45305 14.892 6.00347 13.5156 6.00347 12.014C6.00347 10.5125 5.45305 9.13605 4.52734 8.08495L9.65626 10.012C9.85642 10.087 10.0566 9.88683 9.98151 9.68662L8.08006 4.55628C9.13086 5.45721 10.5069 6.00779 12.0081 6.00779C13.5092 6.00779 14.8853 5.45721 15.9361 4.53125L14.0346 9.66159C13.9596 9.8618 14.1597 10.062 14.3599 9.98693L19.4888 8.05993C18.5631 9.13605 18.0127 10.5125 18.0127 12.014C18.0127 13.5156 18.5631 14.892 19.4888 15.9431L14.3599 14.0412C14.1347 13.9661 13.9596 14.1413 14.0346 14.3665Z\",\n    fill: \"#1A1311\"\n  })), _path7 || (_path7 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.9173 4.85688L23.3669 5.05709L20.2645 6.20829L16.8619 7.48462C16.6617 7.5597 16.4616 7.35949 16.5366 7.15928L17.8126 3.75573L18.9635 0.677527L19.1637 0.126953C19.664 0.227057 20.1144 0.377214 20.5647 0.577422L19.3638 3.75573L19.0135 4.6817C18.9385 4.88191 19.1386 5.08211 19.3388 5.00704L20.2395 4.65667L23.4169 3.45542C23.6671 3.90589 23.8172 4.38138 23.9173 4.85688Z\",\n    fill: \"#1A1311\"\n  })), _path8 || (_path8 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.1544 7.48462L3.7518 6.20829L0.674444 5.05709L0.124023 4.85688C0.2241 4.35636 0.374215 3.90589 0.574368 3.45542L3.7518 4.65667L4.65249 5.00704C4.85264 5.08211 5.05279 4.88191 4.97773 4.6817L4.65249 3.75573L3.45157 0.577422C3.90191 0.377214 4.35226 0.227057 4.85264 0.126953L5.05279 0.677527L6.20367 3.75573L7.47965 7.1843C7.55471 7.38451 7.37957 7.5597 7.1544 7.48462Z\",\n    fill: \"#1A1311\"\n  })), _path9 || (_path9 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M7.47965 16.8684L6.20367 20.2719L5.05279 23.3501L4.85264 23.9007C4.35226 23.8006 3.90191 23.6504 3.45157 23.4502L4.65249 20.2719L5.00275 19.371C5.07781 19.1708 4.87766 18.9706 4.67751 19.0456L3.7518 19.371L0.574368 20.5722C0.374215 20.1218 0.2241 19.6713 0.124023 19.1708L0.674444 18.9706L3.7518 17.8194L7.1544 16.543C7.37957 16.4679 7.55471 16.6431 7.47965 16.8684Z\",\n    fill: \"#1A1311\"\n  })), _path10 || (_path10 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19.0386 19.3714L19.3888 20.2724L20.5897 23.4507C20.1394 23.6509 19.6891 23.8261 19.1887 23.9011L18.9885 23.3506L17.8126 20.2724L16.5366 16.8688C16.4616 16.6686 16.6617 16.4684 16.8619 16.5435L20.2645 17.8198L23.3418 18.971L23.8923 19.1712C23.7922 19.6717 23.6421 20.1222 23.4419 20.5727L20.2645 19.3714L19.3638 19.0211C19.1386 18.971 18.9635 19.1462 19.0386 19.3714Z\",\n    fill: \"#1A1311\"\n  })));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgLogo);\nexport default __webpack_public_path__ + \"static/media/logo.b14551bd17f53fea785636a049f9dae9.svg\";\nexport { ForwardRef as ReactComponent };","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nObject.defineProperty(exports, \"logo\", {\n  enumerable: true,\n  get: function () {\n    return _logo.default;\n  }\n});\nexports.panels = void 0;\nObject.defineProperty(exports, \"readme\", {\n  enumerable: true,\n  get: function () {\n    return _README.default;\n  }\n});\nvar _panel = _interopRequireDefault(require(\"./static/images/panel.png\"));\nvar _panel2 = _interopRequireDefault(require(\"./static/images/panel1.png\"));\nvar _panel3 = _interopRequireDefault(require(\"./static/images/panel2.png\"));\nvar _logo = _interopRequireDefault(require(\"./static/images/logo.svg\"));\nvar _README = _interopRequireDefault(require(\"./static/docs/README.md\"));\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\nconst panels = [_panel.default, _panel2.default, _panel3.default];\nexports.panels = panels;","import { Fragment, useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Row, Col, Spin, Typography, Space } from 'antd'\nimport { AppState } from 'model'\n\nimport './index.less'\n\nconst Loading: React.FC = ({ children }) => {\n  const loading = useSelector((state: AppState) => state.loading)\n\n  const loadingElement = useMemo(() => {\n    return Object.values(loading).find((e) => e.loading === true)\n  }, [loading])\n\n  if (!loadingElement?.message && Object.values(loading).length)\n    return <Fragment>{children}</Fragment>\n\n  return (\n    <div className=\"loading-screen\" style={{ display: 'block' }}>\n      <Row gutter={[24, 24]}>\n        <Col span={24} style={{ height: 256 }} />\n        <Col span={24}>\n          <Row gutter={[24, 24]} justify=\"center\">\n            <Col>\n              <Space direction=\"vertical\" align=\"center\" size={32}>\n                <Spin size=\"large\" />\n                <Typography.Title level={5}>\n                  {loadingElement?.message}\n                </Typography.Title>\n              </Space>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nexport default Loading\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type LoadingState = Record<string, { loading: boolean; message: string }>\n/**\n * Store constructor\n */\n\nconst NAME = 'voteBid'\nconst initialState: LoadingState = {}\n\n/**\n * Actions\n */\n\nexport const addLoading = createAsyncThunk<\n  LoadingState,\n  { id: string; message: string }\n>(`${NAME}/addLoading`, async ({ id, message }) => {\n  return { [id]: { loading: true, message } }\n})\n\nexport const clearLoading = createAsyncThunk(\n  `${NAME}/clearLoading`,\n  async (id: string) => {\n    return { [id]: { loading: false, message: '' } }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        addLoading.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        clearLoading.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useEffect } from 'react'\n\n// Watch id\ntype WatchState = {\n  id: number\n  interval: NodeJS.Timer | undefined\n  callbacks: ((data: any) => void)[]\n}\n\nconst EVENTS = [\n  // Dao Event\n  'InitializeDAOEvent',\n  'UpdateDaoRegimeEvent',\n  'UpdateSupplyEvent',\n  'TransferAuthorityEvent',\n  'UpdateDaoMetadataEvent',\n  // Proposal Event\n  'InitializeProposalEvent',\n  'ExecuteProposalInstructionEvent',\n  //\n  'VoteForEvent',\n  'VoteAgainstEvent',\n  'CloseEvent',\n]\nconst TIME_RECHECK = 500\n\nconst watcherState: Record<string, WatchState> = {}\n\nconst reloadData = (event: string, data: any) => {\n  const callbacks = watcherState[event].callbacks\n  for (const callback of callbacks) {\n    callback(data)\n  }\n}\n\nexport const addEventListener = (\n  events: string[],\n  callback?: (data: any) => void,\n) => {\n  for (const event of events) {\n    if (!watcherState[event])\n      watcherState[event] = { id: 0, interval: undefined, callbacks: [] }\n    if (callback) watcherState[event].callbacks.push(callback)\n  }\n}\n\nconst EventsWatcher = () => {\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    for (const event of EVENTS) {\n      const state = watcherState[event] || {\n        id: 0,\n        interval: undefined,\n        callbacks: [],\n      }\n      if (state.interval || state.id) continue\n      state.interval = setInterval(async () => {\n        if (state.id) return clearInterval(state.interval)\n        state.id = await window.interDao.addListener(event as any, (data) =>\n          reloadData(event, data),\n        )\n      }, TIME_RECHECK)\n    }\n  }, [])\n\n  useEffect(() => {\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        for (const event of EVENTS) {\n          const state = watcherState[event]\n          try {\n            if (state.id) await window.interDao.removeListener(state.id)\n          } catch (er: any) {\n            console.warn(er.message)\n          } finally {\n            state.id = 0\n          }\n        }\n      })()\n    }\n  }, [watchData])\n\n  return <Fragment />\n}\nexport default EventsWatcher\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { useWalletAddress } from '@sentre/senhub'\nimport { PublicKey } from '@solana/web3.js'\n\nimport { AppDispatch } from 'model'\nimport { getDao, getDaos } from 'model/daos.controller'\nimport { addLoading, clearLoading } from 'model/loading.controller'\nimport { addEventListener } from './evens.watch'\n\nconst DaoWatcher = () => {\n  const walletAddress = useWalletAddress()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadDaoData = useCallback(\n    ({ dao: daoPublicKey }: { dao: PublicKey }) => {\n      const daoAddress = daoPublicKey.toBase58()\n      return dispatch(getDao({ address: daoAddress, force: true }))\n    },\n    [dispatch],\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    dispatch(\n      addLoading({\n        id: 'fetch-daos',\n        message: 'Welcome to interDao. The application is loading...',\n      }),\n    )\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getDaos()).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of DAOs',\n      })\n    } finally {\n      setTimeout(() => {\n        dispatch(clearLoading('fetch-daos'))\n      }, 2000)\n    }\n  }, [dispatch, walletAddress])\n\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    addEventListener(\n      [\n        'InitializeDAOEvent',\n        'UpdateDaoRegimeEvent',\n        'UpdateSupplyEvent',\n        'TransferAuthorityEvent',\n        'UpdateDaoMetadataEvent',\n      ],\n      reloadDaoData,\n    )\n  }, [reloadDaoData])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default DaoWatcher\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { PublicKey } from '@solana/web3.js'\n\nimport { AppDispatch } from 'model'\nimport { getProposal, getProposals } from 'model/proposals.controller'\nimport { addLoading, clearLoading } from 'model/loading.controller'\nimport { addEventListener } from './evens.watch'\n\nconst ProposalWatcher = () => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadProposalData = useCallback(\n    ({ proposal: proposalPublicKey }: { proposal: PublicKey }) => {\n      const proposalAddress = proposalPublicKey.toBase58()\n      return dispatch(getProposal({ address: proposalAddress, force: true }))\n    },\n    [dispatch],\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      dispatch(\n        addLoading({\n          id: 'fetch-proposals',\n          message: 'Welcome to interDao. Loading proposal...',\n        }),\n      )\n      dispatch(getProposals()) //fetch all proposal\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of DAOs',\n      })\n    } finally {\n      setTimeout(() => {\n        dispatch(clearLoading('fetch-proposals'))\n      }, 2000)\n    }\n  }, [dispatch])\n\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    addEventListener(\n      [\n        'InitializeProposalEvent',\n        'VoteForEvent',\n        'VoteAgainstEvent',\n        'ExecuteProposalInstructionEvent',\n      ],\n      reloadProposalData,\n    )\n  }, [reloadProposalData])\n\n  useEffect(() => {\n    // I don't understand why but this fixes the watcher error\n    fetchData()\n    watchData()\n  }, [dispatch, fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default ProposalWatcher\n","import { web3 } from '@project-serum/anchor'\nimport { util } from '@sentre/senhub'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { ReceiptData, RECEIPT_DISCRIMINATOR } from '@interdao/core'\n\n/**\n * Interface & Utility\n */\n\nexport type ReceiptState = Record<string, ReceiptData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'receipt'\nconst initialState: ReceiptState = {}\n\n/**\n * Actions\n */\n\nexport const getReceipts = createAsyncThunk(\n  `${NAME}/getReceipts`,\n  async ({ authorityAddress }: { authorityAddress: string }) => {\n    if (!util.isAddress(authorityAddress)) throw new Error('Invalid address')\n    const {\n      provider: { connection },\n      programId,\n      account: { receipt },\n    } = window.interDao.program\n    const value: Array<{\n      pubkey: web3.PublicKey\n      account: web3.AccountInfo<Buffer>\n    }> = await connection.getProgramAccounts(programId, {\n      filters: [\n        { dataSize: receipt.size },\n        {\n          memcmp: {\n            offset: 0,\n            bytes: RECEIPT_DISCRIMINATOR,\n          },\n        },\n        {\n          memcmp: {\n            offset: 16,\n            bytes: authorityAddress,\n          },\n        },\n      ],\n    })\n    let bulk: ReceiptState = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = window.interDao.parseReceiptData(buf)\n      bulk[address] = data\n    })\n    return bulk\n  },\n)\n\nexport const getReceipt = createAsyncThunk<\n  ReceiptState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getReceipt`, async ({ address, force }, { getState }) => {\n  if (!util.isAddress(address)) throw new Error('Invalid address')\n  const {\n    receipt: { [address]: data },\n  } = getState()\n  if (data && !force) return { [address]: data }\n  const raw = await window.interDao.getReceiptData(address)\n  return { [address]: raw }\n})\n\nexport const deleteReceipt = createAsyncThunk(\n  `${NAME}/deleteReceipt`,\n  async ({ address }: { address: string }) => {\n    if (!util.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getReceipts.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { PublicKey } from '@solana/web3.js'\nimport { useWalletAddress } from '@sentre/senhub'\nimport { account } from '@senswap/sen-js'\n\nimport { AppDispatch } from 'model'\nimport { getReceipt, getReceipts } from 'model/receipt.controller'\nimport { addLoading, clearLoading } from 'model/loading.controller'\nimport { getProposal } from 'model/proposals.controller'\nimport { addEventListener } from './evens.watch'\n\nconst ReceiptWatcher = () => {\n  const walletAddress = useWalletAddress()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadReceiptData = useCallback(\n    ({\n      receipt: receiptPublicKey,\n      proposal,\n    }: {\n      receipt: PublicKey\n      proposal?: PublicKey\n    }) => {\n      const receiptAddress = receiptPublicKey.toBase58()\n      if (proposal) {\n        const proposalAddress = proposal.toBase58()\n        dispatch(getProposal({ address: proposalAddress, force: true }))\n      }\n      return dispatch(\n        getReceipt({ address: receiptAddress, force: true }),\n      ).unwrap()\n    },\n    [dispatch],\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      dispatch(\n        addLoading({\n          id: 'fetch-receipt',\n          message: 'Welcome to InterDAO. Loading Receipts...',\n        }),\n      )\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getReceipts({ authorityAddress: walletAddress })).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of receipts',\n      })\n    } finally {\n      dispatch(clearLoading('fetch-receipt'))\n    }\n  }, [dispatch, walletAddress])\n\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    addEventListener(\n      ['VoteForEvent', 'VoteAgainstEvent', 'CloseEvent'],\n      reloadReceiptData,\n    )\n  }, [reloadReceiptData])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default ReceiptWatcher\n","import { useEffect } from 'react'\nimport { Redirect, Route, Switch } from 'react-router-dom'\nimport { useSetBackground } from '@sentre/senhub'\n\nimport { Row, Col } from 'antd'\nimport Loading from 'components/loading'\n\nimport DaoWatcher from '../watcher/dao.watcher'\nimport ProposalWatcher from '../watcher/proposal.watcher'\nimport ReceiptWatcher from '../watcher/receipt.watcher'\nimport EventsWatcher from 'watcher/evens.watch'\n\nimport BG from 'static/images/system/bg-dark.png'\nimport BG_LIGHT from 'static/images/system/bg-light.png'\nimport 'static/styles/dark.less'\nimport 'static/styles/light.less'\nimport { APP_ROUTE } from 'configs/route'\n\nconst View = () => {\n  const setBackground = useSetBackground()\n\n  useEffect(() => {\n    setBackground({ light: BG_LIGHT, dark: BG })\n  }, [setBackground])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Loading>\n        <Col span={24}>\n          <Switch>\n            <Route exact {...APP_ROUTE.listDaos} />\n            <Route exact {...APP_ROUTE.createDao} />\n            <Route exact {...APP_ROUTE.daoDetails} />\n            <Route exact {...APP_ROUTE.editDao} />\n            <Route exact {...APP_ROUTE.createProposal} />\n            <Route exact {...APP_ROUTE.proposalDetails} />\n            <Route exact {...APP_ROUTE.notFound} />\n            <Redirect from=\"*\" to={APP_ROUTE.listDaos.path} />\n          </Switch>\n        </Col>\n      </Loading>\n      <Col span={24} />\n      <DaoWatcher />\n      <ProposalWatcher />\n      <ReceiptWatcher />\n      <EventsWatcher />\n    </Row>\n  )\n}\n\nexport default View\n","import { Fragment, useEffect, useState } from 'react'\nimport { getAnchorWallet, useWalletAddress } from '@sentre/senhub'\nimport InterDAO from '@interdao/core'\nimport { Utility } from '@sentre/utility'\n\nimport configs from 'configs'\n\nexport const AppLoader: React.FC = ({ children }) => {\n  const address = useWalletAddress()\n  const [loaded, setLoaded] = useState(false)\n\n  useEffect(() => {\n    if (loaded) return\n    const wallet = getAnchorWallet()!\n    // TODO: fix devnet\n    window.interDao = new InterDAO(\n      wallet,\n      'https://devnet.genesysgo.net',\n      configs.sol.interDaoProgramId,\n    )\n    window.senUtility = new Utility(wallet, 'https://devnet.genesysgo.net')\n    setLoaded(true)\n  }, [address, loaded])\n\n  if (!loaded) return null\n  return <Fragment>{children}</Fragment>\n}\n","import { PublicKey } from '@solana/web3.js'\nimport BN from 'bn.js'\n\n// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint' ||\n    val instanceof PublicKey ||\n    val instanceof BN ||\n    Buffer.isBuffer(val)\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\n\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'model/devTools'\n\nimport loading from 'model/loading.controller'\nimport daos from 'model/daos.controller'\nimport createDao from 'model/createDao.controller'\nimport tokenHolder from 'model/tokenHolder.controller'\nimport proposals from 'model/proposals.controller'\nimport receipt from 'model/receipt.controller'\nimport voteBid from 'model/voteBid.controller'\nimport template from 'model/template.controller'\nimport comments from 'model/comments.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools(process.env.REACT_APP_ID as string),\n  reducer: {\n    createDao,\n    daos,\n    tokenHolder,\n    proposals,\n    receipt,\n    voteBid,\n    template,\n    loading,\n    comments,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { Provider } from 'react-redux'\nimport { AntdProvider } from '@sentre/senhub'\n\nimport View from 'view'\nimport { AppLoader } from 'view/appLoader'\n\nimport model from 'model'\nimport configs from 'configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <AntdProvider appId={appId} prefixCls={appId}>\n      <Provider store={model}>\n        <AppLoader>\n          <View />\n        </AppLoader>\n      </Provider>\n    </AntdProvider>\n  )\n}\n\nexport * from 'static.app'\n","import { Tag } from 'antd'\n\nexport type ProposalStatusType =\n  | 'Failed'\n  | 'Voting'\n  | 'Preparing'\n  | 'Succeeded'\n  | 'Executed'\n  | 'Loading'\n\nexport type ProposalStatusProps = {\n  status: ProposalStatusType\n}\n\nconst STATUS_COLOR: Record<string, string> = {\n  Succeeded: '#0CA1BF',\n  Failed: '#F9575E',\n  Preparing: '#D4B106',\n  Executed: '#03A326',\n  Voting: '#40A9FF',\n  Loading: '#1a1311',\n}\n\nconst ProposalStatus = ({ status }: ProposalStatusProps) => {\n  return (\n    <Tag\n      style={{ color: STATUS_COLOR[status], border: '1px solid', margin: 0 }}\n      color={'transparent'}\n    >\n      {status}\n    </Tag>\n  )\n}\n\nexport default ProposalStatus\n","import { ReactNode } from 'react'\n\nimport { Space, SpaceProps, Typography } from 'antd'\n\nconst RowSpaceVertical = ({\n  label = '',\n  value,\n  ...rest\n}: {\n  label?: string\n  value: ReactNode\n} & SpaceProps) => {\n  return (\n    <Space {...rest} direction=\"vertical\">\n      <Typography.Text type=\"secondary\">{label}</Typography.Text>\n      {value}\n    </Space>\n  )\n}\n\nexport default RowSpaceVertical\n","import { Env } from '@sentre/senhub'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Net } from '@sentre/senhub'\n\n/**\n * Contructor\n */\ntype Conf = {\n  interDaoProgramId: string\n  fee: number\n  taxman: string\n  taxmanAddress: string\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    interDaoProgramId: '8pKJfrPviSbcuEcgwcYp2WWuXt5gTE9R8qvXqacPk1S5',\n    fee: 1000000, // 0.001 SOL\n    taxman: '8W6QginLcAydYyMYjxuyKQN56NzeakDE3aRFrAmocS6D',\n    taxmanAddress: '8UaZw2jDhJzv5V53569JbCd3bD4BnyCfBH3sjwgajGS9',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    interDaoProgramId: '',\n    fee: 1000000, // 0.001 SOL\n    taxman: '8W6QginLcAydYyMYjxuyKQN56NzeakDE3aRFrAmocS6D',\n    taxmanAddress: '',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    interDaoProgramId: '8pKJfrPviSbcuEcgwcYp2WWuXt5gTE9R8qvXqacPk1S5', //Cf9aesANCGv35NsqtGpJ4d3M7wKrcPLiGDLUxYPtaEab\n    fee: 1000000, // 0.001 SOL\n    taxman: '8W6QginLcAydYyMYjxuyKQN56NzeakDE3aRFrAmocS6D',\n    taxmanAddress: '9doo2HZQEmh2NgfT3Yx12M89aoBheycYqH1eaR5gKb3e',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from '@sentre/senhub'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { Col, Row, Space, Typography } from 'antd'\n\nconst Banner = () => {\n  return (\n    <Row gutter={[16, 16]} justify=\"center\">\n      <Col>\n        <Space direction=\"vertical\" size={0}>\n          <Typography.Title\n            level={1}\n            style={{ fontSize: 72, textAlign: 'center' }}\n          >\n            Let’s build\n          </Typography.Title>\n          <Typography.Title\n            level={1}\n            style={{ fontSize: 72, textAlign: 'center' }}\n            className=\"title-underline\"\n          >\n            YOUR OWN DAO.\n          </Typography.Title>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Typography.Paragraph\n          type=\"secondary\"\n          style={{ fontSize: 20, textAlign: 'center' }}\n        >\n          Customize the DAO to your purpose - No coding needed.\n        </Typography.Paragraph>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Banner\n","import { ReactNode } from 'react'\n\nimport { Card, Col, Row, Space, Typography } from 'antd'\n\nexport type InfoCardProps = {\n  icon?: ReactNode\n  title?: string\n  value?: string\n}\n\nconst InfoCard = ({ icon, title, value }: InfoCardProps) => {\n  return (\n    <Card\n      bordered={false}\n      style={{\n        background: 'transparent',\n        borderLeft: '1px solid',\n        borderRadius: 'unset',\n      }}\n      bodyStyle={{\n        padding: '0 24px',\n      }}\n    >\n      <Row gutter={[5, 5]}>\n        <Col span={24}>\n          <Space>\n            {icon}\n            <Typography.Text type=\"secondary\">{title}</Typography.Text>\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Typography.Title level={4}>{value}</Typography.Title>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default InfoCard\n","import { useMemo } from 'react'\nimport { util } from '@sentre/senhub'\nimport { useSelector } from 'react-redux'\n\nimport { Col, Row } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport Banner from './banner'\nimport InfoCard from './infoCard'\n\nimport { AppState } from 'model'\n\nimport './index.less'\n\nconst Hero = () => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const proposal = useSelector((state: AppState) => state.proposals)\n\n  const executeProposal = useMemo(() => {\n    let total = 0\n    for (const proposalAddr in proposal) {\n      const { executed } = proposal[proposalAddr]\n      if (executed) total++\n      continue\n    }\n    return total\n  }, [proposal])\n\n  return (\n    <Row className=\"inter_dao-banner\" justify=\"center\">\n      <Col xs={24} lg={18}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Banner />\n          </Col>\n          <Col xs={24} sm={12} lg={8}>\n            <InfoCard\n              icon={<IonIcon name=\"earth-outline\" />}\n              title=\"Total DAOs\"\n              value={util.numeric(Object.keys(daos).length).format('0,0')}\n            />\n          </Col>\n          <Col xs={24} sm={12} lg={8}>\n            <InfoCard\n              icon={<IonIcon name=\"pencil-outline\" />}\n              title=\"Total Proposals\"\n              value={util.numeric(Object.keys(proposal).length).format('0,0')}\n            />\n          </Col>\n          <Col xs={24} sm={12} lg={8}>\n            <InfoCard\n              icon={<IonIcon name=\"thumbs-up-outline\" />}\n              title=\"Total Executed Proposals\"\n              value={util.numeric(executeProposal).format('0,0')}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Hero\n","import { ReactNode } from 'react'\n\nimport { Space, Typography } from 'antd'\n\nexport type StatisticCardProps = {\n  title: string\n  value: string | number | ReactNode\n}\nconst StatisticCard = ({ title, value }: StatisticCardProps) => {\n  return (\n    <Space direction=\"vertical\">\n      <Typography.Text className=\"caption\" type=\"secondary\">\n        {title}\n      </Typography.Text>\n      {['number', 'string'].includes(typeof value) ? (\n        <Typography.Text>{value}</Typography.Text>\n      ) : (\n        value\n      )}\n    </Space>\n  )\n}\n\nexport default StatisticCard\n","import { useMemo } from 'react'\nimport { DaoRegime, DaoRegimes } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\n\nimport { Tag } from 'antd'\n\nexport type RegimeTagProps = { regime: DaoRegime; special?: boolean }\n\nconst RegimeTag = ({ regime, special }: RegimeTagProps) => {\n  const tag = useMemo(() => {\n    if (isEqual(regime, DaoRegimes.Dictatorial)) return 'Dictatorial'\n    if (isEqual(regime, DaoRegimes.Democratic)) return 'Democratic'\n    if (isEqual(regime, DaoRegimes.Autonomous)) return 'Autonomous'\n    return 'DAO Regime'\n  }, [regime])\n\n  const className = special ? 'regime-tag dao-tag' : 'dao-tag'\n\n  return (\n    <Tag className={className} style={{ margin: 0 }}>\n      {tag}\n    </Tag>\n  )\n}\n\nexport default RegimeTag\n","import BN from 'bn.js'\n\nimport { Avatar, AvatarProps } from 'antd'\n\nimport gradients from './gradients.json'\n\nconst string2Number = (seed: string, limit: number) => {\n  const buf = Buffer.from(seed)\n  const index = new BN(buf).mod(new BN(limit))\n  return Number(index)\n}\n\nexport type GradientAvatarProps = { seed?: string; avatarProps?: AvatarProps }\n\nconst GradientAvatar = ({\n  seed = Math.random().toString(),\n  avatarProps = {},\n}: GradientAvatarProps) => {\n  const direction = string2Number(seed, 360)\n  const { name, colors } = gradients[string2Number(seed, gradients.length)]\n  return (\n    <Avatar\n      style={{\n        background: `linear-gradient(${direction}deg, ${colors.join(', ')})`,\n      }}\n      alt={name}\n      {...avatarProps}\n    />\n  )\n}\n\nexport default GradientAvatar\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useHistory, useLocation, useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { util } from '@sentre/senhub'\n\nimport { ipfs } from 'helpers/ipfs'\nimport { notifyError } from 'helpers'\nimport { AppState } from 'model'\nimport { DaoMetaData } from 'model/createDao.controller'\n\nimport { APP_ROUTE } from 'configs/route'\n\nexport const useDaoMetaData = (daoAddress: string) => {\n  const history = useHistory()\n  const { search } = useLocation()\n  const { daoAddress: daoPrams } = useParams<{ daoAddress: string }>()\n  const daoData = useSelector((state: AppState) => state.daos[daoAddress])\n  const [metaData, setMetaData] = useState<DaoMetaData>()\n\n  const query = useMemo(() => new URLSearchParams(search), [search])\n\n  const getMetaData = useCallback(async () => {\n    if (!util.isAddress(daoAddress) || !daoData) return setMetaData(undefined)\n    try {\n      const data = await ipfs.methods.daoMetadata.get(daoData.metadata)\n      setMetaData(data)\n    } catch (error) {\n      notifyError(error)\n    }\n  }, [daoAddress, daoData])\n\n  useEffect(() => {\n    getMetaData()\n  }, [getMetaData])\n\n  const getDaoName = useCallback(async () => {\n    if (daoPrams !== daoAddress || !metaData?.daoName) return\n    const nameQuery = query.get('daoName')\n    const daoName = metaData?.daoName\n      .replace(/[\\W_]+/gm, '-')\n      .toLocaleLowerCase()\n\n    if (!!nameQuery && !!daoName && nameQuery !== daoName) {\n      history.push(APP_ROUTE.listDaos.generatePath({}))\n    }\n    if (!nameQuery && !!daoName) {\n      history.push({\n        search: `daoName=${daoName}`,\n      })\n    }\n  }, [daoAddress, daoPrams, history, metaData?.daoName, query])\n  useEffect(() => {\n    getDaoName()\n  }, [getDaoName])\n\n  return metaData\n}\n","import axios from 'axios'\nimport { Connection, programs } from '@metaplex/js'\nimport { PublicKey } from '@solana/web3.js'\n\nimport { rpc } from '@sentre/senhub'\n\nconst {\n  metadata: { Metadata, MetadataData },\n} = programs\n\nconst TOKEN_METADATA_PROGRAM_ID = new PublicKey(\n  'metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s',\n)\n\nconst connection = new Connection(rpc)\n\nexport type MetadataType = InstanceType<typeof Metadata>\nexport type MetadataDataType = InstanceType<typeof MetadataData>\n\nexport const fetchListNTFs = async (\n  walletAddress: string,\n): Promise<Record<string, MetadataDataType[]>> => {\n  const ownerPublickey = walletAddress\n  const nftsmetadata = await Metadata.findDataByOwner(\n    connection,\n    ownerPublickey,\n  )\n  let listNFTs: Record<string, MetadataDataType[]> = {}\n  nftsmetadata.forEach((nft: MetadataDataType) => {\n    if (nft.collection) {\n      listNFTs[nft.collection.key] = listNFTs[nft.collection.key]\n        ? [...listNFTs[nft.collection.key], nft]\n        : [nft]\n    }\n  })\n  return listNFTs\n}\n\nexport const fetchYourOwnerNTFs = async (\n  ownerAddress: string,\n): Promise<MetadataDataType[]> => {\n  const nftsmetadata = await Metadata.findDataByOwner(connection, ownerAddress)\n  return nftsmetadata\n}\n\nexport const getNftMetaData = async (\n  tokenMint: string,\n): Promise<MetadataType> => {\n  const tokenMetadata = await Metadata.findByMint(connection, tokenMint)\n  return tokenMetadata\n}\n\nexport const getNftPDA = async (tokenMint: string) => {\n  const metadataPDA = await Metadata.getPDA(new PublicKey(tokenMint))\n  return metadataPDA\n}\n\nexport const getInfoNFT = async (address: string) => {\n  const nftInfo = await Metadata.getInfo(connection, new PublicKey(address))\n  return nftInfo\n}\n\nexport const deserializeData = async (dataBuffer: Buffer) => {\n  return MetadataData.deserialize(dataBuffer)\n}\n\nexport const fetchNftFromURI = async (URL: string) => {\n  const data = await axios.get(URL)\n  return data\n}\n\nexport const getListAccountNFTsBelongToCollection = async (\n  collectionAddress: string,\n) => {\n  const accounts = await connection.getProgramAccounts(\n    TOKEN_METADATA_PROGRAM_ID,\n    {\n      commitment: 'confirmed',\n      filters: [\n        { dataSize: 679 },\n        {\n          memcmp: {\n            offset: 368,\n            bytes: collectionAddress,\n          },\n        },\n      ],\n    },\n  )\n  return accounts\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useAccounts } from '@sentre/senhub'\nimport { utils, web3, BN } from '@project-serum/anchor'\n\nimport { fetchYourOwnerNTFs, MetadataDataType } from 'helpers/metaplex'\nimport { DataLoader } from '@sentre/senhub'\n\nconst useOwnerNFT = (ownerPublickey: string) => {\n  const [nfts, setNfts] = useState<MetadataDataType[]>()\n  const [nftsFiltered, setNftFiltered] = useState<MetadataDataType[]>()\n  const accounts = useAccounts()\n\n  const fetchNFTs = useCallback(async () => {\n    if (!ownerPublickey) return setNfts(undefined)\n    const nftsFetching = await DataLoader.load(\n      'fetchYourOwnerNTFs' + ownerPublickey,\n      () => fetchYourOwnerNTFs(ownerPublickey),\n    )\n    setNfts(nftsFetching)\n  }, [ownerPublickey])\n\n  useEffect(() => {\n    fetchNFTs()\n  }, [fetchNFTs])\n\n  const filterNFTs = useCallback(async () => {\n    if (!nfts) return setNftFiltered(undefined)\n    let nftsFiltered: MetadataDataType[] = []\n    await Promise.all(\n      nfts.map(async (nft: MetadataDataType) => {\n        const nftTokenAccount = await utils.token.associatedAddress({\n          mint: new web3.PublicKey(nft.mint),\n          owner: new web3.PublicKey(ownerPublickey),\n        })\n        let nftAccountData = accounts[nftTokenAccount.toBase58()]\n        if (new BN(nftAccountData?.amount.toString()).eq(new BN(1))) {\n          nftsFiltered.push(nft)\n        }\n      }),\n    )\n    return setNftFiltered(nftsFiltered)\n  }, [accounts, nfts, ownerPublickey])\n\n  useEffect(() => {\n    filterNFTs()\n  }, [filterNFTs])\n\n  return { nfts: nftsFiltered }\n}\n\nexport default useOwnerNFT\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useAccounts, useWalletAddress } from '@sentre/senhub'\n\nimport { useDaoMetaData } from 'hooks/dao/useDaoMetaData'\nimport useOwnerNFT from '../useOwnerNFT'\nimport { useDaoData } from './useDaoData'\n\nconst useValidDaoMember = (daoAddress: string) => {\n  const [validMember, setValidMember] = useState(false)\n  const [checking, setChecking] = useState(true)\n  const accounts = useAccounts()\n  const daoData = useDaoData(daoAddress)\n  const metaData = useDaoMetaData(daoAddress)\n  const myAddress = useWalletAddress()\n\n  const { nfts } = useOwnerNFT(myAddress)\n\n  const isMemberOnlyNFT = useMemo(() => {\n    if (!nfts || !daoData?.mint) return false\n    for (const nft of nfts)\n      if (nft.collection?.key === daoData.mint.toBase58()) return true\n\n    return false\n  }, [daoData?.mint, nfts])\n\n  const isMemberTokenDAO = useMemo(() => {\n    if (!daoData?.mint) return false\n    const mints = []\n    for (const { mint } of Object.values(accounts)) mints.push(mint)\n    return mints.includes(daoData?.mint.toBase58())\n  }, [daoData?.mint, accounts])\n\n  const checkDaoMember = useCallback(() => {\n    if (!metaData || !daoData?.mint) return setChecking(true)\n    const { daoType } = metaData\n    let valid = false\n    if (daoType === 'flexible-dao' && daoData?.isNft) valid = isMemberOnlyNFT\n\n    if (daoType === 'flexible-dao' && !daoData?.isNft) valid = isMemberTokenDAO\n\n    setValidMember(valid)\n    setChecking(false)\n  }, [\n    daoData?.isNft,\n    daoData?.mint,\n    isMemberOnlyNFT,\n    isMemberTokenDAO,\n    metaData,\n  ])\n\n  useEffect(() => {\n    checkDaoMember()\n  }, [checkDaoMember])\n\n  return { validMember, checking }\n}\n\nexport default useValidDaoMember\n","import { util } from '@sentre/senhub'\n\nimport { Spin } from 'antd'\nimport { useDaoMembers } from 'hooks/dao'\n\nconst DaoMember = ({ daoAddress }: { daoAddress: string }) => {\n  const membersAmount = useDaoMembers(daoAddress)\n\n  if (membersAmount === undefined)\n    return (\n      <Spin spinning size=\"small\">\n        <span>--</span>\n      </Spin>\n    )\n\n  return <span>{util.numeric(membersAmount).format('0,0')}</span>\n}\n\nexport default DaoMember\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { useWidth } from '@sentre/senhub'\nimport { util } from '@sentre/senhub'\n\nimport { Row, Space, Spin, Tag, Tooltip, Typography } from 'antd'\nimport { Avatar, Button, Card, Col, Image } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport StatisticCard from 'components/ui/statisticCard'\nimport RegimeTag from 'components/regimeTag'\nimport { MintAvatar, MintSymbol } from '@sen-use/app'\nimport GradientAvatar from 'components/gradientAvatar'\n\nimport { AppState } from 'model'\nimport { useDaoMetaData } from 'hooks/dao/useDaoMetaData'\nimport useValidDaoMember from 'hooks/dao/useValidDaoMember'\nimport { getIcon, validURL } from 'helpers'\n\nimport autonomous from 'static/images/system/bg-autonomous.png'\nimport democratic from 'static/images/system/bg-democratic.png'\nimport dictatorial from 'static/images/system/bg-dictatorial.png'\nimport DaoMember from 'components/dao/daoMember'\nimport { APP_ROUTE } from 'configs/route'\n\nexport type DaoCardProps = { daoAddress: string }\nexport type DaoCardBackground = 'autonomous' | 'democratic' | 'dictatorial'\nconst DAO_CARD_BG = {\n  autonomous,\n  democratic,\n  dictatorial,\n}\nconst PAGE_PADDING = 24\nconst HEIGHT_RATIO = 1.777777\nconst MAX_WIDTH_RATE = 24 / 18 // full screen is 24 col, max width is 18 col\n\nconst DaoCard = ({ daoAddress }: DaoCardProps) => {\n  const history = useHistory()\n  const { regime, nonce, mint, isPublic } = useSelector(\n    (state: AppState) => state.daos[daoAddress],\n  )\n  const width = useWidth()\n  const metaData = useDaoMetaData(daoAddress)\n  const { validMember } = useValidDaoMember(daoAddress)\n  const parseRegime = Object.keys(regime)?.[0]\n\n  const heightRatio = useMemo(() => {\n    if (width < 768) return HEIGHT_RATIO\n    if (width < 1200) return HEIGHT_RATIO * 2\n    return HEIGHT_RATIO * 3\n  }, [width])\n\n  const handleClick = async () => {\n    if (!metaData)\n      return window.notify({\n        type: 'warning',\n        description: 'Data is loading',\n      })\n    if (!validMember && !isPublic)\n      return window.notify({\n        type: 'warning',\n        description: 'You are not a member of this DAO',\n      })\n\n    history.push(APP_ROUTE.daoDetails.generatePath({ daoAddress }))\n  }\n\n  const isMobile = width < 768\n  const desktopWidth = width > 992 ? width / MAX_WIDTH_RATE : width\n\n  return (\n    <Row gutter={[0, 0]} className=\"dao-card-wrapper\" onClick={handleClick}>\n      <Col\n        span={24}\n        className=\"dao-card-img\"\n        style={{\n          height: !isMobile\n            ? (desktopWidth - PAGE_PADDING * 2) / heightRatio\n            : (width - PAGE_PADDING) / heightRatio,\n        }}\n      >\n        <Image\n          preview={false}\n          src={DAO_CARD_BG[parseRegime as DaoCardBackground]}\n        />\n      </Col>\n      <Col className=\"regime-tag-wrapper\">\n        <RegimeTag regime={regime} special />\n      </Col>\n      <Col span={24}>\n        <Spin spinning={!metaData} tip=\"Loading...\">\n          <Card bordered={false}>\n            <Row gutter={[20, 20]}>\n              <Col span={24} style={{ minHeight: 88 }}>\n                <Row gutter={[16, 16]} wrap={false} align=\"top\">\n                  <Col>\n                    {!metaData?.image ? (\n                      <GradientAvatar\n                        seed={daoAddress}\n                        avatarProps={{ shape: 'square', size: 68 }}\n                      />\n                    ) : (\n                      <Avatar shape=\"square\" size={68} src={metaData?.image} />\n                    )}\n                  </Col>\n                  <Col flex=\"auto\">\n                    <Space direction=\"vertical\" size={0}>\n                      <Tooltip\n                        title={\n                          metaData?.daoName ? metaData.daoName : daoAddress\n                        }\n                      >\n                        <Typography.Title\n                          style={{ marginTop: -6 }}\n                          level={4}\n                          ellipsis={{ rows: 2 }}\n                        >\n                          {metaData?.daoName\n                            ? metaData.daoName\n                            : util.shortenAddress(daoAddress)}\n                        </Typography.Title>\n                      </Tooltip>\n                      <Tag className=\"dao-tag\" style={{ margin: 0 }}>\n                        {isPublic ? 'Public' : 'Member Only'}\n                      </Tag>\n                      <Space size={2} style={{ marginLeft: -3 }}>\n                        {metaData?.optionals?.map(\n                          (url, idx) =>\n                            validURL(url) && (\n                              <Button\n                                size=\"small\"\n                                type=\"text\"\n                                onClick={() => window.open(url, '_blank')}\n                                icon={<IonIcon name={getIcon(url)} />}\n                                key={idx}\n                              />\n                            ),\n                        )}\n                      </Space>\n                    </Space>\n                  </Col>\n                </Row>\n              </Col>\n              <Col span={24}>\n                <Row gutter={[16, 16]}>\n                  <Col span={8}>\n                    <StatisticCard\n                      title=\"Vote By\"\n                      value={\n                        <Space>\n                          <MintAvatar mintAddress={mint.toBase58()} />\n                          <MintSymbol mintAddress={mint.toBase58()} />\n                        </Space>\n                      }\n                    />\n                  </Col>\n                  <Col span={8}>\n                    <StatisticCard\n                      title=\"Proposals\"\n                      value={util.numeric(Number(nonce)).format('0,0')}\n                    />\n                  </Col>\n                  <Col span={8}>\n                    <StatisticCard\n                      title=\"Members\"\n                      value={<DaoMember daoAddress={daoAddress} />}\n                    />\n                  </Col>\n                </Row>\n              </Col>\n              <Col span={24} style={{ minHeight: 44 }}>\n                <Typography.Paragraph\n                  style={{ margin: 0 }}\n                  type=\"secondary\"\n                  ellipsis={{ rows: 2 }}\n                >\n                  {metaData?.description}\n                </Typography.Paragraph>\n              </Col>\n            </Row>\n          </Card>\n        </Spin>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoCard\n","import { Button, Input, Spin } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport { LoadingOutlined } from '@ant-design/icons'\n\ntype SearchDaoProps = {\n  onSearch: (keyword: string) => void\n  loading?: boolean\n}\n\nconst SearchDao = ({ onSearch, loading = false }: SearchDaoProps) => {\n  return (\n    <Input\n      prefix={\n        <Button\n          type=\"text\"\n          size=\"small\"\n          icon={\n            loading ? (\n              <Spin indicator={<LoadingOutlined style={{ fontSize: 14 }} />} />\n            ) : (\n              <IonIcon name=\"search-outline\" />\n            )\n          }\n        />\n      }\n      placeholder=\"Search by name, address\"\n      style={{ width: '100%' }}\n      onChange={(e) => onSearch(e.target.value)}\n    />\n  )\n}\nexport default SearchDao\n","import { DaoRegime } from '@interdao/core'\n\nimport { Card, Image, Typography } from 'antd'\n\nimport autonomous from 'static/images/system/bg-autonomous.png'\nimport democratic from 'static/images/system/bg-democratic.png'\nimport dictatorial from 'static/images/system/bg-dictatorial.png'\nimport { DaoCardBackground } from '../../listDaos/publicDaos/daoCard'\n\nconst DAO_CARD_BG = {\n  autonomous,\n  democratic,\n  dictatorial,\n}\n\nconst CardRegime = ({\n  regime,\n  onChange = () => {},\n  active = true,\n}: {\n  regime: DaoRegime\n  onChange?: (regime: DaoRegime) => void\n  active?: boolean\n}) => {\n  return (\n    <Card\n      bordered={false}\n      style={{ overflow: 'hidden', cursor: 'pointer' }}\n      bodyStyle={{ padding: 0 }}\n      onClick={() => onChange(regime)}\n      className={`card-regime ${active ? 'active' : ''}`}\n    >\n      <Image\n        src={DAO_CARD_BG[Object.keys(regime)[0] as DaoCardBackground]}\n        preview={false}\n      />\n      <Typography.Text\n        style={{\n          position: 'absolute',\n          bottom: 0,\n          left: 0,\n          textAlign: 'center',\n          width: '100%',\n          padding: 4,\n          backdropFilter: 'blur(4px)',\n          color: '#fff',\n          textTransform: 'capitalize',\n          fontWeight: 400,\n        }}\n      >\n        {Object.keys(regime)[0]}\n      </Typography.Text>\n    </Card>\n  )\n}\n\nexport default CardRegime\n","import isEqual from 'react-fast-compare'\nimport { DaoRegime, DaoRegimes } from '@interdao/core'\n\nimport { Button, Row, Col, Space, Typography, Popover } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport CardRegime from 'view/createDao/components/cardRegime'\n\nexport const REGIME_LIST = [\n  DaoRegimes.Dictatorial,\n  DaoRegimes.Democratic,\n  DaoRegimes.Autonomous,\n]\n\ntype RegimeInputProps = {\n  value: DaoRegime\n  onChangeRegime: (regime: DaoRegime) => void\n}\n\nconst RegimeInput = ({ value, onChangeRegime }: RegimeInputProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space>\n          <Typography.Text>DAO Regime</Typography.Text>\n          <Popover\n            overlayStyle={{ maxWidth: 300 }}\n            trigger=\"click\"\n            content={\n              <Row gutter={[16, 16]}>\n                <Col span={24}>\n                  <Typography.Title level={5}>\n                    What is DAO Regime?\n                  </Typography.Title>\n                </Col>\n                <Col span={24}>\n                  <Space direction=\"vertical\">\n                    <Typography.Text>\n                      <strong>Dictatorial:</strong> Only DAO owner can create\n                      and execute proposals.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Democratic:</strong> Community can create\n                      proposals, DAO owner execute proposals.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Autonomous:</strong> Community can create and\n                      execute proposals.\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            }\n          >\n            <Button\n              type=\"text\"\n              size=\"small\"\n              icon={<IonIcon name=\"information-circle-outline\" />}\n            />\n          </Popover>\n        </Space>\n      </Col>\n      {REGIME_LIST.map((regime, idx) => (\n        <Col xs={24} md={8} key={idx}>\n          <CardRegime\n            regime={regime}\n            onChange={onChangeRegime}\n            active={isEqual(value, regime)}\n          />\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default RegimeInput\n","import { Select } from 'antd'\nimport { REGIME_LIST } from 'view/createDao/setRule/flexible/regimeInput'\n\ntype MechanismsProps = { value: string; onSort: (value: string) => void }\n\nconst Mechanisms = ({ onSort, value }: MechanismsProps) => {\n  return (\n    <Select\n      value={value}\n      style={{ textTransform: 'capitalize', width: '100%' }}\n      onChange={onSort}\n    >\n      <Select.Option value=\"all\">All mechanisms</Select.Option>\n      {REGIME_LIST.map((regime, idx) => {\n        const value = Object.keys(regime)[0]\n        return (\n          <Select.Option\n            key={idx}\n            value={value}\n            style={{ textTransform: 'capitalize' }}\n          >\n            {value}\n          </Select.Option>\n        )\n      })}\n    </Select>\n  )\n}\n\nexport default Mechanisms\n","import { Select } from 'antd'\n\ntype TypeOfDAOProps = {\n  value: string\n  setType: (type: string) => void\n}\n\nconst TypeOfDAO = ({ value, setType }: TypeOfDAOProps) => {\n  return (\n    <Select value={value} style={{ width: '100%' }} onChange={setType}>\n      <Select.Option value=\"all\">All Type of DAO</Select.Option>\n      <Select.Option value=\"flexible-dao\">Flexible DAO</Select.Option>\n      <Select.Option value=\"multisig-dao\">Multisig DAO</Select.Option>\n    </Select>\n  )\n}\n\nexport default TypeOfDAO\n","import { DaoMetaData } from 'model/createDao.controller'\nimport lunr, { Index } from 'lunr'\n\nexport type SearchData = { daoAddress: string } & DaoMetaData\nexport type RegisterDaoData = Record<string, SearchData>\nclass DaoProvider {\n  private daoMap: Map<string, SearchData>\n  private engine: Index | undefined\n  register: RegisterDaoData\n\n  constructor(register: RegisterDaoData) {\n    this.register = register\n    this.daoMap = new Map<string, SearchData>()\n    this.engine = lunr(function () {\n      this.ref('daoAddress')\n      this.field('daoAddress')\n      this.field('daoName')\n      this.field('description')\n      Object.keys(register).forEach((address: string) => {\n        const doc = register[address]\n        if (doc) this.add(doc)\n      })\n    })\n    // build dao map\n    this._setDaoMap()\n  }\n\n  private _setDaoMap = async (): Promise<[Map<string, SearchData>]> => {\n    Object.keys(this.register).forEach((daoAddress) =>\n      this.daoMap.set(daoAddress, this.register[daoAddress]),\n    )\n    return [this.daoMap]\n  }\n\n  all = async (): Promise<SearchData[]> => {\n    const [daoMap] = await this._setDaoMap()\n    return Array.from(daoMap.values())\n  }\n\n  findByAddress = async (addr: string): Promise<string[] | undefined> => {\n    const [daoMap] = await this._setDaoMap()\n    if (daoMap.has(addr)) return [addr]\n    return\n  }\n\n  find = async (keyword: string, limit = 10): Promise<string[] | undefined> => {\n    const [daoMap] = await this._setDaoMap()\n    const engine = this.engine\n    if (!engine) return\n    let daos: SearchData[] = []\n    if (!keyword) return\n\n    const fuzzy = keyword + '~1'\n    engine.search(fuzzy).forEach(({ ref }) => {\n      if (daos.findIndex(({ daoAddress }) => daoAddress === ref) < 0) {\n        const dao = daoMap.get(ref)\n        if (dao) daos.push(dao)\n      }\n    })\n    const nextDaos: string[] = []\n    daos.slice(0, limit).forEach(({ daoAddress }) => {\n      if (daoAddress) nextDaos.push(daoAddress)\n    })\n    return nextDaos\n  }\n}\n\nexport default DaoProvider\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { util } from '@sentre/senhub'\n\nimport DaoProvider, {\n  RegisterDaoData,\n} from 'view/listDaos/publicDaos/search/daoProvider'\nimport { ipfs } from 'helpers/ipfs'\nimport { AppState } from 'model'\n\nconst useSearchDao = (keyword: string, daoAddresses: string[]) => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const [metaData, setMetaData] = useState<RegisterDaoData>()\n  const [searchData, setSearchData] = useState<string[]>()\n  const [loading, setLoading] = useState(false)\n\n  const getMetaData = useCallback(async () => {\n    const nextData: RegisterDaoData = {}\n    await Promise.all(\n      daoAddresses.map(async (daoAddress) => {\n        const daoData = daos[daoAddress]\n        const data = await ipfs.methods.daoMetadata.get(daoData.metadata)\n        nextData[daoAddress] = { ...data, daoAddress }\n      }),\n    )\n    return setMetaData(nextData)\n  }, [daoAddresses, daos])\n\n  const onSearch = useCallback(async () => {\n    if (!keyword || keyword.length < 3 || keyword === 'all-regime' || !metaData)\n      return setSearchData(undefined)\n    try {\n      const daoProvider = new DaoProvider(metaData)\n      if (util.isAddress(keyword)) {\n        const data = await daoProvider.findByAddress(keyword)\n        return setSearchData(data)\n      }\n      const data = await daoProvider.find(keyword)\n      return setSearchData(data)\n    } catch (err) {\n      setSearchData(undefined)\n    }\n  }, [keyword, metaData])\n\n  useEffect(() => {\n    getMetaData()\n  }, [getMetaData])\n\n  useEffect(() => {\n    if (keyword && keyword.length >= 3) setLoading(true)\n    const delayToSearch = setTimeout(async () => {\n      //  delay to waiting keyboard typing\n      await onSearch()\n      setLoading(false)\n    }, 500)\n    return () => clearTimeout(delayToSearch)\n  }, [keyword, onSearch])\n\n  return { searchData, loading }\n}\n\nexport default useSearchDao\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'model'\nimport { DaoState } from 'model/daos.controller'\nimport { ipfs } from 'helpers/ipfs'\n\nconst usePublicDaos = (daoType: string, mechanismsType: string): DaoState => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const [filteredDaos, setFilteredDaos] = useState<DaoState>({})\n\n  const filterDaos = useCallback(async () => {\n    const filteredDaos: DaoState = {}\n    for (const addr in daos) {\n      const { isPublic, regime, metadata } = daos[addr]\n      if (!isPublic) continue\n      // Validate type\n      if (daoType !== 'all') {\n        const metaData = await ipfs.methods.daoMetadata.get(metadata)\n        if (metaData?.daoType !== daoType) continue\n      }\n      // Validate Regime\n      if (mechanismsType !== 'all') {\n        const parseRegime = Object.keys(regime)[0]\n        if (parseRegime !== mechanismsType) continue\n      }\n      filteredDaos[addr] = daos[addr]\n    }\n    return setFilteredDaos(filteredDaos)\n  }, [daoType, daos, mechanismsType])\n\n  useEffect(() => {\n    filterDaos()\n  }, [filterDaos])\n\n  return filteredDaos\n}\nexport default usePublicDaos\n","import { useMemo, useState } from 'react'\nimport LazyLoad from '@sentre/react-lazyload'\n\nimport { Col, Empty, Row } from 'antd'\nimport DaoCard from './daoCard'\nimport SearchDao from './search'\nimport Mechanisms from './mechanisms'\nimport TypeOfDAO from './typeOfDao'\n\nimport useSearchDao from 'hooks/useSearchDao'\nimport usePublicDaos from 'hooks/daos/usePublicDaos'\n\nimport './index.less'\n\nconst PublicDaos = () => {\n  const [mechanisms, setMechanisms] = useState('all')\n  const [searchKey, setSearchKey] = useState('')\n  const [type, setType] = useState('all')\n  const publicDaos = usePublicDaos(type, mechanisms)\n\n  const daos = useMemo(() => Object.keys(publicDaos), [publicDaos])\n  const { searchData, loading } = useSearchDao(searchKey, daos)\n\n  return (\n    <Row gutter={[24, 16]}>\n      <Col xs={24} md={16}>\n        <Row gutter={[12, 12]}>\n          <Col xs={12} md={6}>\n            <TypeOfDAO value={type} setType={setType} />\n          </Col>\n          <Col xs={12} md={6}>\n            <Mechanisms onSort={setMechanisms} value={mechanisms} />\n          </Col>\n          <Col xs={24} md={12}>\n            <SearchDao onSearch={setSearchKey} loading={loading} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24} />\n      {searchKey.length >= 3 && (!searchData || !searchData.length) ? (\n        <Col span={24} style={{ textAlign: 'center' }}>\n          <Empty />\n        </Col>\n      ) : (\n        (searchData || Object.keys(publicDaos)).map((daoAddress) => (\n          <Col key={daoAddress} xs={24} md={12} xl={8}>\n            <LazyLoad height={479.75} offset={2}>\n              <DaoCard daoAddress={daoAddress} />\n            </LazyLoad>\n          </Col>\n        ))\n      )}\n    </Row>\n  )\n}\n\nexport default PublicDaos\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport LazyLoad from '@sentre/react-lazyload'\nimport { useWalletAddress } from '@sentre/senhub'\nimport { account } from '@senswap/sen-js'\nimport { DaoData } from '@interdao/core'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport DaoCard from './daoCard'\n\nimport { AppState } from 'model'\nimport { APP_ROUTE } from 'configs/route'\n\nconst YourDaos = () => {\n  const walletAddress = useWalletAddress()\n  const daos = useSelector((state: AppState) => state.daos)\n  const history = useHistory()\n\n  const filteredDaos = useMemo(\n    () =>\n      Object.keys(daos).filter((daoAddr) => {\n        const { authority } = daos[daoAddr] || ({} as DaoData)\n        const authAddress = authority.toBase58()\n        return account.isAddress(authAddress) && authAddress === walletAddress\n      }),\n    [daos, walletAddress],\n  )\n\n  if (!!filteredDaos.length)\n    return (\n      <Row gutter={[24, 24]}>\n        {filteredDaos.map((daoAddress) => (\n          <Col xs={24} md={12} xl={8} key={daoAddress}>\n            <LazyLoad height={191.5}>\n              <DaoCard daoAddress={daoAddress} />\n            </LazyLoad>\n          </Col>\n        ))}\n      </Row>\n    )\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Card bordered={false} bodyStyle={{ padding: 45, textAlign: 'center' }}>\n          <Space direction=\"vertical\" align=\"center\">\n            <Typography.Text type=\"secondary\">\n              You have no DAO yet!\n            </Typography.Text>\n            <Button\n              onClick={() => history.push(APP_ROUTE.createDao.generatePath({}))}\n            >\n              Build your DAO\n            </Button>\n          </Space>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default YourDaos\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useAccounts, useWalletAddress } from '@sentre/senhub'\nimport { utils, web3 } from '@project-serum/anchor'\n\nimport { AppState } from 'model'\nimport { ipfs } from 'helpers/ipfs'\nimport useOwnerNFT from '../useOwnerNFT'\n\nconst useAvailableDaos = () => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const [filteredDaos, setFilteredDaos] = useState<string[]>()\n  const accounts = useAccounts()\n  const walletAddress = useWalletAddress()\n  const { nfts } = useOwnerNFT(walletAddress)\n\n  const filterDaos = useCallback(async () => {\n    if (!nfts) return setFilteredDaos(undefined)\n    const filteredDaos: string[] = []\n    try {\n      for (const addr in daos) {\n        const { mint, isNft, metadata } = daos[addr]\n        const { daoType } = await ipfs.methods.daoMetadata.get(metadata)\n        let valid = true\n\n        if (daoType === 'flexible-dao' && !isNft) {\n          const tokenAccount = await utils.token.associatedAddress({\n            mint,\n            owner: new web3.PublicKey(walletAddress),\n          })\n          if (!accounts[tokenAccount.toBase58()]) valid = false\n        }\n        if (daoType === 'flexible-dao' && isNft) {\n          const myCollections = nfts?.map((nft) => nft.collection?.key)\n          if (!myCollections || !myCollections.includes(mint.toBase58()))\n            valid = false\n        }\n\n        if (valid) filteredDaos.push(addr)\n      }\n    } catch (error) {}\n    return setFilteredDaos(filteredDaos)\n  }, [accounts, daos, nfts, walletAddress])\n\n  useEffect(() => {\n    filterDaos()\n  }, [filterDaos])\n\n  return filteredDaos\n}\n\nexport default useAvailableDaos\n","import LazyLoad from '@sentre/react-lazyload'\n\nimport { Empty, Col, Row, Spin } from 'antd'\nimport DaoCard from '../publicDaos/daoCard'\n\nimport useAvailableDaos from 'hooks/daos/useAvailableDaos'\n\nconst AvailableDaos = () => {\n  const availableDaos = useAvailableDaos()\n\n  if (availableDaos?.length === 0)\n    return <Empty description=\"No available DAOs\" />\n\n  return (\n    <Spin spinning={availableDaos === undefined} tip=\"Loading...\">\n      <Row gutter={[24, 24]}>\n        {availableDaos?.map((daoAddress) => (\n          <Col xs={24} md={12} xl={8} key={daoAddress}>\n            <LazyLoad height={191.5}>\n              <DaoCard daoAddress={daoAddress} />\n            </LazyLoad>\n          </Col>\n        ))}\n      </Row>\n    </Spin>\n  )\n}\n\nexport default AvailableDaos\n","import React from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Space, Typography, Avatar } from 'antd'\nimport GradientAvatar from '../gradientAvatar'\n\nimport useProposalMetaData from 'hooks/proposal/useProposalMetaData'\nimport { AppState } from 'model'\nimport { useDaoMetaData } from 'hooks/dao/useDaoMetaData'\n\ntype ProposalItemProps = {\n  proposalAddress: string\n}\n\nconst ProposalItem = ({ proposalAddress }: ProposalItemProps) => {\n  const proposals = useSelector((state: AppState) => state.proposals)\n  const { metaData: proposalMetaData } = useProposalMetaData(proposalAddress)\n  const daoMetaData = useDaoMetaData(proposals[proposalAddress].dao.toBase58())\n\n  return (\n    <Space size={8} style={{ width: '100%' }}>\n      {!daoMetaData?.image ? (\n        <GradientAvatar\n          seed={proposals[proposalAddress].dao.toBase58()}\n          avatarProps={{ shape: 'square', size: 49 }}\n        />\n      ) : (\n        <Avatar shape=\"square\" size={49} src={daoMetaData?.image} />\n      )}\n      <Space size={4} direction=\"vertical\">\n        <Typography.Title level={5}>{proposalMetaData?.title}</Typography.Title>\n        <Typography.Text style={{ color: '#A08D70' }}>\n          {proposalMetaData?.description}\n        </Typography.Text>\n      </Space>\n    </Space>\n  )\n}\n\nexport default ProposalItem\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { ReceiptData } from '@interdao/core'\nimport { useWalletAddress } from '@sentre/senhub'\n\nimport { AppState } from 'model'\nimport { ProposalState } from 'model/proposals.controller'\n\nconst useWithdrawable = () => {\n  const receipts = useSelector((state: AppState) => state.receipt)\n  const proposals = useSelector((state: AppState) => state.proposals)\n  const [withdrawableProposals, setWithdrawableProposals] =\n    useState<ProposalState>({})\n  const [withdrawableReceipts, setWithdrawableReceipts] = useState<\n    (ReceiptData & { address: string })[]\n  >([])\n  const walletAddress = useWalletAddress()\n\n  const filterWithdrawable = useCallback(async () => {\n    let filteredReceipts: (ReceiptData & { address: string })[] = []\n    let filteredProposals: ProposalState = {}\n    for (const receiptAddr in receipts) {\n      const proposalAddress = receipts[receiptAddr].proposal.toBase58()\n      if (\n        receipts[receiptAddr].authority.toBase58() === walletAddress &&\n        Number(proposals[proposalAddress].endDate) < Date.now() / 1000 &&\n        proposals[proposalAddress] &&\n        receipts[receiptAddr].amount.toNumber() > 0\n      ) {\n        filteredReceipts.push({\n          ...receipts[receiptAddr],\n          address: receiptAddr,\n        })\n        const proposalAddress = receipts[receiptAddr].proposal.toBase58()\n        if (!filteredProposals[proposalAddress]) {\n          filteredProposals[proposalAddress] = proposals[proposalAddress]\n        }\n      }\n    }\n    setWithdrawableProposals(filteredProposals)\n    setWithdrawableReceipts(filteredReceipts)\n  }, [proposals, receipts, walletAddress])\n\n  useEffect(() => {\n    filterWithdrawable()\n  }, [filterWithdrawable])\n\n  return { withdrawableReceipts, withdrawableProposals }\n}\n\nexport default useWithdrawable\n","import { Connection } from '@solana/web3.js'\nimport { useEffect, useState } from 'react'\nimport { AnchorProvider } from '@project-serum/anchor'\nimport { useWalletAddress } from '@sentre/senhub'\nimport { getAnchorProvider } from '@sentre/senhub'\n\nexport const useAnchorProvider = () => {\n  const [provider, setProvider] = useState({} as AnchorProvider)\n\n  const walletAddress = useWalletAddress()\n\n  useEffect(() => {\n    const provider = getAnchorProvider()!\n    const devNetProvider = new AnchorProvider(\n      new Connection('https://devnet.genesysgo.net'),\n      provider.wallet as any,\n      {},\n    )\n    setProvider(devNetProvider)\n  }, [walletAddress])\n\n  return provider\n}\n","import { useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport IonIcon from '@sentre/antd-ionicon'\nimport { Button, Col, Image, Modal, Row, Space, Typography } from 'antd'\nimport ProposalItem from './proposalItem'\n\nimport useWithdrawableReceipt from 'hooks/proposal/useWithdrawableReceipt'\nimport { useAnchorProvider } from 'hooks/useAnchorProvider'\nimport { AppState } from 'model'\nimport { notifyError } from 'helpers'\nimport BG_JOIN_DAO from 'static/images/system/bg-join-dao.png'\n\nconst WithdrawNotificationModal = () => {\n  const proposals = useSelector((state: AppState) => state.proposals)\n  const daos = useSelector((state: AppState) => state.daos)\n  const [visible, setVisible] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const { withdrawableReceipts, withdrawableProposals } =\n    useWithdrawableReceipt()\n  const provider = useAnchorProvider()\n\n  useEffect(() => {\n    if (withdrawableReceipts.length > 0) return setVisible(true)\n    setVisible(false)\n  }, [withdrawableReceipts])\n\n  const handleWithdrawReceipts = async () => {\n    if (!withdrawableReceipts.length) return\n    setLoading(true)\n    try {\n      const txs = await Promise.all(\n        withdrawableReceipts.map(async (receipt) => {\n          const { isNft } =\n            daos[proposals[receipt.proposal.toBase58()].dao.toBase58()]\n          if (isNft) {\n            const { tx } = await window.interDao.closeNftVoting(\n              receipt.address,\n              false,\n            )\n            return { signers: [], tx }\n          } else {\n            const { tx } = await window.interDao.close(receipt.address, false)\n            return { signers: [], tx }\n          }\n        }),\n      )\n      await provider.sendAll(txs)\n    } catch (er: any) {\n      notifyError(er)\n    } finally {\n      setLoading(false)\n      setVisible(false)\n    }\n  }\n\n  return (\n    <Modal\n      visible={visible}\n      onCancel={() => {\n        setVisible(false)\n      }}\n      closeIcon={<IonIcon name=\"close-outline\" />}\n      footer={null}\n      bodyStyle={{ padding: '72px 24px 24px 24px' }}\n      className=\"join-dao\"\n    >\n      <Image preview={false} src={BG_JOIN_DAO} />\n      <Row gutter={[32, 32]} className=\"join-dao_content\">\n        <Col span={24}>\n          <Space\n            direction=\"vertical\"\n            size={12}\n            align=\"center\"\n            style={{ width: '100%' }}\n          >\n            <Typography.Title className=\"join-dao_title\" level={2}>\n              Voting is over!\n            </Typography.Title>\n            <Typography.Text type=\"secondary\">\n              Your tokens and NFTs can be withdrawn from the proposals below.\n            </Typography.Text>\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[24, 24]}>\n            {Object.keys(withdrawableProposals).map((value) => {\n              return (\n                <Col span={24} key={value}>\n                  <ProposalItem proposalAddress={value} />\n                </Col>\n              )\n            })}\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Button\n            type=\"primary\"\n            block\n            onClick={handleWithdrawReceipts}\n            loading={loading}\n            style={{ height: 40 }}\n          >\n            Withdraw\n          </Button>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default WithdrawNotificationModal\n","import { useHistory } from 'react-router-dom'\n\nimport { Row, Col, Button, Tabs } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport Hero from './hero'\nimport PublicDaos from './publicDaos'\nimport YourDaos from './publicDaos/yourDao'\nimport AvailableDaos from './availabelDaos'\nimport WithdrawNotificationModal from 'components/withdrawNotificationModal'\n\nimport './index.less'\nimport { APP_ROUTE } from 'configs/route'\n\nconst Dao = () => {\n  const history = useHistory()\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Hero />\n      </Col>\n      <Col span={24}>\n        <Row justify=\"center\">\n          <Col xs={24} lg={18}>\n            <Tabs\n              style={{ overflow: 'visible' }}\n              className=\"dao-tabs\"\n              tabBarExtraContent={\n                <Button\n                  type=\"primary\"\n                  onClick={() =>\n                    history.push(APP_ROUTE.createDao.generatePath({}))\n                  }\n                  icon={<IonIcon name=\"add-outline\" />}\n                >\n                  Create a DAO\n                </Button>\n              }\n            >\n              <Tabs.TabPane tab=\"Public DAOs\" key=\"public-daos\">\n                <PublicDaos />\n              </Tabs.TabPane>\n              <Tabs.TabPane tab=\"Available DAOs\" key=\"available-daos\">\n                <AvailableDaos />\n              </Tabs.TabPane>\n              <Tabs.TabPane tab=\"Your DAOs\" key=\"your-daos\">\n                <YourDaos />\n              </Tabs.TabPane>\n            </Tabs>\n          </Col>\n        </Row>\n      </Col>\n      <WithdrawNotificationModal />\n    </Row>\n  )\n}\n\nexport default Dao\n","import { Progress, Space, Typography } from 'antd'\n\nexport type InitDAOHeaderProps = {\n  step: number\n  onHandleStep?: () => void\n  disabled?: boolean\n}\n\nconst DEFAULT_PERCENT = 25\nconst DAO_PROGRESS_TITLE = [\n  'Choose Type of DAO',\n  'Input DAO Information',\n  'Set The Rule',\n  'Review',\n]\n\nconst InitDAOHeader = ({ step }: InitDAOHeaderProps) => {\n  return (\n    <Space direction=\"vertical\" size={12}>\n      <Typography.Title level={1}>{DAO_PROGRESS_TITLE[step]}</Typography.Title>\n      <Progress\n        className=\"create-progress\"\n        percent={step * DEFAULT_PERCENT + DEFAULT_PERCENT}\n        steps={4}\n        showInfo={false}\n      />\n    </Space>\n  )\n}\n\nexport default InitDAOHeader\n","import { useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport {\n  Button,\n  Card,\n  Col,\n  Radio,\n  RadioChangeEvent,\n  Row,\n  Typography,\n} from 'antd'\n\nimport { AppDispatch } from 'model'\nimport { DaoType, submitStepChooseType } from 'model/createDao.controller'\nimport { APP_ROUTE } from 'configs/route'\n\nconst DAO_TYPE = [\n  {\n    key: 'flexible-dao',\n    label: 'Flexible DAO',\n    description:\n      'The Flexible DAO has 3 regimes that allow you to create a DAO customized for your individual requirements, community structure, and governance token setup.',\n  },\n  {\n    key: 'multisig-dao',\n    label: 'MultiSig DAO (Coming Soon)',\n    description:\n      'The Multisig DAO allows you to create an organization for your team members with Autonomous regime and jointly own, manage shared assets such as treasury accounts, NFTs or mints.',\n    disabled: true,\n  },\n]\n\nconst ChooseDaoType = () => {\n  const [daoType, setDaoType] = useState<DaoType>('flexible-dao')\n  const history = useHistory()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const cardBorder = (key: string) =>\n    daoType !== key ? { borderColor: 'transparent' } : {}\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <Radio.Group\n          defaultValue={daoType}\n          onChange={(e: RadioChangeEvent) => setDaoType(e.target.value)}\n          className=\"btn-radio-card\"\n        >\n          <Row gutter={[24, 24]}>\n            {DAO_TYPE.map(({ key, label, description, disabled }) => (\n              <Col xs={24} md={12} key={key}>\n                <Radio.Button\n                  value={key}\n                  style={{ border: 'none' }}\n                  disabled={disabled}\n                >\n                  <Card\n                    style={{ ...cardBorder(key) }}\n                    className={`group-btn-card ${key} ${\n                      daoType === key ? 'active' : ''\n                    }`}\n                    bordered={false}\n                  >\n                    <Row gutter={[12, 12]}>\n                      <Col span={24}>\n                        <Typography.Title level={4}>{label}</Typography.Title>\n                      </Col>\n                      <Col span={24}>\n                        <Typography.Text type=\"secondary\">\n                          {description}\n                        </Typography.Text>\n                      </Col>\n                    </Row>\n                  </Card>\n                </Radio.Button>\n              </Col>\n            ))}\n          </Row>\n        </Radio.Group>\n      </Col>\n      <Col span={24}>\n        <Row>\n          <Col flex=\"auto\">\n            <Button\n              type=\"text\"\n              onClick={() => history.push(APP_ROUTE.listDaos.generatePath({}))}\n              size=\"large\"\n            >\n              Cancel\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              type=\"primary\"\n              onClick={() => dispatch(submitStepChooseType({ daoType }))}\n              size=\"large\"\n            >\n              Continue\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ChooseDaoType\n","import { ChangeEvent } from 'react'\n\nimport {\n  Button,\n  Card,\n  Col,\n  Image,\n  Input,\n  Row,\n  Space,\n  Typography,\n  Upload,\n} from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { UploadChangeParam } from 'antd/lib/upload'\nimport { fileToBase64 } from 'helpers'\nimport { DaoMetaData } from 'model/createDao.controller'\n\ntype FormInputDetailProps = {\n  metadata: DaoMetaData\n  setMetadata: (metadata: DaoMetaData) => void\n}\n\nconst FormInputDetail = ({ metadata, setMetadata }: FormInputDetailProps) => {\n  const formatMetaData = async (imgBase64: string | ArrayBuffer | null) => {\n    const nextMetaData: DaoMetaData = {\n      ...metadata,\n      image: imgBase64,\n    }\n    return setMetadata(nextMetaData)\n  }\n\n  const onFileChange = (file: UploadChangeParam) => {\n    const { fileList } = file\n    const originFile = fileList[0].originFileObj as File\n    fileToBase64(originFile, formatMetaData)\n  }\n\n  const onChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) =>\n    setMetadata({ ...metadata, [e.target.name]: e.target.value })\n\n  const onOptionalChange = (e: ChangeEvent<HTMLInputElement>, idx: number) => {\n    const socials: string[] = [...metadata.optionals]\n    socials[idx] = e.target.value\n    return setMetadata({ ...metadata, optionals: socials })\n  }\n\n  const addLink = () => {\n    const socials: string[] = [...metadata.optionals]\n    socials.push('')\n    return setMetadata({ ...metadata, optionals: socials })\n  }\n\n  const removeLink = (index: number) => {\n    const socials: string[] = [...metadata.optionals]\n    socials.splice(index, 1)\n    return setMetadata({ ...metadata, optionals: socials })\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          <Typography.Text>DAO Name</Typography.Text>\n          <Input\n            placeholder=\"Input DAO name\"\n            onChange={onChange}\n            name=\"daoName\"\n            className=\"border-less\"\n            value={metadata.daoName}\n          />\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          <Typography.Text>DAO Description</Typography.Text>\n          <Input.TextArea\n            placeholder=\"Input DAO description\"\n            name=\"description\"\n            onChange={onChange}\n            className=\"border-less\"\n            value={metadata.description}\n          />\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Text>Avatar</Typography.Text>\n          {metadata.image ? (\n            <Card\n              className=\"img-card-preview-upload\"\n              bodyStyle={{\n                padding: 0,\n                position: 'relative',\n                height: '100%',\n              }}\n            >\n              <Image src={metadata.image?.toString() || ''} preview={false} />\n              <IonIcon\n                className=\"ico-action-upload\"\n                name=\"trash-outline\"\n                onClick={() => setMetadata({ ...metadata, image: '' })}\n              />\n            </Card>\n          ) : (\n            <Upload\n              className={`inter_dao-upload-metadata ${\n                !!metadata.image ? 'uploaded' : ''\n              }`}\n              accept=\"image/png,image/jpg,image/webp\"\n              name=\"avatar\"\n              listType=\"picture-card\"\n              maxCount={1}\n              onChange={onFileChange}\n              onRemove={() => {\n                setMetadata({ ...metadata, image: '' })\n                return true\n              }}\n            >\n              <Space direction=\"vertical\" size={0}>\n                <Typography.Text style={{ fontSize: 24 }}>\n                  <IonIcon name=\"cloud-upload-outline\" />\n                </Typography.Text>\n                <Typography.Text type=\"secondary\" style={{ fontSize: 10 }}>\n                  Support JPG, PNG\n                </Typography.Text>\n              </Space>\n            </Upload>\n          )}\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          <Typography.Text>Social Media (Optional)</Typography.Text>\n          <Row gutter={[8, 8]}>\n            {metadata.optionals.map((social, index) => (\n              <Col span={24} key={index}>\n                <Row gutter={[12, 12]}>\n                  <Col span={22}>\n                    <Input\n                      placeholder=\"Input link\"\n                      onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                        onOptionalChange(e, index)\n                      }\n                      className=\"border-less\"\n                      value={social}\n                    />\n                  </Col>\n                  <Col span={2}>\n                    <Button\n                      type=\"text\"\n                      icon={<IonIcon name=\"trash-outline\" />}\n                      onClick={() => removeLink(index)}\n                    />\n                  </Col>\n                </Row>\n              </Col>\n            ))}\n            <Col span={24}>\n              <Button\n                type=\"dashed\"\n                icon={<IonIcon name=\"add-outline\" />}\n                onClick={addLink}\n              >\n                Add\n              </Button>\n            </Col>\n          </Row>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default FormInputDetail\n","import { useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Col, Row } from 'antd'\n\nimport { validURL } from 'helpers'\n\nimport { AppDispatch, AppState } from 'model'\nimport {\n  DaoMetaData,\n  revertPrevStep,\n  submitStepDaoDetail,\n} from 'model/createDao.controller'\nimport FormInputDetail from '../../../components/formInputDetail'\n\nconst DaoInputDetails = () => {\n  const defaultMetadata = useSelector(\n    (state: AppState) => state.createDao.data.metadata,\n  )\n  const [metadata, setMetadata] = useState<DaoMetaData>(defaultMetadata)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const validLink = useMemo(() => {\n    const { optionals } = metadata\n    if (!optionals.length) return true\n    for (const link of optionals) if (!validURL(link)) return false\n    return true\n  }, [metadata])\n\n  const disabled = useMemo(() => {\n    const { daoName, description, image } = metadata\n    return !daoName || !description || !image || !validLink\n  }, [metadata, validLink])\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <FormInputDetail metadata={metadata} setMetadata={setMetadata} />\n      </Col>\n      <Col span={24}>\n        <Row>\n          <Col flex=\"auto\">\n            <Button\n              type=\"text\"\n              size=\"large\"\n              onClick={() => dispatch(revertPrevStep())}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              disabled={disabled}\n              onClick={() => dispatch(submitStepDaoDetail({ metadata }))}\n            >\n              Continue\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoInputDetails\n","import { useSelector } from 'react-redux'\nimport { useWidth, util } from '@sentre/senhub'\n\nimport { Col, Image, Row, Space, Typography } from 'antd'\nimport CardRegime from '../components/cardRegime'\n\nimport { MintAvatar, MintSymbol } from '@sen-use/app'\nimport { AppState } from 'model'\n\nconst MAX_WIDTH_RATIO = 24 / 16\nconst PAGE_SPACING = 24\nconst HEIGHT_RATIO = 1.777777\n\nconst FlexibleDaoReview = () => {\n  const regime = useSelector((state: AppState) => state.createDao.data.regime)\n  const mintAddress = useSelector(\n    (state: AppState) => state.createDao.data.mintAddress,\n  )\n  const supply = useSelector((state: AppState) => state.createDao.data.supply)\n  const daoName = useSelector(\n    (state: AppState) => state.createDao.data.metadata.daoName,\n  )\n  const description = useSelector(\n    (state: AppState) => state.createDao.data.metadata.description,\n  )\n  const image = useSelector(\n    (state: AppState) => state.createDao.data.metadata.image,\n  )\n  const width = useWidth()\n\n  const isMobile = width < 768\n  const desktopWidth = width > 992 ? width / MAX_WIDTH_RATIO : width\n  const logoSize = isMobile\n    ? '100%'\n    : (desktopWidth - 6 - PAGE_SPACING * 4) / HEIGHT_RATIO / 2 + 3\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col xs={24} md={12}>\n        <Space direction=\"vertical\" size={24} style={{ width: '100%' }}>\n          <Space direction=\"vertical\">\n            <Typography.Text type=\"secondary\">Name of DAO</Typography.Text>\n            <Typography.Title level={1}>{daoName}</Typography.Title>\n          </Space>\n          <Space direction=\"vertical\" style={{ width: '100%' }}>\n            <Typography.Text>DAO Regime</Typography.Text>\n            <CardRegime regime={regime} />\n          </Space>\n        </Space>\n      </Col>\n      <Col xs={24} md={12}>\n        <Space direction=\"vertical\" size={24}>\n          <Space direction=\"vertical\">\n            <Typography.Text type=\"secondary\">Vote By</Typography.Text>\n\n            <Space>\n              <MintAvatar mintAddress={mintAddress} size={48} />\n              <Typography.Title level={1}>\n                <MintSymbol mintAddress={mintAddress} />\n              </Typography.Title>\n            </Space>\n          </Space>\n          <Space direction=\"vertical\" className=\"dao-logo-img\">\n            <Typography.Text>DAO Logo</Typography.Text>\n            <Image\n              style={{ width: logoSize, height: logoSize }}\n              src={image?.toString()}\n              preview={false}\n            />\n          </Space>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Text type=\"secondary\">Total Power</Typography.Text>\n          <Space direction=\"horizontal\">\n            <Typography.Title level={1}>\n              {util.numeric(supply?.toString()).format('0,0.[00]')}\n            </Typography.Title>\n            <Typography.Title level={1}>\n              <MintSymbol mintAddress={mintAddress} />\n            </Typography.Title>\n          </Space>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Text type=\"secondary\">Description</Typography.Text>\n          <Typography.Text>{description}</Typography.Text>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default FlexibleDaoReview\n","import { useCallback, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { useGetMintDecimals } from '@sentre/senhub'\nimport { BN } from '@project-serum/anchor'\n\nimport { ipfs } from 'helpers/ipfs'\nimport { notifySuccess, notifyError } from 'helpers'\nimport { AppState } from 'model'\nimport { APP_ROUTE } from 'configs/route'\n\nconst useCreateDao = () => {\n  const [loading, setLoading] = useState(false)\n  const createDaoData = useSelector((state: AppState) => state.createDao.data)\n  const getMintDecimals = useGetMintDecimals()\n  const history = useHistory()\n\n  const createFlexDAO = useCallback(async () => {\n    try {\n      setLoading(true)\n      const { mintAddress, supply, regime, isPublic, isNft, metadata } =\n        createDaoData\n      const { digest } = await ipfs.methods.daoMetadata.set(metadata)\n      const decimals = await getMintDecimals({ mintAddress })\n      const metadataBuff = Buffer.from(digest)\n      const totalSupply = supply.mul(new BN(10).pow(new BN(decimals!)))\n\n      const { txId, daoAddress } = await window.interDao.initializeDao(\n        mintAddress,\n        totalSupply,\n        metadataBuff,\n        undefined, // Optional DAO's keypair\n        regime,\n        isNft,\n        isPublic,\n      )\n      notifySuccess('Create DAO', txId)\n      return history.push(APP_ROUTE.daoDetails.generatePath({ daoAddress }))\n    } catch (er: any) {\n      notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }, [createDaoData, getMintDecimals, history])\n\n  return { createFlexDAO, loading }\n}\n\nexport default useCreateDao\n","import { Button } from 'antd'\nimport { useSelector } from 'react-redux'\n\nimport useCreateDao from 'hooks/instructions/useCreateDao'\nimport { AppState } from 'model'\n\nconst ButtonFlexDao = () => {\n  const { createFlexDAO, loading } = useCreateDao()\n\n  return (\n    <Button\n      onClick={createFlexDAO}\n      type=\"primary\"\n      size=\"large\"\n      loading={loading}\n    >\n      Confirm\n    </Button>\n  )\n}\n\nconst ConfirmButton = () => {\n  const daoType = useSelector(\n    (state: AppState) => state.createDao.data.metadata.daoType,\n  )\n  if (daoType === 'flexible-dao') return <ButtonFlexDao />\n  return null\n}\n\nexport default ConfirmButton\n","import { useDispatch } from 'react-redux'\n\nimport { Button, Col, Row } from 'antd'\nimport FlexibleDaoReview from './flexibleDaoReview'\n\nimport { AppDispatch } from 'model'\nimport { revertPrevStep } from 'model/createDao.controller'\nimport ConfirmButton from './confirmButton'\n\nconst Review = () => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <FlexibleDaoReview />\n      </Col>\n      <Col span={24}>\n        <Row>\n          <Col flex=\"auto\">\n            <Button\n              type=\"text\"\n              size=\"large\"\n              onClick={() => dispatch(revertPrevStep())}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col>\n            <ConfirmButton />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Review\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport axios from 'axios'\n\nimport { DataLoader } from '@sentre/senhub'\nimport { getNftMetaData, MetadataType } from 'helpers/metaplex'\n\nconst useNftMetaData = (mintAddress: string) => {\n  const [metaData, setMetaData] = useState<MetadataType>()\n  const [nftInfo, setNftInfo] = useState<any>()\n  const [loading, setLoading] = useState(false)\n\n  const getMetaData = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) {\n      setMetaData(undefined)\n      return setNftInfo(undefined)\n    }\n    setLoading(true)\n    try {\n      const metadata = await DataLoader.load(\n        'getNftMetadata' + mintAddress,\n        () => getNftMetaData(mintAddress),\n        { cache: { ttl: 99999999 } },\n      )\n      setMetaData(metadata)\n\n      const url = metadata.data.data.uri\n      const response = await DataLoader.load(\n        'getNftMetadataUrl' + mintAddress,\n        () => axios.get(url),\n        { cache: { ttl: 99999999 } },\n      )\n      setNftInfo(response.data)\n    } catch (error: any) {\n      setMetaData(undefined)\n      setNftInfo(undefined)\n    } finally {\n      setLoading(false)\n    }\n  }, [mintAddress])\n\n  useEffect(() => {\n    getMetaData()\n  }, [getMetaData])\n\n  return { metadata: metaData, nftInfo, loading }\n}\n\nexport default useNftMetaData\n","import { useMemo } from 'react'\nimport { useWidth } from '@sentre/senhub'\n\nimport { Card, Row, Col, Typography, Image } from 'antd'\n\nimport useNftMetaData from 'hooks/useNftMetaData'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport IMAGE_DEFAULT from 'static/images/system/nft.jpeg'\n\nexport type CardNFTProps = {\n  mintAddress: string\n  onSelect: (mintAddress: string) => void\n  isSelected?: boolean\n}\n\nconst SIZE_DESKTOP = 198\nconst SIZE_MOBILE = 150\n\nconst CardNFT = ({ mintAddress, onSelect, isSelected }: CardNFTProps) => {\n  const width = useWidth()\n\n  const imageSize = useMemo(() => {\n    if (width < 768) return SIZE_MOBILE\n    return SIZE_DESKTOP\n  }, [width])\n\n  const { nftInfo, loading } = useNftMetaData(mintAddress)\n\n  return (\n    <Card\n      bordered={false}\n      style={{ cursor: 'pointer', textAlign: 'center' }}\n      bodyStyle={{ padding: 0 }}\n      loading={loading}\n      onClick={() => onSelect(mintAddress)}\n    >\n      <Row>\n        {isSelected && (\n          <IonIcon\n            name=\"checkbox\"\n            style={{\n              position: 'absolute',\n              top: -1,\n              right: -1,\n              fontSize: 20,\n              zIndex: 1,\n            }}\n          />\n        )}\n        <Col span={24} style={{ textAlign: 'center', width: imageSize }}>\n          <Image\n            src={nftInfo?.image || IMAGE_DEFAULT}\n            preview={false}\n            style={{ borderRadius: 4 }}\n            width={imageSize}\n            height={imageSize}\n          />\n        </Col>\n        <Col span={24} style={{ textAlign: 'center', paddingTop: '8px' }}>\n          <Typography.Text>{nftInfo?.name}</Typography.Text>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CardNFT\n","import IonIcon from '@sentre/antd-ionicon'\nimport { Button, Input, Spin } from 'antd'\nimport { LoadingOutlined } from '@ant-design/icons'\n\ntype SearchDaoProps = {\n  onSearch: (keyword: string) => void\n  loading?: boolean\n  searchText: string\n}\n\nconst SearchNftCollection = ({ onSearch, loading = false }: SearchDaoProps) => {\n  return (\n    <Input\n      prefix={\n        <Button\n          type=\"text\"\n          size=\"small\"\n          icon={\n            loading ? (\n              <Spin indicator={<LoadingOutlined style={{ fontSize: 14 }} />} />\n            ) : (\n              <IonIcon name=\"search-outline\" />\n            )\n          }\n        />\n      }\n      placeholder=\"Search by collection address\"\n      style={{ width: '100%' }}\n      onChange={(e) => onSearch(e.target.value)}\n    />\n  )\n}\nexport default SearchNftCollection\n","import { Fragment, useCallback, useEffect, useState } from 'react'\nimport { useWalletAddress } from '@sentre/senhub'\nimport { account } from '@senswap/sen-js'\n\nimport { Card, Col, Empty, Image, Modal, Row, Space, Typography } from 'antd'\nimport CardNFT from 'components/cardNFT'\nimport SearchNftCollection from './searchNftCollection'\n\nimport {\n  fetchListNTFs,\n  getNftMetaData,\n  MetadataDataType,\n} from 'helpers/metaplex'\nimport useNftMetaData from 'hooks/useNftMetaData'\n\nimport BG_BTN from 'static/images/system/select-dao.png'\nimport IMAGE_DEFAULT from 'static/images/system/nft.jpeg'\n\nconst SIZE_COLLECTION_IMAGE = 88\n\ntype ModalNftCollectionProps = {\n  onSelect: (mintAddress: string) => void\n  mintAddress: string\n}\n\nconst CardNftImageOnly = ({\n  mintAddress,\n  openNftModal,\n}: {\n  mintAddress: string\n  openNftModal: (visible: boolean) => void\n}) => {\n  const { nftInfo, loading } = useNftMetaData(mintAddress)\n\n  return (\n    <Card\n      bordered={false}\n      bodyStyle={{ padding: 0 }}\n      loading={loading}\n      className=\"card-nft-image-only\"\n      onClick={() => openNftModal(true)}\n    >\n      <Image\n        src={nftInfo?.image || IMAGE_DEFAULT}\n        preview={false}\n        style={{ borderRadius: 4 }}\n        width={SIZE_COLLECTION_IMAGE}\n        height={SIZE_COLLECTION_IMAGE}\n        className=\"nft-image\"\n      />\n    </Card>\n  )\n}\n\nconst ModalNftCollection = ({\n  onSelect,\n  mintAddress,\n}: ModalNftCollectionProps) => {\n  const [visible, setVisible] = useState(false)\n  const [listCollectionNFTs, setListCollectionNFTs] =\n    useState<Record<string, MetadataDataType[]>>()\n  const [searchText, setSearchText] = useState<string>('')\n  const [loading, setLoading] = useState(false)\n\n  const walletAddress = useWalletAddress()\n\n  const getNftCollectionInfo = useCallback(async () => {\n    let collectionNFTs: Record<string, MetadataDataType[]> = {}\n    if (!account.isAddress(searchText)) return collectionNFTs\n    let collectionInfo = await getNftMetaData(searchText)\n    if (collectionInfo.data) {\n      collectionNFTs[collectionInfo.data.mint] = [collectionInfo.data]\n    } else {\n      collectionNFTs = {}\n    }\n    return collectionNFTs\n  }, [searchText])\n\n  const onSelectNFT = (mintAddress: string) => {\n    onSelect(mintAddress)\n    onCloseModal()\n  }\n\n  const onCloseModal = () => {\n    setSearchText('')\n    setVisible(false)\n  }\n\n  const getCollectionNFTs = useCallback(async () => {\n    setLoading(true)\n    let collectionNFTs: Record<string, MetadataDataType[]> = {}\n    try {\n      if (searchText.length > 0) {\n        collectionNFTs = await getNftCollectionInfo()\n      } else {\n        collectionNFTs = await fetchListNTFs(walletAddress)\n      }\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n    return setListCollectionNFTs(collectionNFTs)\n  }, [getNftCollectionInfo, searchText, walletAddress])\n\n  useEffect(() => {\n    getCollectionNFTs()\n  }, [getCollectionNFTs])\n\n  return (\n    <Fragment>\n      {!mintAddress ? (\n        <Card\n          className=\"btn-select-nft\"\n          style={{\n            background: `url(${BG_BTN})`,\n          }}\n          bodyStyle={{ padding: 10 }}\n          onClick={() => setVisible(true)}\n        >\n          <Space direction=\"vertical\" style={{ width: '100%' }} align=\"center\">\n            <Typography.Text style={{ color: '#f9deb0' }}>\n              Select\n            </Typography.Text>\n            <Typography.Text style={{ color: '#f9deb0' }}>\n              a NFT\n            </Typography.Text>\n            <Typography.Text style={{ color: '#f9deb0' }}>\n              collection\n            </Typography.Text>\n          </Space>\n        </Card>\n      ) : (\n        <CardNftImageOnly openNftModal={setVisible} mintAddress={mintAddress} />\n      )}\n\n      <Modal\n        className=\"modal-nft-selection\"\n        visible={visible}\n        footer={false}\n        onCancel={onCloseModal}\n      >\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Typography.Title level={4}>\n              Select a NFT collection\n            </Typography.Title>\n          </Col>\n          <Col span={24}>\n            <SearchNftCollection\n              loading={loading}\n              searchText={searchText}\n              onSearch={(value) => setSearchText(value)}\n            />\n          </Col>\n          <Col span={24}>\n            <Row\n              gutter={[24, 24]}\n              className=\"scrollbar\"\n              style={{ height: 500 }}\n            >\n              {listCollectionNFTs &&\n              Object.keys(listCollectionNFTs).length > 0 ? (\n                Object.keys(listCollectionNFTs).map((collectionAddress) => (\n                  <Col xs={12} md={8} key={collectionAddress}>\n                    <CardNFT\n                      mintAddress={collectionAddress}\n                      onSelect={onSelectNFT}\n                    />\n                  </Col>\n                ))\n              ) : (\n                <Col span={24}>\n                  <Empty />\n                </Col>\n              )}\n            </Row>\n          </Col>\n        </Row>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default ModalNftCollection\n","import { useState } from 'react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport { util } from '@sentre/senhub'\n\nimport { Col, Row, Space, Tooltip, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport ModalNftCollection from 'view/createDao/components/modalNftCollection'\n\nconst Address = ({ address }: { address: string }) => {\n  const [copied, setCopied] = useState(false)\n\n  const onCopy = async () => {\n    setCopied(true)\n    await util.asyncWait(1500)\n    setCopied(false)\n  }\n\n  return (\n    <Space>\n      <Typography.Text className=\"t-16\">\n        NFT collection address: {util.shortenAddress(address)}\n      </Typography.Text>\n      <Tooltip title=\"Copied\" open={copied}>\n        <CopyToClipboard text={address} onCopy={onCopy}>\n          <Typography.Text style={{ cursor: 'pointer' }} className=\"t-16\">\n            <IonIcon name=\"copy-outline\" />\n          </Typography.Text>\n        </CopyToClipboard>\n      </Tooltip>\n    </Space>\n  )\n}\n\ntype VoteNftInputProps = {\n  mintAddress: string\n  onMintAddressChange: (mintAddress: string) => void\n}\n\nconst VoteNftInput = ({\n  mintAddress,\n  onMintAddressChange,\n}: VoteNftInputProps) => {\n  return (\n    <Row gutter={[24, 24]}>\n      <Col>\n        <ModalNftCollection\n          mintAddress={mintAddress}\n          onSelect={onMintAddressChange}\n        />\n      </Col>\n      <Col flex={1}>\n        <Row align=\"bottom\" style={{ height: '100%' }}>\n          <Col span={24}>\n            {mintAddress && <Address address={mintAddress} />}\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default VoteNftInput\n","import { Col, Row, Input } from 'antd'\nimport { MintSelection } from '@sen-use/app'\n\ntype VoteTokenInputProps = {\n  mintAddress: string\n  onMintAddressChange: (mintAddress: string) => void\n}\n\nconst VoteTokenInput = ({\n  mintAddress,\n  onMintAddressChange,\n}: VoteTokenInputProps) => {\n  return (\n    <Col flex={1}>\n      <Row gutter={[24, 24]}>\n        <Col span={24}>\n          <Input\n            size=\"large\"\n            placeholder={'Input Token Address'}\n            value={mintAddress}\n            className=\"border-less\"\n            onChange={(e) => onMintAddressChange(e.target.value)}\n            suffix={\n              <MintSelection\n                value={mintAddress}\n                onChange={onMintAddressChange}\n                style={{ marginRight: -7 }}\n              />\n            }\n            autoFocus={true}\n          />\n        </Col>\n      </Row>\n    </Col>\n  )\n}\n\nexport default VoteTokenInput\n","import VoteNftInput from './voteNftInput'\nimport VoteTokenInput from './voteTokenInput'\n\ntype VoteInputProps = {\n  isNft: boolean\n  mintAddress: string\n  onMintAddressChange: (mintAddress: string) => void\n}\n\nconst VoteInput = ({\n  isNft,\n  mintAddress,\n  onMintAddressChange,\n}: VoteInputProps) => {\n  return isNft ? (\n    <VoteNftInput\n      mintAddress={mintAddress}\n      onMintAddressChange={onMintAddressChange}\n    />\n  ) : (\n    <VoteTokenInput\n      mintAddress={mintAddress}\n      onMintAddressChange={onMintAddressChange}\n    />\n  )\n}\n\nexport default VoteInput\n","import isEqual from 'react-fast-compare'\n\nimport { Button, Col, Row, Space, Typography } from 'antd'\nimport VoteInput from './voteInput'\n\nimport './index.less'\n\ntype TokenAddressInputProps = {\n  isNft: boolean\n  onNftChange: (isNft: boolean) => void\n  mintAddress: string\n  onMintAddressChange: (mintAddress: string) => void\n}\n\nconst TokenAddressInput = ({\n  isNft,\n  onNftChange,\n  mintAddress,\n  onMintAddressChange,\n}: TokenAddressInputProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space size={32}>\n          <Typography.Text>Vote By</Typography.Text>\n          <Space size={12}>\n            <Button\n              onClick={() => onNftChange(false)}\n              className={isEqual(isNft, false) ? '' : 'btn-unselect'}\n              size=\"small\"\n            >\n              Token\n            </Button>\n            <Button\n              onClick={() => onNftChange(true)}\n              className={isEqual(isNft, true) ? '' : 'btn-unselect'}\n              size=\"small\"\n            >\n              NFT\n            </Button>\n          </Space>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <VoteInput\n          isNft={isNft}\n          mintAddress={mintAddress}\n          onMintAddressChange={onMintAddressChange}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default TokenAddressInput\n","import isEqual from 'react-fast-compare'\n\nimport { Button, Col, Row, Typography } from 'antd'\n\ntype PrivacyProps = {\n  isPublic: boolean\n  setIsPublic: (isPublic: boolean) => void\n}\n\nconst Privacy = ({ isPublic, setIsPublic }: PrivacyProps) => {\n  return (\n    <Row gutter={[12, 12]}>\n      <Col span={24}>\n        <Typography.Text>DAO Privacy</Typography.Text>\n      </Col>\n      <Col>\n        <Button\n          onClick={() => setIsPublic(false)}\n          className={isEqual(isPublic, false) ? '' : 'btn-unselect'}\n          block\n        >\n          Member Only\n        </Button>\n      </Col>\n      <Col>\n        <Button\n          onClick={() => setIsPublic(true)}\n          className={isEqual(isPublic, true) ? '' : 'btn-unselect'}\n          block\n        >\n          Public\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Privacy\n","import { useCallback, useEffect, useState } from 'react'\nimport { useGetMintDecimals } from '@sentre/senhub'\n\n/**\n * Get token decimals from multiple resources. This hook needs MintProvider for working.\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * @param mintAddress Mint address\n * @returns Decimals\n */\nconst useMintDecimals = (mintAddress: string) => {\n  const [decimals, setDecimals] = useState<number | undefined>(undefined)\n  const getDecimals = useGetMintDecimals()\n\n  const fetchDecimals = useCallback(async () => {\n    try {\n      const decimals = (await getDecimals({ mintAddress })) || 0\n      return setDecimals(decimals)\n    } catch (er: any) {\n      return setDecimals(undefined)\n    }\n  }, [mintAddress, getDecimals])\n\n  useEffect(() => {\n    fetchDecimals()\n  }, [fetchDecimals])\n\n  return decimals\n}\n\nexport default useMintDecimals\n","import { useCallback, useEffect, useState } from 'react'\nimport { useGetMintData } from '@sentre/senhub'\nimport BN from 'bn.js'\n\n/**\n * Get token's total supply. This hook needs MintProvider for working.\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * @param mintAddress Mint address\n * @returns Decimals\n */\nconst useMintSupply = (mintAddress: string) => {\n  const [supply, setSupply] = useState<BN | undefined>(undefined)\n  const getMint = useGetMintData()\n\n  const fetchSupply = useCallback(async () => {\n    try {\n      const supply = await getMint({ mintAddress }).then((data) => {\n        if (data) return data[mintAddress].supply\n        return BigInt(0)\n      })\n      return setSupply(new BN(supply.toString()))\n    } catch (er: any) {\n      return setSupply(undefined)\n    }\n  }, [mintAddress, getMint])\n\n  useEffect(() => {\n    fetchSupply()\n  }, [fetchSupply])\n\n  return supply\n}\n\nexport default useMintSupply\n","import BN from 'bn.js'\nimport { util } from '@sentre/senhub'\n\nimport { Button, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport NumericInput from 'shared/antd/numericInput'\n\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport useMintSupply from 'shared/hooks/useMintSupply'\n\nexport type CirculatingSupplyInputProps = {\n  mintAddress?: string\n  value: string\n  onChange: (value: string) => void\n}\n\nconst CirculatingSupplyInput = ({\n  mintAddress = '',\n  value,\n  onChange,\n}: CirculatingSupplyInputProps) => {\n  const decimals = useMintDecimals(mintAddress) || 0\n  const supply = useMintSupply(mintAddress)\n  const suggestion = String(supply?.div(new BN(10 ** decimals)) || new BN(0))\n\n  return (\n    <Row gutter={[8, 8]} justify=\"end\">\n      <Col span={24}>\n        <Typography.Text>Total DAO Power</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <NumericInput\n          value={value}\n          onValue={onChange}\n          className=\"border-less\"\n          size=\"large\"\n          placeholder=\"Input Total DAO Power\"\n          suffix={\n            <Button\n              type=\"text\"\n              onClick={() => onChange(suggestion)}\n              icon={<IonIcon name=\"copy-outline\" />}\n              style={{ marginRight: -7 }}\n            >\n              By Suggestion\n            </Button>\n          }\n        />\n      </Col>\n      <Col>\n        <Space>\n          <Typography.Text type=\"secondary\">\n            Suggestion Token Supply:\n          </Typography.Text>\n          <Typography.Text>\n            {util.numeric(suggestion).format('0,0')}\n          </Typography.Text>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CirculatingSupplyInput\n","import { account } from '@senswap/sen-js'\nimport { util } from '@sentre/senhub'\n\nimport { Button, Col, Row, Space, Spin, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport NumericInput from 'shared/antd/numericInput'\nimport { LoadingOutlined } from '@ant-design/icons'\n\nimport { getListAccountNFTsBelongToCollection } from 'helpers/metaplex'\nimport { useCallback, useEffect, useState } from 'react'\n\nexport type CirculatingSupplyInputProps = {\n  mintAddress?: string\n  value: string\n  onChange: (value: string) => void\n}\n\nconst CirculatingSupplyInputNFT = ({\n  mintAddress = '',\n  value,\n  onChange,\n}: CirculatingSupplyInputProps) => {\n  const [suggestion, setSuggestion] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const getNftSuggestion = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setSuggestion('')\n    setLoading(true)\n    try {\n      let accounts = await getListAccountNFTsBelongToCollection(mintAddress)\n      setSuggestion(accounts.length.toString())\n    } catch (er: any) {\n      window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }, [mintAddress])\n\n  useEffect(() => {\n    getNftSuggestion()\n  }, [getNftSuggestion])\n\n  return (\n    <Row gutter={[8, 8]} justify=\"end\">\n      <Col span={24}>\n        <Typography.Text>Total DAO Power</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <NumericInput\n          value={value}\n          onValue={onChange}\n          className=\"border-less\"\n          size=\"large\"\n          placeholder=\"Input Total DAO Power\"\n          suffix={\n            <Button\n              type=\"text\"\n              onClick={() => onChange(suggestion)}\n              icon={<IonIcon name=\"copy-outline\" />}\n              style={{ marginRight: -7 }}\n            >\n              By Suggestion\n            </Button>\n          }\n        />\n      </Col>\n      <Col>\n        <Space>\n          <Typography.Text type=\"secondary\">\n            Suggestion NFT collection supply:\n          </Typography.Text>\n          {loading ? (\n            <Spin\n              spinning={loading}\n              indicator={<LoadingOutlined style={{ fontSize: 24 }} />}\n            />\n          ) : (\n            <Typography.Text>\n              {util.numeric(suggestion).format('0,0')}\n            </Typography.Text>\n          )}\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CirculatingSupplyInputNFT\n","import CirculatingSupplyInput from './circulatingSupplyInput'\nimport CirculatingSupplyInputNFT from './circulatingSupplyInputNFT'\n\ntype CirculatingSupplyProps = {\n  isNft: boolean\n  mintAddress: string\n  supply: string\n  onChangeSupply: (supply: string) => void\n}\n\nconst CirculatingSupply = ({\n  isNft,\n  mintAddress,\n  supply,\n  onChangeSupply,\n}: CirculatingSupplyProps) => {\n  return !isNft ? (\n    <CirculatingSupplyInput\n      mintAddress={mintAddress}\n      value={supply}\n      onChange={onChangeSupply}\n    />\n  ) : (\n    <CirculatingSupplyInputNFT\n      mintAddress={mintAddress}\n      value={supply}\n      onChange={onChangeSupply}\n    />\n  )\n}\n\nexport default CirculatingSupply\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport BN from 'bn.js'\n\nimport { Button, Col, Row } from 'antd'\nimport RegimeInput from './regimeInput'\nimport TokenAddressInput from './tokenAddressInput'\nimport Privacy from '../privacy'\nimport CirculatingSupply from './circulatingSupply'\n\nimport { AppDispatch, AppState } from 'model'\n\nimport { revertPrevStep, submitStepSetRule } from 'model/createDao.controller'\n\nconst FlexibleDaoRule = () => {\n  const { isNft, isPublic, mintAddress, supply, regime } = useSelector(\n    (state: AppState) => state.createDao.data,\n  )\n  const [nextIsNft, setIsNft] = useState(isNft)\n  const [nextRegime, setRegime] = useState(regime)\n  const [nextMintAddress, setMintAddress] = useState(mintAddress)\n  const [nextSupply, setSupply] = useState(supply.toString())\n  const [nextIsPublic, setIsPublic] = useState(isPublic)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const disabled = !nextMintAddress || !nextRegime\n\n  const onNextStep = () => {\n    return dispatch(\n      submitStepSetRule({\n        rule: {\n          isNft: nextIsNft,\n          regime: nextRegime,\n          supply: new BN(nextSupply),\n          isPublic: nextIsPublic,\n          mintAddress: nextMintAddress,\n        },\n      }),\n    )\n  }\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <RegimeInput value={nextRegime} onChangeRegime={setRegime} />\n          </Col>\n          <Col span={24}>\n            <TokenAddressInput\n              onMintAddressChange={setMintAddress}\n              mintAddress={nextMintAddress}\n              isNft={nextIsNft}\n              onNftChange={(isNft: boolean) => {\n                setMintAddress('')\n                return setIsNft(isNft)\n              }}\n            />\n          </Col>\n          <Col span={24}>\n            <CirculatingSupply\n              isNft={nextIsNft}\n              mintAddress={nextMintAddress}\n              supply={nextSupply}\n              onChangeSupply={setSupply}\n            />\n          </Col>\n          <Col span={24}>\n            <Privacy isPublic={nextIsPublic} setIsPublic={setIsPublic} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row>\n          <Col flex=\"auto\">\n            <Button\n              type=\"text\"\n              size=\"large\"\n              onClick={() => dispatch(revertPrevStep())}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col>\n            <Button\n              type=\"primary\"\n              size=\"large\"\n              disabled={disabled}\n              onClick={onNextStep}\n            >\n              Continue\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default FlexibleDaoRule\n","import FlexibleDaoRule from './flexible'\n\nconst DaoRule = () => {\n  return <FlexibleDaoRule />\n}\nexport default DaoRule\n","import { AppState } from 'model'\nimport { useSelector } from 'react-redux'\n\nimport ChooseDaoType from './chooseType'\nimport DaoInputDetails from './daoInputDetail'\nimport Review from './review'\nimport DaoRule from './setRule'\n\nimport { CreateDaoSteps } from 'model/createDao.controller'\n\nconst InitDAOBody = () => {\n  const step = useSelector((state: AppState) => state.createDao.step)\n  if (step === CreateDaoSteps.ChooseType) return <ChooseDaoType />\n  if (step === CreateDaoSteps.InputDetails) return <DaoInputDetails />\n  if (step === CreateDaoSteps.SetRule) return <DaoRule />\n  return <Review />\n}\n\nexport default InitDAOBody\n","import { useSelector } from 'react-redux'\n\nimport { Row, Col, Card } from 'antd'\nimport InitDAOHeader from './initDAOHeader'\nimport InitDAOBody from './initDAOBody'\n\nimport { AppState } from 'model'\n\nimport './index.less'\n\nconst CreateDao = () => {\n  const step = useSelector((state: AppState) => state.createDao.step)\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col xs={24} lg={16}>\n        <Card bordered={false}>\n          <Row gutter={[24, 32]}>\n            <Col span={24}>\n              <InitDAOHeader step={step} />\n            </Col>\n            <Col span={24}>\n              <InitDAOBody />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CreateDao\n","import { useHistory } from 'react-router-dom'\n\nimport { Row, Button, Col, ButtonProps } from 'antd'\n\nimport { APP_ROUTE } from 'configs/route'\n\ntype ActionButtonProps = {\n  daoAddress: string\n  onSave: () => void\n} & ButtonProps\n\nconst ActionButton = ({ daoAddress, onSave, ...rest }: ActionButtonProps) => {\n  const history = useHistory()\n\n  const onCancel = async () => {\n    history.push(APP_ROUTE.daoDetails.generatePath({ daoAddress }))\n  }\n\n  return (\n    <Row>\n      <Col flex=\"auto\">\n        <Button size=\"large\" onClick={onCancel} type=\"text\">\n          Cancel\n        </Button>\n      </Col>\n      <Col>\n        <Button size=\"large\" {...rest} onClick={onSave} type=\"primary\">\n          Save\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ActionButton\n","import { useEffect, useMemo, useState } from 'react'\n\nimport { Col, Row } from 'antd'\nimport ActionButton from './actionButton'\n\nimport { useDaoMetaData } from 'hooks/dao/useDaoMetaData'\nimport FormInputDetail from 'components/formInputDetail'\nimport { DEFAULT_META_DATA } from 'model/createDao.controller'\nimport { notifyError, notifySuccess, validURL } from 'helpers'\nimport { ipfs } from 'helpers/ipfs'\n\nconst Information = ({ daoAddress }: { daoAddress: string }) => {\n  const [loading, setLoading] = useState(false)\n  const metaData = useDaoMetaData(daoAddress)\n  const [nextMetadata, setNextMetadata] = useState(metaData)\n\n  const updateMetaData = async () => {\n    if (!nextMetadata) return\n    try {\n      setLoading(true)\n      const { digest } = await ipfs.methods.daoMetadata.set(nextMetadata)\n\n      const daoMetaData = Buffer.from(digest)\n      const { txId } = await window.interDao.updateDaoMetadata(\n        daoMetaData,\n        daoAddress,\n      )\n      notifySuccess('Update information', txId)\n    } catch (er: any) {\n      notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  const validLink = useMemo(() => {\n    if (!nextMetadata) return\n    const { optionals } = nextMetadata\n    if (!optionals.length) return true\n    for (const link of optionals) if (!validURL(link)) return false\n    return true\n  }, [nextMetadata])\n\n  useEffect(() => {\n    if (!nextMetadata && metaData) setNextMetadata(metaData)\n  }, [metaData, nextMetadata])\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <FormInputDetail\n          metadata={nextMetadata || DEFAULT_META_DATA}\n          setMetadata={setNextMetadata}\n        />\n      </Col>\n      <Col span={24}>\n        <ActionButton\n          onSave={updateMetaData}\n          daoAddress={daoAddress}\n          loading={loading}\n          disabled={!validLink}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Information\n","import { useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { DaoRegime } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\n\nimport { Col, Row } from 'antd'\nimport ActionButton from '../actionButton'\nimport RegimeInput from 'view/createDao/setRule/flexible/regimeInput'\n\nimport { AppState } from 'model'\nimport { notifyError, notifySuccess } from 'helpers'\n\nconst EditFlexibleDaoRule = ({ daoAddress }: { daoAddress: string }) => {\n  const { regime } = useSelector((state: AppState) => state.daos[daoAddress])\n  const [nextRegime, setRegime] = useState<DaoRegime>(regime)\n  const [loading, setLoading] = useState(false)\n\n  const updateRegime = async () => {\n    if (!nextRegime || isEqual(nextRegime, regime)) return\n    try {\n      setLoading(true)\n      const { txId } = await window.interDao.updateDaoRegime(\n        nextRegime,\n        daoAddress,\n      )\n      return notifySuccess('Update regime', txId)\n    } catch (er: any) {\n      return notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <RegimeInput value={nextRegime} onChangeRegime={setRegime} />\n      </Col>\n      <Col span={24}>\n        <ActionButton\n          loading={loading}\n          onSave={updateRegime}\n          daoAddress={daoAddress}\n          disabled={!nextRegime || isEqual(nextRegime, regime)}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default EditFlexibleDaoRule\n","import EditFlexibleDaoRule from './editFlexibleDaoRule'\n\nconst Rule = ({ daoAddress }: { daoAddress: string }) => {\n  return <EditFlexibleDaoRule daoAddress={daoAddress} />\n}\n\nexport default Rule\n","import { ChangeEvent, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { util } from '@sentre/senhub'\n\nimport { Col, Input, Row, Space, Typography } from 'antd'\nimport RowSpaceVertical from 'components/ui/rowSpaceVertical'\nimport ActionButton from './actionButton'\nimport IonIcon from '@sentre/antd-ionicon'\n\nconst TransferAuthority = ({ daoAddress }: { daoAddress: string }) => {\n  const [authority, setAuthority] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const updateAuthority = async () => {\n    if (!account.isAddress(authority)) return\n    try {\n      setLoading(true)\n      const { txId } = await window.interDao.transferAuthority(\n        authority,\n        daoAddress,\n      )\n      return window.notify({\n        type: 'success',\n        description:\n          'Transfer authority successfully. Click here to view details',\n        onClick: () => window.open(util.explorer(txId), '_blank'),\n      })\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space size={12}>\n          <IonIcon name=\"alert-circle-outline\" />\n          <Typography.Text type=\"secondary\" className=\"caption\">\n            Your current account will lose the DAO control when you transfer\n            authority.\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <RowSpaceVertical\n          style={{ width: '100%' }}\n          label=\"Transfer to author\"\n          value={\n            <Input\n              placeholder=\"E.g. Agt8...\"\n              onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                setAuthority(e.target.value)\n              }\n              className=\"border-less\"\n            />\n          }\n        />\n      </Col>\n      <Col span={24} />\n      <Col span={24}>\n        <ActionButton\n          loading={loading}\n          daoAddress={daoAddress}\n          onSave={updateAuthority}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default TransferAuthority\n","import { useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport BN from 'bn.js'\nimport isEqual from 'react-fast-compare'\nimport { util as senhubUtil } from '@sentre/senhub'\n\nimport { Col, Row } from 'antd'\nimport CirculatingSupply from 'view/createDao/setRule/flexible/circulatingSupply'\nimport ActionButton from './actionButton'\n\nimport { AppState } from 'model'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport util from '@senswap/sen-js/dist/utils'\n\nconst EditSupply = ({ daoAddress }: { daoAddress: string }) => {\n  const [nextSupply, setSupply] = useState('0')\n  const [loading, setLoading] = useState(false)\n  const { isNft, mint, supply } = useSelector(\n    (state: AppState) => state.daos[daoAddress],\n  )\n  const decimals = useMintDecimals(mint.toBase58()) || 0\n\n  const ok = useMemo(() => {\n    if (!nextSupply) return false\n    const supplyDecimal = util.decimalize(nextSupply, decimals).toString()\n    if (isEqual(new BN(supplyDecimal), supply)) return false\n    return true\n  }, [decimals, nextSupply, supply])\n\n  const updateSupply = async () => {\n    try {\n      setLoading(true)\n      const supplyDecimal = util.decimalize(nextSupply, decimals).toString()\n      const { txId: txIdSupply } = await window.interDao.updateDaoSupply(\n        new BN(supplyDecimal),\n        daoAddress,\n      )\n      return window.notify({\n        type: 'success',\n        description: 'Update supply successfully. Click here to view details',\n        onClick: () => window.open(senhubUtil.explorer(txIdSupply), '_blank'),\n      })\n    } catch (er: any) {\n      window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    const defaultSupply = supply.div(new BN(10 ** decimals))\n    if (defaultSupply) setSupply(defaultSupply.toString())\n  }, [decimals, supply])\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <CirculatingSupply\n          isNft={isNft}\n          mintAddress={mint.toBase58()}\n          supply={nextSupply}\n          onChangeSupply={setSupply}\n        />\n      </Col>\n      <Col span={24}>\n        <ActionButton\n          loading={loading}\n          onSave={updateSupply}\n          daoAddress={daoAddress}\n          disabled={!ok}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default EditSupply\n","import { useParams } from 'react-router-dom'\n\nimport { Card, Col, Row, Tabs, Typography } from 'antd'\nimport Information from './editDaoDetail'\nimport Rule from './rule'\nimport TransferAuthority from './transferAuthority'\nimport EditSupply from './editSupply'\n\nimport './index.less'\n\nconst EditDAO = () => {\n  const { daoAddress } = useParams<{ daoAddress: string }>()\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col xs={24} lg={16}>\n        <Card bodyStyle={{ padding: 0 }} bordered={false} className=\"edit-dao\">\n          <Row>\n            <Col span={24} className=\"edit-dao_header\">\n              <Typography.Title level={4}>Settings DAO </Typography.Title>\n            </Col>\n            <Col span={24} className=\"edit-dao_body\">\n              <Tabs>\n                <Tabs.TabPane key=\"information\" tab=\"Information\">\n                  <Information daoAddress={daoAddress} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"regime\" tab=\"Regime\">\n                  <Rule daoAddress={daoAddress} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"supply\" tab=\"Supply\">\n                  <EditSupply daoAddress={daoAddress} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"transfer-authority\" tab=\"Transfer Authority\">\n                  <TransferAuthority daoAddress={daoAddress} />\n                </Tabs.TabPane>\n              </Tabs>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\nexport default EditDAO\n","import { Col, Row, Space, Typography } from 'antd'\n\nimport DaoMember from 'components/dao/daoMember'\n\nconst AmountMembers = ({ daoAddress }: { daoAddress: string }) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space align=\"baseline\">\n          <Typography.Text className=\"caption\" type=\"secondary\">\n            Members\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <DaoMember daoAddress={daoAddress} />\n      </Col>\n    </Row>\n  )\n}\nexport default AmountMembers\n","import { useHistory } from 'react-router-dom'\nimport { BN, web3 } from '@project-serum/anchor'\nimport { util, useWidth, useWalletAddress } from '@sentre/senhub'\n\nimport { Avatar, Button, Card, Col, Row, Space, Spin, Typography } from 'antd'\nimport { MintAvatar, MintSymbol } from '@sen-use/app'\nimport IonIcon from '@sentre/antd-ionicon'\nimport StatisticCard from 'components/ui/statisticCard'\nimport RegimeTag from 'components/regimeTag'\nimport GradientAvatar from 'components/gradientAvatar'\nimport AmountMembers from './members'\n\nimport { getIcon, validURL } from 'helpers'\nimport { useDaoMetaData } from 'hooks/dao/useDaoMetaData'\nimport { useDaoData } from 'hooks/dao'\nimport { APP_ROUTE } from 'configs/route'\n\nconst DaoInfo = ({ daoAddress }: { daoAddress: string }) => {\n  const history = useHistory()\n  const metaData = useDaoMetaData(daoAddress)\n  const daoData = useDaoData(daoAddress)\n  const width = useWidth()\n  const walletAddress = useWalletAddress()\n\n  const { regime, nonce, mint, authority } = daoData || {\n    regime: {},\n    nonce: new BN(0),\n    mint: web3.SystemProgram.programId,\n  }\n\n  const onEditDAO = () =>\n    history.push(APP_ROUTE.editDao.generatePath({ daoAddress }))\n\n  const mobileScreen = width < 768\n\n  return (\n    <Card bordered={false} style={{ height: '100%' }}>\n      <Spin spinning={!metaData} tip=\"Loading...\">\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Row justify=\"space-between\" wrap={false}>\n              <Col>\n                <Row gutter={[16, 16]} wrap={false}>\n                  <Col>\n                    {!metaData?.image ? (\n                      <GradientAvatar\n                        seed={daoAddress}\n                        avatarProps={{ shape: 'square', size: 56 }}\n                      />\n                    ) : (\n                      <Avatar shape=\"square\" size={56} src={metaData?.image} />\n                    )}\n                  </Col>\n                  <Col flex={mobileScreen ? 'auto' : undefined}>\n                    <Space direction=\"vertical\" size={0}>\n                      <Typography.Title level={4}>\n                        {metaData?.daoName\n                          ? metaData.daoName\n                          : util.shortenAddress(daoAddress)}\n                      </Typography.Title>\n                      <Space size={0} style={{ marginLeft: -3 }}>\n                        {(metaData?.optionals || []).map(\n                          (url, idx) =>\n                            validURL(url) && (\n                              <Button\n                                size=\"small\"\n                                type=\"text\"\n                                onClick={() => window.open(url, '_blank')}\n                                icon={<IonIcon name={getIcon(url)} />}\n                                key={idx}\n                              />\n                            ),\n                        )}\n                      </Space>\n                    </Space>\n                  </Col>\n                </Row>\n              </Col>\n              <Col>\n                <Button\n                  type=\"text\"\n                  size=\"large\"\n                  onClick={onEditDAO}\n                  disabled={authority && walletAddress !== authority.toBase58()}\n                  style={{\n                    marginRight: -10,\n                    marginTop: -20,\n                  }}\n                  icon={<IonIcon name=\"settings-outline\" />}\n                >\n                  Settings\n                </Button>\n              </Col>\n            </Row>\n          </Col>\n          <Col span={24}>\n            <Row gutter={[36, 16]}>\n              <Col xs={12} sm={6}>\n                <StatisticCard\n                  title=\"Proposals\"\n                  value={util.numeric(Number(nonce)).format('0,0')}\n                />\n              </Col>\n              <Col xs={12} sm={6}>\n                <AmountMembers daoAddress={daoAddress} />\n              </Col>\n              <Col xs={12} sm={6}>\n                <StatisticCard\n                  title=\"Vote By\"\n                  value={\n                    <Space>\n                      <MintAvatar mintAddress={mint.toBase58()} />\n                      <MintSymbol mintAddress={mint.toBase58()} />\n                    </Space>\n                  }\n                />\n              </Col>\n              <Col xs={12} sm={6}>\n                <StatisticCard\n                  title=\"Regime\"\n                  value={<RegimeTag regime={regime} />}\n                />\n              </Col>\n            </Row>\n          </Col>\n          <Col span={24} className=\"scrollbar\" style={{ height: 66 }}>\n            <Typography.Paragraph\n              type=\"secondary\"\n              ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n              style={{ margin: 0 }}\n            >\n              {metaData?.description}\n            </Typography.Paragraph>\n          </Col>\n        </Row>\n      </Spin>\n    </Card>\n  )\n}\n\nexport default DaoInfo\n","import { useCallback, useEffect, useState } from 'react'\nimport LazyLoad from '@sentre/react-lazyload'\nimport axios from 'axios'\n\nimport { Card, Col, Empty, Image, Row, Space, Spin, Typography } from 'antd'\n\nimport useNftMetaData from 'hooks/useNftMetaData'\nimport { fetchYourOwnerNTFs, MetadataDataType } from 'helpers/metaplex'\n\nimport IMAGE_DEFAULT from 'static/images/system/nft.jpeg'\nimport { useDaoData } from 'hooks/dao'\n\nconst NftTreasury = ({ daoAddress }: { daoAddress: string }) => {\n  const [listNFTs, setListNFTs] = useState<MetadataDataType[]>()\n  const daoData = useDaoData(daoAddress)\n\n  const getYourOwnerNFTs = useCallback(async () => {\n    if (!daoData?.master) return setListNFTs(undefined)\n    const nfts = await fetchYourOwnerNTFs(daoData.master.toBase58())\n    return setListNFTs(nfts)\n  }, [daoData?.master])\n\n  useEffect(() => {\n    getYourOwnerNFTs()\n  }, [getYourOwnerNFTs])\n\n  return (\n    <Spin spinning={!listNFTs} tip=\"Loading...\">\n      <Row gutter={[8, 8]} style={{ height: 160 }}>\n        <Col span={24}>\n          <Row align=\"middle\">\n            <Col flex=\"auto\">\n              <Space align=\"baseline\">\n                <Typography.Text type=\"secondary\">Total NFTs</Typography.Text>\n              </Space>\n            </Col>\n            <Col>\n              <Typography.Title level={4}>\n                {listNFTs?.length || 0}\n              </Typography.Title>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[8, 8]} className=\"scrollbar\">\n            {listNFTs?.length !== 0 ? (\n              listNFTs?.map((nft) => (\n                <Col xs={8} md={8} key={nft.mint}>\n                  <LazyLoad height={87}>\n                    <CardNFT mintAddress={nft.mint} />\n                  </LazyLoad>\n                </Col>\n              ))\n            ) : (\n              <Col span={24}>\n                <Empty description=\"No NFTs\" />\n              </Col>\n            )}\n          </Row>\n        </Col>\n      </Row>\n    </Spin>\n  )\n}\n\nexport default NftTreasury\n\nconst CardNFT = ({ mintAddress }: { mintAddress: string }) => {\n  const [nftImg, setNftImg] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const { metadata } = useNftMetaData(mintAddress)\n\n  const getNftInfoFromURI = useCallback(async () => {\n    if (!metadata) return setNftImg(IMAGE_DEFAULT)\n    try {\n      setLoading(true)\n      const url = metadata.data.data.uri\n      if (!url) return setNftImg(IMAGE_DEFAULT)\n\n      const response = await axios.get(url)\n      const img = response.data.image\n      return setNftImg(img)\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }, [metadata])\n\n  useEffect(() => {\n    getNftInfoFromURI()\n  }, [getNftInfoFromURI])\n\n  return (\n    <Card\n      bordered={false}\n      style={{ cursor: 'pointer' }}\n      bodyStyle={{ padding: 8 }}\n      loading={loading}\n    >\n      <Row gutter={[8, 8]}>\n        <Col span={24}>\n          <Image\n            src={nftImg}\n            preview={false}\n            style={{ borderRadius: 4 }}\n            width={87}\n            height={87}\n          />\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { AccountData, utils } from '@senswap/sen-js'\nimport {\n  TokenProvider,\n  tokenProvider,\n  useGetMintDecimals,\n  util,\n} from '@sentre/senhub'\n\nconst DEFAULT_DATA = {\n  address: '',\n  icon: '',\n  name: 'TOKEN',\n  price: 0,\n  priceChange: 0,\n  rank: 0,\n  symbol: 'TOKEN',\n  totalVolume: 0,\n}\n\nexport const fetchCgkData = async (\n  tokenProvider: TokenProvider,\n  mintAddress: string,\n) => {\n  try {\n    const token = await tokenProvider.findByAddress(mintAddress)\n    const ticket = token?.extensions?.coingeckoId\n    const cgkData = await util.fetchCGK(ticket)\n    return cgkData\n  } catch (error) {\n    return DEFAULT_DATA\n  }\n}\n\nexport const getBalance = async (\n  inUSD: boolean,\n  tokenProvider: TokenProvider,\n  mintAddress: string,\n  decimals: number,\n  amount: bigint,\n) => {\n  const cgkData = await fetchCgkData(tokenProvider, mintAddress)\n  let balance = Number(utils.undecimalize(amount, decimals))\n  if (inUSD) balance = Number(balance) * cgkData.price\n\n  return balance\n}\n\nconst useTotalUSD = ({\n  inUSD = true,\n  accounts,\n}: {\n  inUSD?: boolean\n  accounts: AccountData[]\n}) => {\n  const getDecimals = useGetMintDecimals()\n  const [totalUSD, setTotalUSD] = useState(0)\n\n  const clcTotalUSD = useCallback(async () => {\n    if (!accounts) return setTotalUSD(0)\n    let totalUSD = 0\n    for (const account of accounts) {\n      const { mint, amount } = account\n      const decimals = (await getDecimals({ mintAddress: mint })) || 0\n      const balance = await getBalance(\n        inUSD,\n        tokenProvider,\n        mint,\n        decimals,\n        amount,\n      )\n      totalUSD += balance\n    }\n    return setTotalUSD(totalUSD)\n  }, [accounts, getDecimals, inUSD])\n\n  useEffect(() => {\n    clcTotalUSD()\n  }, [clcTotalUSD])\n\n  return totalUSD\n}\n\nexport default useTotalUSD\n","import { useCallback, useEffect, useState } from 'react'\nimport { tokenProvider } from '@sentre/senhub'\nimport { AccountData } from '@senswap/sen-js'\nimport { util } from '@sentre/senhub'\n\nimport { Col, Row, Space, Typography } from 'antd'\n\nimport { getBalance } from 'hooks/useBalance'\nimport { MintAvatar, MintSymbol } from '@sen-use/app'\n\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\n\nconst MintBalance = ({ account }: { account: AccountData }) => {\n  const [usdBalance, setUSDBalance] = useState(0)\n  const [mintBalance, setMintBalance] = useState(0)\n\n  const { mint, amount } = account\n  const decimals = useMintDecimals(mint) || 0\n\n  const fetchBalance = useCallback(async () => {\n    const mintBalance = await getBalance(\n      false,\n      tokenProvider,\n      mint,\n      decimals,\n      amount,\n    )\n    const usdBalance = await getBalance(\n      true,\n      tokenProvider,\n      mint,\n      decimals,\n      amount,\n    )\n    setMintBalance(mintBalance)\n    setUSDBalance(usdBalance)\n  }, [amount, decimals, mint])\n\n  useEffect(() => {\n    fetchBalance()\n  }, [fetchBalance])\n\n  return (\n    <Row align=\"middle\">\n      <Col flex=\"auto\">\n        <Space>\n          <MintAvatar mintAddress={mint} />\n          <Space size={4}>\n            {util.numeric(mintBalance).format('0,0.[000]')}\n            <Typography.Text type=\"secondary\">\n              <MintSymbol mintAddress={mint} />\n            </Typography.Text>\n          </Space>\n        </Space>\n      </Col>\n      <Col>\n        <Typography.Text type=\"secondary\">\n          ${util.numeric(usdBalance).format('0,0.[000]')}\n        </Typography.Text>\n      </Col>\n    </Row>\n  )\n}\n\nexport default MintBalance\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { Connection, PublicKey } from '@solana/web3.js'\nimport { AccountData } from '@senswap/sen-js'\nimport { getMultipleAccounts } from '@sen-use/web3/dist/rpc'\nimport { splt, util } from '@sentre/senhub'\n\nimport { Col, Empty, Row, Space, Spin, Typography } from 'antd'\nimport MintBalance from './mintBalance'\n\nimport useTotalUSD from 'hooks/useBalance'\nimport { useDaoData } from 'hooks/dao'\n\nconst TokenTreasury = ({ daoAddress }: { daoAddress: string }) => {\n  const [tokenAccounts, setTokenAccounts] = useState<AccountData[]>()\n  const daoData = useDaoData(daoAddress)\n  const totalUSD = useTotalUSD({ accounts: tokenAccounts || [] })\n\n  const daoMasterAddress = useMemo(\n    () => daoData?.master.toBase58(),\n    [daoData?.master],\n  )\n\n  const fetchTokenAccounts = useCallback(async () => {\n    if (!daoMasterAddress || !daoData?.master) return\n    const connection = new Connection(\n      'https://solitary-autumn-water.solana-mainnet.quiknode.pro/05b03a0cfeb8a5ec38f4c55950eb9b9bad7c8b58',\n    )\n    const { spltProgramId, parseAccountData, parseMintData } = splt\n\n    const { value } = await connection.getTokenAccountsByOwner(daoData.master, {\n      programId: spltProgramId,\n    })\n    const accounts = value.map(({ account }) => parseAccountData(account.data))\n    const mintAccounts = await getMultipleAccounts(\n      connection,\n      accounts.map((acc) => new PublicKey(acc.mint)),\n    )\n    const filteredAccounts = accounts.filter((acc, idx) => {\n      const mint = mintAccounts[idx]\n      if (!mint) return false\n      const mintData = parseMintData(mint.account.data)\n      const isNft =\n        mintData.decimals === 0 && Number(mintData.supply.toString()) === 1\n      return !isNft\n    })\n\n    return setTokenAccounts(filteredAccounts)\n  }, [daoData?.master, daoMasterAddress])\n\n  useEffect(() => {\n    // TODO: fix realtime\n    const interval = setInterval(() => {\n      fetchTokenAccounts()\n    }, 5000)\n    return () => clearInterval(interval)\n  }, [fetchTokenAccounts])\n\n  return (\n    <Spin spinning={!tokenAccounts} tip=\"Loading...\">\n      <Row gutter={[8, 8]}>\n        <Col span={24}>\n          <Row align=\"middle\">\n            <Col flex=\"auto\">\n              <Space align=\"baseline\">\n                <Typography.Text type=\"secondary\">\n                  Treasury Balance\n                </Typography.Text>\n              </Space>\n            </Col>\n            <Col>\n              <Typography.Title level={4}>\n                {util.numeric(totalUSD).format('$0,0.[000]')}\n              </Typography.Title>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[24, 24]} className=\"scrollbar\" style={{ height: 124 }}>\n            {tokenAccounts?.length !== 0 ? (\n              tokenAccounts?.map((account) => (\n                <Col span={24} key={account.mint}>\n                  <MintBalance account={account} />\n                </Col>\n              ))\n            ) : (\n              <Col span={24}>\n                <Empty description=\"No Tokens\" />\n              </Col>\n            )}\n          </Row>\n        </Col>\n      </Row>\n    </Spin>\n  )\n}\n\nexport default TokenTreasury\n","import { ReactNode } from 'react'\n\nimport { Col, Row, Typography } from 'antd'\n\ntype RowSpaceBetweenProps = {\n  label: string\n  value: ReactNode\n}\nconst RowSpaceBetween = ({ label = '', value = '' }: RowSpaceBetweenProps) => {\n  return (\n    <Row align=\"middle\" gutter={[24, 24]}>\n      <Col flex=\"auto\">\n        <Typography.Text type=\"secondary\">{label}</Typography.Text>\n      </Col>\n      <Col>{value}</Col>\n    </Row>\n  )\n}\n\nexport default RowSpaceBetween\n","import { useState } from 'react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport { util } from '@sentre/senhub'\n\nimport QRcode from 'qrcode.react'\nimport IonIcon from '@sentre/antd-ionicon'\nimport { Col, Row, Space, Tooltip, Typography } from 'antd'\n\nimport RowSpaceBetween from 'components/ui/rowSpaceBetween'\n\nconst MasterWalletInfo = ({ daoAddress }: { daoAddress: string }) => {\n  const [copied, setCopied] = useState(false)\n\n  const onCopy = async () => {\n    setCopied(true)\n    await util.asyncWait(1500)\n    setCopied(false)\n  }\n\n  return (\n    <Row justify=\"center\" gutter={[16, 16]} style={{ padding: 12 }}>\n      <Col span={24}>\n        <Space size={8}>\n          <IonIcon\n            name=\"information-circle-outline\"\n            style={{ color: '#f9deb0' }}\n          />\n          <Typography.Text>You can deposit to this address</Typography.Text>\n        </Space>\n      </Col>\n      <Col style={{ background: '#f4f4f5', paddingTop: 8 }}>\n        <QRcode\n          value={daoAddress}\n          size={110}\n          bgColor=\"#ffffff\"\n          fgColor=\"#1f1f1f\"\n        />\n      </Col>\n      <Col span={24}>\n        <RowSpaceBetween\n          label=\"DAO Master Address:\"\n          value={\n            <Space>\n              <Typography.Text className=\"t-16\">\n                {util.shortenAddress(daoAddress)}\n              </Typography.Text>\n              <Tooltip title=\"Copied\" open={copied}>\n                <CopyToClipboard text={daoAddress} onCopy={onCopy}>\n                  <Typography.Text\n                    style={{ cursor: 'pointer' }}\n                    className=\"t-16\"\n                  >\n                    <IonIcon name=\"copy-outline\" />\n                  </Typography.Text>\n                </CopyToClipboard>\n              </Tooltip>\n            </Space>\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default MasterWalletInfo\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Button, Card, Tabs, Tooltip } from 'antd'\nimport NftTreasury from './nftsTreasury'\nimport TokenTreasury from './tokenTreasury'\n\nimport { AppState } from 'model'\nimport MasterWalletInfo from './masterWalletInfo'\n\nconst DaoOwnerAssets = ({ daoAddress }: { daoAddress: string }) => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const daoMasterAddress = useMemo(() => {\n    const { master } = daos[daoAddress] || {}\n    return master?.toBase58() || ''\n  }, [daos, daoAddress])\n\n  return (\n    <Card bordered={false} style={{ height: '100%' }}>\n      <Tabs\n        className=\"dao-assets\"\n        tabBarExtraContent={\n          <Tooltip\n            placement=\"bottomLeft\"\n            overlayClassName=\"info-member treasury-addr\"\n            title={<MasterWalletInfo daoAddress={daoMasterAddress} />}\n          >\n            <Button size=\"small\">Master Wallet</Button>\n          </Tooltip>\n        }\n      >\n        <Tabs.TabPane tab=\"Treasury\" key=\"treasury\">\n          <TokenTreasury daoAddress={daoAddress} />\n        </Tabs.TabPane>\n        <Tabs.TabPane tab=\"NFTs\" key=\"nft\">\n          <NftTreasury daoAddress={daoAddress} />\n        </Tabs.TabPane>\n      </Tabs>\n    </Card>\n  )\n}\n\nexport default DaoOwnerAssets\n","var _path, _path2, _path3, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSolana(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.09822 38.7451C9.43613 38.4072 9.90075 38.2101 10.3935 38.2101H55.082C55.8986 38.2101 56.3069 39.1956 55.7297 39.7729L46.9018 48.6008C46.5639 48.9387 46.0993 49.1358 45.6065 49.1358H0.918008C0.101395 49.1358 -0.306912 48.1502 0.270349 47.573L9.09822 38.7451Z\",\n    fill: \"url(#paint0_linear_514_9086)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.09822 5.78502C9.45021 5.44711 9.91483 5.25 10.3935 5.25L55.082 5.25C55.8986 5.25 56.3069 6.23557 55.7297 6.81283L46.9018 15.6407C46.5639 15.9786 46.0993 16.1757 45.6065 16.1757H0.918008C0.101395 16.1757 -0.306912 15.1902 0.270349 14.6129L9.09822 5.78502Z\",\n    fill: \"url(#paint1_linear_514_9086)\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.9018 22.1596C46.5639 21.8217 46.0993 21.6246 45.6065 21.6246H0.918008C0.101395 21.6246 -0.306912 22.6101 0.270349 23.1874L9.09822 32.0153C9.43613 32.3532 9.90075 32.5503 10.3935 32.5503H55.082C55.8986 32.5503 56.3069 31.5647 55.7297 30.9875L46.9018 22.1596Z\",\n    fill: \"url(#paint2_linear_514_9086)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_514_9086\",\n    x1: 50.8129,\n    y1: -0.023655,\n    x2: 19.885,\n    y2: 59.2159,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#00FFA3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DC1FFF\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear_514_9086\",\n    x1: 37.2896,\n    y1: -7.08387,\n    x2: 6.36157,\n    y2: 52.1556,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#00FFA3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DC1FFF\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint2_linear_514_9086\",\n    x1: 44.0082,\n    y1: -3.57611,\n    x2: 13.0802,\n    y2: 55.6634,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#00FFA3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DC1FFF\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSolana);\nexport default __webpack_public_path__ + \"static/media/solana.6db9bd9600699ad1fc2b302acd0731be.svg\";\nexport { ForwardRef as ReactComponent };","import { useState } from 'react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport { util } from '@sentre/senhub'\n\nimport { Tooltip } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nconst IconCopy = ({ value }: { value: string }) => {\n  const [copied, setCopied] = useState(false)\n\n  const onCopy = async () => {\n    setCopied(true)\n    await util.asyncWait(1500)\n    setCopied(false)\n  }\n\n  return (\n    <Tooltip title=\"Copied\" open={copied}>\n      <CopyToClipboard text={value}>\n        <IonIcon\n          style={{ cursor: 'pointer' }}\n          name=\"copy-outline\"\n          onClick={onCopy}\n        />\n      </CopyToClipboard>\n    </Tooltip>\n  )\n}\n\nexport default IconCopy\n","import { util } from '@sentre/senhub'\n\nimport { Space, Typography } from 'antd'\nimport IconCopy from './iconCopy'\n\nexport const ShortenAddress = ({\n  address,\n  size = 3,\n}: {\n  address: string\n  size?: number\n}) => {\n  return (\n    <Space size={10}>\n      <Typography.Text\n        style={{ cursor: 'pointer', textDecoration: 'underline' }}\n        onClick={() => window.open(util.explorer(address), '_blank')}\n      >\n        {util.shortenAddress(address, size)}\n      </Typography.Text>\n      <IconCopy value={address} />\n    </Space>\n  )\n}\n","import { InvokedAccount } from '@interdao/core'\nimport { Card, Col, Row, Space, Tag, Typography } from 'antd'\nimport { ShortenAddress } from 'components/shortenAddress'\nimport React, { useCallback, useEffect, useState } from 'react'\n\nexport const ProposalExplorer = ({\n  proposalAddress,\n}: {\n  proposalAddress: string\n}) => {\n  const [instructions, setInstructions] = useState<\n    Awaited<ReturnType<typeof getInstructions>>\n  >([])\n\n  const getInstructions = useCallback(async () => {\n    const instructions =\n      await window.interDao.program.account.proposalInstruction.all([\n        { memcmp: { offset: 8, bytes: proposalAddress } },\n      ])\n    const sortedInstructions = instructions.sort(\n      (a, b) => Number(a.account.index) - Number(b.account.index),\n    )\n    setInstructions(sortedInstructions)\n    return sortedInstructions\n  }, [proposalAddress])\n\n  useEffect(() => {\n    getInstructions()\n  }, [getInstructions])\n\n  return (\n    <Row gutter={[16, 16]}>\n      {instructions.map((ix) => (\n        <Col span={24}>\n          <Space direction=\"vertical\" style={{ width: '100%' }}>\n            <Space>\n              <Typography.Title level={5}>\n                #{Number(ix.account.index) + 1} Instruction:\n              </Typography.Title>\n              <ShortenAddress address={ix.publicKey.toBase58()} size={8} />\n            </Space>\n            <Card>\n              <Row gutter={[12, 12]}>\n                {/* Instruction Program */}\n                <Col span={24}>\n                  <Space>\n                    <Typography.Title level={5}>Program:</Typography.Title>\n                    <ShortenAddress\n                      address={ix.account.invokedProgram.toBase58()}\n                      size={8}\n                    />\n                  </Space>\n                </Col>\n                {/* Instruction Data */}\n                <Col span={24}>\n                  <Space wrap>\n                    <Typography.Title level={5}>Data:</Typography.Title>\n                    <Typography.Text>\n                      {JSON.stringify(\n                        Array.from(ix.account.data as number[]),\n                        null,\n                        4,\n                      )}\n                    </Typography.Text>\n                  </Space>\n                </Col>\n                {/* Instruction Meta Accounts */}\n                <Col span={24}>\n                  <Space direction=\"vertical\">\n                    <Typography.Title level={5}>Accounts:</Typography.Title>\n                    {(ix.account.accounts as InvokedAccount[]).map(\n                      (acc, idx) => {\n                        return (\n                          <Space>\n                            <Typography.Text>#{idx + 1}</Typography.Text>\n                            <ShortenAddress\n                              address={acc.pubkey.toBase58()}\n                              size={4}\n                            />\n                            <span>\n                              {acc.isSigner && <Tag color=\"orange\">Signer</Tag>}\n                              {acc.isMaster && (\n                                <Tag color=\"magenta\">Master</Tag>\n                              )}\n                              {acc.isWritable && (\n                                <Tag color=\"blue\">Writable</Tag>\n                              )}\n                            </span>\n                          </Space>\n                        )\n                      },\n                    )}\n                  </Space>\n                </Col>\n              </Row>\n            </Card>\n          </Space>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n","import { Alert, Card, Spin, Tabs } from 'antd'\nimport { lazy, Suspense } from 'react'\n\nimport { useTemplateWithProposal } from './hooks/useTemplateWithProposal'\nimport { TemplateNames } from './constant/index'\nimport useProposalMetaData from 'hooks/proposal/useProposalMetaData'\nimport { ProposalExplorer } from './components/proposalExplorer'\n\nexport type PropsTemplateCreateLoader = {\n  name: TemplateNames\n  daoAddress: string\n  defaultData?: Record<string, string>\n}\nexport const TemplateCreateLoader = ({\n  name,\n  daoAddress,\n  defaultData,\n}: PropsTemplateCreateLoader) => {\n  const Component = lazy(() => import(`./view/${name}/create`))\n  return (\n    <Alert.ErrorBoundary description=\"Can't not load template!\">\n      <Suspense fallback={<div />}>\n        <Component daoAddress={daoAddress} defaultData={defaultData} />\n      </Suspense>\n    </Alert.ErrorBoundary>\n  )\n}\n\nexport type PropsTemplateProposalLoader = { proposalAddress: string }\nexport const TemplateProposalLoader = ({\n  proposalAddress,\n}: PropsTemplateProposalLoader) => {\n  const template = useTemplateWithProposal(proposalAddress)\n  const Component = lazy(() => import(`./view/${template}/proposal`))\n\n  if (!template)\n    return (\n      <Spin spinning tip=\"Loading...\">\n        <Card\n          bordered={false}\n          className=\"proposal-card\"\n          bodyStyle={{ padding: '24px 12px 0 0', minHeight: 150 }}\n          hoverable\n        />\n      </Spin>\n    )\n  return (\n    <Alert.ErrorBoundary>\n      <Suspense fallback={<div />}>\n        <Component proposalAddress={proposalAddress} />\n      </Suspense>\n    </Alert.ErrorBoundary>\n  )\n}\n\nexport type PropsTemplateInfoLoader = { proposalAddress: string }\n\nexport const TemplateInfoLoader = ({\n  proposalAddress,\n}: PropsTemplateInfoLoader) => {\n  const { metaData } = useProposalMetaData(proposalAddress)\n\n  if (!metaData) return null\n\n  const { templateConfig } = metaData\n  const Component = lazy(() => import(`./view/${templateConfig.name}/info`))\n  return (\n    <Alert.ErrorBoundary>\n      <Suspense fallback={<div />}>\n        <Tabs\n          style={{ marginTop: -12 }}\n          items={[\n            {\n              label: 'Template Data',\n              key: 'template-data',\n              children: <Component proposalAddress={proposalAddress} />,\n            },\n            {\n              label: 'Proposal Explorer',\n              key: 'proposal-explorer',\n              children: <ProposalExplorer proposalAddress={proposalAddress} />,\n            },\n          ]}\n        />\n      </Suspense>\n    </Alert.ErrorBoundary>\n  )\n}\n","import { useCallback, useEffect, useState } from 'react'\n\nimport useProposalMetaData from 'hooks/proposal/useProposalMetaData'\nimport { TemplateNames } from '../constant/index'\n\nexport const useTemplateWithProposal = (proposalAddress: string) => {\n  const [templateName, setTemplateName] = useState<TemplateNames>()\n  const { metaData, loading } = useProposalMetaData(proposalAddress)\n\n  const getTemplateName = useCallback(() => {\n    const templateName = metaData?.templateConfig?.name\n    if (!templateName || loading) return setTemplateName(undefined)\n    return setTemplateName(templateName)\n  }, [loading, metaData])\n  useEffect(() => {\n    getTemplateName()\n  }, [getTemplateName])\n\n  return templateName\n}\n","import { Button, Col, Image, Radio, Row, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport SOLANA_LOGO from 'static/images/templates/solana.svg'\nimport { TemplateCreateLoader } from 'templates/templateLoader'\nimport { TemplateNames } from 'templates/constant'\nimport { useState } from 'react'\n\ntype CardOptionProps = {\n  label: string\n  description: string\n  icon: string\n}\n\nconst CardOption = ({ label, description, icon }: CardOptionProps) => {\n  return (\n    <Row>\n      <Col span={24}>\n        <Row>\n          <Col flex=\"auto\">\n            <Typography.Title level={5}>{label}</Typography.Title>\n          </Col>\n          <Col>\n            <IonIcon style={{ fontSize: 24 }} name={icon} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Typography.Text type=\"secondary\">{description}</Typography.Text>\n      </Col>\n    </Row>\n  )\n}\n\nconst SPL = ({ daoAddress }: { daoAddress: string }) => {\n  const [template, setTemplate] = useState(TemplateNames.SplTransfer)\n  return (\n    <Row>\n      <Col xs={24} md={16} className=\"wrap-spl-info\">\n        <Row gutter={[16, 16]} className=\"spl-info\">\n          <Col span={24}>\n            <Space size={24}>\n              <Image preview={false} src={SOLANA_LOGO} />\n              <Space size={0} direction=\"vertical\">\n                <Typography.Text>Solana Program Library</Typography.Text>\n                <Space size={2} style={{ marginLeft: -8 }}>\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-discord\" />}\n                    onClick={() => {\n                      window.open('https://discord.com/invite/pquxPsq', 'blank')\n                    }}\n                  />\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-twitter\" />}\n                    onClick={() => {\n                      window.open('https://twitter.com/solana', 'blank')\n                    }}\n                  />\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-telegram\" />}\n                    onClick={() => {\n                      window.open('https://t.me/solana', 'blank')\n                    }}\n                  />\n                </Space>\n              </Space>\n            </Space>\n          </Col>\n          <Col span={24}>\n            <Typography.Paragraph\n              type=\"secondary\"\n              ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n            >\n              The Solana Program Library (SPL) is a collection of on-chain\n              programs targeting the Sealevel parallel runtime. These programs\n              are tested against Solana's implementation of Sealevel,\n              solana-runtime, and deployed to its mainnet. As others implement\n              Sealevel, we will graciously accept patches to ensure the programs\n              here are portable across all implementations.\n            </Typography.Paragraph>\n          </Col>\n          <Col span={24}>\n            <Space direction=\"vertical\" style={{ width: '100%' }}>\n              <Typography.Text>Templates</Typography.Text>\n              <Radio.Group\n                value={template}\n                style={{ width: '100%' }}\n                className=\"select-spl-option\"\n                onChange={(e) => setTemplate(e.target.value)}\n              >\n                <Row gutter={[24, 24]}>\n                  <Col xs={24} sm={12} md={12} lg={12}>\n                    <Radio.Button value={TemplateNames.SplTransfer}>\n                      <CardOption\n                        label=\"Transfer\"\n                        description=\"Transfer token to another wallet address\"\n                        icon=\"paper-plane-outline\"\n                      />\n                    </Radio.Button>\n                  </Col>\n                  <Col xs={24} sm={12} md={12} lg={12}>\n                    <Radio.Button value={TemplateNames.SplApprove}>\n                      <CardOption\n                        label=\"Approve\"\n                        description=\"Allow this wallet to use money in another wallet.\"\n                        icon=\"thumbs-up-outline\"\n                      />\n                    </Radio.Button>\n                  </Col>\n                </Row>\n              </Radio.Group>\n            </Space>\n          </Col>\n        </Row>\n      </Col>\n      <Col xs={24} md={8} className=\"spl-option-transfer\">\n        <TemplateCreateLoader\n          key={template}\n          name={template}\n          daoAddress={daoAddress}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default SPL\n","var _path, _path2, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgSentreLogo(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M27.768 55.9817L12.5827 40.7706C7.72759 35.9073 5 29.3111 5 22.433C5 15.5553 7.72759 8.95908 12.5827 4.09566L16.6642 0.00732422L31.8581 15.227C36.7094 20.0912 39.4338 26.6861 39.4322 33.5621C39.4307 40.4377 36.7032 47.0314 31.8495 51.8931L27.768 55.9817Z\",\n    fill: \"url(#paint0_linear_1922_23080)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M23.6882 15.2282L38.8908 0L42.9722 4.08834C45.3787 6.49678 47.2877 9.35667 48.5903 12.5046C49.8929 15.6526 50.5634 19.0267 50.5634 22.4344C50.5634 25.8421 49.8929 29.2163 48.5903 32.3643C47.2877 35.5121 45.3787 38.3718 42.9722 40.7804L27.7781 56L23.6882 51.9033C18.8331 47.0397 16.1055 40.4435 16.1055 33.5658C16.1055 26.6878 18.8331 20.0916 23.6882 15.2282Z\",\n    fill: \"url(#paint1_linear_1922_23080)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_1922_23080\",\n    x1: 39.4465,\n    y1: 27.9987,\n    x2: 4.99439,\n    y2: 27.9987,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F9575E\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.27,\n    stopColor: \"#F8555B\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.49,\n    stopColor: \"#F44F51\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.68,\n    stopColor: \"#EE4540\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.87,\n    stopColor: \"#E63728\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DE2A13\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear_1922_23080\",\n    x1: -103322,\n    y1: 86628.3,\n    x2: -104246,\n    y2: 86401.8,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F9575E\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.27,\n    stopColor: \"#F8555B\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.49,\n    stopColor: \"#F44F51\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.68,\n    stopColor: \"#EE4540\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 0.87,\n    stopColor: \"#E63728\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DE2A13\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSentreLogo);\nexport default __webpack_public_path__ + \"static/media/sentre_logo.dcb32c96bb5ed68090fdb2ec32c50aa3.svg\";\nexport { ForwardRef as ReactComponent };","import IonIcon from '@sentre/antd-ionicon'\nimport { Col, Row, Space, Image, Typography, Button } from 'antd'\nimport { TemplateNames } from 'templates/constant'\nimport { TemplateCreateLoader } from 'templates/templateLoader'\n\nimport SENTRE_LOGO from 'static/images/sentre_logo.svg'\n\nconst Blank = ({ daoAddress }: { daoAddress: string }) => {\n  return (\n    <Row>\n      <Col span={24} className=\"wrap-spl-info\">\n        <Row gutter={[16, 16]} className=\"spl-info\">\n          <Col span={24}>\n            <Space size={24}>\n              <Image preview={false} src={SENTRE_LOGO} />\n              <Space size={0} direction=\"vertical\">\n                <Typography.Text>The Blank Template</Typography.Text>\n                <Space size={2} style={{ marginLeft: -8 }}>\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-discord\" />}\n                    onClick={() => {\n                      window.open(\n                        'https://discord.com/invite/VD7UBAp2HN',\n                        'blank',\n                      )\n                    }}\n                  />\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-twitter\" />}\n                    onClick={() => {\n                      window.open('https://twitter.com/SentreProtocol', 'blank')\n                    }}\n                  />\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-telegram\" />}\n                    onClick={() => {\n                      window.open('https://t.me/Sentre', 'blank')\n                    }}\n                  />\n                </Space>\n              </Space>\n            </Space>\n          </Col>\n          <Col span={24}>\n            <Typography.Paragraph\n              type=\"secondary\"\n              ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n            >\n              Create a proposal with a blank template without making a\n              transaction.\n            </Typography.Paragraph>\n          </Col>\n          <Col span={24}>\n            <TemplateCreateLoader\n              name={TemplateNames.BlankTemplate}\n              daoAddress={daoAddress}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Blank\n","var _path, _path2, _path3, _path4, _path5, _path6, _defs;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgBgSenFarming(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 96,\n    height: 96,\n    viewBox: \"0 0 96 96\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M0 24C0 10.7452 10.7452 0 24 0H72C85.2548 0 96 10.7452 96 24V72C96 85.2548 85.2548 96 72 96H24C10.7452 96 0 85.2548 0 72V24Z\",\n    fill: \"url(#paint0_linear_3080_6014)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M73.9637 43.986H75.6542C75.7684 43.986 77.2305 43.9392 76.4538 41.8327C75.6314 39.6326 73.0727 39.4922 73.0727 39.4922L69.189 25.0512C69.189 25.0512 68.7092 22.5 66.2648 22.5C63.7975 22.5 43.351 22.5 43.351 22.5C43.351 22.5 40.1983 22.5702 40.1983 26.1278H43.1682L39.6501 39.7028H36.1776V32.4472C36.1776 32.4472 36.1547 29.9897 33.7103 29.9897C31.243 29.9897 30.4434 29.9897 30.4434 29.9897L31.4486 32.6345H33.0935C33.0935 32.6345 33.1163 32.6345 33.1391 32.6345C33.2762 32.6345 33.6874 32.7047 33.6874 33.5239C33.6874 34.5069 33.6874 39.7731 33.6874 39.7731H22.5618C22.5618 39.7731 22.5618 39.7731 22.5389 39.7731C22.242 39.7731 18.541 39.8433 18.541 43.6583C18.541 47.6372 19.2492 54.6588 19.2492 54.6588C16.6906 56.5312 15 59.6207 15 63.1315C15 68.8658 19.5462 73.5 25.1433 73.5C30.7404 73.5 35.2866 68.8424 35.2866 63.1081C35.2866 60.791 34.5327 58.6377 33.2762 56.9057H37L37.7996 59.0824H45.9553L46.6636 56.8121L49.5192 56.8355C49.5192 57.0227 49.5192 57.1866 49.5192 57.3738C49.5192 66.2678 56.5556 73.5 65.2596 73.5C73.9408 73.5 81 66.2912 81 57.3738C80.9543 51.8034 78.1672 46.8883 73.9637 43.986ZM25.1661 68.5615C22.1963 68.5615 19.7747 66.0805 19.7747 63.0379C19.7747 59.9952 22.1963 57.5142 25.1661 57.5142C28.136 57.5142 30.5576 59.9952 30.5576 63.0379C30.5805 66.0805 28.1589 68.5615 25.1661 68.5615ZM57.6293 27.1108C57.6293 26.9704 57.6521 26.2448 58.2004 25.7065C58.4517 25.4491 58.8858 25.1448 59.6168 25.1448H65.8764C66.1277 25.1448 67.4299 25.2618 67.8868 27.3683C68.2295 28.8896 70.1028 36.941 70.1713 37.2921C70.217 37.4793 70.4226 38.4156 69.8744 39.1645C69.6231 39.5156 69.1205 39.9135 68.2066 39.9135H59.6168C58.8172 39.9135 57.6521 39.3752 57.6521 37.8772V27.1108H57.6293ZM44.6989 40.0071C44.676 40.0071 44.6532 40.0071 44.6303 40.0071C44.5389 40.0071 43.648 39.9135 43.1225 39.1879C42.8712 38.8603 42.6199 38.2985 42.8027 37.4325C43.0997 36.0282 45.0187 26.7129 45.0415 26.6193C45.0415 26.5959 45.0415 26.5725 45.0644 26.5257C45.2243 26.0108 45.7954 25.1448 46.9605 25.1448H54.4309C55.1848 25.1448 56.3956 25.7065 56.3956 27.181V38.1815C56.3956 38.2049 56.3956 38.2283 56.3956 38.2283C56.3499 38.9305 55.8017 39.9837 54.4538 39.9837H44.6989V40.0071ZM65.2596 68.07C59.5711 68.07 54.9335 63.3187 54.9335 57.4908C54.9335 51.6629 59.5711 46.9117 65.2596 46.9117C70.9481 46.9117 75.5857 51.6629 75.5857 57.4908C75.5857 63.3187 70.9481 68.07 65.2596 68.07Z\",\n    fill: \"#212433\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.5,\n    d: \"M69.8741 39.1648C69.6228 39.5158 69.1202 39.9137 68.2064 39.9137H59.6166C58.817 39.9137 57.6519 39.3754 57.6519 37.8775V27.1111C57.6519 26.9706 57.6747 26.2451 58.223 25.7067C58.4743 25.4493 58.9083 25.145 59.6394 25.145H65.899C66.1503 25.145 67.4525 25.262 67.9094 27.3685C68.2521 28.8899 70.1254 36.9413 70.1939 37.2923C70.2168 37.503 70.4224 38.4392 69.8741 39.1648Z\",\n    fill: \"#212433\"\n  })), _path4 || (_path4 = /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.5,\n    d: \"M56.3955 27.181V38.1815C56.3955 38.2049 56.3955 38.2283 56.3955 38.2283C56.3498 38.9304 55.8015 39.9837 54.4537 39.9837H44.6987C44.6759 39.9837 44.653 39.9837 44.6302 39.9837C44.5388 39.9837 43.6479 39.89 43.1224 39.1645C42.8711 38.8368 42.6198 38.2751 42.8026 37.4091C43.0996 36.0048 45.0186 26.6895 45.0414 26.5959C45.0414 26.5725 45.0414 26.5491 45.0643 26.5022C45.2242 25.9873 45.7953 25.1213 46.9604 25.1213H54.4308C55.1847 25.1447 56.3955 25.7065 56.3955 27.181Z\",\n    fill: \"#212433\"\n  })), _path5 || (_path5 = /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.5,\n    d: \"M65.2597 47.7777C60.051 47.7777 55.8018 52.1311 55.8018 57.4675C55.8018 62.8039 60.051 67.1572 65.2597 67.1572C70.4684 67.1572 74.7176 62.8039 74.7176 57.4675C74.7176 52.1311 70.4684 47.7777 65.2597 47.7777ZM65.2597 62.4294C62.5868 62.4294 60.4393 60.2059 60.4393 57.4909C60.4393 54.7525 62.6096 52.5524 65.2597 52.5524C67.9326 52.5524 70.08 54.7759 70.08 57.4909C70.08 60.2059 67.9097 62.4294 65.2597 62.4294Z\",\n    fill: \"#212433\"\n  })), _path6 || (_path6 = /*#__PURE__*/React.createElement(\"path\", {\n    opacity: 0.5,\n    d: \"M25.1662 58.3801C22.6761 58.3801 20.6428 60.4632 20.6428 63.0144C20.6428 65.5655 22.6761 67.6486 25.1662 67.6486C27.6563 67.6486 29.6896 65.5655 29.6896 63.0144C29.7124 60.4632 27.6792 58.3801 25.1662 58.3801ZM25.1662 65.2847C23.9554 65.2847 22.9502 64.2782 22.9502 63.0144C22.9502 61.7739 23.9325 60.7441 25.1662 60.7441C26.377 60.7441 27.3822 61.7505 27.3822 63.0144C27.3822 64.2782 26.3998 65.2847 25.1662 65.2847Z\",\n    fill: \"#212433\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_3080_6014\",\n    x1: 0,\n    y1: 0,\n    x2: 96,\n    y2: 96,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#F0FF00\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#58CFFB\"\n  })))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgBgSenFarming);\nexport default __webpack_public_path__ + \"static/media/bg-sen-farming.63d520f68015fd3b429cce87badf4e5b.svg\";\nexport { ForwardRef as ReactComponent };","import { Button, Col, Image, Radio, Row, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport LOGO from 'static/images/templates/bg-sen-farming.svg'\nimport { TemplateCreateLoader } from 'templates/templateLoader'\nimport { TemplateNames } from 'templates/constant'\nimport { useState } from 'react'\n\ntype CardOptionProps = {\n  label: string\n  description: string\n  icon: string\n}\n\nconst CardOption = ({ label, description, icon }: CardOptionProps) => {\n  return (\n    <Row>\n      <Col span={24}>\n        <Row>\n          <Col flex=\"auto\">\n            <Typography.Title level={5}>{label}</Typography.Title>\n          </Col>\n          <Col>\n            <IonIcon style={{ fontSize: 24 }} name={icon} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Typography.Text type=\"secondary\">{description}</Typography.Text>\n      </Col>\n    </Row>\n  )\n}\n\nconst SenFarming = ({ daoAddress }: { daoAddress: string }) => {\n  const [template, setTemplate] = useState(TemplateNames.SenFarmingStake)\n  return (\n    <Row>\n      <Col xs={24} md={16} className=\"wrap-spl-info\">\n        <Row gutter={[16, 16]} className=\"spl-info\">\n          <Col span={24}>\n            <Space size={24}>\n              <Image preview={false} src={LOGO} />\n              <Space size={0} direction=\"vertical\">\n                <Typography.Text>Sen Farming</Typography.Text>\n                <Space size={2} style={{ marginLeft: -8 }}>\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-discord\" />}\n                    onClick={() => {\n                      window.open(\n                        'https://discord.com/invite/VD7UBAp2HN',\n                        'blank',\n                      )\n                    }}\n                  />\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-twitter\" />}\n                    onClick={() => {\n                      window.open('https://twitter.com/SentreProtocol', 'blank')\n                    }}\n                  />\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-telegram\" />}\n                    onClick={() => {\n                      window.open('https://t.me/Sentre', 'blank')\n                    }}\n                  />\n                </Space>\n              </Space>\n            </Space>\n          </Col>\n          <Col span={24}>\n            <Typography.Paragraph\n              type=\"secondary\"\n              ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n            >\n              Sen Farming is the DeFi field of profit, waiting for you to yield.\n              Choose from existing Sentre or Community farms, or simply make\n              your own. Stake your LPT seeds Grow your assets with incredible\n              APR. Harvest them all in one click\n            </Typography.Paragraph>\n          </Col>\n          <Col span={24}>\n            <Space direction=\"vertical\" style={{ width: '100%' }}>\n              <Typography.Text>Templates</Typography.Text>\n              <Radio.Group\n                value={template}\n                style={{ width: '100%' }}\n                className=\"select-spl-option\"\n                onChange={(e) => setTemplate(e.target.value)}\n              >\n                <Row gutter={[24, 24]}>\n                  <Col xs={24} sm={12} md={12} lg={12}>\n                    <Radio.Button value={TemplateNames.SenFarmingStake}>\n                      <CardOption\n                        label=\"Stake\"\n                        description=\"Stake and grow your assets with incredible APR\"\n                        icon=\"paper-plane-outline\"\n                      />\n                    </Radio.Button>\n                  </Col>\n                  <Col xs={24} sm={12} md={12} lg={12}>\n                    <Radio.Button value={TemplateNames.SplApprove} disabled>\n                      <CardOption\n                        label=\"Harvest\"\n                        description=\"Coming soon...\"\n                        icon=\"thumbs-up-outline\"\n                      />\n                    </Radio.Button>\n                  </Col>\n                </Row>\n              </Radio.Group>\n            </Space>\n          </Col>\n        </Row>\n      </Col>\n      <Col xs={24} md={8} className=\"spl-option-transfer\">\n        <TemplateCreateLoader\n          key={template}\n          name={template}\n          daoAddress={daoAddress}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default SenFarming\n","import IonIcon from '@sentre/antd-ionicon'\n\nimport { Col, Row, Space, Image, Typography, Button } from 'antd'\nimport { TemplateCreateLoader } from 'templates/templateLoader'\n\nimport { TemplateNames } from 'templates/constant'\nimport LOGO from 'static/images/templates/logo-solend.png'\nimport { EmbeddedViewData } from 'templates/view/embedded-view/configs'\n\nconst CONFIGS: EmbeddedViewData = {\n  appId: 'solend',\n  logo: `url(${LOGO})`,\n  title: 'Solend template',\n  url: 'https://solend.fi/dashboard',\n}\n\nconst Solend = ({ daoAddress }: { daoAddress: string }) => {\n  return (\n    <Row>\n      <Col span={24} className=\"wrap-spl-info\">\n        <Row gutter={[16, 16]} className=\"spl-info\">\n          <Col span={24}>\n            <Space size={24}>\n              <Image preview={false} src={LOGO} style={{ height: 56 }} />\n              <Space size={0} direction=\"vertical\">\n                <Typography.Text>Solend application template</Typography.Text>\n                <Space size={2} style={{ marginLeft: -8 }}>\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-discord\" />}\n                    onClick={() => {\n                      window.open(\n                        'https://discord.com/invite/aGXvPNGXDT',\n                        'blank',\n                      )\n                    }}\n                  />\n                </Space>\n              </Space>\n            </Space>\n          </Col>\n          <Col span={24}>\n            <Typography.Paragraph\n              type=\"secondary\"\n              ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n            >\n              Solend is the autonomous interest rate machine for lending on\n              Solana\n            </Typography.Paragraph>\n          </Col>\n          <Col span={24}>\n            <TemplateCreateLoader\n              name={TemplateNames.EmbeddedView}\n              daoAddress={daoAddress}\n              defaultData={CONFIGS}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Solend\n","import IonIcon from '@sentre/antd-ionicon'\n\nimport { Col, Row, Space, Image, Typography, Button } from 'antd'\nimport { TemplateCreateLoader } from 'templates/templateLoader'\n\nimport { TemplateNames } from 'templates/constant'\nimport LOGO from 'static/images/templates/francium.png'\nimport { EmbeddedViewData } from 'templates/view/embedded-view/configs'\n\nconst CONFIGS: EmbeddedViewData = {\n  appId: 'francium',\n  logo: `url(${LOGO})`,\n  title: 'Francium template',\n  url: 'https://francium.io/app/mypage',\n}\n\nconst Francium = ({ daoAddress }: { daoAddress: string }) => {\n  return (\n    <Row>\n      <Col span={24} className=\"wrap-spl-info\">\n        <Row gutter={[16, 16]} className=\"spl-info\">\n          <Col span={24}>\n            <Space size={24}>\n              <Image preview={false} src={LOGO} style={{ height: 56 }} />\n              <Space size={0} direction=\"vertical\">\n                <Typography.Text>Francium application template</Typography.Text>\n                <Space size={2} style={{ marginLeft: -8 }}>\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"logo-discord\" />}\n                    onClick={() => {\n                      window.open(\n                        'https://discord.com/invite/aGXvPNGXDT',\n                        'blank',\n                      )\n                    }}\n                  />\n                </Space>\n              </Space>\n            </Space>\n          </Col>\n          <Col span={24}>\n            <Typography.Paragraph\n              type=\"secondary\"\n              ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n            >\n              Francium is the DeFi Yield Strategy Platform on Solana\n            </Typography.Paragraph>\n          </Col>\n          <Col span={24}>\n            <TemplateCreateLoader\n              name={TemplateNames.EmbeddedView}\n              daoAddress={daoAddress}\n              defaultData={CONFIGS}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Francium\n","import { Col, Row, Space, Image, Typography } from 'antd'\nimport { TemplateCreateLoader } from 'templates/templateLoader'\n\nimport { TemplateNames } from 'templates/constant'\nimport LOGO from 'static/images/templates/meanfi.png'\nimport { EmbeddedViewData } from 'templates/view/embedded-view/configs'\n\nconst CONFIGS: EmbeddedViewData = {\n  appId: 'meanfi',\n  logo: `url(${LOGO})`,\n  title: 'Meanfi template',\n  url: 'https://app.meanfi.com/',\n}\n\nconst Meanfi = ({ daoAddress }: { daoAddress: string }) => {\n  return (\n    <Row>\n      <Col span={24} className=\"wrap-spl-info\">\n        <Row gutter={[16, 16]} className=\"spl-info\">\n          <Col span={24}>\n            <Space size={24}>\n              <Image preview={false} src={LOGO} style={{ height: 56 }} />\n              <Space size={0} direction=\"vertical\">\n                <Typography.Text>Meanfi application template</Typography.Text>\n              </Space>\n            </Space>\n          </Col>\n          <Col span={24}>\n            <Typography.Paragraph\n              type=\"secondary\"\n              ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n            >\n              Manage Your Treasury With Real-Time Finance\n            </Typography.Paragraph>\n          </Col>\n          <Col span={24}>\n            <TemplateCreateLoader\n              name={TemplateNames.EmbeddedView}\n              daoAddress={daoAddress}\n              defaultData={CONFIGS}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Meanfi\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { Col, Modal, Row, Tabs, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport SPL from './spl'\nimport Blank from './blank'\nimport { AppDispatch, AppState } from 'model'\nimport { clearTemplate } from 'model/template.controller'\n\nimport './index.less'\nimport SenFarming from './senFarming'\nimport Solend from './solend'\nimport Francium from './francium'\nimport Meanfi from './meanfi'\n\nconst Template = ({ daoAddress }: { daoAddress: string }) => {\n  const visible = useSelector((state: AppState) => state.template.visible)\n  const dispatch = useDispatch<AppDispatch>()\n\n  return (\n    <Modal\n      visible={visible}\n      footer={false}\n      closeIcon={<IonIcon name=\"close-outline\" />}\n      className=\"template-card template-modal\"\n      onCancel={() => dispatch(clearTemplate())}\n    >\n      <Row>\n        <Col span={24} className=\"template-header\">\n          <Typography.Title level={4}>Choose a template</Typography.Title>\n        </Col>\n        <Col className=\"template-body\" span={24}>\n          <Tabs>\n            <Tabs.TabPane tab=\"Blank\" key=\"blank\">\n              <Blank daoAddress={daoAddress} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"SPL\" key=\"spl\">\n              <SPL daoAddress={daoAddress} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Sen Farming\" key=\"sen-farming\">\n              <SenFarming daoAddress={daoAddress} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Solend\" key=\"solend\">\n              <Solend daoAddress={daoAddress} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Francium\" key=\"francium\">\n              <Francium daoAddress={daoAddress} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Meanfi\" key=\"Meanfi\">\n              <Meanfi daoAddress={daoAddress} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Zeta\" key=\"zeta\" disabled />\n            <Tabs.TabPane tab=\"Atrix\" key=\"atrix\" disabled />\n            <Tabs.TabPane tab=\"Quarry\" key=\"quarry\" disabled />\n            <Tabs.TabPane tab=\"Advanced\" key=\"advanced\" disabled />\n          </Tabs>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default Template\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport LazyLoad from '@sentre/react-lazyload'\nimport { useWalletAddress, useWidth } from '@sentre/senhub'\nimport { DaoRegimes } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\nimport { SystemProgram } from '@solana/web3.js'\n\nimport { Button, Col, Empty, Row, Select, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport Template from 'view/templates'\n\nimport { AppDispatch, AppState } from 'model'\nimport { setVisible } from 'model/template.controller'\nimport { TemplateProposalLoader } from 'templates/templateLoader'\nimport './index.less'\n\nexport type ProposalListProps = { daoAddress: string }\n\nconst currentDate = Math.floor(Number(new Date()) / 1000)\n\nconst ProposalList = ({ daoAddress }: ProposalListProps) => {\n  const [status, setStatus] = useState('all-status')\n  const daos = useSelector((state: AppState) => state.daos)\n  const proposal = useSelector((state: AppState) => state.proposals)\n  const dispatch = useDispatch<AppDispatch>()\n  const width = useWidth()\n  const walletAddress = useWalletAddress()\n\n  const { regime, authority } = daos[daoAddress] || {\n    regime: DaoRegimes.Dictatorial,\n    authority: SystemProgram.programId,\n  }\n  const mobileScreen = width < 768\n\n  const isSuccess = useCallback(\n    (quorum: string, votingPower: number, numSupply: number) => {\n      if (votingPower <= 0) return false\n      if (quorum === 'half' && votingPower >= numSupply / 2) return true\n      if (quorum === 'oneThird' && votingPower >= numSupply / 3) return true\n      if (quorum === 'twoThird' && votingPower >= (numSupply * 2) / 3)\n        return true\n      return false\n    },\n    [],\n  )\n\n  const authorized = useMemo(() => {\n    if (isEqual(regime, DaoRegimes.Autonomous)) return true\n    if (isEqual(regime, DaoRegimes.Democratic)) return true\n    if (authority.toBase58() === walletAddress) return true\n    return false\n  }, [regime, authority, walletAddress])\n\n  const proposalAddresses = useMemo(() => {\n    const expandedProposal = Object.keys(proposal).map((address) => ({\n      address,\n      ...proposal[address],\n    }))\n    return expandedProposal\n      .filter(({ dao }) => dao.toBase58() === daoAddress)\n      .map(({ address }) => address)\n  }, [proposal, daoAddress])\n\n  const filterProposalAddresses = useMemo(() => {\n    if (!proposalAddresses.length) return []\n    const filteredAddress = []\n\n    for (const address of proposalAddresses) {\n      let valid = false\n      const {\n        endDate,\n        startDate,\n        executed,\n        supply,\n        votingForPower,\n        consensusQuorum,\n        consensusMechanism,\n        votingAgainstPower,\n      } = proposal[address] || {}\n\n      const quorum = consensusQuorum ? Object.keys(consensusQuorum)[0] : ''\n      const votingPower = Number(votingForPower) - Number(votingAgainstPower)\n      const stakeSupply = Number(supply) || 0\n      const lockSupply = Number(supply) * (Number(endDate) - Number(startDate))\n      const mechanism = consensusMechanism\n        ? Object.keys(consensusMechanism)[0]\n        : ''\n      const actualSupply =\n        mechanism === 'StakedTokenCounter' ? stakeSupply : lockSupply\n\n      switch (status) {\n        case 'preparing':\n          valid = currentDate < Number(startDate)\n          break\n        case 'voting':\n          valid =\n            currentDate <= Number(endDate) && currentDate >= Number(startDate)\n          break\n        case 'executed':\n          valid = executed\n          break\n        case 'succeeded':\n          valid =\n            isSuccess(quorum, votingPower, actualSupply) &&\n            !executed &&\n            currentDate > Number(endDate)\n          break\n        case 'failed':\n          valid =\n            !isSuccess(quorum, votingPower, actualSupply) &&\n            currentDate > Number(endDate)\n          break\n        default:\n          valid = true\n          break\n      }\n      if (valid) filteredAddress.push(address)\n    }\n    return filteredAddress\n  }, [isSuccess, proposal, proposalAddresses, status])\n\n  useEffect(() => {\n    // scroll to top\n    window.scrollTo(0, 0)\n  }, [])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row gutter={[16, 16]} align=\"bottom\">\n          <Col\n            span={mobileScreen ? 24 : undefined}\n            flex={mobileScreen ? undefined : 'auto'}\n          >\n            <Typography.Title level={4}>Proposals</Typography.Title>\n          </Col>\n          <Col span={mobileScreen ? 12 : undefined}>\n            <Select\n              className=\"select-filter-proposal\"\n              defaultValue=\"all-status\"\n              onChange={setStatus}\n              style={{ width: '100%', minWidth: 150 }}\n            >\n              <Select.Option value=\"all-status\">All Status</Select.Option>\n              <Select.Option value=\"preparing\">Preparing</Select.Option>\n              <Select.Option value=\"voting\">Voting</Select.Option>\n              <Select.Option value=\"succeeded\">Succeeded</Select.Option>\n              <Select.Option value=\"executed\">Executed</Select.Option>\n              <Select.Option value=\"failed\">Failed</Select.Option>\n            </Select>\n          </Col>\n          <Col span={mobileScreen ? 12 : undefined}>\n            <Button\n              type=\"primary\"\n              icon={<IonIcon name=\"add-outline\" />}\n              onClick={() => dispatch(setVisible(true))}\n              disabled={!authorized}\n              block\n            >\n              New Proposal\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row>\n          {filterProposalAddresses.length ? (\n            filterProposalAddresses.map((proposalAddress) => (\n              <Col key={proposalAddress} span={24} style={{ minHeight: 150 }}>\n                <LazyLoad height={176} overflow>\n                  <TemplateProposalLoader proposalAddress={proposalAddress} />\n                </LazyLoad>\n              </Col>\n            ))\n          ) : (\n            <Col span={24} style={{ textAlign: 'center' }}>\n              <Empty description=\"No Proposals\" />\n            </Col>\n          )}\n        </Row>\n      </Col>\n      <Template daoAddress={daoAddress} />\n    </Row>\n  )\n}\n\nexport default ProposalList\n","import { useEffect } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport { DaoData } from '@interdao/core'\n\nimport { Button, Col, Row } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport DaoInfo from 'view/daoDetails/daoInfo'\nimport DaoOwnerAssets from 'view/daoDetails/daoOwnerAssets'\nimport ProposalList from 'view/proposalList'\n\nimport useValidDaoMember from 'hooks/dao/useValidDaoMember'\nimport { AppState } from 'model'\nimport { APP_ROUTE } from 'configs/route'\nimport './index.less'\n\nconst DaoDetails = () => {\n  const history = useHistory()\n  const { daoAddress } = useParams<{ daoAddress: string }>()\n  const daoData = useSelector((state: AppState) => state.daos[daoAddress])\n  const { isPublic } = daoData || ({} as DaoData)\n  const { validMember, checking } = useValidDaoMember(daoAddress)\n\n  useEffect(() => {\n    if (checking) return\n    if (!validMember && !isPublic) {\n      window.notify({\n        type: 'warning',\n        description: 'You are not a member of this DAO',\n      })\n      return history.push(APP_ROUTE.listDaos.generatePath({}))\n    }\n  }, [checking, daoAddress, history, isPublic, validMember])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\" align=\"middle\">\n      <Col xs={24} lg={18}>\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Button\n              icon={<IonIcon name=\"arrow-back-outline\" />}\n              type=\"text\"\n              onClick={() => history.push(APP_ROUTE.listDaos.generatePath({}))}\n              style={{ marginLeft: -8 }}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col span={24}>\n            <Row gutter={[24, 24]}>\n              <Col xs={24} md={16}>\n                <DaoInfo daoAddress={daoAddress} />\n              </Col>\n              <Col xs={24} md={8}>\n                <DaoOwnerAssets daoAddress={daoAddress} />\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Col>\n      <Col xs={24} lg={18}>\n        <ProposalList daoAddress={daoAddress} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoDetails\n","import { ConsensusMechanism, ConsensusMechanisms } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\nimport { Infix, useInfix } from '@sentre/senhub'\n\nimport { Button, Row, Col, Space, Typography, Popover } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nexport type ConsensusMechanismInputProps = {\n  value: ConsensusMechanism\n  onChange: (value: ConsensusMechanism) => void\n}\n\nconst ConsensusMechanismInput = ({\n  value = ConsensusMechanisms.StakedTokenCounter,\n  onChange = () => {},\n}: ConsensusMechanismInputProps) => {\n  const infix = useInfix()\n  const mobileScreen = infix === Infix.xs\n  const mobileSpan = mobileScreen ? 12 : undefined\n\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space>\n          <Typography.Text>Voting Mechanism</Typography.Text>\n          <Popover\n            overlayStyle={{ maxWidth: 300 }}\n            trigger=\"click\"\n            content={\n              <Row gutter={[16, 16]}>\n                <Col span={24}>\n                  <Typography.Title level={5}>\n                    What are Voting Mechanisms?\n                  </Typography.Title>\n                </Col>\n                <Col span={24}>\n                  <Space direction=\"vertical\">\n                    <Typography.Text>\n                      <strong>Stake (Token) to Vote:</strong> The power of a\n                      vote is only counted based on the number of staked tokens.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Lock (Token) to Vote:</strong> The power of a vote\n                      is the product of the number of staked tokens and the lock\n                      time in seconds.\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            }\n          >\n            <Button\n              type=\"text\"\n              size=\"small\"\n              icon={<IonIcon name=\"information-circle-outline\" />}\n            />\n          </Popover>\n        </Space>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusMechanisms.StakedTokenCounter)\n              ? ''\n              : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusMechanisms.StakedTokenCounter)}\n          block\n        >\n          Stake to Vote\n        </Button>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusMechanisms.LockedTokenCounter)\n              ? ''\n              : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusMechanisms.LockedTokenCounter)}\n          block\n        >\n          Lock to Vote\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ConsensusMechanismInput\n","import { ConsensusQuorum, ConsensusQuorums } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\nimport { Infix, useInfix } from '@sentre/senhub'\n\nimport { Button, Row, Col, Typography } from 'antd'\n\nexport type ConsensusQuorumInputProps = {\n  value: ConsensusQuorum\n  onChange: (value: ConsensusQuorum) => void\n}\n\nconst ConsensusQuorumInput = ({\n  value = ConsensusQuorums.Half,\n  onChange = () => {},\n}: ConsensusQuorumInputProps) => {\n  const infix = useInfix()\n  const mobileScreen = infix === Infix.xs\n  const mobileSpan = mobileScreen ? 8 : undefined\n\n  return (\n    <Row gutter={[12, 12]}>\n      <Col span={24}>\n        <Typography.Text>Consensus Quorum</Typography.Text>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusQuorums.OneThird) ? '' : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusQuorums.OneThird)}\n          block\n        >\n          1/3\n        </Button>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusQuorums.Half) ? '' : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusQuorums.Half)}\n          block\n        >\n          1/2\n        </Button>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusQuorums.TwoThird) ? '' : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusQuorums.TwoThird)}\n          block\n        >\n          2/3\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ConsensusQuorumInput\n","import moment from 'moment'\n\nimport { Col, DatePicker, Row, Typography } from 'antd'\n\nexport type DurationInputType = {\n  value: Array<number>\n  onChange: (value: Array<number>) => void\n}\n\nconst DurationInput = ({ value, onChange }: DurationInputType) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Typography.Text>Proposal Duration</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[12, 12]}>\n          <Col span={12}>\n            <DatePicker\n              placeholder=\"Start Date\"\n              value={moment(value[0])}\n              onChange={(e) => onChange([e?.valueOf() || value[0], value[1]])}\n              showTime\n              style={{ width: '100%' }}\n            />\n          </Col>\n          <Col span={12}>\n            <DatePicker\n              placeholder=\"End Date\"\n              value={moment(value[1])}\n              onChange={(e) => onChange([value[0], e?.valueOf() || value[1]])}\n              showTime\n              style={{ width: '100%' }}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DurationInput\n","import { useSelector } from 'react-redux'\nimport { DaoData } from '@interdao/core'\nimport { SystemProgram } from '@solana/web3.js'\nimport { util } from '@sentre/senhub'\n\nimport { Col, Row, Space } from 'antd'\nimport { MintAvatar, MintSymbol } from '@sen-use/app'\nimport StatisticCard from 'components/ui/statisticCard'\nimport RegimeTag from 'components/regimeTag'\nimport DaoMember from 'components/dao/daoMember'\n\nimport { AppState } from 'model'\n\nexport type ProposalPreviewProps = {\n  daoAddress: string\n}\n\nconst ProposalPreview = ({ daoAddress }: ProposalPreviewProps) => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const { regime, mint } =\n    daos[daoAddress] ||\n    ({\n      regime: {},\n      mint: SystemProgram.programId,\n    } as DaoData)\n\n  return (\n    <Row gutter={[36, 16]}>\n      <Col xs={12} md={5}>\n        <StatisticCard\n          title=\"DAO Address\"\n          value={util.shortenAddress(daoAddress)}\n        />\n      </Col>\n      <Col xs={12} md={5}>\n        <StatisticCard\n          title=\"Vote By\"\n          value={\n            <Space>\n              <MintAvatar mintAddress={mint.toBase58()} />\n              <MintSymbol mintAddress={mint.toBase58()} />\n            </Space>\n          }\n        />\n      </Col>\n      <Col xs={12} md={5}>\n        <StatisticCard\n          title=\"Members\"\n          value={<DaoMember daoAddress={daoAddress} />}\n        />\n      </Col>\n      <Col xs={12} md={5}>\n        <StatisticCard title=\"Regime\" value={<RegimeTag regime={regime} />} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProposalPreview\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { BN } from '@project-serum/anchor'\nimport { ConsensusMechanisms, ConsensusQuorums } from '@interdao/core'\n\nimport { Button, Card, Col, Divider, Input, Row, Space, Typography } from 'antd'\nimport ConsensusMechanismInput from './consensusMechanismInput'\nimport ConsensusQuorumInput from 'components/consensusQuorumInput'\nimport DurationInput from './durationInput'\nimport ProposalPreview from './proposalPreview'\n\nimport configs from 'configs'\nimport { ipfs } from 'helpers/ipfs'\nimport { AppState } from 'model'\nimport { clearTemplate } from 'model/template.controller'\nimport { useAnchorProvider } from 'hooks/useAnchorProvider'\nimport { useInitProposalIx } from 'hooks/instructions/useInitProposalIx'\nimport { useDaoData } from 'hooks/dao'\nimport { notifyError, notifySuccess } from 'helpers'\nimport { TemplateConfig } from 'templates/constant'\nimport { APP_ROUTE } from 'configs/route'\n\nconst {\n  sol: { taxman, fee },\n} = configs\n\nexport type ProposalMetaData = {\n  title: string\n  description: string\n  templateConfig: TemplateConfig<any>\n  templateData?: any\n}\n\nconst CURRENT_TIME = Number(new Date())\nconst ONE_DAY = 24 * 60 * 60 * 1000\nconst DEFAULT_DURATION = [CURRENT_TIME + ONE_DAY, CURRENT_TIME + 15 * ONE_DAY]\nconst DEFAULT_MECHANISM = ConsensusMechanisms.StakedTokenCounter\n\nconst ProposalInitialization = () => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const { daoAddress, serializedTxs, templateData, templateConfig } =\n    useSelector((state: AppState) => state.template)\n  const daoData = useDaoData(daoAddress)\n\n  const [mechanism, setMechanism] = useState(DEFAULT_MECHANISM)\n  const [consensusQuorum, setConsensusQuorum] = useState(ConsensusQuorums.Half)\n  const [duration, setDuration] = useState([...DEFAULT_DURATION])\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const provider = useAnchorProvider()\n  const initProposalIx = useInitProposalIx()\n\n  const disabled = !title || !description\n\n  const proposalMetaData: ProposalMetaData = useMemo(() => {\n    return {\n      title,\n      description,\n      templateConfig: templateConfig!,\n      templateData,\n    }\n  }, [description, templateData, templateConfig, title])\n\n  const uploadMetaData = useCallback(async () => {\n    const { digest } = await ipfs.methods.proposalMetaData.set(proposalMetaData)\n    return digest\n  }, [proposalMetaData])\n\n  const newProposal = useCallback(async () => {\n    const { authority } = daos[daoAddress]\n    if (!serializedTxs.length) return\n\n    try {\n      setLoading(true)\n      const digest = await uploadMetaData()\n      const metadata = Buffer.from(digest)\n      let listTxWithSigner: Parameters<typeof provider.sendAll>[0] = []\n\n      const { proposalAddress, tx: txCreateProposal } =\n        await window.interDao.initializeProposal({\n          daoAddress,\n          startDate: Math.floor(duration[0] / 1000),\n          endDate: Math.floor(duration[1] / 1000),\n          metadata,\n          consensusMechanism: mechanism,\n          consensusQuorum,\n          feeOptions: {\n            revenue: new BN(fee),\n            revenuemanAddress: authority.toBase58(),\n            tax: new BN(fee),\n            taxmanAddress: taxman,\n          },\n          sendAndConfirm: false,\n        })\n      listTxWithSigner.push({ tx: txCreateProposal })\n\n      for (const serializedTx of serializedTxs) {\n        const txWithSigner = await initProposalIx({\n          dao: daoAddress,\n          proposal: proposalAddress,\n          master: daoData?.master.toBase58()!,\n          txBase64: serializedTx,\n        })\n        listTxWithSigner = listTxWithSigner.concat(txWithSigner)\n      }\n      const txIds = await provider.sendAll(listTxWithSigner)\n\n      notifySuccess('Create a new proposal', txIds[0])\n      dispatch(clearTemplate())\n      return history.push(\n        APP_ROUTE.proposalDetails.generatePath({ proposalAddress }),\n      )\n    } catch (er) {\n      notifyError(er)\n    } finally {\n      return setLoading(false)\n    }\n  }, [\n    daos,\n    daoAddress,\n    serializedTxs,\n    uploadMetaData,\n    provider,\n    duration,\n    mechanism,\n    consensusQuorum,\n    dispatch,\n    history,\n    initProposalIx,\n    daoData?.master,\n  ])\n\n  useEffect(() => {\n    if (!serializedTxs.length || !daoAddress) {\n      return history.push(APP_ROUTE.listDaos.generatePath({}))\n    }\n  }, [daoAddress, history, serializedTxs, serializedTxs.length])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col xs={24} md={14}>\n        <Card bordered={false}>\n          <Row gutter={[24, 24]}>\n            <Col span={24}>\n              <Typography.Title level={1}>\n                Input Proposal Information\n              </Typography.Title>\n            </Col>\n            <Col span={24} />\n            <Col span={24}>\n              <ProposalPreview daoAddress={daoAddress} />\n            </Col>\n            <Col span={24}>\n              <Divider className=\"proposal-initialize\" />\n            </Col>\n            <Col span={24}>\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <Typography.Text>Title</Typography.Text>\n                <Input\n                  value={title}\n                  placeholder=\"A short summary of your proposal.\"\n                  className=\"border-less\"\n                  onChange={(e) => setTitle(e.target.value)}\n                />\n              </Space>\n            </Col>\n            <Col span={24}>\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <Typography.Text>Description</Typography.Text>\n                <Input.TextArea\n                  placeholder=\"More detail about your proposal...\"\n                  name=\"description\"\n                  className=\"border-less\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </Space>\n            </Col>\n            <Col span={24}>\n              <DurationInput value={duration} onChange={setDuration} />\n            </Col>\n            <Col span={24}>\n              <ConsensusMechanismInput\n                value={mechanism}\n                onChange={setMechanism}\n              />\n            </Col>\n            <Col span={24}>\n              <ConsensusQuorumInput\n                value={consensusQuorum}\n                onChange={setConsensusQuorum}\n              />\n            </Col>\n            <Col span={24} />\n            <Col flex=\"auto\">\n              <Button\n                type=\"text\"\n                onClick={() =>\n                  history.push(APP_ROUTE.listDaos.generatePath({}))\n                }\n                size=\"large\"\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col>\n              <Button\n                onClick={newProposal}\n                loading={loading}\n                type=\"primary\"\n                size=\"large\"\n                disabled={disabled}\n              >\n                Add New Proposal\n              </Button>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProposalInitialization\n","import { web3 } from '@project-serum/anchor'\nimport { useCallback } from 'react'\n\nexport const useInitProposalIx = () => {\n  const initProposalIx = useCallback(\n    async ({\n      dao,\n      proposal,\n      master,\n      txBase64,\n    }: {\n      dao: string\n      proposal: string\n      master: string\n      txBase64: string\n    }) => {\n      const recoveredTransaction = web3.Transaction.from(\n        Buffer.from(txBase64, 'base64'),\n      )\n      const instructions = recoveredTransaction.instructions\n\n      const txs = await Promise.all(\n        instructions.map(async ({ data, keys, programId }) => {\n          const proposalIx = web3.Keypair.generate()\n          const { tx } = await window.interDao.initializeProposalInstruction({\n            txIndex: 0,\n            proposal,\n            dao,\n            invokedProgramAddress: programId.toBase58(),\n            data,\n            pubkeys: keys.map(({ pubkey }) => pubkey),\n            isSigners: keys.map(({ isSigner }) => isSigner),\n            isWritables: keys.map(({ isWritable }) => isWritable),\n            isMasters: keys.map(({ pubkey }) => pubkey.toBase58() === master),\n            proposalInstruction: proposalIx,\n            sendAndConfirm: false,\n          })\n          return { tx, signers: [proposalIx] }\n        }),\n      )\n      return txs\n    },\n    [],\n  )\n\n  return initProposalIx\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { AccountInfo, PublicKey } from '@solana/web3.js'\n\nimport { ReceiptData } from '@interdao/core'\n\nexport const getReceipts = async (\n  proposalAddress: string,\n): Promise<Record<string, ReceiptData>> => {\n  if (!account.isAddress(proposalAddress)) throw new Error('Invalid address')\n  const {\n    provider: { connection },\n    programId,\n    account: { receipt },\n  } = window.interDao.program\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await connection.getProgramAccounts(programId, {\n      filters: [\n        { dataSize: receipt.size },\n        {\n          memcmp: {\n            offset: 48,\n            bytes: proposalAddress,\n          },\n        },\n      ],\n    })\n  let bulk: Record<string, ReceiptData> = {}\n\n  value.forEach(({ pubkey, account: { data: buf } }) => {\n    const data = window.interDao.parseReceiptData(buf)\n    bulk[pubkey.toBase58()] = data\n  })\n  return bulk\n}\n\nconst useReceipts = ({ proposalAddress }: { proposalAddress: string }) => {\n  const [receipts, setReceipts] = useState<Record<string, ReceiptData>>({})\n\n  const fetchReceipts = useCallback(async () => {\n    if (!account.isAddress(proposalAddress)) return setReceipts({})\n    const listReceipt = await getReceipts(proposalAddress)\n    return setReceipts(listReceipt)\n  }, [proposalAddress])\n\n  useEffect(() => {\n    fetchReceipts()\n  }, [fetchReceipts])\n\n  return { receipts }\n}\n\nexport default useReceipts\n","import { useCallback, useMemo, useState } from 'react'\nimport { util } from '@sentre/senhub'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport ProposalStatus from 'components/proposalStatus'\n\nimport { ProposalChildCardProps } from './index'\nimport useProposalStatus from 'hooks/proposal/useProposalStatus'\nimport useProposalMetaData from 'hooks/proposal/useProposalMetaData'\nimport useReceipts from 'hooks/proposal/useReceipts'\nimport { notifyError, notifySuccess } from 'helpers'\n\nconst CardStatus = ({ proposalAddress }: ProposalChildCardProps) => {\n  const [loading, setLoading] = useState(false)\n  const { status } = useProposalStatus(proposalAddress)\n  const { metaData } = useProposalMetaData(proposalAddress)\n  const { receipts } = useReceipts({ proposalAddress })\n\n  const members = useMemo(() => {\n    if (!Object.values(receipts).length) return 0\n    const authorities: string[] = []\n    for (const receipt of Object.values(receipts)) {\n      const { authority } = receipt\n      if (authorities.includes(authority.toBase58())) continue\n      authorities.push(authority.toBase58())\n    }\n    return authorities.length\n  }, [receipts])\n\n  const execute = useCallback(async () => {\n    setLoading(true)\n    try {\n      const { txId } = await window.interDao.executeProposal({\n        proposal: proposalAddress,\n      })\n      notifySuccess('Execute', txId)\n    } catch (error) {\n      notifyError(error)\n    } finally {\n      setLoading(false)\n    }\n  }, [proposalAddress])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Row gutter={[24, 24]} wrap={false}>\n            <Col flex=\"auto\">\n              <Space direction=\"vertical\">\n                <Space>\n                  <Typography.Title\n                    level={3}\n                    style={{ wordBreak: 'break-all' }}\n                  >\n                    {metaData?.title\n                      ? metaData.title\n                      : util.shortenAddress(proposalAddress)}\n                  </Typography.Title>\n\n                  <ProposalStatus status={status} />\n                </Space>\n                <Space>\n                  <Row>\n                    <Col span={24}>\n                      <Space size={5}>\n                        <IonIcon name=\"people-outline\" />\n                        <Typography.Text>Voter(s): {members}</Typography.Text>\n                      </Space>\n                    </Col>\n                  </Row>\n                </Space>\n              </Space>\n            </Col>\n            <Col>\n              <Button\n                size=\"large\"\n                type=\"primary\"\n                onClick={execute}\n                loading={loading}\n                disabled={status !== 'Succeeded'}\n              >\n                Execute\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph\n            type=\"secondary\"\n            ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n          >\n            {metaData?.description}\n          </Typography.Paragraph>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CardStatus\n","import { useMemo } from 'react'\nimport { FeeOptions } from '@interdao/core'\nimport { BN } from 'bn.js'\n\nimport configs from 'configs'\nimport { useDaoData } from '../dao'\n\ntype useProposalFeeProps = {\n  daoAddress: string\n}\n\nconst {\n  sol: { taxman, fee },\n} = configs\n\nconst useProposalFee = ({ daoAddress }: useProposalFeeProps) => {\n  const daoData = useDaoData(daoAddress)\n\n  const proposalFee = useMemo(() => {\n    if (!daoData?.regime || !daoData?.authority) return\n    const parseRegime = Object.keys(daoData.regime)[0]\n    const revenueFee = parseRegime === 'democratic' ? new BN(0) : new BN(fee)\n    const feeOption: FeeOptions = {\n      tax: new BN(fee),\n      taxmanAddress: taxman,\n      revenue: revenueFee,\n      revenuemanAddress: daoData.authority.toBase58(),\n    }\n\n    return feeOption\n  }, [daoData])\n\n  return proposalFee\n}\n\nexport default useProposalFee\n","import { useCallback } from 'react'\nimport { web3 } from '@project-serum/anchor'\nimport { useWalletAddress } from '@sentre/senhub'\n\nimport {\n  CommentProposal,\n  deriveDiscriminator,\n  VoteState,\n} from 'model/comments.controller'\nimport { ipfs } from 'helpers/ipfs'\n\nexport const useCommentProposal = () => {\n  const walletAddress = useWalletAddress()\n  const buildCommentData = useCallback(\n    (\n      content: string,\n      voteState?: VoteState,\n      receipt?: string,\n    ): CommentProposal => {\n      return {\n        authority: walletAddress,\n        voteState,\n        receipt,\n        time: new Date().toUTCString(),\n        content,\n      }\n    },\n    [walletAddress],\n  )\n\n  const addNewComment = async (\n    contentId: web3.PublicKey,\n    newComment: CommentProposal,\n  ) => {\n    let ownerComments: CommentProposal[] = []\n    try {\n      const contentData = await window.interDao.program.account.content.fetch(\n        contentId,\n      )\n      ownerComments = [\n        ...(await ipfs.methods.proposalComments.get(contentData.metadata)),\n      ]\n    } catch (error) {}\n    ownerComments.push(newComment)\n    return ownerComments\n  }\n\n  const initTxCommentProposal = useCallback(\n    async (params: {\n      proposal: string\n      content: string\n      voteState?: VoteState\n      receipt?: string\n    }) => {\n      const { proposal, content, voteState, receipt } = params\n      const discriminator = deriveDiscriminator(proposal)\n      const contentId = await window.interDao.deriveContentAddress(\n        discriminator,\n      )\n      const newComment = buildCommentData(content, voteState, receipt)\n      const comments = await addNewComment(contentId, newComment)\n      // Override new Cid\n      const { digest } = await ipfs.methods.proposalComments.set(comments)\n      const { tx } = await window.interDao.initializeContent(\n        discriminator,\n        digest,\n        false,\n      )\n      return tx\n    },\n    [buildCommentData],\n  )\n\n  return { initTxCommentProposal }\n}\n","import { useCallback, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { util } from '@sentre/senhub'\n\nimport { Button, Col, Modal, Row, Space, Typography } from 'antd'\nimport CardNFT from 'components/cardNFT'\n\nimport { MetadataDataType } from 'helpers/metaplex'\nimport useProposalFee from 'hooks/proposal/useProposalFee'\nimport { useCommentProposal } from 'hooks/useCommentProposal'\nimport { VoteState } from 'model/comments.controller'\nimport { useAnchorProvider } from 'hooks/useAnchorProvider'\n\ntype ModalVoteNFTProps = {\n  visible: boolean\n  setVisible: (visible: boolean) => void\n  collection: MetadataDataType[]\n  votingType: VoteState\n  proposalAddress: string\n  daoAddress: string\n  comment?: string\n  onClearComment?: () => void\n}\n\nconst ModalVoteNFT = ({\n  visible,\n  setVisible,\n  collection,\n  votingType,\n  proposalAddress,\n  daoAddress,\n  comment,\n  onClearComment = () => {},\n}: ModalVoteNFTProps) => {\n  const [nftVoting, setNftVoting] = useState<string>('')\n  const [loading, setLoading] = useState(false)\n  const proposalFee = useProposalFee({ daoAddress })\n  const { initTxCommentProposal } = useCommentProposal()\n  const provider = useAnchorProvider()\n\n  const onVoteNftFor = useCallback(async () => {\n    setLoading(true)\n    try {\n      if (!account.isAddress(proposalAddress) || !nftVoting) return\n      const { tx: txVoteNFT } = await window.interDao.voteNftFor(\n        proposalAddress,\n        nftVoting,\n        proposalFee,\n        false,\n      )\n\n      if (!!comment) {\n        const receipt = txVoteNFT.instructions[0].keys[7].pubkey.toString()\n        const txComment = await initTxCommentProposal({\n          content: comment,\n          proposal: proposalAddress,\n          voteState: votingType,\n          receipt,\n        })\n        txVoteNFT.add(txComment)\n      }\n      const txId = await provider.sendAndConfirm(txVoteNFT)\n\n      setNftVoting('')\n      onClearComment()\n      return window.notify({\n        type: 'success',\n        description: 'Voted successfully. Click to view details!',\n        onClick: () => window.open(util.explorer(txId), '_blank'),\n      })\n    } catch (error: any) {\n      return window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setVisible(false)\n      setLoading(false)\n    }\n  }, [\n    comment,\n    initTxCommentProposal,\n    nftVoting,\n    onClearComment,\n    proposalAddress,\n    proposalFee,\n    provider,\n    setVisible,\n    votingType,\n  ])\n\n  const onVoteNftAgainst = useCallback(async () => {\n    setLoading(true)\n    try {\n      if (!account.isAddress(proposalAddress) || !nftVoting) return\n\n      const { txId } = await window.interDao.voteNftAgainst(\n        proposalAddress,\n        nftVoting,\n        proposalFee,\n      )\n      setNftVoting('')\n      return window.notify({\n        type: 'success',\n        description: 'Voted successfully. Click to view details!',\n        onClick: () => window.open(util.explorer(txId), '_blank'),\n      })\n    } catch (error: any) {\n      return window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setLoading(false)\n      setVisible(false)\n    }\n  }, [nftVoting, proposalAddress, proposalFee, setVisible])\n\n  const onConfirm = () => {\n    switch (votingType) {\n      case VoteState.For:\n        onVoteNftFor()\n        break\n      case VoteState.Against:\n        onVoteNftAgainst()\n        break\n    }\n  }\n\n  return (\n    <Modal\n      className=\"modal-nft-selection\"\n      visible={visible}\n      footer={false}\n      onCancel={() => setVisible(false)}\n    >\n      <Row gutter={[24, 24]}>\n        <Col span={24}>\n          <Typography.Title level={4}>\n            Vote {votingType === 'vote-for' ? 'For' : 'Against'}\n          </Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Typography.Text>Choose NFT to vote</Typography.Text>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[24, 24]} className=\"scrollbar\" style={{ height: 240 }}>\n            {collection.map((metadata) => (\n              <Col\n                xs={12}\n                md={8}\n                key={metadata.mint}\n                style={{ textAlign: 'center' }}\n              >\n                <CardNFT\n                  mintAddress={metadata.mint}\n                  isSelected={nftVoting === metadata.mint}\n                  onSelect={setNftVoting}\n                />\n              </Col>\n            ))}\n          </Row>\n        </Col>\n        <Col span={24} style={{ textAlign: 'right' }}>\n          <Space>\n            <Button onClick={() => setVisible(false)}>Cancel</Button>\n            <Button\n              disabled={!nftVoting}\n              type=\"primary\"\n              loading={loading}\n              onClick={onConfirm}\n            >\n              Confirm\n            </Button>\n          </Space>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default ModalVoteNFT\n","export const STROKE_COLOR = {\n  dark: { default: '#312B29', for: '#698033', against: '#F9575E' },\n  light: { default: '#F2EFE9', for: '#F9DEB0', against: '#F9575E' },\n}\n\nexport const COMMENTS_VOTE_TYPE = {\n  'vote-for': {\n    label: 'Voted For',\n    color: '#698033',\n  },\n  'vote-against': {\n    label: 'Voted Against',\n    color: '#F9575E',\n  },\n}\n","import { useMemo } from 'react'\nimport { ReceiptData } from '@interdao/core'\nimport { useTheme } from '@sentre/senhub'\n\nimport { Typography } from 'antd'\n\nimport { STROKE_COLOR } from 'constant'\n\nconst VOTE_TYPE = {\n  default: 'DEFAULT',\n  for: 'VOTE FOR',\n  against: 'VOTE AGAINST',\n}\n\nconst ColumnType = ({ record }: { record: ReceiptData }) => {\n  const theme = useTheme()\n\n  const type = useMemo(() => {\n    const action = Object.keys(record.action || {})[0]\n    if (action === 'voteAgainst') {\n      return 'against'\n    }\n    if (action === 'voteFor') {\n      return 'for'\n    }\n    return 'default'\n  }, [record.action])\n\n  return (\n    <Typography.Text style={{ color: STROKE_COLOR[theme][type] }}>\n      {VOTE_TYPE[type]}\n    </Typography.Text>\n  )\n}\n\nexport default ColumnType\n","import { useSelector } from 'react-redux'\nimport { DaoData, ReceiptData } from '@interdao/core'\nimport { utils } from '@senswap/sen-js'\nimport { util } from '@sentre/senhub'\n\nimport { Typography } from 'antd'\n\nimport { AppState } from 'model'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\n\nconst ColumnPower = ({ receipt }: { receipt: ReceiptData }) => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const proposal = useSelector((state: AppState) => state.proposals)\n  const { power, proposal: proposalPubkey } = receipt\n  const { dao: daoPubkey } = proposal[proposalPubkey.toBase58()] || {}\n  const { mint } = daos[daoPubkey?.toBase58() || ''] || ({} as DaoData)\n  const mintDecimal = useMintDecimals(mint?.toBase58()) || 0\n\n  return (\n    <Typography.Text>\n      {util\n        .numeric(utils.undecimalize(BigInt(power.toString()), mintDecimal))\n        .format('0,0.[0000]a')}\n    </Typography.Text>\n  )\n}\n\nexport default ColumnPower\n","import { Fragment, useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useWalletAddress } from '@sentre/senhub'\nimport { DaoData, ReceiptData } from '@interdao/core'\nimport BN from 'bn.js'\nimport moment from 'moment'\nimport { util } from '@sentre/senhub'\n\nimport { Button, Col, Modal, Row, Typography, Table } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport ColumnType from './history/columnType'\nimport ColumnPower from './history/columnPower'\n\nimport { ProposalChildCardProps } from './index'\nimport useReceipts from 'hooks/proposal/useReceipts'\nimport { AppState } from 'model'\n\nexport type Receipt = ReceiptData & { address: string }\n\nconst Withdraw = ({ daoAddress, proposalAddress }: ProposalChildCardProps) => {\n  const [visible, setVisible] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [listReceipt, setListReceipt] = useState<Receipt[]>([])\n  const { receipts } = useReceipts({ proposalAddress })\n  const daos = useSelector((state: AppState) => state.daos)\n  const { isNft } = daos[daoAddress] || ({} as DaoData)\n  const walletAddress = useWalletAddress()\n\n  const COLUMNS = [\n    {\n      title: 'TIME',\n      dataIndex: 'lockedDate',\n      render: (lockedDate: BN) => (\n        <Typography.Text>\n          {moment(lockedDate.toNumber() * 1000).format('DD/MM/YYYY HH:mm')}\n        </Typography.Text>\n      ),\n    },\n    {\n      title: 'POWER',\n      dataIndex: 'power',\n      render: (_: any, receipt: ReceiptData) => (\n        <ColumnPower receipt={receipt} />\n      ),\n    },\n    {\n      title: 'TYPE',\n      dataIndex: 'authority',\n      render: (_: any, receipt: ReceiptData) => <ColumnType record={receipt} />,\n    },\n    {\n      title: 'ACTION',\n      dataIndex: 'address',\n      render: (receiptAddress: string) => (\n        <Button\n          type=\"primary\"\n          onClick={() => onWithdraw(receiptAddress)}\n          size=\"small\"\n        >\n          Withdraw\n        </Button>\n      ),\n    },\n  ]\n\n  const filterReceipts = useCallback(() => {\n    const listRecept = Object.keys(receipts).map((address) => ({\n      address,\n      ...receipts[address],\n    }))\n\n    const myRecept: Receipt[] = listRecept.filter(\n      (receipt) =>\n        receipt.authority.toBase58() === walletAddress &&\n        receipt.amount.toNumber() > 0,\n    )\n\n    return setListReceipt(myRecept)\n  }, [receipts, walletAddress])\n\n  const onWithdraw = useCallback(\n    async (receiptAddress: string) => {\n      if (!receiptAddress.length) return\n      setLoading(true)\n      try {\n        let response: { txId: string; receiptAddress: string }\n        if (isNft)\n          response = await window.interDao.closeNftVoting(receiptAddress)\n        else response = await window.interDao.close(receiptAddress)\n        window.notify({\n          type: 'success',\n          description: 'Successful withdrawal. Click to view details!',\n          onClick: () => window.open(util.explorer(response.txId), '_blank'),\n        })\n\n        //for real time\n        setListReceipt(\n          [...listReceipt].filter(\n            (receipt) => !receiptAddress.includes(receipt.address),\n          ),\n        )\n      } catch (er: any) {\n        window.notify({\n          type: 'error',\n          description: er.message,\n        })\n      } finally {\n        setLoading(false)\n      }\n    },\n    [isNft, listReceipt],\n  )\n\n  useEffect(() => {\n    filterReceipts()\n  }, [filterReceipts])\n\n  return (\n    <Fragment>\n      <Button\n        type=\"primary\"\n        onClick={() => setVisible(true)}\n        block\n        size=\"large\"\n        disabled={!listReceipt.length}\n      >\n        Withdraw\n      </Button>\n      <Modal\n        visible={visible}\n        footer={null}\n        closeIcon={<IonIcon name=\"close-outline\" />}\n        onCancel={() => setVisible(false)}\n      >\n        <Row gutter={[32, 32]}>\n          <Col span={24}>\n            <Typography.Title level={4}>Withdraw</Typography.Title>\n          </Col>\n          <Col span={24} style={{ maxHeight: 500 }} className=\"scrollbar\">\n            <Table\n              columns={COLUMNS}\n              dataSource={listReceipt}\n              pagination={false}\n              rowKey={({ index, lockedDate }) =>\n                index.toNumber() + lockedDate.toNumber()\n              }\n              loading={loading}\n            />\n          </Col>\n        </Row>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default Withdraw\n","import dayjs from 'dayjs'\n\nexport function getRemainingTime(timestampMs: number, finishTime?: number) {\n  const timestampDayjs = dayjs(timestampMs)\n  const nowDayjs = finishTime ? finishTime : dayjs()\n\n  // times of the past\n  if (timestampDayjs.isBefore(nowDayjs)) {\n    return {\n      minutes: '00',\n      hours: '00',\n      days: '00',\n      seconds: '00',\n    }\n  }\n\n  return {\n    minutes: getRemainingMinutes(nowDayjs, timestampDayjs),\n    hours: getRemainingHours(nowDayjs, timestampDayjs),\n    days: getRemainingDays(nowDayjs, timestampDayjs),\n    seconds: getRemainingSeconds(nowDayjs, timestampDayjs),\n  }\n}\n\n/** Get the difference function */\nfunction getRemainingSeconds(nowDayjs: any, timestampDayjs: any) {\n  const seconds = (timestampDayjs.diff(nowDayjs, 'seconds') % 60) % 60\n  return startWithZeros(seconds, 2)\n}\n\nfunction getRemainingMinutes(nowDayjs: any, timestampDayjs: any) {\n  const minutes = timestampDayjs.diff(nowDayjs, 'minutes') % 60\n  return startWithZeros(minutes, 2)\n}\n\nfunction getRemainingHours(nowDayjs: any, timestampDayjs: any) {\n  const hours = timestampDayjs.diff(nowDayjs, 'hours') % 24\n  return startWithZeros(hours, 2)\n}\n\nfunction getRemainingDays(nowDayjs: any, timestampDayjs: any) {\n  const days = timestampDayjs.diff(nowDayjs, 'days')\n  return days.toString()\n}\n\nfunction startWithZeros(number: number, minLength: number) {\n  const numberString = number.toString()\n  if (numberString.length >= minLength) return numberString\n  return '0'.repeat(minLength - numberString.length) + numberString\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { util } from '@sentre/senhub'\n\nimport { Col, Row, Space, Tooltip, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { getRemainingTime } from 'helpers/countDown'\nimport useProposal from 'hooks/proposal/useProposal'\nimport useProposalStatus from 'hooks/proposal/useProposalStatus'\nimport { AppState } from 'model'\n\ntype LockedVotingProps = {\n  proposalAddress: string\n  daoAddress: string\n}\n\nconst defaultRemainingTime = {\n  minutes: '00',\n  hours: '00',\n  days: '00',\n  seconds: '00',\n}\n\nconst LockedVoting = ({ proposalAddress, daoAddress }: LockedVotingProps) => {\n  const [remainingTime, setRemainingTime] = useState(defaultRemainingTime)\n  const { status } = useProposalStatus(proposalAddress)\n  const voteAmount = useSelector((state: AppState) => state.voteBid.amount)\n  const { endDate, startDate } = useProposal(proposalAddress)\n\n  const voteNow = new Date().getTime()\n  const endTime = Number(endDate) * 1000\n  const startTime = Number(startDate) * 1000\n\n  const remaining = voteNow < endTime ? endTime - voteNow : 0\n  const votePower = (Number(voteAmount) * remaining) / 1000\n\n  const updateRemainingTime = useCallback(\n    (countdown: number, startTime?: number) =>\n      setRemainingTime(getRemainingTime(countdown, startTime)),\n    [],\n  )\n\n  useEffect(() => {\n    if (status === 'Preparing') return updateRemainingTime(endTime, startTime)\n    const intervalId = setInterval(() => {\n      updateRemainingTime(endTime)\n    }, 1000)\n    return () => clearInterval(intervalId)\n  }, [endTime, startTime, status, updateRemainingTime])\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col flex=\"auto\">\n        <Space direction=\"vertical\">\n          <Typography.Text type=\"secondary\">Time remaining</Typography.Text>\n          <Typography.Title level={5}>\n            {remainingTime.days}d : {remainingTime.hours}h :{' '}\n            {remainingTime.minutes}m : {remainingTime.seconds}s\n          </Typography.Title>\n        </Space>\n      </Col>\n      <Col>\n        <Space direction=\"vertical\">\n          <Space>\n            <Tooltip title=\"Your power will be equal to the token amount multiplied by the remaining time (by seconds)\">\n              <IonIcon\n                style={{ cursor: 'pointer' }}\n                name=\"information-circle-outline\"\n              />\n            </Tooltip>\n            <Typography.Text type=\"secondary\">\n              Power of your votes\n            </Typography.Text>\n          </Space>\n\n          <Typography.Title level={5} style={{ textAlign: 'right' }}>\n            {util.numeric(votePower).format('0,0.[0000]')}\n          </Typography.Title>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default LockedVoting\n","import { useCallback, useEffect, useState } from 'react'\n\nimport { MetadataDataType } from 'helpers/metaplex'\nimport useOwnerNFT from './useOwnerNFT'\n\nconst useOwnerNftByCollection = (ownerPublickey: string) => {\n  const { nfts } = useOwnerNFT(ownerPublickey)\n  const [nftsFiltered, setNftsFiltered] =\n    useState<Record<string, MetadataDataType[]>>()\n\n  const filterNFTsByCollection = useCallback(async () => {\n    let listNFTs: Record<string, MetadataDataType[]> = {}\n    nfts?.forEach((nft: MetadataDataType) => {\n      if (nft.collection) {\n        listNFTs[nft.collection.key] = listNFTs[nft.collection.key]\n          ? [...listNFTs[nft.collection.key], nft]\n          : [nft]\n      }\n    })\n    return setNftsFiltered(listNFTs)\n  }, [nfts])\n\n  useEffect(() => {\n    filterNFTsByCollection()\n  }, [filterNFTsByCollection])\n\n  return { nfts: nftsFiltered }\n}\n\nexport default useOwnerNftByCollection\n","import { Card, Col, Input, Row } from 'antd'\n\ntype InputCommentProps = {\n  value: string\n  onChange: (comment: string) => void\n  placeholder?: string\n}\n\nconst InputComment = ({\n  onChange,\n  value,\n  placeholder = 'Add a comment (Optional)',\n}: InputCommentProps) => {\n  return (\n    <Card\n      className=\"numric-ip-card\"\n      bodyStyle={{ padding: '8px 12px' }}\n      bordered={false}\n    >\n      <Row gutter={[8, 8]}>\n        <Col span={24}>\n          <Input\n            bordered={false}\n            style={{ padding: 0 }}\n            placeholder={placeholder}\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n          />\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default InputComment\n","import { Fragment, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { DaoData } from '@interdao/core'\nimport { useWalletAddress } from '@sentre/senhub'\n\nimport { Button, Card, Col, Row, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport ModalVoteNFT from './modalVoteNFT'\nimport Withdraw from '../../withdraw'\nimport LockedVoting from '../lockedVoting'\n\nimport { AppState } from 'model'\nimport { ProposalChildCardProps } from '../../index'\nimport useProposalStatus from 'hooks/proposal/useProposalStatus'\nimport useOwnerNftByCollection from 'hooks/useOwnerNftByCollection'\nimport useProposal from 'hooks/proposal/useProposal'\nimport { VoteState } from 'model/comments.controller'\nimport InputComment from 'components/inputComment'\n\nconst CardVoteByNFT = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const [comment, setComment] = useState('')\n  const [votingType, setVotingType] = useState<VoteState>(VoteState.For)\n  const [visible, setVisible] = useState(false)\n  const daos = useSelector((state: AppState) => state.daos)\n  const { mint } = daos[daoAddress] || ({} as DaoData)\n  const { status } = useProposalStatus(proposalAddress)\n  const { consensusMechanism } = useProposal(proposalAddress)\n  const walletAddress = useWalletAddress()\n  const { nfts: collectionNFTs } = useOwnerNftByCollection(walletAddress)\n  const myCollection = collectionNFTs?.[mint.toBase58()] || []\n  const isLockedVote =\n    Object.keys(consensusMechanism || [])[0] === 'lockedTokenCounter'\n  const isComplete = useMemo(() => {\n    if (status === 'Preparing' || status === 'Voting') return false\n    return true\n  }, [status])\n  const disabled =\n    status !== 'Voting' ||\n    !account.isAddress(proposalAddress) ||\n    !myCollection.length\n\n  const onVoteNftFor = () => {\n    setVisible(true)\n    setVotingType(VoteState.For)\n  }\n\n  const onVoteNftAgainst = () => {\n    setVisible(true)\n    setVotingType(VoteState.Against)\n  }\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Cast Your Votes</Typography.Title>\n        </Col>\n        {isLockedVote && (\n          <Col span={24}>\n            <LockedVoting\n              proposalAddress={proposalAddress}\n              daoAddress={daoAddress}\n            />\n          </Col>\n        )}\n        {isComplete ? (\n          <Col span={24}>\n            <Withdraw\n              daoAddress={daoAddress}\n              proposalAddress={proposalAddress}\n            />\n          </Col>\n        ) : (\n          <Fragment>\n            <Col span={24}>\n              <InputComment value={comment} onChange={setComment} />\n            </Col>\n            <Col span={24}>\n              <Row gutter={[16, 16]}>\n                <Col span={12}>\n                  <Button\n                    onClick={onVoteNftFor}\n                    type=\"primary\"\n                    disabled={disabled}\n                    block\n                    size=\"large\"\n                    icon={<IonIcon name=\"thumbs-up-outline\" />}\n                  >\n                    Vote For\n                  </Button>\n                </Col>\n                <Col span={12}>\n                  <Button\n                    onClick={onVoteNftAgainst}\n                    type=\"primary\"\n                    disabled={disabled}\n                    block\n                    size=\"large\"\n                    icon={<IonIcon name=\"thumbs-down-outline\" />}\n                  >\n                    Vote Against\n                  </Button>\n                </Col>\n              </Row>\n            </Col>\n          </Fragment>\n        )}\n      </Row>\n      <ModalVoteNFT\n        visible={visible}\n        setVisible={setVisible}\n        collection={myCollection}\n        votingType={votingType}\n        proposalAddress={proposalAddress}\n        daoAddress={daoAddress}\n        comment={comment}\n        onClearComment={() => setComment('')}\n      />\n    </Card>\n  )\n}\nexport default CardVoteByNFT\n","import { Fragment, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { utilsBN } from '@sen-use/web3'\nimport { useGetMintDecimals } from '@sentre/senhub'\n\nimport { Button, Col, Row } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { AppState } from 'model'\nimport { ProposalChildCardProps } from '../../index'\nimport useProposalStatus from 'hooks/proposal/useProposalStatus'\nimport useProposalFee from 'hooks/proposal/useProposalFee'\nimport { setVoteBidAmount } from 'model/voteBid.controller'\nimport { notifyError, notifySuccess } from 'helpers'\nimport { useAnchorProvider } from 'hooks/useAnchorProvider'\nimport { useCommentProposal } from 'hooks/useCommentProposal'\nimport { VoteState } from 'model/comments.controller'\nimport InputComment from 'components/inputComment'\nimport { useDaoData } from 'hooks/dao'\n\nconst ActionVote = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const [voting, setVoting] = useState<VoteState>()\n  const [comment, setComment] = useState('')\n\n  const dispatch = useDispatch()\n  const amount = useSelector((state: AppState) => state.voteBid.amount)\n  const daoData = useDaoData(daoAddress)\n\n  const getMintDecimals = useGetMintDecimals()\n  const { status } = useProposalStatus(proposalAddress)\n  const proposalFee = useProposalFee({ daoAddress })\n  const { initTxCommentProposal } = useCommentProposal()\n  const provider = useAnchorProvider()\n\n  const disabled = useMemo(() => {\n    if (!!voting) return true\n    return status !== 'Voting' || !amount || !account.isAddress(proposalAddress)\n  }, [amount, proposalAddress, status, voting])\n\n  const getTxVote = async (voteType: VoteState) => {\n    const decimals = await getMintDecimals({\n      mintAddress: daoData?.mint.toBase58()!,\n    })\n    const amountBN = utilsBN.decimalize(amount, decimals!)\n    switch (voteType) {\n      case VoteState.For:\n        return window.interDao.voteFor(\n          proposalAddress,\n          amountBN,\n          proposalFee,\n          false,\n        )\n      case VoteState.Against:\n        return window.interDao.voteAgainst(\n          proposalAddress,\n          amountBN,\n          proposalFee,\n          false,\n        )\n      default:\n        throw new Error('Invalid vote type')\n    }\n  }\n\n  const onVote = async (voteState: VoteState) => {\n    setVoting(voteState)\n    try {\n      const { tx: txVote } = await getTxVote(voteState)\n      if (comment) {\n        const receipt = txVote.instructions[0].keys[7].pubkey.toString()\n        const txComment = await initTxCommentProposal({\n          proposal: proposalAddress,\n          content: comment,\n          voteState,\n          receipt,\n        })\n        txVote.add(txComment)\n      }\n      const txId = await provider.sendAndConfirm(txVote)\n      dispatch(setVoteBidAmount(''))\n      setComment('')\n      notifySuccess('Voted', txId)\n    } catch (error) {\n      notifyError(error)\n    } finally {\n      setVoting(undefined)\n    }\n  }\n\n  return (\n    <Fragment>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <InputComment value={comment} onChange={setComment} />\n        </Col>\n\n        <Col span={12}>\n          <Button\n            onClick={() => onVote(VoteState.For)}\n            type=\"primary\"\n            disabled={disabled}\n            loading={voting === VoteState.For}\n            block\n            size=\"large\"\n            icon={<IonIcon name=\"thumbs-up-outline\" />}\n          >\n            Vote For\n          </Button>\n        </Col>\n        <Col span={12}>\n          <Button\n            onClick={() => onVote(VoteState.Against)}\n            type=\"primary\"\n            disabled={disabled}\n            loading={voting === VoteState.Against}\n            block\n            size=\"large\"\n            icon={<IonIcon name=\"thumbs-down-outline\" />}\n          >\n            Vote Against\n          </Button>\n        </Col>\n      </Row>\n    </Fragment>\n  )\n}\n\nexport default ActionVote\n","import { utils, web3, BN } from '@project-serum/anchor'\nimport { useEffect, useState } from 'react'\nimport { account, DEFAULT_EMPTY_ADDRESS } from '@senswap/sen-js'\nimport { useAccounts, useWalletAddress, useWalletBalance } from '@sentre/senhub'\n\nimport useMintDecimals from './useMintDecimals'\nimport { utilsBN } from '@sen-use/web3'\n\nexport type AccountBalanceReturn = {\n  amount: BN\n  decimals: number\n  balance: number\n  mintAddress: string\n}\n\nconst buildResult = (mintAddress?: string, amount?: BN, decimals?: number) => {\n  if (\n    !account.isAddress(mintAddress) ||\n    amount === undefined ||\n    decimals === undefined\n  )\n    return { amount: new BN(0), decimals: 0, balance: 0 }\n  return {\n    mintAddress,\n    amount,\n    decimals,\n    balance: Number(utilsBN.undecimalize(amount, decimals)),\n  }\n}\n\n/**\n * Get account balance. This hook needs WalletProvider, MintProvider, and AccountProvider for working.\n * WalletProvider Ref: https://docs.sentre.io/senhub/development/providers/wallet-provider\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * AccountProvider Ref: https://docs.sentre.io/senhub/development/providers/account-provider\n * @param accountAddress Associated account address\n * @returns AccountBalanceReturn\n * - AccountBalanceReturn.amount: The amount with decimals\n * - AccountBalanceReturn.decimals: The corresponding mint decimals\n * - AccountBalanceReturn.balance: The human-readable balance (undecimalized amount)\n * - AccountBalanceReturn.mintAddress: The corresponding mint\n */\nconst useAccountBalance = (accountAddress: string) => {\n  const walletAddress = useWalletAddress()\n  const lamports = useWalletBalance()\n  const accounts = useAccounts()\n  const { amount, mint: mintAddress } = accounts[accountAddress] || {}\n  const decimals = useMintDecimals(mintAddress) || 0\n\n  if (!account.isAddress(walletAddress) || !account.isAddress(accountAddress))\n    return buildResult()\n  if (accountAddress === walletAddress)\n    return buildResult(DEFAULT_EMPTY_ADDRESS, new BN(lamports), 9)\n\n  return buildResult(mintAddress, new BN(amount?.toString() || 0), decimals)\n}\n\nexport default useAccountBalance\n\n/**\n * The same as useAccountBalance but the input is mint address\n * @param mintAddress Mint address\n * @returns AccountBalanceReturn\n */\nexport const useAccountBalanceByMintAddress = (mintAddress: string) => {\n  const [accountAddress, setAccountAddress] = useState('')\n  const walletAddress = useWalletAddress()\n  const data = useAccountBalance(accountAddress)\n\n  useEffect(() => {\n    ;(async () => {\n      if (!account.isAddress(walletAddress) || !account.isAddress(mintAddress))\n        return setAccountAddress('')\n      try {\n        const address = await utils.token.associatedAddress({\n          mint: new web3.PublicKey(mintAddress),\n          owner: new web3.PublicKey(walletAddress),\n        })\n        return setAccountAddress(address.toBase58())\n      } catch (er) {\n        return setAccountAddress('')\n      }\n    })()\n  })\n\n  return data\n}\n","import { useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { DaoData } from '@interdao/core'\nimport { util } from '@sentre/senhub'\n\nimport { Card, Col, Row, Typography } from 'antd'\nimport NumericInput from 'shared/antd/numericInput'\nimport Withdraw from '../../withdraw'\nimport LockedVoting from '../lockedVoting'\nimport ActionVote from './actionVote'\n\nimport { AppState } from 'model'\nimport { setVoteBidAmount } from 'model/voteBid.controller'\nimport { ProposalChildCardProps } from '../../index'\nimport { useAccountBalanceByMintAddress } from 'shared/hooks/useAccountBalance'\nimport { MintSymbol } from '@sen-use/app'\nimport useProposalStatus from 'hooks/proposal/useProposalStatus'\nimport useProposal from 'hooks/proposal/useProposal'\n\nconst CardVoteToken = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const daos = useSelector((state: AppState) => state.daos)\n  const amount = useSelector((state: AppState) => state.voteBid.amount)\n  const dispatch = useDispatch()\n  const { mint } = daos[daoAddress] || ({} as DaoData)\n  const { balance } = useAccountBalanceByMintAddress(mint?.toBase58())\n  const { status } = useProposalStatus(proposalAddress)\n  const { consensusMechanism } = useProposal(proposalAddress)\n\n  const isLockedVote =\n    Object.keys(consensusMechanism || [])[0] === 'lockedTokenCounter'\n  const isComplete = useMemo(() => {\n    if (status === 'Preparing' || status === 'Voting') return false\n    return true\n  }, [status])\n\n  const onChange = (value: string) => {\n    dispatch(setVoteBidAmount(value))\n  }\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Cast Your Votes</Typography.Title>\n        </Col>\n        {!isComplete && (\n          <Col span={24}>\n            <Card\n              className=\"numric-ip-card\"\n              bodyStyle={{ padding: '8px 12px' }}\n              bordered={false}\n            >\n              <Row gutter={[8, 8]}>\n                <Col flex=\"auto\">\n                  <Typography.Text type=\"secondary\">\n                    Amount Votes\n                  </Typography.Text>\n                </Col>\n                <Col>\n                  <Typography.Text>\n                    Available: {util.numeric(balance).format('0,0.[00]')}\n                  </Typography.Text>{' '}\n                  <MintSymbol mintAddress={mint?.toBase58()} />\n                </Col>\n                <Col span={24}>\n                  <NumericInput\n                    bordered={false}\n                    style={{ padding: 0 }}\n                    placeholder=\"0\"\n                    value={amount}\n                    onValue={onChange}\n                    suffix={\n                      <Typography.Text\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => onChange(balance.toString())}\n                      >\n                        MAX\n                      </Typography.Text>\n                    }\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        )}\n\n        {isLockedVote && (\n          <Col span={24}>\n            <LockedVoting\n              proposalAddress={proposalAddress}\n              daoAddress={daoAddress}\n            />\n          </Col>\n        )}\n        <Col span={24}>\n          {!isComplete ? (\n            <ActionVote\n              proposalAddress={proposalAddress}\n              daoAddress={daoAddress}\n            />\n          ) : (\n            <Withdraw\n              proposalAddress={proposalAddress}\n              daoAddress={daoAddress}\n            />\n          )}\n        </Col>\n      </Row>\n    </Card>\n  )\n}\nexport default CardVoteToken\n","import { useSelector } from 'react-redux'\nimport { DaoData } from '@interdao/core'\n\nimport CardVoteByNFT from './nft'\nimport CardVoteToken from './token'\n\nimport { AppState } from 'model'\nimport { ProposalChildCardProps } from '../index'\n\nconst CardVote = ({ proposalAddress, daoAddress }: ProposalChildCardProps) => {\n  const daos = useSelector((state: AppState) => state.daos)\n\n  const { isNft } = daos?.[daoAddress] || ({} as DaoData)\n\n  return isNft ? (\n    <CardVoteByNFT proposalAddress={proposalAddress} daoAddress={daoAddress} />\n  ) : (\n    <CardVoteToken proposalAddress={proposalAddress} daoAddress={daoAddress} />\n  )\n}\n\nexport default CardVote\n","import { Col, Modal, Row, Typography } from 'antd'\nimport useProposalMetaData from 'hooks/proposal/useProposalMetaData'\nimport { TemplateInfoLoader } from 'templates/templateLoader'\n\ntype TemplateInfoProps = {\n  visible: boolean\n  setVisible: (visible: boolean) => void\n  proposalAddress: string\n}\n\nconst ModalTemplateInfo = ({\n  proposalAddress,\n  visible,\n  setVisible,\n}: TemplateInfoProps) => {\n  const { metaData } = useProposalMetaData(proposalAddress)\n  return (\n    <Modal\n      className=\"template-card template-info\"\n      visible={visible}\n      footer={false}\n      onCancel={() => setVisible(false)}\n    >\n      <Row>\n        <Col\n          className=\"template-info-header\"\n          span={24}\n          style={{ textAlign: 'left' }}\n        >\n          <Typography.Title level={4}>\n            {metaData?.templateConfig.title}\n          </Typography.Title>\n        </Col>\n        <Col span={24} className=\"template-info-body\">\n          <TemplateInfoLoader proposalAddress={proposalAddress} />\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default ModalTemplateInfo\n","import { useMemo } from 'react'\nimport { ConsensusQuorum } from '@interdao/core'\n\nconst useParseQuorumText = (quorum?: ConsensusQuorum) => {\n  const quorumText = useMemo(() => {\n    if (!quorum) return '-'\n    const mechanismQuorum = Object.keys(quorum)[0]\n    if (mechanismQuorum === 'half') return '1/2'\n    if (mechanismQuorum === 'oneThird') return '1/3'\n    if (mechanismQuorum === 'twoThird') return '2/3'\n  }, [quorum])\n\n  return quorumText\n}\nexport default useParseQuorumText\n","import { useMemo, useState } from 'react'\nimport moment from 'moment'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport { util } from '@sentre/senhub'\n\nimport { Card, Col, Row, Space, Typography, Tooltip, Button } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport ModalTemplateInfo from '../proposalList/modalTemplateInfo'\nimport RowSpaceBetween from 'components/ui/rowSpaceBetween'\n\nimport useProposal from 'hooks/proposal/useProposal'\nimport { ProposalChildCardProps } from './index'\nimport useParseQuorumText from 'hooks/proposal/useParseQuorumText'\n\nconst CardInfo = ({ proposalAddress, daoAddress }: ProposalChildCardProps) => {\n  const [copied, setCopied] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const { consensusQuorum, startDate, endDate, consensusMechanism, creator } =\n    useProposal(proposalAddress)\n  const authProposalAddress = creator?.toBase58() || ''\n  const quorum = useParseQuorumText(consensusQuorum)\n\n  const onCopy = async () => {\n    setCopied(true)\n    await util.asyncWait(1500)\n    setCopied(false)\n  }\n\n  const consensus = useMemo(() => {\n    if (!consensusMechanism) return '-'\n    const _consensusMechanism = Object.keys(consensusMechanism)[0]\n    if (_consensusMechanism === 'stakedTokenCounter') return 'Staked counter'\n    if (_consensusMechanism === 'lockedTokenCounter') return 'Locked counter'\n  }, [consensusMechanism])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Row align=\"middle\">\n            <Col flex=\"auto\">\n              <Typography.Title level={5}>Information</Typography.Title>\n            </Col>\n            <Col>\n              <Button\n                type=\"text\"\n                icon={<IonIcon name=\"information-circle-outline\" />}\n                style={{ marginRight: -10 }}\n                onClick={() => setVisible(true)}\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Space style={{ width: '100%' }} direction=\"vertical\">\n            <RowSpaceBetween\n              label=\"Proposal ID\"\n              value={util.shortenAddress(proposalAddress, 3)}\n            />\n            <RowSpaceBetween\n              label=\"Start Time\"\n              value={moment(startDate?.toNumber() * 1000).format(\n                'MMM DD,yyyy HH:mm',\n              )}\n            />\n            <RowSpaceBetween\n              label=\"End Time\"\n              value={moment(endDate?.toNumber() * 1000).format(\n                'MMM DD,yyyy HH:mm',\n              )}\n            />\n            <RowSpaceBetween\n              label=\"Author\"\n              value={\n                <Space size={10}>\n                  <Typography.Text\n                    style={{ cursor: 'pointer', textDecoration: 'underline' }}\n                    onClick={() =>\n                      window.open(util.explorer(authProposalAddress), '_blank')\n                    }\n                  >\n                    {util.shortenAddress(authProposalAddress, 3)}\n                  </Typography.Text>\n                  <Tooltip title=\"Copied\" open={copied}>\n                    <CopyToClipboard text={authProposalAddress} onCopy={onCopy}>\n                      <IonIcon\n                        style={{ cursor: 'pointer' }}\n                        name=\"copy-outline\"\n                        onClick={onCopy}\n                      />\n                    </CopyToClipboard>\n                  </Tooltip>\n                </Space>\n              }\n            />\n            <RowSpaceBetween label=\"Quorum\" value={quorum} />\n            <RowSpaceBetween label=\"Vote Method\" value={consensus} />\n          </Space>\n        </Col>\n      </Row>\n      <ModalTemplateInfo\n        setVisible={setVisible}\n        visible={visible}\n        proposalAddress={proposalAddress}\n      />\n    </Card>\n  )\n}\n\nexport default CardInfo\n","import { useSelector } from 'react-redux'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { DaoData } from '@interdao/core'\nimport { utils } from '@senswap/sen-js'\nimport { useTheme } from '@sentre/senhub'\nimport BN from 'bn.js'\nimport { util } from '@sentre/senhub'\n\nimport { Card, Col, Row, Space, Typography, Progress } from 'antd'\nimport RowSpaceVertical from 'components/ui/rowSpaceVertical'\n\nimport { ProposalChildCardProps } from './index'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { AppState } from 'model'\nimport useProposalStatus from 'hooks/proposal/useProposalStatus'\nimport useProposal from 'hooks/proposal/useProposal'\nimport { STROKE_COLOR } from 'constant'\n\nconst CardProgress = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const [backGroundColor, setBackGroundColor] = useState('')\n  const [successColor, setSuccessColor] = useState('')\n  const daos = useSelector((state: AppState) => state.daos)\n  const { votingAgainstPower, votingForPower, consensusQuorum } =\n    useProposal(proposalAddress)\n  const { mint } = daos[daoAddress] || ({} as DaoData)\n  const mintDecimal = useMintDecimals(mint?.toBase58()) || 0\n  const { status, actualSupply } = useProposalStatus(proposalAddress)\n  const theme = useTheme()\n\n  const noVote = Number(votingAgainstPower) || 0\n  const yesVote = Number(votingForPower) || 0\n  const totalVote = yesVote + noVote\n  const percentYes = (yesVote / totalVote) * 100\n  const percentNo = (noVote / totalVote) * 100\n  const defaultRequire = useMemo(\n    () => new BN(utils.decimalize(1, mintDecimal).toString()),\n    [mintDecimal],\n  )\n\n  const currentPower = useMemo(() => {\n    if (!consensusQuorum) return new BN(0)\n    const actualYesVote = votingForPower.sub(votingAgainstPower)\n    const mechanismQuorum = Object.keys(consensusQuorum)[0]\n\n    if (mechanismQuorum === 'half') {\n      const supplyNeed = actualSupply.div(new BN(2)).add(defaultRequire)\n      return actualYesVote.mul(new BN(100)).divRound(supplyNeed)\n    }\n\n    if (mechanismQuorum === 'oneThird') {\n      const supplyNeed = actualSupply.div(new BN(3)).add(defaultRequire)\n      return actualYesVote.mul(new BN(100)).divRound(supplyNeed)\n    }\n\n    if (mechanismQuorum === 'twoThird') {\n      const supplyNeed = actualSupply\n        .mul(new BN(2))\n        .div(new BN(3))\n        .add(defaultRequire)\n\n      return actualYesVote.mul(new BN(100)).divRound(supplyNeed)\n    }\n\n    return new BN(0)\n  }, [\n    actualSupply,\n    consensusQuorum,\n    defaultRequire,\n    votingAgainstPower,\n    votingForPower,\n  ])\n\n  const powerRequire = useMemo(() => {\n    if (!consensusQuorum || !actualSupply || currentPower.gte(new BN(100)))\n      return new BN(0)\n    const actualYesVote = votingForPower.sub(votingAgainstPower)\n    const mechanismQuorum = Object.keys(consensusQuorum)[0]\n\n    if (mechanismQuorum === 'half')\n      return actualSupply.div(new BN(2)).sub(actualYesVote).add(defaultRequire)\n\n    if (mechanismQuorum === 'oneThird')\n      return actualSupply.div(new BN(3)).sub(actualYesVote).add(defaultRequire)\n\n    if (mechanismQuorum === 'twoThird')\n      return actualSupply\n        .mul(new BN(2))\n        .div(new BN(3))\n        .add(defaultRequire)\n        .sub(actualYesVote)\n\n    return new BN(0)\n  }, [\n    actualSupply,\n    consensusQuorum,\n    currentPower,\n    defaultRequire,\n    votingAgainstPower,\n    votingForPower,\n  ])\n\n  const percentSuccess = useMemo(() => {\n    if (percentYes) return percentYes\n    if (percentNo) return 100 - percentNo\n    return 0\n  }, [percentNo, percentYes])\n\n  const getColors = useCallback(() => {\n    if (!percentNo && !percentYes)\n      return setBackGroundColor(STROKE_COLOR[theme].default)\n    if (!percentNo && percentYes)\n      return setSuccessColor(STROKE_COLOR[theme].for)\n    if (percentNo && !percentYes)\n      return setBackGroundColor(STROKE_COLOR[theme].against)\n\n    setBackGroundColor(STROKE_COLOR[theme].against)\n    return setSuccessColor(STROKE_COLOR[theme].for)\n  }, [percentNo, percentYes, theme])\n\n  const quorumText = useMemo(() => {\n    switch (status) {\n      case 'Failed':\n        return 'The proposal has been failed'\n      case 'Succeeded':\n        return 'The proposal has been approved'\n      default:\n        return `${util\n          .numeric(\n            utils.undecimalize(BigInt(powerRequire.toString()), mintDecimal),\n          )\n          .format('0,0.[0000]')} more Vote For required`\n    }\n  }, [mintDecimal, powerRequire, status])\n\n  useEffect(() => {\n    getColors()\n  }, [getColors])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Current Results</Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Space size={0} style={{ width: '100%' }} direction=\"vertical\">\n            <Typography.Text type=\"secondary\">Quorum</Typography.Text>\n            <Typography.Text>{quorumText}</Typography.Text>\n            <Progress\n              percent={100}\n              strokeColor={STROKE_COLOR[theme].default}\n              success={{\n                percent: currentPower.toNumber(),\n                strokeColor: STROKE_COLOR[theme].for,\n              }}\n              showInfo={false}\n            />\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[4, 4]}>\n            <Col flex=\"auto\">\n              <RowSpaceVertical\n                label=\"Voted For\"\n                size={0}\n                value={\n                  <Typography.Title level={4}>\n                    {util\n                      .numeric(utils.undecimalize(BigInt(yesVote), mintDecimal))\n                      .format('0,0.[0000]')}\n                  </Typography.Title>\n                }\n              />\n            </Col>\n            <Col>\n              <RowSpaceVertical\n                label=\"Voted Against\"\n                size={0}\n                align=\"end\"\n                value={\n                  <Typography.Title level={4}>\n                    {util\n                      .numeric(utils.undecimalize(BigInt(noVote), mintDecimal))\n                      .format('0,0.[0000]')}\n                  </Typography.Title>\n                }\n              />\n            </Col>\n            <Col span={24}>\n              <Progress\n                style={{ width: '100%' }}\n                percent={100}\n                strokeColor={backGroundColor}\n                success={{\n                  percent: percentSuccess,\n                  strokeColor: successColor,\n                }}\n                showInfo={false}\n              />\n            </Col>\n            <Col span={24}>\n              <Row>\n                <Col flex=\"auto\">\n                  <Typography.Text type=\"secondary\">\n                    {util.numeric(percentYes).format('0,0.[00]')}%\n                  </Typography.Text>\n                </Col>\n                <Col>\n                  <Typography.Text type=\"secondary\">\n                    {util.numeric(percentNo).format('0,0.[00]')}%\n                  </Typography.Text>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CardProgress\n","import { PublicKey } from '@solana/web3.js'\nimport { ReceiptData } from '@interdao/core'\nimport { util } from '@sentre/senhub'\n\nimport { Typography } from 'antd'\nimport ColumnType from './columnType'\nimport ColumnPower from './columnPower'\n\nexport const HISTORY_COLUMNS_FLEXIBLE = [\n  {\n    title: 'WALLET ADDRESS',\n    dataIndex: 'authority',\n    render: (walletAddress: PublicKey) => (\n      <Typography>{util.shortenAddress(walletAddress.toBase58())}</Typography>\n    ),\n  },\n  {\n    title: 'TYPE',\n    dataIndex: 'authority',\n    render: (_: any, receipt: ReceiptData) => <ColumnType record={receipt} />,\n  },\n  {\n    title: 'POWER',\n    dataIndex: 'power',\n    render: (_: any, receipt: ReceiptData) => <ColumnPower receipt={receipt} />,\n  },\n]\n","import { useCallback, useEffect, useState } from 'react'\nimport { ReceiptData } from '@interdao/core'\n\nimport { Card, Col, Row, Typography, Table, Button } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { HISTORY_COLUMNS_FLEXIBLE } from './column'\nimport { getReceipts } from 'hooks/proposal/useReceipts'\n\nimport './index.less'\n\nconst DEFAULT_AMOUNT_HISTORY = 5\n\nconst History = ({ proposalAddress }: { proposalAddress: string }) => {\n  const [amount, setAmount] = useState(DEFAULT_AMOUNT_HISTORY)\n  const [loading, setLoading] = useState(false)\n  const [listReceipt, setListReceipt] = useState<ReceiptData[]>([])\n\n  const fetchReceipts = useCallback(async () => {\n    setLoading(true)\n    const receipts = await getReceipts(proposalAddress)\n    const nextReceipts: ReceiptData[] = []\n    Object.values(receipts).forEach((receipt) => {\n      const { authority, power, action } = receipt\n      const actionType = Object.keys(action || {})[0]\n      const owner = authority.toBase58()\n\n      const existReceipt = nextReceipts.find((_receipt) => {\n        const { action: _action, authority: _authority } = _receipt\n        const _actionType = Object.keys(_action || {})[0]\n        const _owner = _authority.toBase58()\n\n        return _owner === owner && actionType === _actionType\n      })\n      if (!existReceipt) return nextReceipts.push(receipt)\n\n      const { power: oldPower } = existReceipt\n      const index = nextReceipts.findIndex(\n        (_receipt) => _receipt === existReceipt,\n      )\n      if (index !== -1)\n        return (nextReceipts[index] = {\n          ...nextReceipts[index],\n          power: oldPower.add(power),\n        })\n    })\n    setLoading(false)\n    return setListReceipt(nextReceipts)\n  }, [proposalAddress])\n\n  useEffect(() => {\n    fetchReceipts()\n  }, [fetchReceipts])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Row>\n            <Col flex=\"auto\">\n              <Typography.Title level={5}> Votes</Typography.Title>\n            </Col>\n            <Col>\n              <Button onClick={fetchReceipts}>Refresh</Button>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Table\n            columns={HISTORY_COLUMNS_FLEXIBLE}\n            dataSource={listReceipt.slice(0, amount)}\n            pagination={false}\n            loading={loading}\n            rowKey={({ index, lockedDate }) =>\n              index.toNumber() + lockedDate.toNumber()\n            }\n          />\n        </Col>\n        <Col span={24} style={{ textAlign: 'center' }}>\n          <Button\n            disabled={listReceipt.length <= amount}\n            onClick={() => setAmount(amount + DEFAULT_AMOUNT_HISTORY)}\n            icon={<IonIcon name=\"chevron-down-outline\" />}\n          >\n            View more\n          </Button>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\nexport default History\n","import { CSSProperties, Fragment, ReactNode } from 'react'\nimport { util } from '@sentre/senhub'\nimport moment from 'moment'\nimport { account } from '@senswap/sen-js'\n\nimport {\n  Avatar,\n  Button,\n  Card,\n  Col,\n  Empty,\n  Row,\n  Space,\n  Tag,\n  Typography,\n} from 'antd'\nimport { COMMENTS_VOTE_TYPE } from 'constant'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { CommentProposal } from 'model/comments.controller'\n\ntype CommentVoteTagProps = {\n  tagColor?: string\n  children?: ReactNode\n  style?: CSSProperties\n}\nconst CommentVoteTag = ({ children, tagColor, style }: CommentVoteTagProps) => {\n  if (!children) return <Fragment />\n\n  const tagStyle = tagColor\n    ? { color: tagColor, background: `${tagColor}1a` }\n    : {}\n\n  return (\n    <Tag\n      style={{\n        ...tagStyle,\n        border: 'none',\n        ...style,\n      }}\n    >\n      {children}\n    </Tag>\n  )\n}\n\ntype CardCommentProps = { comment: CommentProposal }\nconst CardComment = ({ comment }: CardCommentProps) => {\n  const { authority: walletAddress, content, time, voteState } = comment\n  const tagComment = voteState && COMMENTS_VOTE_TYPE[voteState]\n\n  return (\n    <Card\n      style={{\n        borderWidth: '0 0 1px 0',\n        borderRadius: 0,\n        background: 'transparent',\n      }}\n      bodyStyle={{\n        paddingLeft: 0,\n        paddingRight: 0,\n      }}\n    >\n      <Row gutter={[24, 24]}>\n        <Col span={24}>\n          <Row gutter={[16, 16]}>\n            <Col>\n              <Avatar size={48}>\n                {walletAddress && walletAddress.substring(0, 2)}\n              </Avatar>\n            </Col>\n            <Col flex=\"auto\">\n              <Space direction=\"vertical\">\n                <Space>\n                  <Typography.Text>\n                    {util.shortenAddress(walletAddress || '')}\n                  </Typography.Text>\n                  <Button\n                    type=\"text\"\n                    icon={<IonIcon name=\"open-outline\" />}\n                    onClick={() =>\n                      window.open(util.explorer(walletAddress), '_blank')\n                    }\n                    disabled={!account.isAddress(walletAddress)}\n                  />\n                </Space>\n                <Space>\n                  <CommentVoteTag tagColor={tagComment?.color}>\n                    {tagComment?.label}\n                  </CommentVoteTag>\n                  <Typography.Text type=\"secondary\">\n                    {moment(time).fromNow()}\n                  </Typography.Text>\n                </Space>\n              </Space>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Typography.Text>{content}</Typography.Text>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\ntype ListCommentsProps = { comments: CommentProposal[] }\nconst ListComments = ({ comments }: ListCommentsProps) => {\n  if (!comments.length) return <Empty />\n\n  return (\n    <Fragment>\n      {comments.map((comment, idx) => (\n        <CardComment comment={comment} key={idx} />\n      ))}\n    </Fragment>\n  )\n}\n\nexport default ListComments\n","import { ReactNode } from 'react'\n\nimport { Col, Row } from 'antd'\n\ntype RowBetweenNodeTitleProps = { title?: ReactNode; children?: ReactNode }\nconst RowBetweenNodeTitle = ({ title, children }: RowBetweenNodeTitleProps) => {\n  return (\n    <Row align=\"middle\" gutter={[24, 24]}>\n      <Col flex=\"auto\">{title}</Col>\n      <Col>{children}</Col>\n    </Row>\n  )\n}\n\nexport default RowBetweenNodeTitle\n","import { Fragment, useCallback, useState } from 'react'\nimport { useParams } from 'react-router-dom'\nimport { account } from '@senswap/sen-js'\n\nimport { Button, Col, Input, Modal, Row, Space, Typography } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nimport { useCommentProposal } from 'hooks/useCommentProposal'\nimport { notifyError, notifySuccess } from 'helpers'\nimport { useAnchorProvider } from 'hooks/useAnchorProvider'\n\nconst ActionCommentOnly = () => {\n  const [loading, setLoading] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const [value, setValue] = useState('')\n  const { initTxCommentProposal } = useCommentProposal()\n  const provider = useAnchorProvider()\n  const { proposalAddress } = useParams<{\n    proposalAddress: string\n  }>()\n\n  const addComments = useCallback(async () => {\n    try {\n      if (!value || !account.isAddress(proposalAddress))\n        throw new Error('Invalid comments.')\n      setLoading(true)\n      const txComment = await initTxCommentProposal({\n        proposal: proposalAddress,\n        content: value,\n      })\n      const txId = await provider.sendAndConfirm(txComment)\n\n      setVisible(false)\n      notifySuccess('comment', txId)\n    } catch (err) {\n      notifyError(err)\n    } finally {\n      setLoading(false)\n    }\n  }, [initTxCommentProposal, proposalAddress, provider, value])\n\n  return (\n    <Fragment>\n      <Button\n        icon={<IonIcon name=\"add-outline\" />}\n        onClick={() => setVisible(true)}\n      >\n        Add a comment only\n      </Button>\n\n      {/* Modal add comment only */}\n      <Modal\n        footer={false}\n        visible={visible}\n        onCancel={() => setVisible(false)}\n        closeIcon={<IonIcon name=\"close-outline\" />}\n      >\n        <Row gutter={[32, 32]}>\n          <Col span={24}>\n            <Typography.Title level={5}>Add a comment only</Typography.Title>\n          </Col>\n          <Col span={24}>\n            <Row gutter={[24, 24]} justify=\"end\">\n              <Col span={24}>\n                <Input.TextArea\n                  placeholder=\"Your throughts\"\n                  value={value}\n                  onChange={(e) => setValue(e.target.value)}\n                />\n              </Col>\n              <Col>\n                <Space>\n                  <Button onClick={() => setVisible(false)}>Cancel</Button>\n                  <Button\n                    type=\"primary\"\n                    onClick={addComments}\n                    loading={loading}\n                  >\n                    Add\n                  </Button>\n                </Space>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default ActionCommentOnly\n","import { Fragment } from 'react'\n\nimport { Avatar, Card, List, Skeleton } from 'antd'\n\nconst CommentLoading = ({ loading }: { loading: boolean }) => {\n  if (!loading) return <Fragment />\n\n  return (\n    <Card\n      style={{\n        borderWidth: '0 0 1px 0',\n        borderRadius: 0,\n        background: 'transparent',\n      }}\n      bodyStyle={{\n        padding: '0 0 24px 0',\n      }}\n    >\n      <Skeleton loading={true} active avatar>\n        <List.Item.Meta avatar={<Avatar />} title={''} description={''} />\n      </Skeleton>\n    </Card>\n  )\n}\n\nexport default CommentLoading\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { sha256 } from 'js-sha256'\nimport camelcase from 'camelcase'\nimport bs58 from 'bs58'\n\nimport { deriveDiscriminator, upsetComment } from 'model/comments.controller'\nimport { AppDispatch } from 'model'\nimport { notifyError } from 'helpers'\n\nlet watcherId = 0\n\nexport const accountDiscriminator = (name: string): Buffer => {\n  return Buffer.from(\n    sha256.digest(`account:${camelcase(name, { pascalCase: true })}`),\n  ).slice(0, 8)\n}\n\nexport const useContentWatcher = (proposal: string) => {\n  const [loading, setLoading] = useState(false)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const watchData = useCallback(async () => {\n    const discriminator = deriveDiscriminator(proposal)\n    watcherId =\n      window.interDao.program.provider.connection.onProgramAccountChange(\n        window.interDao.program.programId,\n        async (data) => {\n          try {\n            const content = window.interDao.parseContentData(\n              data.accountInfo.data,\n            )\n            setLoading(true)\n            await dispatch(\n              upsetComment({\n                proposal,\n                wallet: content.authority.toBase58(),\n                metadata: content.metadata,\n              }),\n            ).unwrap()\n          } catch (error) {\n            notifyError(error)\n          } finally {\n            setLoading(false)\n          }\n        },\n        'confirmed',\n        [\n          {\n            memcmp: {\n              offset: 0,\n              bytes: bs58.encode(accountDiscriminator('content')),\n            },\n          },\n          { memcmp: { offset: 40, bytes: bs58.encode(discriminator) } },\n        ],\n      )\n    if (!watcherId) setTimeout(() => watchData(), 500)\n  }, [dispatch, proposal])\n\n  useEffect(() => {\n    watchData()\n    return () => {\n      ;(async () => {\n        if (watcherId)\n          await window.interDao.program.provider.connection.removeProgramAccountChangeListener(\n            watcherId,\n          )\n      })()\n    }\n  }, [watchData])\n\n  return { loading }\n}\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Button, Card, Col, Row, Space, Tag, Typography } from 'antd'\nimport ListComments from './listComments'\nimport RowBetweenNodeTitle from 'components/rowBetweenNodeTitle'\nimport ActionCommentOnly from './actionCommentOnly'\nimport IonIcon from '@sentre/antd-ionicon'\nimport CommentLoading from './commentLoading'\n\nimport { CommentProposal, getComments } from 'model/comments.controller'\nimport { useContentWatcher } from 'helpers/useContentWatcher'\nimport { AppDispatch, AppState } from 'model'\n\nconst DEFAULT_AMOUNT_COMMENTS = 4\n\ntype DiscussionProps = { total: number }\nconst Discussion = ({ total }: DiscussionProps) => {\n  return (\n    <Space>\n      <Typography.Title level={5}>Discussion</Typography.Title>\n      <Tag>{total}</Tag>\n    </Space>\n  )\n}\n\ntype CommentsProps = { proposalAddress: string }\nconst Comments = ({ proposalAddress }: CommentsProps) => {\n  const [amount, setAmount] = useState(DEFAULT_AMOUNT_COMMENTS)\n  const comments = useSelector(\n    (state: AppState) => state.comments[proposalAddress],\n  )\n  const dispatch = useDispatch<AppDispatch>()\n  const { loading } = useContentWatcher(proposalAddress)\n\n  const fetchComments = useCallback(async () => {\n    await dispatch(getComments(proposalAddress)).unwrap()\n  }, [dispatch, proposalAddress])\n\n  useEffect(() => {\n    fetchComments()\n  }, [fetchComments])\n\n  const pareStringToDate = (time: string) => {\n    return Date.parse(time)\n  }\n\n  const mergedComments = useMemo(() => {\n    if (!comments || !Object.keys(comments).length) return []\n\n    let listComments: CommentProposal[] = []\n    for (const item of Object.values(comments)) {\n      listComments.push(...item)\n    }\n    listComments.sort(\n      (a, b) => pareStringToDate(b.time) - pareStringToDate(a.time),\n    )\n\n    return listComments\n  }, [comments])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[24, 24]} justify=\"center\">\n        {/* Comment header */}\n        <Col span={24}>\n          <RowBetweenNodeTitle\n            title={<Discussion total={mergedComments.length} />}\n          >\n            <ActionCommentOnly />\n          </RowBetweenNodeTitle>\n        </Col>\n\n        {/* List comments */}\n        <Col span={24}>\n          <CommentLoading loading={loading} />\n          <ListComments comments={mergedComments.slice(0, amount)} />\n        </Col>\n\n        {/* view more comment */}\n        <Col>\n          <Button\n            type=\"text\"\n            icon={<IonIcon name=\"chevron-down-outline\" />}\n            onClick={() => setAmount(amount + DEFAULT_AMOUNT_COMMENTS)}\n            disabled={mergedComments?.length < DEFAULT_AMOUNT_COMMENTS}\n          >\n            View more\n          </Button>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default Comments\n","import { useCallback, useEffect } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport { Button, Col, Row, Spin } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\nimport CardStatus from './cardStatus'\nimport CardVote from './cardVote'\nimport CardInfo from './cardInfo'\nimport CardProgress from './cardProgress'\nimport History from './history'\nimport Comments from '../proposalList/components/comments'\n\nimport useProposalMetaData from 'hooks/proposal/useProposalMetaData'\n\nimport './index.less'\nimport useProposal from 'hooks/proposal/useProposal'\nimport { APP_ROUTE } from 'configs/route'\n\nexport type ProposalChildCardProps = {\n  proposalAddress: string\n  daoAddress: string\n}\n\nconst ProposalDetails = () => {\n  const history = useHistory()\n  const { proposalAddress } = useParams<{\n    proposalAddress: string\n  }>()\n  const proposalData = useProposal(proposalAddress)\n  const { loading } = useProposalMetaData(proposalAddress)\n\n  const daoAddress = proposalData?.dao?.toBase58()\n\n  const checkValidProposalAddress = useCallback(() => {\n    if (!proposalData) {\n      return history.push(APP_ROUTE.notFound.generatePath({}))\n    }\n  }, [proposalData, history])\n\n  useEffect(() => {\n    checkValidProposalAddress()\n  }, [checkValidProposalAddress])\n\n  return (\n    <Spin spinning={loading} tip=\"Loading Proposal Data...\">\n      <Row justify=\"center\">\n        <Col xs={24} lg={18}>\n          <Row gutter={[24, 24]}>\n            <Col span={24}>\n              <Button\n                type=\"text\"\n                icon={<IonIcon name=\"arrow-back-outline\" />}\n                onClick={() => {\n                  const listDaoRoute = APP_ROUTE.daoDetails.generatePath({\n                    daoAddress,\n                  })\n                  return history.push(listDaoRoute)\n                }}\n              >\n                Back\n              </Button>\n            </Col>\n            <Col span={24}>\n              <Row gutter={[24, 24]}>\n                <Col xs={24} md={16}>\n                  <Row gutter={[24, 24]}>\n                    <Col span={24}>\n                      <CardStatus\n                        proposalAddress={proposalAddress}\n                        daoAddress={daoAddress}\n                      />\n                    </Col>\n\n                    <Col span={24}>\n                      <CardVote\n                        proposalAddress={proposalAddress}\n                        daoAddress={daoAddress}\n                      />\n                    </Col>\n                    <Col span={24}>\n                      <Comments proposalAddress={proposalAddress} />\n                    </Col>\n                    <Col span={24}>\n                      <History proposalAddress={proposalAddress} />\n                    </Col>\n                  </Row>\n                </Col>\n                <Col xs={24} md={8}>\n                  <Row gutter={[24, 24]}>\n                    <Col span={24}>\n                      <CardInfo\n                        proposalAddress={proposalAddress}\n                        daoAddress={daoAddress}\n                      />\n                    </Col>\n                    <Col span={24}>\n                      <CardProgress\n                        proposalAddress={proposalAddress}\n                        daoAddress={daoAddress}\n                      />\n                    </Col>\n                  </Row>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Spin>\n  )\n}\nexport default ProposalDetails\n","import { useHistory } from 'react-router-dom'\n\nimport { Col, Row, Typography, Button, Image, Card } from 'antd'\n\nimport BG_NOT_FOUND from 'static/images/system/not-found.png'\nimport { APP_ROUTE } from 'configs/route'\n\nconst PageNotFound = () => {\n  const history = useHistory()\n\n  return (\n    <Row justify=\"center\">\n      <Col span={24} style={{ height: 156 }} />\n      <Col xs={24} md={12} xl={10}>\n        <Card className=\"page-not-found\" bodyStyle={{ padding: '72px 48px' }}>\n          <Image preview={false} src={BG_NOT_FOUND} />\n          <Row\n            gutter={[16, 16]}\n            justify=\"center\"\n            style={{ textAlign: 'center' }}\n          >\n            <Col span={24}>\n              <Typography.Title>Page Not Found</Typography.Title>\n            </Col>\n            <Col span={24}>\n              <Typography.Text style={{ fontSize: 20 }}>\n                Check your spelling in the address bar. Or, try opening this\n                site's home page to search or browse for the content.\n              </Typography.Text>\n            </Col>\n            <Col span={24} />\n            <Col span={24}>\n              <Button\n                onClick={() =>\n                  history.push(APP_ROUTE.listDaos.generatePath({}))\n                }\n                type=\"primary\"\n              >\n                Go to the homepage\n              </Button>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default PageNotFound\n","import configs from 'configs'\nimport { ExtractRouteParams } from 'react-router'\nimport { generatePath as generatePathRaw } from 'react-router-dom'\n\n// DAO\nimport ListDaos from '../view/listDaos'\nimport CreateDao from '../view/createDao'\nimport EditDao from '../view/editDao'\nimport DaoDetails from '../view/daoDetails'\n// Proposal\nimport CreateProposal from '../view/createProposal'\nimport ProposalDetails from '../view/proposalDetails'\n// Not found\nimport PageNotFound from 'view/pageNotFound'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst LIST_DAOS = `/dao`\n\nconst CREATE_DAO = `/dao/create-dao`\nconst EDIT_DAO = `/dao/:daoAddress/edit`\nconst DAO_DETAILS = `/dao/:daoAddress`\n\nconst CREATE_PROPOSAL = `/create-proposal`\nconst PROPOSAL_DETAILS = `/proposal/:proposalAddress`\n\nconst NOT_FOUND = `/page-not-found`\n\nfunction wrapAppRoute(path: string) {\n  return `/app/${appId}${path}`\n}\n\nexport const APP_ROUTE = {\n  listDaos: {\n    path: wrapAppRoute(LIST_DAOS),\n    generatePath: (data: ExtractRouteParams<typeof LIST_DAOS>) =>\n      generatePathRaw(wrapAppRoute(LIST_DAOS), data),\n    component: ListDaos,\n  },\n  createDao: {\n    path: wrapAppRoute(CREATE_DAO),\n    generatePath: (data: ExtractRouteParams<typeof CREATE_DAO>) =>\n      generatePathRaw(wrapAppRoute(CREATE_DAO), data),\n    component: CreateDao,\n  },\n  editDao: {\n    path: wrapAppRoute(EDIT_DAO),\n    generatePath: (data: ExtractRouteParams<typeof EDIT_DAO>) =>\n      generatePathRaw(wrapAppRoute(EDIT_DAO), data),\n    component: EditDao,\n  },\n  daoDetails: {\n    path: wrapAppRoute(DAO_DETAILS),\n    generatePath: (data: ExtractRouteParams<typeof DAO_DETAILS>) =>\n      generatePathRaw(wrapAppRoute(DAO_DETAILS), data),\n    component: DaoDetails,\n  },\n  createProposal: {\n    path: wrapAppRoute(CREATE_PROPOSAL),\n    generatePath: (data: ExtractRouteParams<typeof CREATE_PROPOSAL>) =>\n      generatePathRaw(wrapAppRoute(CREATE_PROPOSAL), data),\n    component: CreateProposal,\n  },\n  proposalDetails: {\n    path: wrapAppRoute(PROPOSAL_DETAILS),\n    generatePath: (data: ExtractRouteParams<typeof PROPOSAL_DETAILS>) =>\n      generatePathRaw(wrapAppRoute(PROPOSAL_DETAILS), data),\n    component: ProposalDetails,\n  },\n  notFound: {\n    path: wrapAppRoute(NOT_FOUND),\n    generatePath: (data: ExtractRouteParams<typeof NOT_FOUND>) =>\n      generatePathRaw(wrapAppRoute(NOT_FOUND), data),\n    component: PageNotFound,\n  },\n}\n","import { util } from '@sentre/senhub'\n\nconst SOCIALS_MEDIA: Record<string, string> = {\n  t: 'logo-telegram',\n  twitter: 'logo-twitter',\n  facebook: 'logo-facebook',\n  discord: 'logo-discord',\n  global: 'globe',\n  medium: 'logo-medium',\n}\nexport const fileToBase64 = (\n  file: File,\n  callBack: (result: string | ArrayBuffer | null) => void,\n) => {\n  const reader = new FileReader()\n  reader.readAsDataURL(file)\n  reader.onload = async () => {\n    if (reader.result) callBack(reader.result)\n  }\n}\n\nexport const validURL = (value: string) => {\n  return /^(?:(?:(?:https?|ftp):)?\\/\\/)(?:\\S+(?::\\S*)?@)?(?:(?!(?:10|127)(?:\\.\\d{1,3}){3})(?!(?:169\\.254|192\\.168)(?:\\.\\d{1,3}){2})(?!172\\.(?:1[6-9]|2\\d|3[0-1])(?:\\.\\d{1,3}){2})(?:[1-9]\\d?|1\\d\\d|2[01]\\d|22[0-3])(?:\\.(?:1?\\d{1,2}|2[0-4]\\d|25[0-5])){2}(?:\\.(?:[1-9]\\d?|1\\d\\d|2[0-4]\\d|25[0-4]))|(?:(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)(?:\\.(?:[a-z\\u00a1-\\uffff0-9]-*)*[a-z\\u00a1-\\uffff0-9]+)*(?:\\.(?:[a-z\\u00a1-\\uffff]{2,})))(?::\\d{2,5})?(?:[/?#]\\S*)?$/i.test(\n    value,\n  )\n}\n\nexport const getIcon = (url: string) => {\n  if (!validURL(url)) return ''\n  let socialName = ''\n  const domain = new URL(url)\n  const host = domain.hostname.replace('www.', '')\n  for (const char of host) {\n    if (char === '.') break\n    socialName += char\n  }\n  const iconName = SOCIALS_MEDIA[socialName.toLowerCase()]\n  if (!iconName) return SOCIALS_MEDIA['global']\n  return iconName\n}\n\nexport const notifySuccess = (content: string, txId: string) => {\n  return window.notify({\n    type: 'success',\n    description: `${content} successfully. Click to view details.`,\n    onClick: () => window.open(util.explorer(txId), '_blank'),\n  })\n}\n\nexport const notifyError = (er: any) => {\n  console.log('er', er)\n  return window.notify({\n    type: 'error',\n    description: er.message,\n  })\n}\n","import { File, Web3Storage } from 'web3.storage'\nimport localforage from 'localforage'\nimport axios from 'axios'\n\nimport { CID } from 'multiformats/cid'\nimport { DataLoader } from '@sen-use/web3'\n\nimport { CommentProposal } from 'model/comments.controller'\nimport { DaoMetaData } from 'model/createDao.controller'\nimport { ProposalMetaData } from 'view/createProposal'\n\nconst KEY =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiJkaWQ6ZXRocjoweDg4MzdCZUI2ODM5MTcwODZjQUI3OTU0MzI3ZTgwOWU1ZTlCZTc2NTEiLCJpc3MiOiJ3ZWIzLXN0b3JhZ2UiLCJpYXQiOjE2NTU0NTU5NzI5MjAsIm5hbWUiOiJTZW50cmUifQ.Jf7oQOKMrBxp5morvs7DR_As4EU9Y5WybyuvY1teFN8'\n\nvar store = localforage.createInstance({\n  name: 'cache-ipfs',\n  storeName: 'cache-ipfs',\n})\n\nconst CLUSTER = [\n  'https://cloudflare-ipfs.com/ipfs/{CID_STRING}/file',\n  'https://ipfs.rove.to/ipfs/{CID_STRING}/file',\n  'https://{CID_STRING}.ipfs.nftstorage.link/file',\n  'https://{CID_STRING}.ipfs.4everland.io/file',\n  'https://gateway.ipfs.io/ipfs/{CID_STRING}/file',\n  'https://{CID_STRING}.ipfs.cf-ipfs.com/file',\n]\n\nexport class IPFS<\n  MapTypes extends Record<string, any>,\n  T extends Array<keyof MapTypes>,\n> {\n  private provider: Web3Storage\n  constructor(\n    private key: string,\n    private IDL: T,\n    private endpoint = 'https://api.web3.storage',\n  ) {\n    this.provider = new Web3Storage({\n      endpoint: new URL(this.endpoint),\n      token: this.key,\n    })\n  }\n\n  decodeCID = (digest: string | Buffer | Uint8Array | number[]) => {\n    if (typeof digest === 'string') return digest\n    const v0Prefix = new Uint8Array([18, 32])\n    const v0Digest = new Uint8Array(v0Prefix.length + digest?.length)\n    v0Digest.set(v0Prefix) // multicodec + length\n    v0Digest.set(digest, v0Prefix.length)\n    const cid = CID.decode(v0Digest)\n    return cid.toString()\n  }\n\n  get methods() {\n    const methods: {\n      [x in T[number]]: {\n        get: (\n          digest: string | Buffer | Uint8Array | number[],\n        ) => Promise<MapTypes[x]>\n        set: (data: MapTypes[x]) => Promise<{ cid: string; digest: Uint8Array }>\n      }\n    } = {} as any\n    for (const elm of this.IDL) {\n      methods[elm] = {\n        set: (data) => this.set(data),\n        get: (digest) => this.get(digest),\n      }\n    }\n    return methods\n  }\n\n  private async set(data: any, cache = true): Promise<any> {\n    const file = new File([JSON.stringify(data)], 'file', {\n      type: 'application/json',\n    })\n    const cid = await this.provider.put([file])\n    const {\n      multihash: { digest },\n    } = CID.parse(cid)\n    // Save IPFS to cache\n    return new Promise((resolve) => {\n      let timeout = setTimeout(() => this.set(data), 5000)\n      this.get(cid, false).then(async (data) => {\n        if (data) {\n          clearTimeout(timeout)\n          await store.setItem(this.decodeCID(digest), { data, checked: true })\n          resolve({ cid, digest })\n        }\n      })\n    })\n  }\n\n  private async get(\n    digest: string | Buffer | Uint8Array | number[],\n    cache = true,\n  ): Promise<any> {\n    const cid = this.decodeCID(digest)\n    const loadIpfs = async () => {\n      return new Promise((resolve, reject) => {\n        let instance = setTimeout(async () => {\n          // Resolve promise function\n          async function resolveData(data: any) {\n            try {\n              await store.setItem(cid, { data, checked: true })\n            } catch (error) {\n              console.log('ipfs set cache error:', error)\n            }\n            resolve(data)\n            clearTimeout(instance)\n          }\n          // Cache\n          if (cache) {\n            const cacheData = await store.getItem<any>(cid)\n            if (!!cacheData) return resolveData(cacheData.data)\n          }\n          // API support\n          for (const url of CLUSTER) {\n            if (!cid.startsWith('baf')) continue\n            try {\n              axios\n                .get(url.replace('{CID_STRING}', cid), {\n                  headers: {\n                    'Content-Type': 'application/json',\n                    accept: 'application/json',\n                  },\n                })\n                .then((data) => {\n                  if (!!data.data) resolveData(data.data)\n                })\n            } catch (error) {}\n          }\n          // Web3 store get\n          try {\n            const re = await this.provider.get(cid)\n            const file = ((await re?.files()) || [])[0]\n            const reader = new FileReader()\n\n            if (!file) throw new Error('Cannot read empty file')\n            reader.onload = async () => {\n              const contents = reader.result?.toString()\n              if (!contents) throw new Error('Cannot read empty file')\n              const ipfsData = JSON.parse(contents)\n              // Set status cache data\n              return resolveData(ipfsData)\n            }\n            reader.readAsText(file)\n          } catch (er: any) {\n            return reject(er.message)\n          }\n        })\n      })\n    }\n\n    return cache ? DataLoader.load(`ipfs:${cid}`, loadIpfs) : loadIpfs()\n  }\n}\n\ntype MapTypes = {\n  daoMetadata: DaoMetaData // Dao\n  proposalMetaData: ProposalMetaData\n  proposalComments: CommentProposal[]\n}\ntype Idl = ['daoMetadata', 'proposalMetaData', 'proposalComments']\nconst IDL: Idl = ['daoMetadata', 'proposalMetaData', 'proposalComments']\n\nexport const ipfs = new IPFS<MapTypes, Idl>(KEY, IDL)\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\n\nimport { AppDispatch } from 'model'\nimport { getTokenHolders } from 'model/tokenHolder.controller'\nimport { DataLoader } from '@sen-use/web3/dist'\n\nexport const useDaoMembers = (daoAddress: string) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const [members, setMembers] = useState<number>()\n\n  const fetchDaoMember = useCallback(async () => {\n    const data = await DataLoader.load('load-dao-memmber', () =>\n      dispatch(getTokenHolders({ daoAddress })).unwrap(),\n    )\n    const members = data[daoAddress] || 0\n    return setMembers(members)\n  }, [daoAddress, dispatch])\n\n  useEffect(() => {\n    fetchDaoMember()\n  }, [fetchDaoMember])\n\n  return members\n}\n","import { useDispatch, useSelector } from 'react-redux'\nimport { useEffect } from 'react'\nimport { DaoData } from '@interdao/core'\n\nimport { AppDispatch, AppState } from 'model'\nimport { getDao } from 'model/daos.controller'\nimport { notifyError } from 'helpers'\n\nexport const useDaoData = (daoAddress: string): DaoData | undefined => {\n  const dispatch = useDispatch<AppDispatch>()\n  const daoData = useSelector((state: AppState) => state.daos[daoAddress])\n\n  useEffect(() => {\n    if (daoData) return\n    try {\n      dispatch(getDao({ address: daoAddress })).unwrap()\n    } catch (er: any) {\n      return notifyError(er)\n    }\n  }, [daoAddress, daoData, dispatch])\n\n  return daoData\n}\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { ProposalData } from '@interdao/core'\n\nimport { AppDispatch, AppState } from 'model'\nimport { getProposal } from 'model/proposals.controller'\n\nconst useProposal = (proposalAddress: string) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const proposal = useSelector(\n    (state: AppState) => state.proposals[proposalAddress],\n  )\n\n  const proposalData: ProposalData = useMemo(\n    () => proposal || ({} as ProposalData),\n    [proposal],\n  )\n\n  useEffect(() => {\n    if (!proposalData && account.isAddress(proposalAddress))\n      dispatch(getProposal({ address: proposalAddress }))\n  }, [proposalData, dispatch, proposalAddress])\n\n  return proposalData\n}\n\nexport default useProposal\n","import { useCallback, useEffect, useState } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { DataLoader } from '@sentre/senhub'\n\nimport { AppDispatch } from 'model'\nimport { ProposalMetaData } from 'view/createProposal'\nimport { getProposal } from 'model/proposals.controller'\nimport { ipfs } from 'helpers/ipfs'\nimport { notifyError } from 'helpers'\n\nconst useProposalMetaData = (proposalAddress: string) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const [metaData, setMetaData] = useState<ProposalMetaData>()\n  const [loading, setLoading] = useState(true)\n\n  const getMetaData = useCallback(async () => {\n    try {\n      setLoading(true)\n      const {\n        [proposalAddress]: { metadata: digest },\n      } = await DataLoader.load(`getProposal:${proposalAddress}`, () =>\n        dispatch(getProposal({ address: proposalAddress })).unwrap(),\n      )\n      if (!digest) return setMetaData(undefined)\n      const data = await ipfs.methods.proposalMetaData.get(digest)\n      return setMetaData(data)\n    } catch (er: any) {\n      return notifyError(er)\n    } finally {\n      setLoading(false)\n    }\n  }, [dispatch, proposalAddress])\n\n  useEffect(() => {\n    getMetaData()\n  }, [getMetaData])\n\n  return { metaData, loading }\n}\n\nexport default useProposalMetaData\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { ProposalData } from '@interdao/core'\nimport BN from 'bn.js'\n\nimport { ProposalStatusType } from 'components/proposalStatus'\n\nimport { AppState } from 'model'\n\nconst currentDate = Math.floor(Number(new Date()) / 1000)\n\nconst useProposalStatus = (proposalAddress: string) => {\n  const proposal = useSelector((state: AppState) => state.proposals)\n  const {\n    startDate,\n    endDate,\n    executed,\n    supply,\n    votingAgainstPower,\n    votingForPower,\n    consensusQuorum,\n    consensusMechanism,\n  } = proposal[proposalAddress] || ({} as ProposalData)\n\n  const actualSupply = useMemo(() => {\n    if (!supply) return new BN(0)\n    const mechanism = consensusMechanism\n      ? Object.keys(consensusMechanism)[0]\n      : ''\n    if (mechanism === 'stakedTokenCounter') return supply\n    return supply.mul(endDate.sub(startDate))\n  }, [consensusMechanism, endDate, startDate, supply])\n\n  const isSuccess = useMemo(() => {\n    const quorum = consensusQuorum ? Object.keys(consensusQuorum)[0] : ''\n    if (!votingAgainstPower || !votingAgainstPower) return false\n    const votingPower = votingForPower.sub(votingAgainstPower)\n\n    if (votingPower.lte(new BN(0))) return false\n    if (quorum === 'half' && votingPower.cmp(actualSupply.div(new BN(2))) === 1)\n      return true\n    if (\n      quorum === 'oneThird' &&\n      votingPower.cmp(actualSupply.div(new BN(3))) === 1\n    )\n      return true\n    if (\n      quorum === 'twoThird' &&\n      votingPower.cmp(actualSupply.mul(new BN(2)).div(new BN(3))) === 1\n    )\n      return true\n    return false\n  }, [actualSupply, consensusQuorum, votingAgainstPower, votingForPower])\n\n  const status: ProposalStatusType = useMemo(() => {\n    if (!proposal) return 'Loading'\n    if (currentDate < Number(startDate)) return 'Preparing'\n    if (currentDate < Number(endDate)) return 'Voting'\n    if (executed) return 'Executed'\n    if (isSuccess) return 'Succeeded'\n    return 'Failed'\n  }, [endDate, executed, isSuccess, proposal, startDate])\n\n  return { status, isSuccess, actualSupply }\n}\n\nexport default useProposalStatus\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { sha256 } from 'js-sha256'\nimport camelcase from 'camelcase'\nimport bs58 from 'bs58'\n\nimport { ipfs } from 'helpers/ipfs'\n\n/**\n * Interface & Utility\n */\n\nexport enum VoteState {\n  For = 'vote-for',\n  Against = 'vote-against',\n}\n\nexport type CommentProposal = {\n  authority: string\n  time: string\n  content: string\n  voteState?: VoteState\n  receipt?: string\n}\n\ntype ProposalAddress = string\ntype WalletAddress = string\nexport type CommentState = Record<\n  ProposalAddress,\n  Record<WalletAddress, CommentProposal[]>\n>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'comment'\nconst initialState: CommentState = {}\n/**\n * Actions\n */\n\nexport const deriveDiscriminator = (proposal: string) => {\n  const key = `${proposal}`\n  return Buffer.from(\n    sha256.digest(`proposal:${camelcase(key, { pascalCase: true })}`),\n  ).slice(0, 8)\n}\n\nexport const getComments = createAsyncThunk(\n  `${NAME}/getComments`,\n  async (proposal: string) => {\n    const discriminator = deriveDiscriminator(proposal)\n    const contents = await window.interDao.program.account.content.all([\n      { memcmp: { offset: 40, bytes: bs58.encode(discriminator) } },\n    ])\n\n    let bulk: Record<WalletAddress, CommentProposal[]> = {}\n    await Promise.all(\n      contents.map(async (content) => {\n        const data = await ipfs.methods.proposalComments.get(\n          content.account.metadata,\n        )\n        bulk[content.account.authority.toBase58()] = data\n      }),\n    )\n    return {\n      proposal,\n      bulk,\n    }\n  },\n)\n\nexport const upsetComment = createAsyncThunk(\n  `${NAME}/upsetComment`,\n  async ({\n    proposal,\n    wallet,\n    metadata,\n  }: {\n    proposal: string\n    wallet: string\n    metadata: number[]\n  }) => {\n    let bulk: Record<WalletAddress, CommentProposal[]> = {}\n    await ipfs.methods.proposalComments.get(metadata)\n    return {\n      proposal,\n      bulk,\n    }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(getComments.fulfilled, (state, { payload }) => {\n        if (!state[payload.proposal]) state[payload.proposal] = {}\n        Object.assign(state[payload.proposal], payload.bulk)\n        return state\n      })\n      .addCase(upsetComment.fulfilled, (state, { payload }) => {\n        Object.assign(state[payload.proposal], payload.bulk)\n        return state\n      }),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { DaoRegime, DaoRegimes } from '@interdao/core'\nimport { web3 } from '@project-serum/anchor'\nimport BN from 'bn.js'\n\nexport const DEFAULT_META_DATA: DaoMetaData = {\n  daoName: '',\n  description: '',\n  image: '',\n  optionals: [],\n  daoType: 'flexible-dao',\n  distributorAddress: '',\n}\n\nexport const DEFAULT_DAO_DATA: CreateDaoData = {\n  mintAddress: '',\n  supply: new BN(0),\n  metadata: DEFAULT_META_DATA,\n  dao: undefined,\n  regime: DaoRegimes.Dictatorial,\n  isPublic: true,\n  isNft: false,\n}\n\n/**\n * Interface & Utility\n */\nexport type DaoType = 'flexible-dao'\n\nexport type CreateDaoData = {\n  mintAddress: string\n  supply: BN\n  metadata: DaoMetaData\n  dao?: web3.Keypair\n  regime: DaoRegime\n  isPublic: boolean\n  isNft: boolean\n}\n\nexport type DaoMetaData = {\n  daoName: string\n  description: string\n  image: string | ArrayBuffer | null\n  optionals: string[]\n  daoType: DaoType\n  distributorAddress: string\n}\n\nexport type DAOMember = {\n  name: string\n  walletAddress: string\n}\n\nexport enum CreateDaoSteps {\n  ChooseType,\n  InputDetails,\n  SetRule,\n  Review,\n}\n\nexport type CreateDaoState = {\n  step: CreateDaoSteps\n  data: CreateDaoData\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'createDao'\nconst initialState: CreateDaoState = {\n  step: CreateDaoSteps.ChooseType,\n  data: { ...DEFAULT_DAO_DATA },\n}\n\n/**\n * Actions\n */\n\nexport const submitStepChooseType = createAsyncThunk<\n  CreateDaoState,\n  { daoType: DaoType },\n  { state: { createDao: CreateDaoState } }\n>(`${NAME}/submitStepChooseType`, async ({ daoType }, { getState }) => {\n  const { createDao } = getState()\n  const { metadata } = createDao.data\n  const newState: CreateDaoState = {\n    step: CreateDaoSteps.InputDetails,\n    data: { ...createDao.data, metadata: { ...metadata, daoType } },\n  }\n  return newState\n})\n\nexport const submitStepDaoDetail = createAsyncThunk<\n  CreateDaoState,\n  { metadata: DaoMetaData },\n  { state: { createDao: CreateDaoState } }\n>(`${NAME}/submitStepDaoDetail`, async ({ metadata }, { getState }) => {\n  const { createDao } = getState()\n\n  const newState: CreateDaoState = {\n    step: CreateDaoSteps.SetRule,\n    data: { ...createDao.data, metadata },\n  }\n  return newState\n})\n\nexport const submitStepSetRule = createAsyncThunk<\n  CreateDaoState,\n  { rule: Partial<CreateDaoData> },\n  { state: { createDao: CreateDaoState } }\n>(`${NAME}/submitStepSetRule`, async ({ rule }, { getState }) => {\n  const { createDao } = getState()\n  if (!rule) return createDao\n  const newState: CreateDaoState = {\n    step: CreateDaoSteps.Review,\n    data: { ...createDao.data, ...rule },\n  }\n  return newState\n})\n\nexport const revertPrevStep = createAsyncThunk<\n  CreateDaoState,\n  void,\n  { state: { createDao: CreateDaoState } }\n>(`${NAME}/prevStep`, async (_, { getState }) => {\n  const { createDao } = getState()\n  let prevStep = createDao.step\n  switch (prevStep) {\n    case CreateDaoSteps.Review:\n      prevStep = CreateDaoSteps.SetRule\n      break\n    case CreateDaoSteps.SetRule:\n      prevStep = CreateDaoSteps.InputDetails\n      break\n    case CreateDaoSteps.InputDetails:\n      prevStep = CreateDaoSteps.ChooseType\n      break\n    default:\n      prevStep = CreateDaoSteps.ChooseType\n      break\n  }\n  const newState: CreateDaoState = {\n    step: prevStep,\n    data: { ...createDao.data },\n  }\n  return newState\n})\n\nexport const clearCreateDao = createAsyncThunk<CreateDaoState>(\n  `${NAME}/clearCreateDao`,\n  async () => {\n    return {\n      step: CreateDaoSteps.ChooseType,\n      data: { ...DEFAULT_DAO_DATA },\n    }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        submitStepChooseType.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        submitStepDaoDetail.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        submitStepSetRule.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        revertPrevStep.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        clearCreateDao.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\nimport { DaoData, DAO_DISCRIMINATOR } from '@interdao/core'\n\n/**\n * Interface & Utility\n */\n\nexport type DaoState = Record<string, DaoData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'dao'\nconst initialState: DaoState = {}\n\n/**\n * Actions\n */\n\nexport const getDaos = createAsyncThunk(`${NAME}/getDaos`, async () => {\n  const accounts = await window.interDao.program.account.dao.all([\n    {\n      memcmp: {\n        offset: 0,\n        bytes: DAO_DISCRIMINATOR,\n      },\n    },\n  ])\n  let bulk: Record<string, DaoData> = {}\n  accounts.forEach(({ publicKey, account }) => {\n    const address = publicKey.toBase58()\n    bulk[address] = account as any\n  })\n  return bulk\n})\n\nexport const getDao = createAsyncThunk<\n  Partial<DaoState>,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getDao`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    daos: { [address]: data },\n  } = getState()\n  if (data && !force) return { [address]: data }\n\n  const daoData: DaoData = await window.interDao.getDaoData(address)\n  return {\n    [address]: daoData,\n  }\n})\n\nexport const upsetDao = createAsyncThunk<\n  Partial<DaoState>,\n  { address: string; data: DaoData },\n  { state: any }\n>(`${NAME}/upsetDao`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return {\n    [address]: { ...data },\n  }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getDaos.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getDao.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetDao.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { ProposalData } from '@interdao/core'\nimport { account } from '@senswap/sen-js'\n\n/**\n * Interface & Utility\n */\n\nexport type ProposalState = Record<string, ProposalData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'proposal'\nconst initialState: ProposalState = {}\n\n/**\n * Actions\n */\n\nexport const getProposals = createAsyncThunk(\n  `${NAME}/getProposals`,\n  async () => {\n    const { account } = window.interDao.program\n    let bulk: ProposalState = {}\n\n    const proposals = await account.proposal.all()\n    for (const { publicKey, account: proposalData } of proposals) {\n      const address = publicKey.toBase58()\n      bulk[address] = proposalData as any\n    }\n    return bulk\n  },\n)\n\nexport const getProposal = createAsyncThunk<\n  ProposalState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getProposal`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    proposals: { [address]: data },\n  } = getState()\n  if (data && !force) return { [address]: data }\n  const raw = await window.interDao.getProposalData(address)\n  return { [address]: raw }\n})\n\nexport const upsetProposal = createAsyncThunk<\n  ProposalState,\n  { address: string; data: ProposalData },\n  { state: any }\n>(`${NAME}/upsetProposal`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteProposal = createAsyncThunk(\n  `${NAME}/deleteProposal`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getProposals.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { TemplateConfig, TemplateNames } from 'templates/constant'\n\n/**\n * Interface & Utility\n */\n\nexport type TemplateState = {\n  visible: boolean\n  templateConfig?: TemplateConfig<any>\n  templateData: Record<string, string>\n  serializedTxs: string[]\n  daoAddress: string\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'template'\nconst initialState: TemplateState = {\n  visible: false,\n  templateConfig: undefined,\n  templateData: {},\n  serializedTxs: [],\n  daoAddress: '',\n}\n\n/**\n * Actions\n */\n\nexport const setVisible = createAsyncThunk(\n  `${NAME}/setVisible`,\n  async (visible: boolean) => {\n    return { visible }\n  },\n)\n\nexport const confirmTemplate = createAsyncThunk(\n  `${NAME}/confirmTemplate`,\n  async (template: {\n    daoAddress: string\n    templateConfig: TemplateConfig<any>\n    serializedTxs?: string[]\n    templateData: Record<string, string>\n  }) => {\n    return { ...template, visible: false }\n  },\n)\n\nexport const selectTemplate = createAsyncThunk(\n  `${NAME}/selectTemplate`,\n  async (name?: TemplateNames) => {\n    return { templateName: name, serializedTxs: [], templateData: {} }\n  },\n)\n\nexport const clearTemplate = createAsyncThunk(\n  `${NAME}/clearTemplate`,\n  async () => {\n    return {\n      visible: false,\n      tx: undefined,\n      templateName: undefined,\n      templateData: {},\n    }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        confirmTemplate.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setVisible.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        selectTemplate.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        clearTemplate.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { utils } from '@project-serum/anchor'\nimport { DataLoader } from '@sentre/senhub'\n\nconst SOLSCAN_BASE_API_URL = 'https://public-api.solscan.io'\nconst END_POINT_HOLDERS = '/token/holders'\n\nexport type HoldersState = { data: any[]; total: number }\nexport const fetchTokenHoldersFromSolScan = async (mintAddress: string) => {\n  const requestUrl = `${SOLSCAN_BASE_API_URL}${END_POINT_HOLDERS}?tokenAddress=${mintAddress}&offset=0&limit=1`\n\n  const data: HoldersState = await fetch(requestUrl).then((responve) =>\n    responve.json(),\n  )\n  return data.total\n}\n\nexport const fecthTokenHoldersFromSmartContract = async (\n  mintAddress: string,\n) => {\n  const {\n    provider: { connection },\n  } = window.interDao.program\n\n  const accounts = await DataLoader.load(\n    'getTokenHolders' + mintAddress,\n    () => {\n      return connection.getProgramAccounts(utils.token.TOKEN_PROGRAM_ID, {\n        filters: [\n          { dataSize: 165 },\n          { memcmp: { bytes: mintAddress, offset: 0 } },\n        ],\n      })\n    },\n  )\n  return accounts.length || 0\n}\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\nimport { net } from '@sentre/senhub'\n\nimport {\n  fecthTokenHoldersFromSmartContract,\n  fetchTokenHoldersFromSolScan,\n} from 'helpers/tokenHolders'\n\n/**\n * Interface & Utility\n */\n\ntype TokenHolderState = Record<string, number>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'tokenHolder'\nconst initialState: TokenHolderState = {}\n\n/**\n * Actions\n */\n\nexport const getTokenHolders = createAsyncThunk<\n  Partial<TokenHolderState>,\n  { daoAddress: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getTokenHolders`, async ({ daoAddress, force }, { getState }) => {\n  if (!account.isAddress(daoAddress)) throw new Error('Invalid address')\n  const {\n    daos: {\n      [daoAddress]: { mint },\n    },\n    tokenHolder: { [daoAddress]: amountHolder },\n  } = getState()\n\n  const mintAddress = mint.toBase58()\n  if (!account.isAddress(mintAddress)) return {}\n  if (amountHolder && !force) return { [daoAddress]: amountHolder }\n  let members = 0\n\n  if (net === 'devnet')\n    members = await fecthTokenHoldersFromSmartContract(mintAddress)\n  if (net === 'mainnet')\n    members = await fetchTokenHoldersFromSolScan(mintAddress)\n\n  return { [daoAddress]: members }\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      getTokenHolders.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type VoteBidState = {\n  amount: string\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'voteBid'\nconst initialState: VoteBidState = {\n  amount: '',\n}\n\n/**\n * Actions\n */\n\nexport const setVoteBidAmount = createAsyncThunk(\n  `${NAME}/setVoteBidAmount`,\n  async (amount: string) => {\n    if (!amount) return { amount: '' }\n    return { amount }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      setVoteBidAmount.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { ChangeEvent, useState, forwardRef, useCallback, useRef } from 'react'\n\nimport { Input, Tooltip, Space, InputProps } from 'antd'\nimport IonIcon from '@sentre/antd-ionicon'\n\nlet timeoutId: ReturnType<typeof setTimeout> | undefined\n\n/**\n * Numeric Input\n * - Check balance based on the max\n * - Only accept numeric characters\n * @remarks The props of input follows the same as https://ant.design/components/input/#API. Extra & Overrided props\n * @param max - Maximum\n * @param onValue - A triggerred function if a valid number\n */\nconst NumericInput = forwardRef(\n  (\n    {\n      max,\n      onValue = () => {},\n      onChange = () => {},\n      ...props\n    }: InputProps & {\n      onValue?: (val: string) => void\n      max?: string | number\n    },\n    ref: any,\n  ) => {\n    const [error, setError] = useState('')\n    const [cursor, setCursor] = useState<number | null>(null)\n    const innerRef = useRef(ref)\n\n    // Handle amount\n    const onAmount = useCallback(\n      (val: string) => {\n        const onError = (er: string) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId)\n            timeoutId = undefined\n          }\n          setError(er)\n          timeoutId = setTimeout(() => setError(''), 500)\n        }\n        const reg = /^\\d*(\\.\\d*)?$/\n        if (!reg.test(val)) return onError('Invalid character')\n        if (max && parseFloat(val) > parseFloat(max.toString()))\n          return onError('Not enough balance')\n        return onValue(val)\n      },\n      [max, onValue],\n    )\n\n    // Handle cursor jumping\n    // To prevent autofocus on mobile, we must strictly check cursor different from null\n    if (cursor !== null) innerRef?.current?.setSelectionRange(cursor, cursor)\n\n    return (\n      <Tooltip\n        title={\n          <Space>\n            <IonIcon name=\"warning\" />\n            {error}\n          </Space>\n        }\n        open={!!error}\n      >\n        <Input\n          {...props}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => {\n            onChange(e)\n            setCursor(e.target.selectionStart)\n            onAmount(e.target.value || '')\n          }}\n          ref={innerRef}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nexport default NumericInput\n","import { ComponentConfigs } from '../components/templateForm'\n\n// Config\nexport enum TemplateNames {\n  'SplTransfer' = 'spl-transfer',\n  'SplApprove' = 'spl-approve',\n  'BlankTemplate' = 'blank',\n  'ZetaDeposit' = 'zeta-deposit',\n  'ZetaCreate' = 'zeta-create',\n  'SenFarmingStake' = 'sen-farming-stake',\n  'EmbeddedView' = 'embedded-view',\n}\n\nexport type TemplateConfig<T extends string> = {\n  name: TemplateNames\n  title: string\n  components: ComponentConfigs<T>[]\n}\n\n// Component Type\nexport type PropsCreateComponent<T> = {\n  daoAddress: string\n  defaultData?: T\n}\n\nexport type TemplateAccount = {\n  name: string\n  isMut: boolean\n  isSigner: boolean\n  isMaster: boolean\n}\n","var map = {\n\t\"./blank/create\": [\n\t\t72821,\n\t\t\"src_templates_view_blank_create_tsx\"\n\t],\n\t\"./embedded-view/create\": [\n\t\t10690,\n\t\t\"vendors-node_modules_sentre_connector_dist_index_js\",\n\t\t\"src_templates_view_embedded-view_create_tsx\"\n\t],\n\t\"./sen-farming-stake/create\": [\n\t\t36604,\n\t\t\"vendors-node_modules_sentre_farming_dist_app_index_js-node_modules_react-use_esm_useSetState_js\",\n\t\t\"src_templates_view_sen-farming-stake_create_tsx\"\n\t],\n\t\"./spl-approve/create\": [\n\t\t90664,\n\t\t\"src_templates_view_spl-approve_create_tsx\"\n\t],\n\t\"./spl-transfer/create\": [\n\t\t10853,\n\t\t\"src_templates_view_spl-transfer_create_tsx\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 66611;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./blank/info\": [\n\t\t94229,\n\t\t\"src_templates_view_blank_info_tsx\"\n\t],\n\t\"./embedded-view/info\": [\n\t\t56776,\n\t\t\"src_templates_view_embedded-view_info_tsx\"\n\t],\n\t\"./sen-farming-stake/info\": [\n\t\t43666,\n\t\t\"src_templates_view_sen-farming-stake_info_tsx\"\n\t],\n\t\"./spl-approve/info\": [\n\t\t63153,\n\t\t\"src_templates_view_spl-approve_info_tsx\"\n\t],\n\t\"./spl-transfer/info\": [\n\t\t63456,\n\t\t\"src_templates_view_spl-transfer_info_tsx\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 32108;\nmodule.exports = webpackAsyncContext;","var map = {\n\t\"./blank/proposal\": [\n\t\t37576,\n\t\t\"src_templates_view_blank_proposal_tsx\"\n\t],\n\t\"./embedded-view/proposal\": [\n\t\t55396,\n\t\t\"src_templates_view_embedded-view_proposal_tsx\"\n\t],\n\t\"./sen-farming-stake/proposal\": [\n\t\t947,\n\t\t\"src_templates_view_sen-farming-stake_proposal_tsx\"\n\t],\n\t\"./spl-approve/proposal\": [\n\t\t40302,\n\t\t\"src_templates_view_spl-approve_proposal_tsx\"\n\t],\n\t\"./spl-transfer/proposal\": [\n\t\t17255,\n\t\t\"src_templates_view_spl-transfer_proposal_tsx\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(() => {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(() => {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = () => (Object.keys(map));\nwebpackAsyncContext.id = 22667;\nmodule.exports = webpackAsyncContext;"],"names":["_path","_path2","_path3","_path4","_path5","_path6","_path7","_path8","_path9","_path10","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","SvgLogo","_ref","svgRef","title","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","ForwardRef","defineProperty","exports","value","enumerable","get","_logo","default","_README","_panel","_interopRequireDefault","require","_panel2","_panel3","obj","__esModule","panels","children","loading","useSelector","state","loadingElement","useMemo","values","find","e","message","className","style","display","Row","gutter","Col","span","justify","Space","direction","align","size","Spin","Typography","level","Fragment","NAME","addLoading","createAsyncThunk","async","clearLoading","createSlice","name","initialState","reducers","extraReducers","builder","addCase","fulfilled","payload","EVENTS","watcherState","reloadData","event","data","callbacks","callback","addEventListener","events","interval","undefined","push","watchData","useCallback","setInterval","clearInterval","window","interDao","addListener","useEffect","removeListener","er","console","warn","walletAddress","useWalletAddress","dispatch","useDispatch","reloadDaoData","dao","daoPublicKey","daoAddress","toBase58","getDao","address","force","fetchData","account","getDaos","unwrap","notify","type","description","setTimeout","reloadProposalData","proposal","proposalPublicKey","proposalAddress","getProposal","getProposals","getReceipts","authorityAddress","util","Error","provider","connection","programId","receipt","program","getProgramAccounts","filters","dataSize","memcmp","offset","bytes","RECEIPT_DISCRIMINATOR","bulk","forEach","pubkey","buf","parseReceiptData","getReceipt","getState","getReceiptData","deleteReceipt","reloadReceiptData","receiptPublicKey","receiptAddress","setBackground","useSetBackground","light","dark","Switch","Route","exact","APP_ROUTE","Redirect","from","to","AppLoader","loaded","setLoaded","useState","wallet","getAnchorWallet","InterDAO","configs","senUtility","Utility","BigInt","toJSON","toString","bigintSerializationMiddleware","serializableCheck","isSerializable","val","Array","isArray","proto","getPrototypeOf","isPlainObject","PublicKey","BN","Buffer","isBuffer","configureStore","middleware","getDefaultMiddleware","devTools","reducer","createDao","daos","tokenHolder","proposals","voteBid","template","comments","manifest","appId","Page","AntdProvider","prefixCls","Provider","store","model","STATUS_COLOR","Succeeded","Failed","Preparing","Executed","Voting","Loading","status","Tag","color","border","margin","label","rest","shared","process","url","devnet","interDaoProgramId","fee","taxman","taxmanAddress","testnet","mainnet","development","production","env","sol","net","fontSize","textAlign","icon","Card","bordered","background","borderLeft","borderRadius","bodyStyle","padding","executeProposal","total","proposalAddr","executed","xs","lg","sm","keys","format","includes","regime","special","tag","isEqual","DaoRegimes","string2Number","seed","limit","index","mod","Number","Math","random","avatarProps","colors","gradients","Avatar","join","alt","useDaoMetaData","history","useHistory","search","useLocation","daoPrams","useParams","daoData","metaData","setMetaData","query","URLSearchParams","getMetaData","ipfs","metadata","error","notifyError","getDaoName","daoName","nameQuery","replace","toLocaleLowerCase","listDaos","generatePath","Metadata","MetadataData","programs","TOKEN_METADATA_PROGRAM_ID","Connection","rpc","fetchYourOwnerNTFs","findDataByOwner","ownerAddress","getNftMetaData","findByMint","tokenMint","ownerPublickey","nfts","setNfts","nftsFiltered","setNftFiltered","accounts","useAccounts","fetchNFTs","nftsFetching","DataLoader","filterNFTs","Promise","all","map","nftTokenAccount","utils","mint","web3","nft","owner","nftAccountData","amount","eq","validMember","setValidMember","checking","setChecking","useDaoData","myAddress","useOwnerNFT","isMemberOnlyNFT","collection","isMemberTokenDAO","mints","checkDaoMember","daoType","valid","isNft","membersAmount","useDaoMembers","spinning","DAO_CARD_BG","autonomous","democratic","dictatorial","HEIGHT_RATIO","nonce","isPublic","useWidth","useValidDaoMember","parseRegime","heightRatio","isMobile","desktopWidth","onClick","daoDetails","PAGE_PADDING","Image","preview","src","tip","minHeight","wrap","image","shape","flex","Tooltip","marginTop","ellipsis","rows","marginLeft","optionals","idx","validURL","Button","open","getIcon","mintAddress","onSearch","Input","prefix","indicator","LoadingOutlined","placeholder","onChange","active","overflow","cursor","position","bottom","left","backdropFilter","textTransform","fontWeight","REGIME_LIST","onChangeRegime","Popover","overlayStyle","maxWidth","trigger","content","md","onSort","Select","setType","constructor","register","daoMap","engine","_setDaoMap","set","findByAddress","has","addr","keyword","fuzzy","findIndex","nextDaos","slice","Map","lunr","field","doc","add","daoAddresses","searchData","setSearchData","setLoading","nextData","daoProvider","DaoProvider","err","delayToSearch","clearTimeout","mechanismsType","filteredDaos","setFilteredDaos","filterDaos","mechanisms","setMechanisms","searchKey","setSearchKey","publicDaos","usePublicDaos","useSearchDao","xl","Empty","filter","daoAddr","authority","authAddress","tokenAccount","myCollections","availableDaos","useAvailableDaos","proposalMetaData","useProposalMetaData","daoMetaData","receipts","withdrawableProposals","setWithdrawableProposals","withdrawableReceipts","setWithdrawableReceipts","filterWithdrawable","filteredReceipts","filteredProposals","receiptAddr","endDate","Date","now","toNumber","useAnchorProvider","setProvider","getAnchorProvider","devNetProvider","AnchorProvider","visible","setVisible","useWithdrawableReceipt","Modal","onCancel","closeIcon","footer","BG_JOIN_DAO","block","txs","tx","closeNftVoting","signers","close","sendAll","Tabs","tabBarExtraContent","tab","DAO_PROGRESS_TITLE","step","Progress","percent","steps","showInfo","DAO_TYPE","disabled","setDaoType","cardBorder","borderColor","Radio","defaultValue","submitStepChooseType","setMetadata","formatMetaData","nextMetaData","imgBase64","Upload","accept","listType","maxCount","file","fileList","originFile","originFileObj","fileToBase64","onRemove","social","socials","onOptionalChange","splice","removeLink","defaultMetadata","validLink","link","revertPrevStep","submitStepDaoDetail","supply","logoSize","PAGE_SPACING","createDaoData","getMintDecimals","useGetMintDecimals","createFlexDAO","digest","decimals","metadataBuff","totalSupply","mul","pow","txId","initializeDao","notifySuccess","ButtonFlexDao","useCreateDao","nftInfo","setNftInfo","cache","ttl","uri","response","axios","onSelect","isSelected","imageSize","useNftMetaData","top","right","zIndex","IMAGE_DEFAULT","paddingTop","CardNftImageOnly","openNftModal","listCollectionNFTs","setListCollectionNFTs","searchText","setSearchText","getNftCollectionInfo","collectionNFTs","collectionInfo","onSelectNFT","onCloseModal","getCollectionNFTs","nftsmetadata","listNFTs","fetchListNTFs","collectionAddress","Address","copied","setCopied","text","onCopy","onMintAddressChange","suffix","marginRight","autoFocus","onNftChange","setIsPublic","setDecimals","getDecimals","fetchDecimals","setSupply","getMint","useGetMintData","fetchSupply","then","useMintDecimals","useMintSupply","suggestion","String","div","onValue","setSuggestion","getNftSuggestion","commitment","getListAccountNFTsBelongToCollection","onChangeSupply","nextIsNft","setIsNft","nextRegime","setRegime","nextMintAddress","setMintAddress","nextSupply","nextIsPublic","submitStepSetRule","rule","CreateDaoSteps","onSave","nextMetadata","setNextMetadata","DEFAULT_META_DATA","updateDaoMetadata","updateDaoRegime","setAuthority","transferAuthority","ok","supplyDecimal","defaultSupply","txIdSupply","updateDaoSupply","senhubUtil","mobileScreen","editDao","expandable","symbol","setListNFTs","getYourOwnerNFTs","master","CardNFT","nftImg","setNftImg","getNftInfoFromURI","img","DEFAULT_DATA","price","priceChange","rank","totalVolume","getBalance","inUSD","tokenProvider","cgkData","token","ticket","extensions","coingeckoId","fetchCgkData","balance","totalUSD","setTotalUSD","clcTotalUSD","usdBalance","setUSDBalance","mintBalance","setMintBalance","fetchBalance","tokenAccounts","setTokenAccounts","useTotalUSD","daoMasterAddress","fetchTokenAccounts","spltProgramId","parseAccountData","parseMintData","splt","getTokenAccountsByOwner","mintAccounts","getMultipleAccounts","acc","filteredAccounts","mintData","bgColor","fgColor","placement","overlayClassName","ShortenAddress","textDecoration","ProposalExplorer","instructions","setInstructions","getInstructions","sortedInstructions","proposalInstruction","sort","a","b","ix","publicKey","invokedProgram","JSON","stringify","isSigner","isMaster","isWritable","TemplateCreateLoader","defaultData","Component","lazy","Alert","Suspense","fallback","TemplateProposalLoader","templateName","setTemplateName","getTemplateName","templateConfig","useTemplateWithProposal","hoverable","TemplateInfoLoader","items","CardOption","setTemplate","TemplateNames","SOLANA_LOGO","SENTRE_LOGO","LOGO","CONFIGS","logo","clearTemplate","currentDate","floor","setStatus","SystemProgram","isSuccess","quorum","votingPower","numSupply","authorized","proposalAddresses","filterProposalAddresses","filteredAddress","startDate","votingForPower","consensusQuorum","consensusMechanism","votingAgainstPower","stakeSupply","lockSupply","actualSupply","scrollTo","minWidth","ConsensusMechanisms","mobileSpan","useInfix","Infix","ConsensusQuorums","DatePicker","moment","valueOf","showTime","CURRENT_TIME","ONE_DAY","DEFAULT_DURATION","DEFAULT_MECHANISM","serializedTxs","templateData","mechanism","setMechanism","setConsensusQuorum","duration","setDuration","setTitle","setDescription","initProposalIx","txBase64","proposalIx","initializeProposalInstruction","txIndex","invokedProgramAddress","pubkeys","isSigners","isWritables","isMasters","sendAndConfirm","useInitProposalIx","uploadMetaData","newProposal","listTxWithSigner","txCreateProposal","initializeProposal","feeOptions","revenue","revenuemanAddress","tax","serializedTx","txWithSigner","concat","txIds","proposalDetails","Divider","setReceipts","fetchReceipts","listReceipt","useProposalStatus","useReceipts","members","authorities","execute","wordBreak","revenueFee","useCommentProposal","buildCommentData","voteState","time","toUTCString","initTxCommentProposal","params","discriminator","deriveDiscriminator","contentId","deriveContentAddress","newComment","ownerComments","contentData","fetch","addNewComment","initializeContent","votingType","comment","onClearComment","nftVoting","setNftVoting","proposalFee","useProposalFee","onVoteNftFor","txVoteNFT","voteNftFor","txComment","onVoteNftAgainst","voteNftAgainst","VoteState","STROKE_COLOR","for","against","COMMENTS_VOTE_TYPE","VOTE_TYPE","record","theme","useTheme","action","power","proposalPubkey","daoPubkey","mintDecimal","setListReceipt","COLUMNS","dataIndex","render","lockedDate","_","onWithdraw","filterReceipts","myRecept","maxHeight","Table","columns","dataSource","pagination","rowKey","getRemainingSeconds","nowDayjs","timestampDayjs","startWithZeros","diff","getRemainingMinutes","getRemainingHours","getRemainingDays","number","minLength","numberString","repeat","defaultRemainingTime","minutes","hours","days","seconds","remainingTime","setRemainingTime","voteAmount","useProposal","voteNow","getTime","endTime","startTime","remaining","votePower","updateRemainingTime","countdown","timestampMs","finishTime","dayjs","isBefore","getRemainingTime","intervalId","setNftsFiltered","filterNFTsByCollection","setComment","setVotingType","useOwnerNftByCollection","myCollection","isLockedVote","isComplete","voting","setVoting","onVote","txVote","amountBN","utilsBN","voteType","voteFor","voteAgainst","getTxVote","setVoteBidAmount","buildResult","useAccountBalance","accountAddress","lamports","useWalletBalance","DEFAULT_EMPTY_ADDRESS","setAccountAddress","useAccountBalanceByMintAddress","mechanismQuorum","creator","authProposalAddress","useParseQuorumText","consensus","_consensusMechanism","backGroundColor","setBackGroundColor","successColor","setSuccessColor","noVote","yesVote","totalVote","percentYes","percentNo","defaultRequire","currentPower","actualYesVote","sub","supplyNeed","divRound","powerRequire","gte","percentSuccess","getColors","quorumText","strokeColor","success","HISTORY_COLUMNS_FLEXIBLE","setAmount","nextReceipts","actionType","existReceipt","_receipt","_action","_authority","_actionType","oldPower","CommentVoteTag","tagColor","tagStyle","CardComment","tagComment","borderWidth","paddingLeft","paddingRight","substring","fromNow","setValue","addComments","Skeleton","avatar","List","watcherId","Discussion","onProgramAccountChange","parseContentData","accountInfo","upsetComment","bs58","sha256","camelcase","pascalCase","removeProgramAccountChangeListener","useContentWatcher","fetchComments","getComments","pareStringToDate","parse","mergedComments","listComments","item","proposalData","checkValidProposalAddress","notFound","listDaoRoute","BG_NOT_FOUND","LIST_DAOS","CREATE_DAO","EDIT_DAO","DAO_DETAILS","CREATE_PROPOSAL","PROPOSAL_DETAILS","NOT_FOUND","wrapAppRoute","path","generatePathRaw","component","ListDaos","CreateDao","EditDao","DaoDetails","createProposal","CreateProposal","ProposalDetails","PageNotFound","SOCIALS_MEDIA","t","twitter","facebook","discord","global","medium","callBack","reader","FileReader","readAsDataURL","onload","result","test","socialName","host","URL","hostname","char","iconName","toLowerCase","log","localforage","storeName","CLUSTER","IDL","endpoint","decodeCID","v0Prefix","Uint8Array","v0Digest","CID","Web3Storage","methods","elm","File","cid","put","multihash","resolve","timeout","setItem","checked","loadIpfs","reject","instance","resolveData","cacheData","getItem","startsWith","headers","re","files","contents","readAsText","setMembers","fetchDaoMember","getTokenHolders","lte","cmp","distributorAddress","DEFAULT_DAO_DATA","ChooseType","InputDetails","SetRule","Review","prevStep","clearCreateDao","DAO_DISCRIMINATOR","getDaoData","upsetDao","getProposalData","upsetProposal","deleteProposal","confirmTemplate","selectTemplate","amountHolder","fecthTokenHoldersFromSmartContract","requestUrl","responve","json","fetchTokenHoldersFromSolScan","timeoutId","forwardRef","max","setError","setCursor","innerRef","useRef","onAmount","onError","parseFloat","current","setSelectionRange","selectionStart","webpackAsyncContext","req","__webpack_require__","o","code","ids","module"],"sourceRoot":""}