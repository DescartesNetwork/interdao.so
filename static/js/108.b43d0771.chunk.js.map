{"version":3,"file":"static/js/108.b43d0771.chunk.js","mappings":"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","sources":["shared/antd/ionicon/assets/icon-telegram.svg","shared/antd/ionicon/customs.tsx","shared/antd/ionicon/index.tsx","app/view/dao/hero/banner.tsx","app/view/dao/hero/infoCard.tsx","app/view/dao/hero/index.tsx","app/components/statisticCard.tsx","app/components/regimeTag.tsx","shared/antd/mint/mintAvatar.tsx","shared/antd/mint/mintName.tsx","shared/antd/mint/mintSymbol.tsx","shared/antd/mint/mintSelection/mintTag.tsx","shared/antd/mint/mintSelection/mintCard.tsx","shared/antd/mint/mintSelection/useAllMintAddresses.ts","shared/antd/mint/mintSelection/useSearchedMintAddresses.ts","shared/antd/mint/mintSelection/index.tsx","shared/antd/mint/mintSelection/useRecommendedMintAddresses.ts","shared/antd/mint/mintSelection/useRandomMintAddress.ts","app/components/gradientAvatar/index.tsx","app/configs/manifest.config.ts","app/helpers/safeWallet.ts","app/configs/sol.config.ts","app/configs/index.ts","app/model/metadata.controller.tsx","app/hooks/useMembers.ts","app/hooks/usePDB.ts","app/helpers/index.ts","app/hooks/useMetaData.ts","app/view/dao/daoList/daoCard.tsx","app/view/dao/daoList/search/index.tsx","app/view/dao/daoInitialization/components/cardRegime.tsx","app/view/dao/daoInitialization/flexibleDAO/daoRule/regimeInput.tsx","app/view/dao/daoList/sortDao.tsx","app/view/dao/daoList/typeOfDao.tsx","app/view/dao/daoList/search/daoProvider.ts","app/hooks/useSearchDao.ts","app/view/dao/daoList/index.tsx","app/view/dao/daoList/yourDao.tsx","app/view/dao/index.tsx","app/components/proposalStatus.tsx","app/components/rowSpaceBetween.tsx","app/components/rowSpaceVertical.tsx","shared/hooks/useMintDecimals.ts","app/view/proposal/modalTemplateInfo/transferInfo.tsx","app/model/proposal.controller.tsx","app/hooks/useProposal.ts","app/view/proposal/modalTemplateInfo/component/templateInfo.tsx","app/hooks/useProposalStatus.ts","app/hooks/useProposalMetaData.ts","app/view/proposal/proposalList/proposalCard.tsx","app/model/template.controller.tsx","shared/antd/numericInput.tsx","app/view/templates/spl/transfer/index.tsx","app/static/images/templates/solana.svg","app/view/templates/spl/index.tsx","app/view/templates/index.tsx","app/view/proposal/proposalList/index.tsx","app/hooks/useBalance.ts","app/view/dao/daoDetails/daoOwnerAssets/treasury/mintBalance.tsx","app/view/dao/daoDetails/daoOwnerAssets/treasury/index.tsx","app/view/dao/daoDetails/daoOwnerAssets/index.tsx","app/view/dao/daoDetails/members.tsx","app/view/dao/daoDetails/index.tsx","app/view/proposal/index.tsx","app/view/proposal/proposalInitialization/consensusMechanismInput.tsx","app/components/consensusQuorumInput.tsx","app/view/proposal/proposalInitialization/durationInput.tsx","app/view/proposal/proposalInitialization/proposalPreview.tsx","app/view/proposal/proposalInitialization/index.tsx","app/view/dao/daoInitialization/chooseDaoType.tsx","app/view/dao/daoInitialization/flexibleDAO/reviewAndCreate.tsx","app/view/dao/daoInitialization/multisigDAO/reviewAndCreate.tsx","shared/hooks/useMintSupply.ts","app/view/dao/daoInitialization/flexibleDAO/daoRule/circulatingSupplyInput.tsx","app/view/dao/daoInitialization/flexibleDAO/daoRule/tokenAddressInput.tsx","app/model/dao.controller.tsx","app/view/dao/daoInitialization/flexibleDAO/daoRule/index.tsx","app/view/dao/daoInitialization/multisigDAO/daoRule/regime.tsx","app/view/dao/daoInitialization/multisigDAO/daoRule/memberInput.tsx","app/view/dao/daoInitialization/multisigDAO/daoRule/daoMembers.tsx","app/view/dao/daoInitialization/multisigDAO/daoRule/index.tsx","app/view/dao/daoInitialization/metaDataForm.tsx","app/view/dao/daoInitialization/initDAOContainer.tsx","app/view/dao/daoInitialization/initDAOHeader.tsx","app/view/dao/daoInitialization/actions/backAction.tsx","app/view/dao/daoInitialization/actions/continuesAction.tsx","app/view/dao/daoInitialization/actions/index.tsx","app/helpers/mutisigWallet.ts","app/view/dao/daoInitialization/index.tsx","app/hooks/useReceipts.ts","app/view/proposal/proposalDetails/cardStatus.tsx","app/view/proposal/proposalDetails/history/columnType.tsx","app/view/proposal/proposalDetails/history/columnPower.tsx","app/view/proposal/proposalDetails/withdraw.tsx","app/model/voteBid.controller.tsx","shared/hooks/useAccountBalance.ts","app/helpers/countDown.ts","app/view/proposal/proposalDetails/cardVote.tsx","app/view/proposal/modalTemplateInfo/index.tsx","app/hooks/useParseQuorumText.ts","app/view/proposal/proposalDetails/cardInfo.tsx","app/view/proposal/proposalDetails/cardProgress.tsx","app/view/proposal/proposalDetails/history/columnName.tsx","app/view/proposal/proposalDetails/history/column.tsx","app/view/proposal/proposalDetails/history/index.tsx","app/view/proposal/proposalDetails/index.tsx","app/view/dao/editDao/actionButton.tsx","app/view/dao/editDao/information.tsx","app/view/dao/editDao/rule/editMultisigDaoRule.tsx","app/view/dao/editDao/rule/editFlexibleDaoRule.tsx","app/view/dao/editDao/rule/index.tsx","app/view/dao/editDao/transferAuthority.tsx","app/view/dao/editDao/index.tsx","app/view/watcher/dao.watcher.tsx","app/view/watcher/proposal.watcher.tsx","app/model/receipt.controller.tsx","app/view/watcher/receipt.watcher.tsx","app/view/watcher/metadata.watcher.tsx","app/view/index.tsx","app/model/index.ts","app/bootstrap.app.tsx","shared/dataloader/constant.ts","shared/dataloader/request.ts","shared/dataloader/cache.ts","shared/dataloader/index.ts","shared/devTools.ts","shared/pdb/index.ts","shared/pdb/ipfs.ts","shared/runtime.ts","shared/storage.ts","shared/util.ts"],"sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgIconTelegram(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"inherit\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    width: \"50px\",\n    height: \"50px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.137,6.552c-0.75-0.636-1.928-0.727-3.146-0.238l-0.002,0C41.708,6.828,6.728,21.832,5.304,22.445 c-0.259,0.09-2.521,0.934-2.288,2.814c0.208,1.695,2.026,2.397,2.248,2.478l8.893,3.045c0.59,1.964,2.765,9.21,3.246,10.758 c0.3,0.965,0.789,2.233,1.646,2.494c0.752,0.29,1.5,0.025,1.984-0.355l5.437-5.043l8.777,6.845l0.209,0.125 c0.596,0.264,1.167,0.396,1.712,0.396c0.421,0,0.825-0.079,1.211-0.237c1.315-0.54,1.841-1.793,1.896-1.935l6.556-34.077 C47.231,7.933,46.675,7.007,46.137,6.552z M22,32l-3,8l-3-10l23-17L22,32z\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconTelegram);\nexport default __webpack_public_path__ + \"static/media/icon-telegram.2450489f40d03000fe65fc1c6f238d85.svg\";\nexport { ForwardRef as ReactComponent };","import IconTele from './assets/icon-telegram.svg'\n\nexport const CUSTOM_ICONS: Record<string, string> = {\n  'logo-telegram': IconTele,\n}\n","/**\n * IonIcon 5\n * Credit https://ionic.io/ionicons\n */\n\nimport { forwardRef } from 'react'\nimport { CUSTOM_ICONS } from './customs'\n\n/**\n * IonIcon\n * @param name The icon name. You can find it here https://ionic.io/ionicons\n * @param className To modify the span class\n */\nconst IonIcon = forwardRef<\n  HTMLElement,\n  { name: string; className?: string } & any\n>(({ name, className, ...props }, ref) => {\n  const cln = className ? 'anticon ' + className : 'anticon'\n\n  return (\n    <span className={cln} {...props}>\n      {CUSTOM_ICONS[name] ? (\n        <ion-icon ref={ref} src={CUSTOM_ICONS[name]} />\n      ) : (\n        <ion-icon ref={ref} name={name} />\n      )}\n    </span>\n  )\n})\n\nexport default IonIcon\n","import { Col, Row, Space, Typography } from 'antd'\n\nconst Banner = () => {\n  return (\n    <Row gutter={[16, 16]} justify=\"center\">\n      <Col>\n        <Space direction=\"vertical\" size={0}>\n          <Typography.Title\n            level={1}\n            style={{ fontSize: 72, textAlign: 'center' }}\n          >\n            Let's build\n          </Typography.Title>\n          <Typography.Title\n            level={1}\n            style={{ fontSize: 72, textAlign: 'center' }}\n            className=\"spec-title\"\n          >\n            Your own DAO.\n          </Typography.Title>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Typography.Paragraph\n          type=\"secondary\"\n          style={{ fontSize: 20, textAlign: 'center' }}\n        >\n          Customize the DAO to your purpose - No coding needed.\n        </Typography.Paragraph>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Banner\n","import { ReactNode } from 'react'\n\nimport { Card, Col, Row, Space, Typography } from 'antd'\n\nexport type InfoCardProps = {\n  icon?: ReactNode\n  title?: string\n  value?: string\n}\n\nconst InfoCard = ({ icon, title, value }: InfoCardProps) => {\n  return (\n    <Card\n      bordered={false}\n      style={{\n        background: 'transparent',\n        borderLeft: '1px solid',\n        borderRadius: 'unset',\n      }}\n      bodyStyle={{\n        padding: '0 24px',\n      }}\n    >\n      <Row gutter={[5, 5]}>\n        <Col span={24}>\n          <Space>\n            {icon}\n            <Typography.Text type=\"secondary\">{title}</Typography.Text>\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Typography.Title level={4}>{value}</Typography.Title>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default InfoCard\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { Col, Row } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport Banner from './banner'\nimport InfoCard from './infoCard'\n\nimport { numeric } from 'shared/util'\nimport { AppState } from 'app/model'\n\nimport './index.less'\n\nconst Hero = () => {\n  const {\n    dao: { daos },\n    proposal,\n  } = useSelector((state: AppState) => state)\n\n  const totalDao = useMemo(() => {\n    if (!daos) return 0\n    return Object.keys(daos).length\n  }, [daos])\n\n  const totalProposal = useMemo(() => {\n    if (!daos) return 0\n    let count = 0\n    for (const { nonce } of Object.values(daos)) {\n      count += nonce.toNumber()\n    }\n    return count\n  }, [daos])\n\n  const executeProposal = useMemo(() => {\n    let total = 0\n    for (const proposalAddr in proposal) {\n      const { executed } = proposal[proposalAddr]\n      if (executed) total++\n      continue\n    }\n    return total\n  }, [proposal])\n\n  return (\n    <Row className=\"interdao-banner\" justify=\"center\">\n      <Col xs={24} lg={18}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Banner />\n          </Col>\n          <Col xs={24} sm={12} lg={8}>\n            <InfoCard\n              icon={<IonIcon name=\"earth-outline\" />}\n              title=\"Total DAOs\"\n              value={numeric(totalDao).format('0,0')}\n            />\n          </Col>\n          <Col xs={24} sm={12} lg={8}>\n            <InfoCard\n              icon={<IonIcon name=\"pencil-outline\" />}\n              title=\"Total Proposals\"\n              value={numeric(totalProposal).format('0,0')}\n            />\n          </Col>\n          <Col xs={24} sm={12} lg={8}>\n            <InfoCard\n              icon={<IonIcon name=\"thumbs-up-outline\" />}\n              title=\"Total executed proposals\"\n              value={numeric(executeProposal).format('0,0')}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Hero\n","import { ReactNode } from 'react'\n\nimport { Space, Typography } from 'antd'\n\nexport type StatisticCardProps = {\n  title: string\n  value: string | number | ReactNode\n}\nconst StatisticCard = ({ title, value }: StatisticCardProps) => {\n  return (\n    <Space direction=\"vertical\">\n      <Typography.Text className=\"caption\" type=\"secondary\">\n        {title}\n      </Typography.Text>\n      {['number', 'string'].includes(typeof value) ? (\n        <Typography.Text>{value}</Typography.Text>\n      ) : (\n        value\n      )}\n    </Space>\n  )\n}\n\nexport default StatisticCard\n","import { useMemo } from 'react'\nimport { DaoRegime, DaoRegimes } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\n\nimport { Tag } from 'antd'\n\nexport type RegimeTagProps = { regime: DaoRegime; special?: boolean }\n\nconst RegimeTag = ({ regime, special }: RegimeTagProps) => {\n  const tag = useMemo(() => {\n    if (isEqual(regime, DaoRegimes.Dictatorial)) return 'Dictatorial'\n    if (isEqual(regime, DaoRegimes.Democratic)) return 'Democratic'\n    if (isEqual(regime, DaoRegimes.Autonomous)) return 'Autonomous'\n    return 'DAO Regime'\n  }, [regime])\n\n  const className = special ? 'regime-tag dao-tag' : 'dao-tag'\n\n  return (\n    <Tag className={className} style={{ margin: 0 }}>\n      {tag}\n    </Tag>\n  )\n}\n\nexport default RegimeTag\n","import { ReactNode, useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nimport { Avatar } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst DEFAULT_AVATARS: Array<string | undefined> = [undefined]\n\nexport type MintAvatarProps = {\n  mintAddress: string\n  size?: number\n  icon?: ReactNode\n  reversed?: boolean\n}\n\n/**\n * Mint/Token avatar, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param size - Avatar size. Default 24px.\n * @param icon - Fallback icon for unknown token\n * @param reversed - (Optional) The default LP token avatar is A-B. The reversed is to change it to B-A\n * @returns name\n */\nconst MintAvatar = ({\n  mintAddress,\n  size = 24,\n  icon = <IonIcon name=\"diamond-outline\" />,\n  reversed = false,\n  ...props\n}: MintAvatarProps) => {\n  const [avatars, setAvatars] = useState(DEFAULT_AVATARS)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveAvatar = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.logoURI) return token.logoURI\n      return undefined\n    },\n    [tokenProvider],\n  )\n\n  const deriveAvatars = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setAvatars(DEFAULT_AVATARS)\n    // LP mint\n    const poolData = Object.values(pools || {}).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const avatars = await Promise.all([mint_a, mint_b].map(deriveAvatar))\n      if (reversed) avatars.reverse()\n      return setAvatars(avatars)\n    }\n    // Normal mint\n    const avatar = await deriveAvatar(mintAddress)\n    return setAvatars([avatar])\n  }, [mintAddress, reversed, deriveAvatar, pools])\n\n  useEffect(() => {\n    deriveAvatars()\n  }, [deriveAvatars])\n\n  if (avatars.length === 1)\n    return (\n      <Avatar\n        src={avatars[0]}\n        size={size}\n        style={{ backgroundColor: '#2D3355', border: 'none' }}\n        {...props}\n      >\n        {icon}\n      </Avatar>\n    )\n  return (\n    <Avatar.Group style={{ display: 'block', whiteSpace: 'nowrap' }} {...props}>\n      {avatars.map((avatar, i) => (\n        <Avatar\n          key={i}\n          src={avatar}\n          size={size}\n          style={{ backgroundColor: '#2D3355', border: 'none' }}\n        >\n          {icon}\n        </Avatar>\n      ))}\n    </Avatar.Group>\n  )\n}\n\nexport default MintAvatar\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nconst DEFAULT_NAME = 'Unknown Token'\n\n/**\n * Mint/Token name, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param separator - (Optional) In case of LP tokens, the names is combined by 2 token names. The separator is to separate them.\n * @param reversed - (Optional) The default LP token names is A-B. The reversed is to change it to B-A\n * @returns name\n */\nconst MintName = ({\n  mintAddress,\n  separator = ' • ',\n  reversed = false,\n}: {\n  mintAddress: string\n  separator?: string\n  reversed?: boolean\n}) => {\n  const [name, setName] = useState(DEFAULT_NAME)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveName = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.name) return token.name\n      return DEFAULT_NAME\n    },\n    [tokenProvider],\n  )\n\n  const deriveNames = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setName(DEFAULT_NAME)\n    // LP mint\n    const poolData = Object.values(pools || {}).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const names = await Promise.all([mint_a, mint_b].map(deriveName))\n      if (reversed) names.reverse()\n      return setName(`${names.join(separator)} LP`)\n    }\n    // Normal mint\n    const name = await deriveName(mintAddress)\n    return setName(name)\n  }, [mintAddress, reversed, deriveName, pools, separator])\n\n  useEffect(() => {\n    deriveNames()\n  }, [deriveNames])\n\n  return <span>{name}</span>\n}\n\nexport default MintName\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nconst DEFAULT_SYMBOL = 'TOKN'\n\n/**\n * Mint/Token symbol, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param separator - (Optional) In case of LP tokens, the symbols is combined by 2 token symbols. The separator is to separate them.\n * @param reversed - (Optional) The default LP token symbol is A-B. The reversed is to change it to B-A\n * @returns symbol\n */\nconst MintSymbol = ({\n  mintAddress,\n  separator = ' • ',\n  reversed = false,\n}: {\n  mintAddress: string\n  separator?: string\n  reversed?: boolean\n}) => {\n  const [symbol, setSymbol] = useState(DEFAULT_SYMBOL)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveSymbol = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.symbol) return token.symbol\n      return address.substring(0, 4)\n    },\n    [tokenProvider],\n  )\n\n  const deriveSymbols = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setSymbol(DEFAULT_SYMBOL)\n    // LP mint\n    const poolData = Object.values(pools || {}).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const symbols = await Promise.all([mint_a, mint_b].map(deriveSymbol))\n      if (reversed) symbols.reverse()\n      return setSymbol(symbols.join(separator))\n    }\n    // Normal mint\n    const symbol = await deriveSymbol(mintAddress)\n    return setSymbol(symbol)\n  }, [mintAddress, reversed, deriveSymbol, pools, separator])\n\n  useEffect(() => {\n    deriveSymbols()\n  }, [deriveSymbols])\n\n  return <span>{symbol}</span>\n}\n\nexport default MintSymbol\n","import { Card, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport { MintAvatar, MintName } from 'shared/antd/mint'\n\nimport { randomColor } from 'shared/util'\n\nexport type MintTagProps = {\n  mintAddress: string\n  onClick?: (mintAddress: string) => void\n  active?: boolean\n}\n\nconst MintTag = ({\n  mintAddress,\n  onClick = () => {},\n  active = false,\n}: MintTagProps) => {\n  return (\n    <Card\n      bodyStyle={{ padding: 8, cursor: 'pointer' }}\n      style={{ backgroundColor: randomColor(mintAddress, 0.2) }}\n      bordered={Boolean(active)}\n      onClick={() => onClick(mintAddress)}\n    >\n      <Space>\n        <MintAvatar mintAddress={mintAddress} />\n        <Space>\n          <Typography.Text style={{ color: randomColor(mintAddress) }}>\n            <MintName mintAddress={mintAddress} />\n          </Typography.Text>\n          {active ? <IonIcon name=\"checkmark-outline\" /> : null}\n        </Space>\n      </Space>\n    </Card>\n  )\n}\nexport default MintTag\n","import { Card, Col, Row, Space, Typography } from 'antd'\nimport { MintAvatar, MintName, MintSymbol } from 'shared/antd/mint'\n\nexport type MintSelectionProps = {\n  mintAddress: string\n  onClick?: (mintAddress: string) => void\n}\n\nconst MintCard = ({ mintAddress, onClick = () => {} }: MintSelectionProps) => {\n  return (\n    <Card\n      bodyStyle={{ padding: 8 }}\n      style={{ boxShadow: 'unset', cursor: 'pointer' }}\n      bordered={false}\n      onClick={() => onClick(mintAddress)}\n    >\n      <Row gutter={[16, 16]} align=\"middle\">\n        <Col>\n          <MintAvatar mintAddress={mintAddress} size={36} />\n        </Col>\n        <Col>\n          <Space direction=\"vertical\" size={0}>\n            <Typography.Text>\n              <MintSymbol mintAddress={mintAddress} />\n            </Typography.Text>\n            <Typography.Text type=\"secondary\" className=\"caption\">\n              <MintName mintAddress={mintAddress} />\n            </Typography.Text>\n          </Space>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default MintCard\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\n\nexport const useAllMintAddresses = () => {\n  const [allMintAddresses, setAllMintAddresses] = useState<string[]>([])\n  const { tokenProvider } = useMint()\n\n  const getRecommendedMintAddresses = useCallback(async () => {\n    const allMintAddresses = (await tokenProvider.all()).map(\n      ({ address }) => address,\n    )\n    const addresses = allMintAddresses.filter((mintAddress) =>\n      allMintAddresses.includes(mintAddress),\n    )\n    return setAllMintAddresses(addresses)\n  }, [tokenProvider])\n\n  useEffect(() => {\n    getRecommendedMintAddresses()\n  }, [getRecommendedMintAddresses])\n\n  return allMintAddresses\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\n\nlet searching: NodeJS.Timeout\n\nexport const useSearchedMintAddresses = (keyword: string = '') => {\n  const [loading, setLoading] = useState(false)\n  const [searchedMintAddresses, setSearchedMintAddresses] = useState<\n    string[] | undefined\n  >()\n  const { tokenProvider } = useMint()\n\n  const getRecommendedMintAddresses = useCallback(async () => {\n    if (!keyword) {\n      setLoading(false)\n      return setSearchedMintAddresses(undefined)\n    }\n    if (searching) clearTimeout(searching)\n    setLoading(true)\n    searching = setTimeout(async () => {\n      const addresses = (await tokenProvider.find(keyword)).map(\n        ({ address }) => address,\n      )\n      setLoading(false)\n      return setSearchedMintAddresses(addresses)\n    }, 500)\n  }, [keyword, tokenProvider])\n\n  useEffect(() => {\n    getRecommendedMintAddresses()\n  }, [getRecommendedMintAddresses])\n\n  return { searchedMintAddresses, loading }\n}\n","import {\n  CSSProperties,\n  Fragment,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react'\nimport LazyLoad, { forceCheck } from '@senswap/react-lazyload'\nimport { account } from '@senswap/sen-js'\n\nimport {\n  Button,\n  Col,\n  Divider,\n  Input,\n  Modal,\n  Row,\n  Space,\n  Typography,\n} from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport MintTag from './mintTag'\nimport MintCard from './mintCard'\n\nimport { useRecommendedMintAddresses } from './useRecommendedMintAddresses'\nimport { useSearchedMintAddresses } from './useSearchedMintAddresses'\nimport { useRandomMintAddresses } from './useRandomMintAddress'\n\nconst LIMIT = 50\n\nexport type MintSelectionProps = {\n  value: string\n  onChange: (value: string) => void\n  style?: CSSProperties\n}\n\nconst MintSelection = ({ value, onChange, style = {} }: MintSelectionProps) => {\n  const [visible, setVisible] = useState(false)\n  const [keyword, setKeyword] = useState('')\n  const recommendedMintAddresses = useRecommendedMintAddresses()\n  const { searchedMintAddresses, loading } = useSearchedMintAddresses(keyword)\n  const { randomHundredAddresses, refresh } = useRandomMintAddresses(LIMIT)\n\n  const onSelect = useCallback(\n    (mintAddress: string) => {\n      setVisible(false)\n      onChange(mintAddress)\n    },\n    [onChange],\n  )\n  const onRefresh = useCallback(() => {\n    const list = document.getElementById('sentre-token-selection-list')\n    if (list) list.scrollTop = 0\n    return refresh()\n  }, [refresh])\n\n  useEffect(() => {\n    forceCheck()\n  }, [searchedMintAddresses])\n\n  useEffect(() => {\n    if (!visible) setKeyword('')\n  }, [visible])\n\n  return (\n    <Fragment>\n      <Button\n        type=\"text\"\n        onClick={() => setVisible(true)}\n        style={{ padding: 4, ...style }}\n      >\n        <Space>\n          <MintAvatar mintAddress={value} />\n          <MintSymbol mintAddress={value} />\n          <IonIcon name=\"chevron-down-outline\" />\n        </Space>\n      </Button>\n      <Modal\n        visible={visible}\n        onCancel={() => setVisible(false)}\n        footer={null}\n        closeIcon={<IonIcon name=\"close-outline\" />}\n        centered\n        destroyOnClose\n      >\n        <Row gutter={[32, 32]}>\n          <Col span={24}>\n            <Typography.Title level={5} type=\"secondary\">\n              Token Selection\n            </Typography.Title>\n          </Col>\n          <Col span={24}>\n            <Input\n              placeholder=\"Search token symbol, name, address, ...\"\n              suffix={\n                <Button\n                  type=\"text\"\n                  style={{ marginRight: -7 }}\n                  icon={\n                    <IonIcon\n                      name={keyword ? 'close-outline' : 'search-outline'}\n                    />\n                  }\n                  onClick={keyword ? () => setKeyword('') : () => {}}\n                  loading={loading}\n                />\n              }\n              value={keyword}\n              onChange={(e) => setKeyword(e.target.value || '')}\n            />\n          </Col>\n          <Col span={24}>\n            <Row gutter={[8, 8]}>\n              {account.isAddress(value) ? (\n                <Col>\n                  <MintTag mintAddress={value} active />\n                </Col>\n              ) : null}\n              {recommendedMintAddresses\n                .filter((mintAddress) => mintAddress !== value)\n                .map((mintAddress) => (\n                  <Col key={mintAddress}>\n                    <MintTag mintAddress={mintAddress} onClick={onSelect} />\n                  </Col>\n                ))}\n            </Row>\n          </Col>\n          <Col span={24}>\n            <Row\n              gutter={[8, 8]}\n              style={{ maxHeight: 360 }}\n              className=\"scrollbar\"\n              id=\"sentre-token-selection-list\"\n            >\n              {(searchedMintAddresses || randomHundredAddresses).map(\n                (mintAddress) => (\n                  <Col span={24} key={mintAddress}>\n                    <LazyLoad height={60} overflow>\n                      <MintCard mintAddress={mintAddress} onClick={onSelect} />\n                    </LazyLoad>\n                  </Col>\n                ),\n              )}\n              {!searchedMintAddresses ? (\n                <Fragment>\n                  <Col span={24}>\n                    <Divider style={{ marginBottom: 0 }} />\n                  </Col>\n                  <Col span={24}>\n                    <Typography.Text type=\"secondary\" className=\"caption\">\n                      <IonIcon\n                        name=\"chatbox-ellipses-outline\"\n                        style={{ marginRight: 6 }}\n                      />\n                      This is the list of {LIMIT} random tokens while the full\n                      list is pretty longer. You can find your tokens by the\n                      search bar. Or{' '}\n                      <Typography.Link onClick={onRefresh}>\n                        Click here\n                      </Typography.Link>{' '}\n                      to refresh the current list.\n                    </Typography.Text>\n                  </Col>\n                </Fragment>\n              ) : null}\n            </Row>\n          </Col>\n        </Row>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default MintSelection\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useAccount } from '@senhub/providers'\n\nimport { useAllMintAddresses } from './useAllMintAddresses'\n\nexport const useRecommendedMintAddresses = () => {\n  const [recommendedMintAddresses, setRecommendedMintAddresses] = useState<\n    string[]\n  >([])\n  const { accounts } = useAccount()\n  const allMintAddresses = useAllMintAddresses()\n\n  const myMintAddresses = useMemo(() => {\n    return Object.values(accounts)\n      .map(({ mint }) => mint)\n      .filter((mintAddress, index, self) => self.indexOf(mintAddress) === index)\n  }, [accounts])\n\n  const getRecommendedMintAddresses = useCallback(async () => {\n    const addresses = myMintAddresses.filter((mintAddress) =>\n      allMintAddresses.includes(mintAddress),\n    )\n    return setRecommendedMintAddresses(addresses)\n  }, [myMintAddresses, allMintAddresses])\n\n  useEffect(() => {\n    getRecommendedMintAddresses()\n  }, [getRecommendedMintAddresses])\n\n  return recommendedMintAddresses\n}\n","import { useCallback, useMemo, useState } from 'react'\n\nimport { useAllMintAddresses } from './useAllMintAddresses'\nimport { randElements } from 'shared/util'\n\nexport const useRandomMintAddresses = (limit: number = 0) => {\n  const [shuffle, setShuffle] = useState(0)\n  const allMintAddresses = useAllMintAddresses()\n\n  // A random limited list of tokens is to secure component performance\n  const randomHundredAddresses = useMemo(() => {\n    return randElements(allMintAddresses, limit + (shuffle - shuffle))\n  }, [allMintAddresses, shuffle, limit])\n\n  const refresh = useCallback(() => {\n    return setShuffle(shuffle + 1)\n  }, [shuffle])\n\n  return { randomHundredAddresses, refresh }\n}\n","import BN from 'bn.js'\n\nimport { Avatar, AvatarProps } from 'antd'\n\nimport gradients from './gradients.json'\n\nconst string2Number = (seed: string, limit: number) => {\n  const buf = Buffer.from(seed)\n  const index = new BN(buf).mod(new BN(limit))\n  return Number(index)\n}\n\nexport type GradientAvatarProps = { seed?: string; avatarProps?: AvatarProps }\n\nconst GradientAvatar = ({\n  seed = Math.random().toString(),\n  avatarProps = {},\n}: GradientAvatarProps) => {\n  const direction = string2Number(seed, 360)\n  const { name, colors } = gradients[string2Number(seed, gradients.length)]\n  return (\n    <Avatar\n      style={{\n        background: `linear-gradient(${direction}deg, ${colors.join(', ')})`,\n      }}\n      alt={name}\n      {...avatarProps}\n    />\n  )\n}\n\nexport default GradientAvatar\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Transaction, PublicKey } from '@solana/web3.js'\nimport { AnchorWallet } from '@interdao/core'\nimport { WalletInterface } from '@senswap/sen-js'\n\nclass SafeWallet implements AnchorWallet {\n  private _wallet: WalletInterface = window.sentre.wallet\n  private _publicKey: PublicKey = new PublicKey(\n    'GuestAccount11111111111111111111111111111111',\n  )\n\n  constructor() {\n    this._init()\n  }\n\n  private _init = async () => {\n    const address = await this._wallet.getAddress()\n    this._publicKey = new PublicKey(address)\n  }\n\n  signTransaction = async (tx: Transaction): Promise<Transaction> => {\n    return this._wallet.signTransaction(tx)\n  }\n\n  signAllTransactions = async (txs: Transaction[]): Promise<Transaction[]> => {\n    let signedTxs: Transaction[] = []\n    for (const tx of txs) {\n      const signedTx = await this.signTransaction(tx)\n      signedTxs.push(signedTx)\n    }\n    return signedTxs\n  }\n\n  get publicKey() {\n    console.warn(\n      'This is an async getter for interface consistency. Please do not fully rely on this function.',\n    )\n    return this._publicKey\n  }\n}\n\nexport default SafeWallet\n","import InterDAO from '@interdao/core'\n\nimport SafeWallet from 'app/helpers/safeWallet'\nimport { Net } from 'shared/runtime'\n\n/**\n * Contructor\n */\ntype Conf = {\n  interDao: InterDAO\n  fee: string\n  taxman: string\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    interDao: new InterDAO(new SafeWallet(), 'https://api.devnet.solana.com'),\n    fee: '50000', // 0.000005 SOL\n    taxman: '8W6QginLcAydYyMYjxuyKQN56NzeakDE3aRFrAmocS6D',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    interDao: new InterDAO(new SafeWallet(), 'https://api.testnet.solana.com'),\n    fee: '50000', // 0.000005 SOL\n    taxman: '8W6QginLcAydYyMYjxuyKQN56NzeakDE3aRFrAmocS6D',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    interDao: new InterDAO(new SafeWallet(), 'https://ssc-dao.genesysgo.net/'),\n    fee: '50000', // 0.000005 SOL\n    taxman: '8W6QginLcAydYyMYjxuyKQN56NzeakDE3aRFrAmocS6D',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from 'shared/runtime'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\nimport { utils } from '@project-serum/anchor'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type DAOMember = {\n  name: string\n  walletAddress: string\n}\nexport type MetaData = {\n  daoName: string\n  description: string\n  image: string | ArrayBuffer | null\n  optionals: string[]\n  daoType: 'flexible-dao' | 'multisig-dao'\n  members: DAOMember[]\n}\n\nconst DEFAULT_META_DATA: MetaData = {\n  daoName: '',\n  description: '',\n  image: '',\n  optionals: [],\n  daoType: 'flexible-dao',\n  members: [],\n}\n\ntype MetaDataState = {\n  tokenHolders: Record<string, number>\n  initMetadata: MetaData\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'metadata'\nconst initialState: MetaDataState = {\n  tokenHolders: {},\n  initMetadata: DEFAULT_META_DATA,\n}\n\n/**\n * Actions\n */\n\nexport const getTokenHolders = createAsyncThunk<\n  Partial<MetaDataState>,\n  { daoAddress: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getTokenHolders`, async ({ daoAddress, force }, { getState }) => {\n  if (!account.isAddress(daoAddress)) throw new Error('Invalid address')\n  const {\n    dao: {\n      daos: {\n        [daoAddress]: { mint },\n      },\n    },\n    metadata: {\n      tokenHolders: { [daoAddress]: amountHolder },\n    },\n  } = getState()\n\n  const mintAddress = mint.toBase58()\n  if (!account.isAddress(mintAddress)) return {}\n  if (amountHolder && !force) return { [daoAddress]: amountHolder }\n  const {\n    provider: { connection },\n  } = interDao.program\n  const accounts = await connection.getProgramAccounts(\n    utils.token.TOKEN_PROGRAM_ID,\n    {\n      filters: [\n        { dataSize: 165 },\n        { memcmp: { bytes: mintAddress, offset: 0 } },\n      ],\n    },\n  )\n  return { [daoAddress]: accounts.length }\n})\n\nexport const setInitMetadata = createAsyncThunk(\n  `${NAME}/setInitMetadata`,\n  async (metaData?: Partial<MetaData>) => {\n    if (!metaData) return DEFAULT_META_DATA\n    return metaData\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getTokenHolders.fulfilled,\n        (state, { payload }) => void Object.assign(state.tokenHolders, payload),\n      )\n      .addCase(\n        setInitMetadata.fulfilled,\n        (state, { payload }) => void Object.assign(state.initMetadata, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { getTokenHolders } from 'app/model/metadata.controller'\n\nconst useMembers = (daoAddress: string) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const {\n    metadata: { tokenHolders },\n    dao: { daos },\n  } = useSelector((state: AppState) => state)\n\n  const amountHolder = useMemo(\n    () => tokenHolders[daoAddress],\n    [daoAddress, tokenHolders],\n  )\n  const isExistDao = useMemo(() => {\n    return !!Object.keys(daos).length\n  }, [daos])\n\n  useEffect(() => {\n    if (isExistDao && account.isAddress(daoAddress))\n      dispatch(getTokenHolders({ daoAddress }))\n  }, [dispatch, daoAddress, isExistDao])\n\n  return amountHolder || 0\n}\n\nexport default useMembers\n","import { useMemo } from 'react'\nimport { useWallet } from '@senhub/providers'\n\nimport configs from 'app/configs'\nimport PDB from 'shared/pdb'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst usePDB = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const pdb = useMemo(() => {\n    return new PDB(walletAddress).createInstance(appId)\n  }, [walletAddress])\n\n  return pdb\n}\n\nexport default usePDB\n","import { CID } from 'ipfs-core'\n\nconst SOCIALS_MEDIA: Record<string, string> = {\n  t: 'logo-telegram',\n  twitter: 'logo-twitter',\n  facebook: 'logo-facebook',\n  discord: 'logo-discord',\n  global: 'globe',\n  medium: 'logo-medium',\n}\nexport const fileToBase64 = (\n  file: File,\n  callBack: (result: string | ArrayBuffer | null) => void,\n) => {\n  const reader = new FileReader()\n  reader.readAsDataURL(file)\n  reader.onload = async () => {\n    if (reader.result) callBack(reader.result)\n  }\n}\n\nexport const getCID = (digest: number[]) => {\n  const v0Prefix = new Uint8Array([18, 32])\n  const v0Digest = new Uint8Array(v0Prefix.length + digest?.length)\n  v0Digest.set(v0Prefix) // multicodec + length\n  v0Digest.set(digest, v0Prefix.length)\n  const cid = CID.decode(v0Digest)\n  return cid.toString()\n}\n\nexport const validURL = (url: string) => {\n  var pattern = new RegExp(\n    '^(https?:\\\\/\\\\/)?' + // protocol\n      '((([a-z\\\\d]([a-z\\\\d-]*[a-z\\\\d])*)\\\\.)+[a-z]{2,}|' + // domain name\n      '((\\\\d{1,3}\\\\.){3}\\\\d{1,3}))' + // OR ip (v4) address\n      '(\\\\:\\\\d+)?(\\\\/[-a-z\\\\d%_.~+]*)*' + // port and path\n      '(\\\\?[;&a-z\\\\d%_.~+=-]*)?' + // query string\n      '(\\\\#[-a-z\\\\d_]*)?$',\n    'i',\n  ) // fragment locator\n  return !!pattern.test(url)\n}\n\nexport const getIcon = (url: string) => {\n  if (!validURL) return ''\n  let socialName = ''\n  const domain = new URL(url)\n  const host = domain.hostname.replace('www.', '')\n  for (const char of host) {\n    if (char === '.') break\n    socialName += char\n  }\n  const iconName = SOCIALS_MEDIA[socialName]\n  if (!iconName) return SOCIALS_MEDIA['global']\n  return iconName\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { MetaData } from 'app/model/metadata.controller'\nimport usePDB from './usePDB'\nimport IPFS from 'shared/pdb/ipfs'\nimport { AppState } from 'app/model'\nimport { getCID } from 'app/helpers'\n\nconst ipfs = new IPFS()\n\nconst useMetaData = (daoAddress: string) => {\n  const [metaData, setMetaData] = useState<MetaData>()\n  const daos = useSelector((state: AppState) => state.dao.daos)\n  const pdb = usePDB()\n\n  const getMetaData = useCallback(async () => {\n    if (!account.isAddress(daoAddress)) return setMetaData(undefined)\n    const data = (await pdb.getItem(daoAddress)) as MetaData\n    if (data) return setMetaData(data)\n\n    let metadataId = daos[daoAddress].metadata\n    const cid = getCID(metadataId)\n    const metadata: MetaData = await ipfs.get(cid)\n    await pdb.setItem(daoAddress, metadata)\n    return setMetaData(data)\n  }, [daoAddress, daos, pdb])\n\n  useEffect(() => {\n    getMetaData()\n  }, [getMetaData])\n\n  return metaData\n}\n\nexport default useMetaData\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { DaoData } from '@interdao/core'\nimport { useUI } from '@senhub/providers'\n\nimport {\n  Avatar,\n  Button,\n  Card,\n  Col,\n  Image,\n  Row,\n  Space,\n  Tooltip,\n  Typography,\n} from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport StatisticCard from 'app/components/statisticCard'\nimport RegimeTag from 'app/components/regimeTag'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport GradientAvatar from 'app/components/gradientAvatar'\n\nimport { AppState } from 'app/model'\nimport { numeric, shortenAddress } from 'shared/util'\nimport useMembers from 'app/hooks/useMembers'\nimport useMetaData from 'app/hooks/useMetaData'\nimport { getIcon, validURL } from 'app/helpers'\n\nimport autonomous from 'app/static/images/system/bg-autonomous.png'\nimport democratic from 'app/static/images/system/bg-democratic.png'\nimport dictatorial from 'app/static/images/system/bg-dictatorial.png'\n\nexport type DaoCardProps = { daoAddress: string; special?: boolean }\nexport type DaoCardBackground = 'autonomous' | 'democratic' | 'dictatorial'\nconst DAO_CARD_BG = {\n  autonomous,\n  democratic,\n  dictatorial,\n}\nconst PAGE_PADDING = 24\nconst HEIGHT_RATIO = 1.777777\nconst MAX_WIDTH_RATE = 24 / 18 // full screen is 24 col, max width is 18 col\n\nconst DaoCard = ({ daoAddress, special }: DaoCardProps) => {\n  const daos = useSelector((state: AppState) => state.dao.daos)\n  const history = useHistory()\n  const {\n    ui: { width },\n  } = useUI()\n\n  const heightRatio = useMemo(() => {\n    if (width < 768) return HEIGHT_RATIO\n    if (width < 1200) return HEIGHT_RATIO * 2\n    return HEIGHT_RATIO * 3\n  }, [width])\n\n  const { regime, nonce, mint } = daos?.[daoAddress] || ({} as DaoData)\n  const members = useMembers(daoAddress)\n  const metaData = useMetaData(daoAddress)\n  const parseRegime = Object.keys(regime)?.[0]\n  const isMobile = width < 768\n  const desktopWidth = width > 992 ? width / MAX_WIDTH_RATE : width\n\n  return (\n    <Row\n      gutter={[0, 0]}\n      className=\"dao-card-wrapper\"\n      onClick={() => history.push(`dao/${daoAddress}`)}\n    >\n      <Col\n        span={24}\n        className=\"dao-card-img\"\n        style={{\n          height: !isMobile\n            ? (desktopWidth - PAGE_PADDING * 2) / heightRatio\n            : (width - PAGE_PADDING) / heightRatio,\n        }}\n      >\n        <Image\n          preview={false}\n          src={DAO_CARD_BG[parseRegime as DaoCardBackground]}\n        />\n      </Col>\n      <Col className=\"regime-tag-wrapper\">\n        <RegimeTag regime={regime} special />\n      </Col>\n      <Col span={24}>\n        <Card bordered={false}>\n          <Row gutter={[20, 20]}>\n            <Col span={24} style={{ minHeight: 88 }}>\n              <Row gutter={[16, 16]} wrap={false} align=\"top\">\n                <Col>\n                  {!metaData?.image ? (\n                    <GradientAvatar\n                      seed={daoAddress}\n                      avatarProps={{ shape: 'square', size: 68 }}\n                    />\n                  ) : (\n                    <Avatar shape=\"square\" size={68} src={metaData?.image} />\n                  )}\n                </Col>\n                <Col flex=\"auto\">\n                  <Space direction=\"vertical\" size={0}>\n                    <Tooltip\n                      title={metaData?.daoName ? metaData.daoName : daoAddress}\n                    >\n                      <Typography.Title\n                        style={{ marginTop: -6 }}\n                        level={4}\n                        ellipsis={{ rows: 2 }}\n                      >\n                        {metaData?.daoName\n                          ? metaData.daoName\n                          : shortenAddress(daoAddress)}\n                      </Typography.Title>\n                    </Tooltip>\n                    <Space size={2} style={{ marginLeft: -3 }}>\n                      {metaData?.optionals?.map(\n                        (url, idx) =>\n                          validURL(url) && (\n                            <Button\n                              size=\"small\"\n                              type=\"text\"\n                              onClick={() => window.open(url, '_blank')}\n                              icon={<IonIcon name={getIcon(url)} />}\n                              key={idx}\n                            />\n                          ),\n                      )}\n                    </Space>\n                  </Space>\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24}>\n              <Row gutter={[16, 16]}>\n                <Col span={8}>\n                  <StatisticCard\n                    title=\"Token\"\n                    value={\n                      <Space>\n                        <MintAvatar mintAddress={mint.toBase58()} />\n                        <MintSymbol mintAddress={mint.toBase58()} />\n                      </Space>\n                    }\n                  />\n                </Col>\n                <Col span={8}>\n                  <StatisticCard\n                    title=\"Proposals\"\n                    value={numeric(Number(nonce)).format('0,0')}\n                  />\n                </Col>\n                <Col span={8}>\n                  <StatisticCard\n                    title=\"Members\"\n                    value={numeric(members).format('0,0')}\n                  />\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24} style={{ minHeight: 44 }}>\n              <Typography.Paragraph\n                style={{ margin: 0 }}\n                type=\"secondary\"\n                ellipsis={{ rows: 2 }}\n              >\n                {metaData?.description}\n              </Typography.Paragraph>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoCard\n","import { Button, Input, Spin } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport { LoadingOutlined } from '@ant-design/icons'\n\ntype SearchDaoProps = {\n  onSearch: (keyword: string) => void\n  loading?: boolean\n}\n\nconst SearchDao = ({ onSearch, loading = false }: SearchDaoProps) => {\n  return (\n    <Input\n      prefix={\n        <Button\n          type=\"text\"\n          size=\"small\"\n          icon={\n            loading ? (\n              <Spin indicator={<LoadingOutlined style={{ fontSize: 14 }} />} />\n            ) : (\n              <IonIcon name=\"search-outline\" />\n            )\n          }\n        />\n      }\n      placeholder=\"Search by name, address\"\n      style={{ width: '100%' }}\n      onChange={(e) => onSearch(e.target.value)}\n    />\n  )\n}\nexport default SearchDao\n","import isEqual from 'react-fast-compare'\nimport { DaoRegime } from '@interdao/core'\n\nimport { Card, Image, Typography } from 'antd'\n\nimport autonomous from 'app/static/images/system/bg-autonomous.png'\nimport democratic from 'app/static/images/system/bg-democratic.png'\nimport dictatorial from 'app/static/images/system/bg-dictatorial.png'\nimport { DaoCardBackground } from '../../daoList/daoCard'\n\nconst DAO_CARD_BG = {\n  autonomous,\n  democratic,\n  dictatorial,\n}\n\nconst CardRegime = ({\n  value,\n  regime,\n  onChange = () => {},\n}: {\n  value?: DaoRegime\n  regime: DaoRegime\n  onChange?: (regime: DaoRegime) => void\n}) => {\n  return (\n    <Card\n      bordered={false}\n      style={{ overflow: 'hidden', cursor: 'pointer' }}\n      bodyStyle={{ padding: 0 }}\n      onClick={() => onChange(regime)}\n      className={`card-regime ${isEqual(value, regime) ? 'active' : ''}`}\n    >\n      <Image\n        src={DAO_CARD_BG[Object.keys(regime)[0] as DaoCardBackground]}\n        preview={false}\n      />\n      <Typography.Text\n        style={{\n          position: 'absolute',\n          bottom: 0,\n          left: 0,\n          textAlign: 'center',\n          width: '100%',\n          padding: 4,\n          backdropFilter: 'blur(4px)',\n          color: '#fff',\n          textTransform: 'capitalize',\n          fontWeight: 400,\n        }}\n      >\n        {Object.keys(regime)[0]}\n      </Typography.Text>\n    </Card>\n  )\n}\n\nexport default CardRegime\n","import { DaoRegime, DaoRegimes } from '@interdao/core'\n\nimport { Button, Row, Col, Space, Typography, Popover } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport CardRegime from '../../components/cardRegime'\n\nexport type RegimeInputProps = {\n  value: DaoRegime\n  onChange: (value: DaoRegime) => void\n}\n\nexport const REGIME_LIST = [\n  DaoRegimes.Dictatorial,\n  DaoRegimes.Democratic,\n  DaoRegimes.Autonomous,\n]\n\nconst RegimeInput = ({\n  value = DaoRegimes.Dictatorial,\n  onChange = () => {},\n}: RegimeInputProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space>\n          <Typography.Text>DAO Regime</Typography.Text>\n          <Popover\n            overlayStyle={{ maxWidth: 300 }}\n            trigger=\"click\"\n            content={\n              <Row gutter={[16, 16]}>\n                <Col span={24}>\n                  <Typography.Title level={5}>\n                    What is DAO Regime?\n                  </Typography.Title>\n                </Col>\n                <Col span={24}>\n                  <Space direction=\"vertical\">\n                    <Typography.Text>\n                      <strong>Dictatorial.</strong> Only DAO owner can create\n                      and execute proposals.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Democratic.</strong> Community can create\n                      proposals, DAO owner execute proposals.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Autonomous.</strong> Community can create and\n                      execute proposals.\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            }\n          >\n            <Button\n              type=\"text\"\n              size=\"small\"\n              icon={<IonIcon name=\"information-circle-outline\" />}\n            />\n          </Popover>\n        </Space>\n      </Col>\n      {REGIME_LIST.map((regime, idx) => (\n        <Col xs={24} md={8} key={idx}>\n          <CardRegime value={value} regime={regime} onChange={onChange} />\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default RegimeInput\n","import { Select } from 'antd'\nimport { REGIME_LIST } from '../daoInitialization/flexibleDAO/daoRule/regimeInput'\n\ntype SortDaoProps = { value: string; onSort: (value: string) => void }\n\nconst SortDao = ({ onSort, value }: SortDaoProps) => {\n  return (\n    <Select\n      value={value}\n      style={{ textTransform: 'capitalize', width: '100%' }}\n      onChange={onSort}\n    >\n      <Select.Option value=\"all-regime\">All mechanisms</Select.Option>\n      {REGIME_LIST.map((regime, idx) => {\n        const value = Object.keys(regime)[0]\n        return (\n          <Select.Option\n            key={idx}\n            value={value}\n            style={{ textTransform: 'capitalize' }}\n          >\n            {value}\n          </Select.Option>\n        )\n      })}\n    </Select>\n  )\n}\n\nexport default SortDao\n","import { Select } from 'antd'\n\nconst TypeOfDAO = () => {\n  return (\n    <Select\n      value=\"all-type\"\n      style={{ textTransform: 'capitalize', width: '100%' }}\n    >\n      <Select.Option value=\"all-type\">All type of DAO</Select.Option>\n      <Select.Option\n        value=\"flexible-dao\"\n        style={{ textTransform: 'capitalize' }}\n      >\n        Flexible DAO\n      </Select.Option>\n      <Select.Option\n        value=\"multisig-dao\"\n        style={{ textTransform: 'capitalize' }}\n      >\n        Multisig DAO\n      </Select.Option>\n    </Select>\n  )\n}\n\nexport default TypeOfDAO\n","import { MetaData } from 'app/model/metadata.controller'\nimport lunr, { Index } from 'lunr'\n\nexport type SearchData = { daoAddress: string } & MetaData\nexport type RegisterDaoData = Record<string, SearchData>\nclass DaoProvider {\n  private daoMap: Map<string, SearchData>\n  private engine: Index | undefined\n  register: RegisterDaoData\n\n  constructor(register: RegisterDaoData) {\n    this.register = register\n    this.daoMap = new Map<string, SearchData>()\n    this.engine = lunr(function () {\n      this.ref('daoAddress')\n      this.field('daoAddress')\n      this.field('daoName')\n      this.field('description')\n      Object.keys(register).forEach((address: string) => {\n        const doc = register[address]\n        if (doc) this.add(doc)\n      })\n    })\n    // build dao map\n    this._setDaoMap()\n  }\n\n  private _setDaoMap = async (): Promise<[Map<string, SearchData>]> => {\n    Object.keys(this.register).forEach((daoAddress) =>\n      this.daoMap.set(daoAddress, this.register[daoAddress]),\n    )\n    return [this.daoMap]\n  }\n\n  all = async (): Promise<SearchData[]> => {\n    const [daoMap] = await this._setDaoMap()\n    return Array.from(daoMap.values())\n  }\n\n  findByAddress = async (addr: string): Promise<string[] | undefined> => {\n    const [daoMap] = await this._setDaoMap()\n    if (daoMap.has(addr)) return [addr]\n    return\n  }\n\n  find = async (keyword: string, limit = 10): Promise<string[] | undefined> => {\n    const [daoMap] = await this._setDaoMap()\n    const engine = this.engine\n    if (!engine) return\n    let daos: SearchData[] = []\n    if (!keyword) return\n\n    const fuzzy = keyword + '~1'\n    engine.search(fuzzy).forEach(({ ref }) => {\n      if (daos.findIndex(({ daoAddress }) => daoAddress === ref) < 0) {\n        const dao = daoMap.get(ref)\n        if (dao) daos.push(dao)\n      }\n    })\n    const nextDaos: string[] = []\n    daos.slice(0, limit).forEach(({ daoAddress }) => {\n      if (daoAddress) nextDaos.push(daoAddress)\n    })\n    return nextDaos\n  }\n}\n\nexport default DaoProvider\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\n\nimport DaoProvider, {\n  RegisterDaoData,\n} from 'app/view/dao/daoList/search/daoProvider'\nimport { MetaData } from 'app/model/metadata.controller'\nimport usePDB from './usePDB'\n\nconst useSearchDao = (keyword: string, daoAddresses: string[]) => {\n  const [metaData, setMetaData] = useState<RegisterDaoData>()\n  const [searchData, setSearchData] = useState<string[]>()\n  const [loading, setLoading] = useState(false)\n  const pdb = usePDB()\n\n  const getMetaData = useCallback(async () => {\n    const nextData: RegisterDaoData = {}\n    for (const daoAddress of daoAddresses) {\n      const data = (await pdb.getItem(daoAddress)) as MetaData\n      if (!data) continue\n      nextData[daoAddress] = { ...data, daoAddress }\n    }\n    return setMetaData(nextData)\n  }, [daoAddresses, pdb])\n\n  const onSearch = useCallback(async () => {\n    if (!keyword || keyword.length < 3 || keyword === 'all-regime' || !metaData)\n      return setSearchData(undefined)\n    try {\n      const daoProvider = new DaoProvider(metaData)\n      if (account.isAddress(keyword)) {\n        const data = await daoProvider.findByAddress(keyword)\n        return setSearchData(data)\n      }\n      const data = await daoProvider.find(keyword)\n      return setSearchData(data)\n    } catch (err) {\n      setSearchData(undefined)\n    }\n  }, [keyword, metaData])\n\n  useEffect(() => {\n    getMetaData()\n  }, [getMetaData])\n\n  useEffect(() => {\n    if (keyword && keyword.length >= 3) setLoading(true)\n    const delayToSearch = setTimeout(async () => {\n      //  delay to waiting keyboard typing\n      await onSearch()\n      setLoading(false)\n    }, 500)\n    return () => clearTimeout(delayToSearch)\n  }, [keyword, onSearch])\n\n  return { searchData, loading }\n}\n\nexport default useSearchDao\n","import { useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport LazyLoad from '@senswap/react-lazyload'\n\nimport { Col, Empty, Row } from 'antd'\nimport DaoCard from './daoCard'\nimport SearchDao from './search'\nimport SortDao from './sortDao'\nimport TypeOfDAO from './typeOfDao'\n\nimport { AppState } from 'app/model'\nimport useSearchDao from 'app/hooks/useSearchDao'\n\nimport './index.less'\n\nconst DaoList = () => {\n  const [sortKey, setSortKey] = useState('all-regime')\n  const [searchKey, setSearchKey] = useState('')\n  const {\n    dao: { daos },\n  } = useSelector((state: AppState) => state)\n\n  const filterDaoAddress = useMemo(() => {\n    const daoAddresses = Object.keys(daos)\n    if (!daoAddresses.length) return []\n    if (sortKey === 'all-regime') return daoAddresses\n\n    const filteredAddress = []\n    for (const daoAddress of daoAddresses) {\n      const { regime } = daos[daoAddress]\n      const parseRegime = Object.keys(regime)[0]\n      if (sortKey === parseRegime) filteredAddress.push(daoAddress)\n    }\n    return filteredAddress\n  }, [daos, sortKey])\n\n  const { searchData, loading } = useSearchDao(searchKey, filterDaoAddress)\n\n  return (\n    <Row gutter={[24, 16]}>\n      <Col xs={24} md={16}>\n        <Row gutter={[12, 12]}>\n          <Col xs={12} md={6}>\n            <TypeOfDAO />\n          </Col>\n          <Col xs={12} md={6}>\n            <SortDao onSort={setSortKey} value={sortKey} />\n          </Col>\n          <Col xs={24} md={12}>\n            <SearchDao onSearch={setSearchKey} loading={loading} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24} />\n      {searchKey.length >= 3 && (!searchData || !searchData.length) ? (\n        <Col span={24} style={{ textAlign: 'center' }}>\n          <Empty />\n        </Col>\n      ) : (\n        (searchData || filterDaoAddress).map((daoAddress) => (\n          <Col key={daoAddress} xs={24} md={12} xl={8}>\n            <LazyLoad height={479.75}>\n              <DaoCard daoAddress={daoAddress} special />\n            </LazyLoad>\n          </Col>\n        ))\n      )}\n    </Row>\n  )\n}\n\nexport default DaoList\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport LazyLoad from '@senswap/react-lazyload'\nimport { useWallet } from '@senhub/providers'\nimport { account } from '@senswap/sen-js'\nimport { DaoData } from '@interdao/core'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport DaoCard from './daoCard'\n\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst YourDaos = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const {\n    dao: { daos },\n  } = useSelector((state: AppState) => state)\n  const history = useHistory()\n\n  const filteredDaos = useMemo(\n    () =>\n      Object.keys(daos).filter((daoAddr) => {\n        const { authority } = daos[daoAddr] || ({} as DaoData)\n        const authAddress = authority.toBase58()\n        return account.isAddress(authAddress) && authAddress === walletAddress\n      }),\n    [daos, walletAddress],\n  )\n\n  if (!!filteredDaos.length)\n    return (\n      <Row gutter={[24, 24]}>\n        {filteredDaos.map((daoAddress) => (\n          <Col xs={24} md={12} xl={8} key={daoAddress}>\n            <LazyLoad height={191.5}>\n              <DaoCard daoAddress={daoAddress} />\n            </LazyLoad>\n          </Col>\n        ))}\n      </Row>\n    )\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Card bordered={false} bodyStyle={{ padding: 45, textAlign: 'center' }}>\n          <Space direction=\"vertical\" align=\"center\">\n            <Typography.Text type=\"secondary\">\n              You have no DAO yet!\n            </Typography.Text>\n            <Button onClick={() => history.push(`/app/${appId}/dao/new-dao`)}>\n              Build your DAO\n            </Button>\n          </Space>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default YourDaos\n","import { useHistory } from 'react-router-dom'\n\nimport { Row, Col, Button, Tabs } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport Hero from './hero'\nimport DaoList from './daoList'\nimport YourDaos from './daoList/yourDao'\n\nimport configs from 'app/configs'\n\nimport './index.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst Dao = () => {\n  const history = useHistory()\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Hero />\n      </Col>\n      <Col span={24}>\n        <Row justify=\"center\">\n          <Col xs={24} lg={18}>\n            <Tabs\n              style={{ overflow: 'visible' }}\n              className=\"dao-tabs\"\n              tabBarExtraContent={\n                <Button\n                  type=\"primary\"\n                  onClick={() => history.push(`/app/${appId}/dao/new-dao`)}\n                  icon={<IonIcon name=\"add-outline\" />}\n                >\n                  Create a DAO\n                </Button>\n              }\n            >\n              <Tabs.TabPane tab=\"Community DAOs\" key=\"community-daos\">\n                <DaoList />\n              </Tabs.TabPane>\n              <Tabs.TabPane tab=\"Your DAOs\" key=\"your-daos\">\n                <YourDaos />\n              </Tabs.TabPane>\n            </Tabs>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Dao\n","import { Tag } from 'antd'\n\nexport type ProposalStatusType =\n  | 'Failed'\n  | 'Voting'\n  | 'Preparing'\n  | 'Succeeded'\n  | 'Executed'\n\nexport type ProposalStatusProps = {\n  status: ProposalStatusType\n}\n\nconst STATUS_COLOR: Record<string, string> = {\n  Succeeded: '#0CA1BF',\n  Failed: '#F9575E',\n  Preparing: '#D4B106',\n  Executed: '#03A326',\n  Voting: '#40A9FF',\n}\n\nconst ProposalStatus = ({ status }: ProposalStatusProps) => {\n  return (\n    <Tag\n      style={{ color: STATUS_COLOR[status], border: 'solid', margin: 0 }}\n      color={'transparent'}\n    >\n      {status}\n    </Tag>\n  )\n}\n\nexport default ProposalStatus\n","import { ReactNode } from 'react'\n\nimport { Col, Row, Typography } from 'antd'\n\ntype RowSpaceBetweenProps = {\n  label?: string\n  value?: string | ReactNode\n}\nconst RowSpaceBetween = ({ label = '', value = '' }: RowSpaceBetweenProps) => {\n  return (\n    <Row align=\"middle\" gutter={[24, 24]}>\n      <Col flex=\"auto\">\n        <Typography.Text type=\"secondary\">{label}</Typography.Text>\n      </Col>\n      <Col>{value}</Col>\n    </Row>\n  )\n}\n\nexport default RowSpaceBetween\n","import { ReactNode } from 'react'\n\nimport { Space, SpaceProps, Typography } from 'antd'\n\nconst RowSpaceVertical = ({\n  label = '',\n  value,\n  ...rest\n}: {\n  label?: string\n  value: ReactNode\n} & SpaceProps) => {\n  return (\n    <Space {...rest} direction=\"vertical\">\n      <Typography.Text type=\"secondary\">{label}</Typography.Text>\n      {value}\n    </Space>\n  )\n}\n\nexport default RowSpaceVertical\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\n\n/**\n * Get token decimals from multiple resources. This hook needs MintProvider for working.\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * @param mintAddress Mint address\n * @returns Decimals\n */\nconst useMintDecimals = (mintAddress: string) => {\n  const [decimals, setDecimals] = useState<number | undefined>(undefined)\n  const { getDecimals } = useMint()\n\n  const fetchDecimals = useCallback(async () => {\n    try {\n      const decimals = await getDecimals(mintAddress)\n      return setDecimals(decimals)\n    } catch (er: any) {\n      return setDecimals(undefined)\n    }\n  }, [mintAddress, getDecimals])\n\n  useEffect(() => {\n    fetchDecimals()\n  }, [fetchDecimals])\n\n  return decimals\n}\n\nexport default useMintDecimals\n","import { useState } from 'react'\nimport { utils } from '@senswap/sen-js'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport moment from 'moment'\n\nimport { Col, Row, Space, Tooltip, Typography } from 'antd'\nimport RowSpaceBetween from 'app/components/rowSpaceBetween'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport IonIcon from 'shared/antd/ionicon'\nimport RowSpaceVertical from 'app/components/rowSpaceVertical'\n\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { asyncWait, explorer, shortenAddress } from 'shared/util'\n\nexport type TransferType = {\n  mint?: string\n  amount: number\n  source: string\n  destination: string\n}\n\nconst InfoTransferInProposal = ({\n  transferInfo,\n}: {\n  transferInfo?: TransferType\n}) => {\n  const [copied, setCopied] = useState('address')\n  const {\n    mint = '',\n    source = '',\n    destination = '',\n    amount = 0,\n  } = transferInfo || {}\n  const decimals = useMintDecimals(mint) || 0\n\n  const onCopy = async (address: string) => {\n    setCopied(address)\n    await asyncWait(1500)\n    setCopied('address')\n  }\n\n  return (\n    <Row gutter={[12, 12]}>\n      <Col span={24}>\n        <RowSpaceBetween label=\"Template\" value=\"SPL/Transfer\" />\n      </Col>\n      <Col span={24}>\n        <RowSpaceBetween\n          label=\"Token to be transferred\"\n          value={\n            <Space>\n              <MintAvatar mintAddress={mint} />\n              <MintSymbol mintAddress={mint} />\n            </Space>\n          }\n        />\n      </Col>\n      <Col span={24}>\n        <RowSpaceBetween\n          label=\"Transfer amount\"\n          value={!mint ? '--' : utils.undecimalize(BigInt(amount), decimals)}\n        />\n      </Col>\n      <Col span={24}>\n        <RowSpaceBetween\n          label=\"Sender's Wallet Address\"\n          value={\n            <Space size={10}>\n              <Typography.Text\n                style={{ cursor: 'pointer', textDecoration: 'underline' }}\n                onClick={() => window.open(explorer(source), '_blank')}\n              >\n                {shortenAddress(source)}\n              </Typography.Text>\n              <Tooltip title=\"Copied\" visible={copied === source}>\n                <CopyToClipboard text={source}>\n                  <IonIcon\n                    style={{ cursor: 'pointer' }}\n                    name=\"copy-outline\"\n                    onClick={() => onCopy(source)}\n                  />\n                </CopyToClipboard>\n              </Tooltip>\n            </Space>\n          }\n        />\n      </Col>\n      <Col span={24}>\n        <RowSpaceBetween\n          label=\"Receiver's Wallet Address\"\n          value={\n            <Space size={10}>\n              <Typography.Text\n                style={{ cursor: 'pointer', textDecoration: 'underline' }}\n                onClick={() => window.open(explorer(destination), '_blank')}\n              >\n                {shortenAddress(destination)}\n              </Typography.Text>\n              <Tooltip title=\"Copied\" visible={copied === destination}>\n                <CopyToClipboard text={destination}>\n                  <IonIcon\n                    style={{ cursor: 'pointer' }}\n                    name=\"copy-outline\"\n                    onClick={() => onCopy(destination)}\n                  />\n                </CopyToClipboard>\n              </Tooltip>\n            </Space>\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\nconst InfoTransferInDaoDetail = ({\n  transferInfo,\n  endTime,\n}: {\n  transferInfo?: TransferType\n  endTime?: number\n}) => {\n  const { mint = '', amount = 0 } = transferInfo || {}\n  const decimals = useMintDecimals(mint) || 0\n\n  return (\n    <Row gutter={[12, 12]}>\n      <Col xs={12} md={6}>\n        <RowSpaceVertical\n          label=\"Template\"\n          value={\n            <Typography.Text className=\"t-16\">SPL/Transfer</Typography.Text>\n          }\n        />\n      </Col>\n      <Col xs={12} md={6}>\n        <RowSpaceVertical\n          label=\"Token to be transferred\"\n          value={\n            <Typography.Text className=\"t-16\">\n              <Space>\n                <MintAvatar mintAddress={mint} />\n                <MintSymbol mintAddress={mint} />\n              </Space>\n            </Typography.Text>\n          }\n        />\n      </Col>\n      <Col xs={12} md={6}>\n        <RowSpaceVertical\n          className=\"t-16\"\n          label=\"Transfer amount\"\n          value={!mint ? '--' : utils.undecimalize(BigInt(amount), decimals)}\n        />\n      </Col>\n      <Col xs={12} md={6}>\n        <RowSpaceVertical\n          label=\"End time\"\n          value={\n            endTime && (\n              <Typography.Text className=\"t-16\">\n                {moment(endTime).format('hh:mm A, MMM Do, YYYY')}\n              </Typography.Text>\n            )\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n\nconst TemplateTransfer = ({\n  isProposalDetail,\n  transferInfo,\n  endTime,\n}: {\n  transferInfo?: TransferType\n  isProposalDetail?: boolean\n  endTime?: number\n}) => {\n  if (isProposalDetail)\n    return <InfoTransferInProposal transferInfo={transferInfo} />\n  return (\n    <InfoTransferInDaoDetail endTime={endTime} transferInfo={transferInfo} />\n  )\n}\n\nexport default TemplateTransfer\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { ProposalData } from '@interdao/core'\nimport { account } from '@senswap/sen-js'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type ProposalState = Record<string, ProposalData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'proposal'\nconst initialState: ProposalState = {}\n\n/**\n * Actions\n */\n\nexport const getProposals = createAsyncThunk(\n  `${NAME}/getProposals`,\n  async () => {\n    const { account } = interDao.program\n    let bulk: ProposalState = {}\n\n    const proposals = await account.proposal.all()\n    for (const { publicKey, account: proposalData } of proposals) {\n      const address = publicKey.toBase58()\n      bulk[address] = proposalData as any\n    }\n    return bulk\n  },\n)\n\nexport const getProposal = createAsyncThunk<\n  ProposalState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getProposal`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    dao: { [address]: data },\n  } = getState()\n  if (data && !force) return { [address]: data }\n  const raw = await interDao.getProposalData(address)\n  return { [address]: raw }\n})\n\nexport const upsetProposal = createAsyncThunk<\n  ProposalState,\n  { address: string; data: ProposalData },\n  { state: any }\n>(`${NAME}/upsetProposal`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteProposal = createAsyncThunk(\n  `${NAME}/deleteProposal`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getProposals.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { ProposalData } from '@interdao/core'\nimport { getProposal, getProposals } from 'app/model/proposal.controller'\n\nconst useProposal = (proposalAddress: string, daoAddress: string) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { proposal } = useSelector((state: AppState) => state)\n\n  const data = useMemo(\n    () => proposal[proposalAddress] || ({} as ProposalData),\n    [proposal, proposalAddress],\n  )\n  const isExistProposal = useMemo(() => {\n    return !!Object.keys(proposal).length\n  }, [proposal])\n\n  useEffect(() => {\n    if (isExistProposal && account.isAddress(proposalAddress)) {\n      dispatch(getProposal({ address: proposalAddress }))\n    } else {\n      dispatch(getProposals())\n    }\n  }, [daoAddress, dispatch, isExistProposal, proposalAddress])\n\n  return { ...data }\n}\n\nexport default useProposal\n","import { Fragment, useCallback, useEffect, useState } from 'react'\nimport { AccountMeta } from '@solana/web3.js'\nimport { decodeSplInstruction } from 'sen-idl-parser'\nimport BN from 'bn.js'\n\nimport TemplateTransfer, { TransferType } from '../transferInfo'\n\nimport useProposal from 'app/hooks/useProposal'\nimport { ProposalChildCardProps } from '../../proposalDetails/index'\n\ntype TemplateInfoProps = {\n  isProposalDetail?: boolean\n  endTime?: number\n} & ProposalChildCardProps\n\nconst TemplateInfo = ({\n  proposalAddress,\n  daoAddress,\n  isProposalDetail = true,\n  endTime,\n}: TemplateInfoProps) => {\n  const [transferInfo, setTransferInfo] = useState<TransferType>()\n  const [templateName, setTemplateName] = useState('')\n\n  const { accounts, data } = useProposal(proposalAddress, daoAddress)\n  const fetchProposalInfo = useCallback(async () => {\n    if (!accounts || !data) return\n    const info = decodeSplInstruction<{ amount: BN }>(\n      accounts as AccountMeta[],\n      data as Buffer,\n    )\n    if (!info) return\n    setTemplateName(info.name)\n    if (info.name === 'transfer') {\n      const { splt } = window.sentre\n      const sourceAssociated =\n        info.accounts.get('source')?.pubkey.toBase58() || ''\n      const sourceAddress =\n        info.accounts.get('authority')?.pubkey.toBase58() || ''\n      const destination =\n        info.accounts.get('destination')?.pubkey.toBase58() || ''\n      const { amount } = info.data\n      let mintAddress = ''\n\n      try {\n        const { mint } = await splt.getAccountData(sourceAssociated)\n        mintAddress = mint\n      } catch (error) {\n        mintAddress = ''\n      }\n      return setTransferInfo({\n        source: sourceAddress,\n        destination,\n        amount: amount.toNumber(),\n        mint: mintAddress,\n      })\n    }\n  }, [accounts, data])\n\n  useEffect(() => {\n    fetchProposalInfo()\n  }, [fetchProposalInfo])\n\n  if (templateName === 'transfer')\n    return (\n      <TemplateTransfer\n        isProposalDetail={isProposalDetail}\n        transferInfo={transferInfo}\n        endTime={endTime}\n      />\n    )\n  return <Fragment />\n}\n\nexport default TemplateInfo\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { ProposalData } from '@interdao/core'\nimport BN from 'bn.js'\n\nimport { ProposalStatusType } from 'app/components/proposalStatus'\n\nimport { AppState } from 'app/model'\n\nconst currentDate = Math.floor(Number(new Date()) / 1000)\n\nconst useProposalStatus = (proposalAddress: string) => {\n  const { proposal } = useSelector((state: AppState) => state)\n  const {\n    startDate,\n    endDate,\n    executed,\n    supply,\n    votingAgainstPower,\n    votingForPower,\n    consensusQuorum,\n    consensusMechanism,\n  } = proposal[proposalAddress] || ({} as ProposalData)\n\n  const actualSupply = useMemo(() => {\n    if (!supply) return new BN(0)\n    const mechanism = consensusMechanism\n      ? Object.keys(consensusMechanism)[0]\n      : ''\n    if (mechanism === 'stakedTokenCounter') return supply\n    return supply.mul(endDate.sub(startDate))\n  }, [consensusMechanism, endDate, startDate, supply])\n\n  const isSuccess = useMemo(() => {\n    const quorum = consensusQuorum ? Object.keys(consensusQuorum)[0] : ''\n    if (!votingAgainstPower || !votingAgainstPower) return false\n    const votingPower = votingForPower.sub(votingAgainstPower)\n\n    if (votingPower.lte(new BN(0))) return false\n    if (quorum === 'half' && votingPower.cmp(actualSupply.div(new BN(2))) === 1)\n      return true\n    if (\n      quorum === 'oneThird' &&\n      votingPower.cmp(actualSupply.div(new BN(3))) === 1\n    )\n      return true\n    if (\n      quorum === 'twoThird' &&\n      votingPower.cmp(actualSupply.mul(new BN(2)).div(new BN(3))) === 1\n    )\n      return true\n    return false\n  }, [actualSupply, consensusQuorum, votingAgainstPower, votingForPower])\n\n  const status: ProposalStatusType = useMemo(() => {\n    if (currentDate < Number(startDate)) return 'Preparing'\n    if (currentDate < Number(endDate)) return 'Voting'\n    if (executed) return 'Executed'\n    if (isSuccess) return 'Succeeded'\n    return 'Failed'\n  }, [endDate, executed, isSuccess, startDate])\n\n  return { status, isSuccess, actualSupply }\n}\n\nexport default useProposalStatus\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'app/model'\nimport { getCID } from 'app/helpers'\nimport { ProposalMetaData } from 'app/view/proposal/proposalInitialization'\nimport IPFS from 'shared/pdb/ipfs'\n\nconst useProposalMetaData = (proposalAddress: string) => {\n  const [metaData, setMetaData] = useState<ProposalMetaData>()\n  const { proposal } = useSelector((state: AppState) => state)\n  const { metadata: digest } = proposal[proposalAddress] || {}\n\n  const getMetaData = useCallback(async () => {\n    if (!digest) return setMetaData(undefined)\n    const cid = getCID(digest)\n    const ipfs = new IPFS()\n    try {\n      const data = await ipfs.get(cid)\n      return setMetaData(data)\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    }\n  }, [digest])\n\n  useEffect(() => {\n    getMetaData()\n  }, [getMetaData])\n\n  return metaData\n}\n\nexport default useProposalMetaData\n","import { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { SystemProgram } from '@solana/web3.js'\nimport BN from 'bn.js'\n\nimport { Card, Col, Row, Typography } from 'antd'\nimport ProposalStatus from 'app/components/proposalStatus'\nimport TemplateInfo from '../modalTemplateInfo/component/templateInfo'\n\nimport { shortenAddress } from 'shared/util'\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\nimport useProposalStatus from 'app/hooks/useProposalStatus'\nimport useProposalMetaData from 'app/hooks/useProposalMetaData'\nimport { ProposalChildCardProps } from '../proposalDetails'\n\nimport BG_SOLANA from 'app/static/images/templates/bg-spl.png'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport type ProposalCardProps = { proposalAddress: string }\n\nconst BG_PROPOSAL: Record<string, string> = {\n  spl_transfer: BG_SOLANA,\n}\n\nconst currentDate = Math.floor(Number(new Date()) / 1000)\n\nconst ProposalCard = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const { proposal } = useSelector((state: AppState) => state)\n  const { dao, endDate } = proposal[proposalAddress] || {\n    dao: SystemProgram.programId,\n    endDate: new BN(currentDate),\n  }\n  const { status } = useProposalStatus(proposalAddress)\n  const history = useHistory()\n  const metaData = useProposalMetaData(proposalAddress)\n  const endTime = Number(endDate) * 1000\n\n  return (\n    <Card\n      bordered={false}\n      onClick={() =>\n        history.push(\n          `/app/${appId}/dao/${dao.toBase58()}/proposal/${proposalAddress}`,\n        )\n      }\n      className=\"proposal-card\"\n      style={{\n        background: !metaData\n          ? 'unset'\n          : `url(${BG_PROPOSAL[metaData.templateName]})`,\n      }}\n      bodyStyle={{ padding: '24px 0' }}\n      hoverable\n    >\n      <Row gutter={[8, 8]}>\n        <Col span={24}>\n          <Row>\n            <Col flex=\"auto\">\n              <Typography.Title level={4}>\n                {metaData?.title\n                  ? metaData.title\n                  : shortenAddress(proposalAddress)}\n              </Typography.Title>\n            </Col>\n            <Col>\n              <ProposalStatus status={status} />\n            </Col>\n          </Row>\n        </Col>\n        <Col xs={24} md={20}>\n          <TemplateInfo\n            isProposalDetail={false}\n            proposalAddress={proposalAddress}\n            daoAddress={daoAddress}\n            endTime={endTime}\n          />\n        </Col>\n\n        <Col span={24}>\n          <Typography.Paragraph\n            style={{ margin: 0 }}\n            type=\"secondary\"\n            ellipsis={{ rows: 2 }}\n          >\n            {metaData?.description}\n          </Typography.Paragraph>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default ProposalCard\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport { ProposalReturnType } from 'app/view/templates/types'\n\n/**\n * Interface & Utility\n */\n\nexport type TemplateState = {\n  visible: boolean\n  tx?: ProposalReturnType\n  templateName: string\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'template'\nconst initialState: TemplateState = {\n  visible: false,\n  tx: undefined,\n  templateName: '',\n}\n\n/**\n * Actions\n */\n\nexport const setVisible = createAsyncThunk(\n  `${NAME}/setVisible`,\n  async (visible: boolean) => {\n    return { visible }\n  },\n)\n\nexport const setTx = createAsyncThunk(\n  `${NAME}/setTx`,\n  async (tx?: ProposalReturnType) => {\n    return { tx }\n  },\n)\n\nexport const clearTx = createAsyncThunk(`${NAME}/clearTx`, async () => {\n  return { tx: undefined }\n})\n\nexport const setTemplateName = createAsyncThunk(\n  `${NAME}/setTemplateName`,\n  async (name: string) => {\n    return { templateName: name }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setVisible.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setTx.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setTemplateName.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        clearTx.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { ChangeEvent, useState, forwardRef, useCallback, useRef } from 'react'\n\nimport { Input, Tooltip, Space, InputProps } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nlet timeoutId: ReturnType<typeof setTimeout> | undefined\n\n/**\n * Numeric Input\n * - Check balance based on the max\n * - Only accept numeric characters\n * @remarks The props of input follows the same as https://ant.design/components/input/#API. Extra & Overrided props\n * @param max - Maximum\n * @param onValue - A triggerred function if a valid number\n */\nconst NumericInput = forwardRef(\n  (\n    {\n      max,\n      onValue = () => {},\n      onChange = () => {},\n      ...props\n    }: InputProps & {\n      onValue?: (val: string) => void\n      max?: string | number\n    },\n    ref: any,\n  ) => {\n    const [error, setError] = useState('')\n    const [cursor, setCursor] = useState<number | null>(null)\n    const innerRef = useRef(ref)\n\n    // Handle amount\n    const onAmount = useCallback(\n      (val: string) => {\n        const onError = (er: string) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId)\n            timeoutId = undefined\n          }\n          setError(er)\n          timeoutId = setTimeout(() => setError(''), 500)\n        }\n        const reg = /^\\d*(\\.\\d*)?$/\n        if (!reg.test(val)) return onError('Invalid character')\n        if (max && parseFloat(val) > parseFloat(max.toString()))\n          return onError('Not enough balance')\n        return onValue(val)\n      },\n      [max, onValue],\n    )\n\n    // Handle cursor jumping\n    // To prevent autofocus on mobile, we must strictly check cursor different from null\n    if (cursor !== null) innerRef?.current?.setSelectionRange(cursor, cursor)\n\n    return (\n      <Tooltip\n        title={\n          <Space>\n            <IonIcon name=\"warning\" />\n            {error}\n          </Space>\n        }\n        visible={!!error}\n      >\n        <Input\n          {...props}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => {\n            onChange(e)\n            setCursor(e.target.selectionStart)\n            onAmount(e.target.value || '')\n          }}\n          ref={innerRef}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nexport default NumericInput\n","import { useCallback, useState, useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { PublicKey } from '@solana/web3.js'\nimport { utils } from '@project-serum/anchor'\nimport BN from 'bn.js'\n// @ts-ignore\nimport * as soproxABI from 'soprox-abi'\nimport { account } from '@senswap/sen-js'\n\nimport { Button, Col, Input, Row, Space, Typography } from 'antd'\nimport { MintSelection } from 'shared/antd/mint'\n\nimport { ProposalReturnType } from 'app/view/templates/types'\nimport { AppDispatch, AppState } from 'app/model'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport {\n  setTemplateName,\n  setTx,\n  setVisible,\n} from 'app/model/template.controller'\nimport configs from 'app/configs'\nimport NumericInput from 'shared/antd/numericInput'\nimport useMetaData from 'app/hooks/useMetaData'\nimport { Templates } from '../..'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const NAME = 'spl/transfer'\n\nexport const toData = (amount = new BN(0)) => {\n  const schema = [\n    { key: 'code', type: 'u8' },\n    { key: 'amount', type: 'u64' },\n  ]\n  const buf = new soproxABI.struct(schema, {\n    code: 3,\n    amount: BigInt(amount.toString()),\n  }).toBuffer()\n  return buf\n}\n\nexport const buildTransferSplvalue = (\n  amount: string | number | BN,\n  src: string,\n  dst: string,\n  payer: string,\n) => {\n  const value: ProposalReturnType = {\n    name: NAME,\n    data: toData(new BN(amount)),\n    accounts: {\n      src: {\n        pubkey: new PublicKey(src),\n        isWritable: true,\n        isSigner: false,\n        isMaster: false,\n      },\n      dst: {\n        pubkey: new PublicKey(dst),\n        isWritable: true,\n        isSigner: false,\n        isMaster: false,\n      },\n      payer: {\n        pubkey: new PublicKey(payer),\n        isWritable: true,\n        isSigner: true,\n        isMaster: true,\n      },\n    },\n    programId: utils.token.TOKEN_PROGRAM_ID,\n  }\n  return value\n}\n\ntype TransferSplPluginProps = {\n  daoAddress: string\n}\n\nconst TransferSplPlugin = ({ daoAddress = '' }: TransferSplPluginProps) => {\n  const [value, setValue] = useState('')\n  const [mintAddress, setMintAddress] = useState('')\n  const [receiverAddress, setReceiverAddress] = useState('')\n  const [srcAddress, setSrcAddress] = useState('')\n  const [dstAddress, setDstAddress] = useState('')\n\n  const [amount, setAmount] = useState('')\n  const listDAO = useSelector((state: AppState) => state.dao.daos)\n  const decimals = useMintDecimals(mintAddress)\n  const dispatch = useDispatch<AppDispatch>()\n  const history = useHistory()\n  const daoMetaData = useMetaData(daoAddress)\n\n  const senderAddress = useMemo(() => {\n    const { master } = listDAO[daoAddress] || {}\n    return master?.toBase58() || ''\n  }, [listDAO, daoAddress])\n\n  const valid = useMemo(() => {\n    return Boolean(\n      amount && account.isAddress(srcAddress) && account.isAddress(dstAddress),\n    )\n  }, [amount, srcAddress, dstAddress])\n\n  const confirm = useCallback(async () => {\n    if (!valid) return dispatch(setTx(undefined))\n    const re = buildTransferSplvalue(\n      amount,\n      srcAddress,\n      dstAddress,\n      senderAddress,\n    )\n\n    await dispatch(setTx(re))\n    await dispatch(setTemplateName(Templates.SPL_TRANSFER))\n    await dispatch(setVisible(false))\n    return history.push(`/app/${appId}/dao/${daoAddress}/new-proposal`)\n  }, [\n    valid,\n    dispatch,\n    amount,\n    srcAddress,\n    dstAddress,\n    senderAddress,\n    history,\n    daoAddress,\n  ])\n\n  const close = useCallback(async () => {\n    setValue('')\n    setMintAddress('')\n    setReceiverAddress('')\n    await dispatch(setTx(undefined))\n    return dispatch(setVisible(false))\n  }, [dispatch])\n\n  const setSourceAddress = useCallback(async () => {\n    if (account.isAddress(senderAddress) && account.isAddress(mintAddress)) {\n      const pubkey = await utils.token.associatedAddress({\n        owner: new PublicKey(senderAddress),\n        mint: new PublicKey(mintAddress),\n      })\n      setSrcAddress(pubkey.toBase58())\n    } else setSrcAddress('')\n  }, [mintAddress, senderAddress])\n\n  const setDestinationAddress = useCallback(async () => {\n    if (account.isAddress(receiverAddress) && account.isAddress(mintAddress)) {\n      const pubkey = await utils.token.associatedAddress({\n        owner: new PublicKey(receiverAddress),\n        mint: new PublicKey(mintAddress),\n      })\n      setDstAddress(pubkey.toBase58())\n    } else setDstAddress('')\n  }, [mintAddress, receiverAddress])\n\n  const getAmount = useCallback(() => {\n    if (Number(value) && decimals)\n      setAmount(String(Number(value) * 10 ** decimals))\n    else setAmount('')\n  }, [decimals, value])\n\n  useEffect(() => {\n    setSourceAddress()\n  }, [setSourceAddress])\n\n  useEffect(() => {\n    setDestinationAddress()\n  }, [setDestinationAddress])\n\n  useEffect(() => {\n    getAmount()\n  }, [getAmount])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Space direction=\"vertical\" size={4} style={{ width: '100%' }}>\n          <Typography.Text type=\"secondary\">Transfer</Typography.Text>\n          <NumericInput\n            className=\"border-less\"\n            placeholder=\"Input Amount\"\n            value={value}\n            onValue={(value) => setValue(value || '')}\n            prefix={\n              <MintSelection\n                value={mintAddress}\n                onChange={setMintAddress}\n                style={{ marginLeft: -7 }}\n              />\n            }\n          />\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\" size={4} style={{ width: '100%' }}>\n          <Typography.Text type=\"secondary\">\n            Sender's Wallet Address\n          </Typography.Text>\n          <Input\n            className=\"border-less\"\n            placeholder=\"Input Sender's Wallet Address\"\n            value={senderAddress}\n            disabled={daoMetaData?.daoType === 'multisig-dao'}\n          />\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\" size={4} style={{ width: '100%' }}>\n          <Typography.Text type=\"secondary\">\n            Receiver's Wallet Address\n          </Typography.Text>\n          <Input\n            className=\"border-less\"\n            placeholder=\"Input Receiver's Wallet Address\"\n            value={receiverAddress}\n            onChange={(e) => setReceiverAddress(e.target.value || '')}\n          />\n        </Space>\n      </Col>\n      <Col span={24} />\n      <Col span={24} style={{ textAlign: 'right' }}>\n        <Space>\n          <Button type=\"text\" onClick={close}>\n            Close\n          </Button>\n          <Button type=\"primary\" onClick={confirm} disabled={!valid}>\n            Continue\n          </Button>\n        </Space>\n      </Col>\n      {/* <TemplateInfo content=\"\" /> */}\n    </Row>\n  )\n}\n\nexport default TransferSplPlugin\n","var _path, _path2, _path3, _defs;\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgSolana(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.09822 38.7451C9.43613 38.4072 9.90075 38.2101 10.3935 38.2101H55.082C55.8986 38.2101 56.3069 39.1956 55.7297 39.7729L46.9018 48.6008C46.5639 48.9387 46.0993 49.1358 45.6065 49.1358H0.918008C0.101395 49.1358 -0.306912 48.1502 0.270349 47.573L9.09822 38.7451Z\",\n    fill: \"url(#paint0_linear_514_9086)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.09822 5.78502C9.45021 5.44711 9.91483 5.25 10.3935 5.25L55.082 5.25C55.8986 5.25 56.3069 6.23557 55.7297 6.81283L46.9018 15.6407C46.5639 15.9786 46.0993 16.1757 45.6065 16.1757H0.918008C0.101395 16.1757 -0.306912 15.1902 0.270349 14.6129L9.09822 5.78502Z\",\n    fill: \"url(#paint1_linear_514_9086)\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.9018 22.1596C46.5639 21.8217 46.0993 21.6246 45.6065 21.6246H0.918008C0.101395 21.6246 -0.306912 22.6101 0.270349 23.1874L9.09822 32.0153C9.43613 32.3532 9.90075 32.5503 10.3935 32.5503H55.082C55.8986 32.5503 56.3069 31.5647 55.7297 30.9875L46.9018 22.1596Z\",\n    fill: \"url(#paint2_linear_514_9086)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_514_9086\",\n    x1: 50.8129,\n    y1: -0.023655,\n    x2: 19.885,\n    y2: 59.2159,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#00FFA3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DC1FFF\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear_514_9086\",\n    x1: 37.2896,\n    y1: -7.08387,\n    x2: 6.36157,\n    y2: 52.1556,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#00FFA3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DC1FFF\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint2_linear_514_9086\",\n    x1: 44.0082,\n    y1: -3.57611,\n    x2: 13.0802,\n    y2: 55.6634,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#00FFA3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DC1FFF\"\n  })))));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSolana);\nexport default __webpack_public_path__ + \"static/media/solana.6db9bd9600699ad1fc2b302acd0731be.svg\";\nexport { ForwardRef as ReactComponent };","import { Button, Col, Image, Radio, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport TransferSplPlugin from './transfer'\n\nimport SOLANA_LOGO from 'app/static/images/templates/solana.svg'\n\ntype CardOptionProps = {\n  label: string\n  description: string\n  icon: string\n}\n\nconst CardOption = ({ label, description, icon }: CardOptionProps) => {\n  return (\n    <Row>\n      <Col span={24}>\n        <Row>\n          <Col flex=\"auto\">\n            <Typography.Title level={5}>{label}</Typography.Title>\n          </Col>\n          <Col>\n            <IonIcon style={{ fontSize: 24 }} name={icon} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Typography.Text type=\"secondary\">{description}</Typography.Text>\n      </Col>\n    </Row>\n  )\n}\n\nconst SPL = ({ daoAddress }: { daoAddress: string }) => {\n  return (\n    <Row>\n      <Col xs={24} md={16} className=\"wrap-spl-info\">\n        <Row gutter={[16, 16]} className=\"spl-info\">\n          <Col span={24}>\n            <Space size={24}>\n              <Image preview={false} src={SOLANA_LOGO} />\n              <Space size={0} direction=\"vertical\">\n                <Typography.Text>Solana Program Library</Typography.Text>\n                <Space size={2} style={{ marginLeft: -8 }}>\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-discord\" />} />\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-twitter\" />} />\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-telegram\" />} />\n                </Space>\n              </Space>\n            </Space>\n          </Col>\n          <Col span={24}>\n            <Typography.Paragraph\n              type=\"secondary\"\n              ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n            >\n              The Solana Program Library (SPL) is a collection of on-chain\n              programs targeting the Sealevel parallel runtime. These programs\n              are tested against Solana's implementation of Sealevel,\n              solana-runtime, and deployed to its mainnet. As others implement\n              Sealevel, we will graciously accept patches to ensure the programs\n              here are portable across all implementations.\n            </Typography.Paragraph>\n          </Col>\n          <Col span={24}>\n            <Space direction=\"vertical\" style={{ width: '100%' }}>\n              <Typography.Text>Templates</Typography.Text>\n              <Radio.Group\n                value=\"transfer\"\n                style={{ width: '100%' }}\n                className=\"select-spl-option\"\n              >\n                <Row gutter={[24, 24]}>\n                  <Col xs={24} sm={12} md={12} lg={12}>\n                    <Radio.Button value=\"transfer\">\n                      <CardOption\n                        label=\"Transfer\"\n                        description=\"Transfer token to another wallet address\"\n                        icon=\"paper-plane-outline\"\n                      />\n                    </Radio.Button>\n                  </Col>\n                  <Col xs={24} sm={12} md={12} lg={12}>\n                    <Radio.Button value=\"approve\" disabled>\n                      <CardOption\n                        label=\"Approve\"\n                        description=\"Coming soon\"\n                        icon=\"thumbs-up-outline\"\n                      />\n                    </Radio.Button>\n                  </Col>\n                </Row>\n              </Radio.Group>\n            </Space>\n          </Col>\n        </Row>\n      </Col>\n      <Col xs={24} md={8} className=\"spl-option-transfer\">\n        <TransferSplPlugin daoAddress={daoAddress} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default SPL\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { Col, Modal, Row, Tabs, Typography } from 'antd'\nimport SPL from './spl'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setVisible } from 'app/model/template.controller'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport './index.less'\n\nexport enum Templates {\n  SPL_TRANSFER = 'spl_transfer',\n}\n\nconst Template = ({ daoAddress }: { daoAddress: string }) => {\n  const {\n    template: { visible },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n\n  return (\n    <Modal\n      visible={visible}\n      footer={false}\n      closeIcon={<IonIcon name=\"close-outline\" />}\n      className=\"template-card template-modal\"\n      onCancel={() => dispatch(setVisible(false))}\n    >\n      <Row>\n        <Col span={24} className=\"template-header\">\n          <Typography.Title level={4}>Choose a template</Typography.Title>\n        </Col>\n        <Col className=\"template-body\" span={24}>\n          <Tabs>\n            <Tabs.TabPane tab=\"SPL\" key=\"spl\">\n              <SPL daoAddress={daoAddress} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Atrix\" key=\"atrix\" disabled />\n\n            <Tabs.TabPane tab=\"Quarry\" key=\"quarry\" disabled />\n\n            <Tabs.TabPane tab=\"Advanced\" key=\"advanced\" disabled />\n          </Tabs>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default Template\n","import { useCallback, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport LazyLoad from '@senswap/react-lazyload'\nimport { useUI, useWallet } from '@senhub/providers'\nimport { DaoRegimes } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\nimport { SystemProgram } from '@solana/web3.js'\n\nimport { Button, Col, Empty, Row, Select, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ProposalCard from './proposalCard'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport Template from 'app/view/templates'\nimport { setVisible } from 'app/model/template.controller'\n\nexport type ProposalListProps = { daoAddress: string }\n\nconst currentDate = Math.floor(Number(new Date()) / 1000)\n\nconst ProposalList = ({ daoAddress }: ProposalListProps) => {\n  const [status, setStatus] = useState('all-status')\n  const {\n    proposal,\n    dao: { daos },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const {\n    ui: { width },\n  } = useUI()\n\n  const { regime, authority } = daos[daoAddress] || {\n    regime: DaoRegimes.Dictatorial,\n    authority: SystemProgram.programId,\n  }\n  const mobileScreen = width < 768\n\n  const isSuccess = useCallback(\n    (quorum: string, votingPower: number, numSupply: number) => {\n      if (votingPower <= 0) return false\n      if (quorum === 'half' && votingPower >= numSupply / 2) return true\n      if (quorum === 'oneThird' && votingPower >= numSupply / 3) return true\n      if (quorum === 'twoThird' && votingPower >= (numSupply * 2) / 3)\n        return true\n      return false\n    },\n    [],\n  )\n\n  const authorized = useMemo(() => {\n    if (isEqual(regime, DaoRegimes.Autonomous)) return true\n    if (isEqual(regime, DaoRegimes.Democratic)) return true\n    if (authority.toBase58() === walletAddress) return true\n    return false\n  }, [regime, authority, walletAddress])\n\n  const proposalAddresses = useMemo(() => {\n    const expandedProposal = Object.keys(proposal).map((address) => ({\n      address,\n      ...proposal[address],\n    }))\n    return expandedProposal\n      .filter(({ dao }) => dao.toBase58() === daoAddress)\n      .map(({ address }) => address)\n  }, [proposal, daoAddress])\n\n  const filterProposalAddresses = useMemo(() => {\n    if (!proposalAddresses.length) return []\n    const filteredAddress = []\n\n    for (const address of proposalAddresses) {\n      let valid = false\n      const {\n        endDate,\n        startDate,\n        executed,\n        supply,\n        votingForPower,\n        consensusQuorum,\n        consensusMechanism,\n        votingAgainstPower,\n      } = proposal[address] || {}\n\n      const quorum = consensusQuorum ? Object.keys(consensusQuorum)[0] : ''\n      const votingPower = Number(votingForPower) - Number(votingAgainstPower)\n      const stakeSupply = Number(supply) || 0\n      const lockSupply = Number(supply) * (Number(endDate) - Number(startDate))\n      const mechanism = consensusMechanism\n        ? Object.keys(consensusMechanism)[0]\n        : ''\n      const actualSupply =\n        mechanism === 'StakedTokenCounter' ? stakeSupply : lockSupply\n\n      switch (status) {\n        case 'preparing':\n          valid = currentDate < Number(startDate)\n          break\n        case 'voting':\n          valid =\n            currentDate <= Number(endDate) && currentDate >= Number(startDate)\n          break\n        case 'executed':\n          valid = executed\n          break\n        case 'succeeded':\n          valid =\n            isSuccess(quorum, votingPower, actualSupply) &&\n            !executed &&\n            currentDate > Number(endDate)\n          break\n        case 'failed':\n          valid =\n            !isSuccess(quorum, votingPower, actualSupply) &&\n            currentDate > Number(endDate)\n          break\n        default:\n          valid = true\n          break\n      }\n      if (valid) filteredAddress.push(address)\n    }\n    return filteredAddress\n  }, [isSuccess, proposal, proposalAddresses, status])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row gutter={[16, 16]} align=\"bottom\">\n          <Col\n            span={mobileScreen ? 24 : undefined}\n            flex={mobileScreen ? undefined : 'auto'}\n          >\n            <Typography.Title level={4}>Proposals</Typography.Title>\n          </Col>\n          <Col span={mobileScreen ? 12 : undefined}>\n            <Select\n              className=\"select-filter-proposal\"\n              defaultValue=\"all-status\"\n              onChange={setStatus}\n              style={{ width: '100%', minWidth: 150 }}\n            >\n              <Select.Option value=\"all-status\">All status</Select.Option>\n              <Select.Option value=\"preparing\">Preparing</Select.Option>\n              <Select.Option value=\"voting\">Voting</Select.Option>\n              <Select.Option value=\"succeeded\">Succeeded</Select.Option>\n              <Select.Option value=\"executed\">Executed</Select.Option>\n              <Select.Option value=\"failed\">Failed</Select.Option>\n            </Select>\n          </Col>\n          <Col span={mobileScreen ? 12 : undefined}>\n            <Button\n              type=\"primary\"\n              icon={<IonIcon name=\"add-outline\" />}\n              onClick={() => dispatch(setVisible(true))}\n              disabled={!authorized}\n              block\n            >\n              New Proposal\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row>\n          {filterProposalAddresses.length ? (\n            filterProposalAddresses.map((proposalAddress) => (\n              <Col key={proposalAddress} span={24}>\n                <LazyLoad height={176}>\n                  <ProposalCard\n                    daoAddress={daoAddress}\n                    proposalAddress={proposalAddress}\n                  />\n                </LazyLoad>\n              </Col>\n            ))\n          ) : (\n            <Col span={24} style={{ textAlign: 'center' }}>\n              <Empty />\n            </Col>\n          )}\n        </Row>\n      </Col>\n      <Template daoAddress={daoAddress} />\n    </Row>\n  )\n}\n\nexport default ProposalList\n","import { useCallback, useEffect, useState } from 'react'\nimport { AccountData, utils } from '@senswap/sen-js'\nimport { useMint } from '@senhub/providers'\n\nimport { fetchCGK } from 'shared/util'\nimport TokenProvider from 'shared/tokenProvider'\n\nconst DEFAULT_DATA = {\n  address: '',\n  icon: '',\n  name: 'TOKEN',\n  price: 0,\n  priceChange: 0,\n  rank: 0,\n  symbol: 'TOKEN',\n  totalVolume: 0,\n}\n\nexport const fetchCgkData = async (\n  tokenProvider: TokenProvider,\n  mintAddress: string,\n) => {\n  try {\n    const token = await tokenProvider.findByAddress(mintAddress)\n    const ticket = token?.extensions?.coingeckoId\n    const cgkData = await fetchCGK(ticket)\n    return cgkData\n  } catch (error) {\n    return DEFAULT_DATA\n  }\n}\n\nexport const getBalance = async (\n  inUSD: boolean,\n  tokenProvider: TokenProvider,\n  mintAddress: string,\n  decimals: number,\n  amount: bigint,\n) => {\n  const cgkData = await fetchCgkData(tokenProvider, mintAddress)\n  let balance = Number(utils.undecimalize(amount, decimals))\n  if (inUSD) balance = Number(balance) * cgkData.price\n\n  return balance\n}\n\nconst useTotalUSD = ({\n  inUSD = true,\n  accounts,\n}: {\n  inUSD?: boolean\n  accounts: AccountData[]\n}) => {\n  const { tokenProvider, getDecimals } = useMint()\n  const [totalUSD, setTotalUSD] = useState(0)\n\n  const clcTotalUSD = useCallback(async () => {\n    if (!accounts) return setTotalUSD(0)\n    let totalUSD = 0\n    for (const account of accounts) {\n      const { mint, amount } = account\n      const decimals = await getDecimals(mint)\n      const balance = await getBalance(\n        inUSD,\n        tokenProvider,\n        mint,\n        decimals,\n        amount,\n      )\n      totalUSD += balance\n    }\n    return setTotalUSD(totalUSD)\n  }, [accounts, getDecimals, tokenProvider, inUSD])\n\n  useEffect(() => {\n    clcTotalUSD()\n  }, [clcTotalUSD])\n\n  return totalUSD\n}\n\nexport default useTotalUSD\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\nimport { AccountData } from '@senswap/sen-js'\n\nimport { Col, Row, Space, Typography } from 'antd'\n\nimport { getBalance } from 'app/hooks/useBalance'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\n\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { numeric } from 'shared/util'\n\nconst MintBalance = ({ account }: { account: AccountData }) => {\n  const [usdBalance, setUSDBalance] = useState(0)\n  const [mintBalance, setMintBalance] = useState(0)\n\n  const { mint, amount } = account\n  const { tokenProvider } = useMint()\n  const decimals = useMintDecimals(mint) || 0\n\n  const fetchBalance = useCallback(async () => {\n    const mintBalance = await getBalance(\n      false,\n      tokenProvider,\n      mint,\n      decimals,\n      amount,\n    )\n    const usdBalance = await getBalance(\n      true,\n      tokenProvider,\n      mint,\n      decimals,\n      amount,\n    )\n    setMintBalance(mintBalance)\n    setUSDBalance(usdBalance)\n  }, [amount, decimals, mint, tokenProvider])\n\n  useEffect(() => {\n    fetchBalance()\n  }, [fetchBalance])\n\n  return (\n    <Row align=\"middle\">\n      <Col flex=\"auto\">\n        <Space>\n          <MintAvatar mintAddress={mint} />\n          <Space size={4}>\n            {numeric(mintBalance).format('0,0.[000]')}\n            <Typography.Text type=\"secondary\">\n              <MintSymbol mintAddress={mint} />\n            </Typography.Text>\n          </Space>\n        </Space>\n      </Col>\n      <Col>\n        <Typography.Text type=\"secondary\">\n          ${numeric(usdBalance).format('0,0.[000]')}\n        </Typography.Text>\n      </Col>\n    </Row>\n  )\n}\n\nexport default MintBalance\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { account, AccountData } from '@senswap/sen-js'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\nimport { Col, Row, Space, Tooltip, Typography } from 'antd'\nimport MintBalance from './mintBalance'\nimport RowSpaceBetween from 'app/components/rowSpaceBetween'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { AppState } from 'app/model'\nimport useTotalUSD from 'app/hooks/useBalance'\nimport { asyncWait, numeric, shortenAddress } from 'shared/util'\n\nconst InfoDAOMaster = ({ daoAddress }: { daoAddress: string }) => {\n  const [copied, setCopied] = useState(false)\n\n  const onCopy = async () => {\n    setCopied(true)\n    await asyncWait(1500)\n    setCopied(false)\n  }\n\n  return (\n    <RowSpaceBetween\n      label=\"Treasury Address\"\n      value={\n        <Space>\n          <Typography.Text className=\"t-16\">\n            {shortenAddress(daoAddress)}\n          </Typography.Text>\n          <Tooltip title=\"Copied\" visible={copied}>\n            <CopyToClipboard text={daoAddress} onCopy={onCopy}>\n              <Typography.Text style={{ cursor: 'pointer' }} className=\"t-16\">\n                <IonIcon name=\"copy-outline\" />\n              </Typography.Text>\n            </CopyToClipboard>\n          </Tooltip>\n        </Space>\n      }\n    />\n  )\n}\n\nconst Treasury = ({ daoAddress }: { daoAddress: string }) => {\n  const [listAccount, setListAccount] = useState<AccountData[]>([])\n  const totalUSD = useTotalUSD({ accounts: listAccount })\n\n  const {\n    dao: { daos },\n  } = useSelector((state: AppState) => state)\n\n  const daoMasterAddress = useMemo(() => {\n    const { master } = daos[daoAddress] || {}\n    return master?.toBase58() || ''\n  }, [daos, daoAddress])\n\n  const fetchAccount = useCallback(async () => {\n    if (!daoMasterAddress) return\n\n    const { splt } = window.sentre\n    const ownerPublicKey = account.fromAddress(daoMasterAddress)\n    const { value } = await splt.connection.getTokenAccountsByOwner(\n      ownerPublicKey,\n      { programId: splt.spltProgramId },\n    )\n    let bulk: AccountData[] = []\n\n    value.forEach(({ account: { data: buf } }) => {\n      const data = splt.parseAccountData(buf)\n      return bulk.push(data)\n    })\n\n    return setListAccount(bulk)\n  }, [daoMasterAddress])\n\n  useEffect(() => {\n    fetchAccount()\n  }, [fetchAccount])\n\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Row align=\"middle\">\n          <Col flex=\"auto\">\n            <Space align=\"baseline\">\n              <Typography.Text type=\"secondary\">\n                Treasury Balance\n              </Typography.Text>\n              <Tooltip\n                placement=\"bottomLeft\"\n                overlayClassName=\"info-member treasury-addr\"\n                title={<InfoDAOMaster daoAddress={daoMasterAddress} />}\n              >\n                <IonIcon\n                  style={{ cursor: 'pointer' }}\n                  name=\"information-circle-outline\"\n                />\n              </Tooltip>\n            </Space>\n          </Col>\n          <Col>\n            <Typography.Title level={4}>\n              ${numeric(totalUSD).format('0,0.[000]')}\n            </Typography.Title>\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[24, 24]} className=\"scrollbar\" style={{ height: 124 }}>\n          {listAccount &&\n            listAccount.map((account) => (\n              <Col span={24} key={account.mint}>\n                <MintBalance account={account} />\n              </Col>\n            ))}\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Treasury\n","import { Card, Tabs } from 'antd'\nimport Treasury from './treasury'\n\nconst DaoOwnerAssets = ({ daoAddress }: { daoAddress: string }) => {\n  return (\n    <Card bordered={false}>\n      <Tabs className=\"dao-assets\">\n        <Tabs.TabPane tab=\"Treasury\" key=\"treasury\">\n          <Treasury daoAddress={daoAddress} />\n        </Tabs.TabPane>\n        <Tabs.TabPane tab=\"NFTs\" key=\"nft\" disabled />\n      </Tabs>\n    </Card>\n  )\n}\n\nexport default DaoOwnerAssets\n","import { useState } from 'react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\nimport { Col, Row, Space, Tooltip, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport useMembers from 'app/hooks/useMembers'\nimport useMetaData from 'app/hooks/useMetaData'\nimport { asyncWait, numeric, shortenAddress } from 'shared/util'\n\nconst InfoMember = ({ daoAddress }: { daoAddress: string }) => {\n  const [copied, setCopied] = useState('address')\n  const metaData = useMetaData(daoAddress)\n\n  const onCopy = async (address: string) => {\n    setCopied(address)\n    await asyncWait(1500)\n    setCopied('address')\n  }\n\n  return (\n    <Row gutter={[8, 8]}>\n      {metaData?.members.map(({ name, walletAddress }, index) => (\n        <Col span={24} key={walletAddress + index}>\n          <Row>\n            <Col flex=\"auto\">\n              <Typography.Text key={index} className=\"t-16\">\n                {name}\n              </Typography.Text>\n            </Col>\n            <Col>\n              <Space>\n                <Typography.Text type=\"secondary\">\n                  {shortenAddress(walletAddress)}\n                </Typography.Text>\n                <Tooltip title=\"Copied\" visible={copied === walletAddress}>\n                  <CopyToClipboard\n                    text={walletAddress}\n                    onCopy={() => onCopy(walletAddress)}\n                  >\n                    <Typography.Text\n                      style={{ cursor: 'pointer' }}\n                      type=\"secondary\"\n                    >\n                      <IonIcon name=\"copy-outline\" />\n                    </Typography.Text>\n                  </CopyToClipboard>\n                </Tooltip>\n              </Space>\n            </Col>\n          </Row>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nconst AmountMembers = ({ daoAddress }: { daoAddress: string }) => {\n  const members = useMembers(daoAddress)\n  const metaData = useMetaData(daoAddress)\n\n  const isMultisigDAO = metaData?.daoType === 'multisig-dao'\n\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space align=\"baseline\">\n          <Typography.Text className=\"caption\" type=\"secondary\">\n            Members\n          </Typography.Text>\n          {isMultisigDAO && (\n            <Tooltip\n              placement=\"bottomLeft\"\n              overlayClassName=\"info-member\"\n              title={<InfoMember daoAddress={daoAddress} />}\n            >\n              <IonIcon\n                style={{ cursor: 'pointer' }}\n                name=\"information-circle-outline\"\n              />\n            </Tooltip>\n          )}\n        </Space>\n      </Col>\n      <Col span={24}> {numeric(members).format('0,0')}</Col>\n    </Row>\n  )\n}\nexport default AmountMembers\n","import { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { SystemProgram } from '@solana/web3.js'\nimport BN from 'bn.js'\nimport { useUI, useWallet } from '@senhub/providers'\n\nimport { Avatar, Button, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport StatisticCard from 'app/components/statisticCard'\nimport RegimeTag from 'app/components/regimeTag'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport GradientAvatar from 'app/components/gradientAvatar'\nimport DaoOwnerAssets from './daoOwnerAssets'\nimport AmountMembers from './members'\n\nimport { AppState } from 'app/model'\nimport { numeric, shortenAddress } from 'shared/util'\nimport useMetaData from 'app/hooks/useMetaData'\nimport { getIcon, validURL } from 'app/helpers'\nimport configs from 'app/configs'\n\nimport './index.less'\n\nexport type DaoDetailsProps = { daoAddress: string }\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst DaoDetails = ({ daoAddress }: DaoDetailsProps) => {\n  const daos = useSelector((state: AppState) => state.dao.daos)\n  const {\n    ui: { width },\n  } = useUI()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const metaData = useMetaData(daoAddress)\n  const history = useHistory()\n\n  const { regime, nonce, mint, authority } = daos?.[daoAddress] || {\n    regime: {},\n    nonce: new BN(0),\n    mint: SystemProgram.programId,\n  }\n\n  const editDAO = () => {\n    return history.push(`/app/${appId}/dao/${daoAddress}/edit`)\n  }\n\n  const mobileScreen = width < 768\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col xs={24} md={16}>\n        <Card bordered={false}>\n          <Row gutter={[16, 16]}>\n            <Col span={24}>\n              <Row>\n                <Col flex=\"auto\">\n                  <Row gutter={[16, 16]}>\n                    <Col>\n                      {!metaData?.image ? (\n                        <GradientAvatar\n                          seed={daoAddress}\n                          avatarProps={{ shape: 'square', size: 56 }}\n                        />\n                      ) : (\n                        <Avatar\n                          shape=\"square\"\n                          size={56}\n                          src={metaData?.image}\n                        />\n                      )}\n                    </Col>\n                    <Col flex={mobileScreen ? 'auto' : undefined}>\n                      <Space direction=\"vertical\" size={0}>\n                        <Typography.Title level={4}>\n                          {metaData?.daoName\n                            ? metaData.daoName\n                            : shortenAddress(daoAddress)}\n                        </Typography.Title>\n                        <Space size={0} style={{ marginLeft: -3 }}>\n                          {(metaData?.optionals || []).map(\n                            (url, idx) =>\n                              validURL(url) && (\n                                <Button\n                                  size=\"small\"\n                                  type=\"text\"\n                                  onClick={() => window.open(url, '_blank')}\n                                  icon={<IonIcon name={getIcon(url)} />}\n                                  key={idx}\n                                />\n                              ),\n                          )}\n                        </Space>\n                      </Space>\n                    </Col>\n                  </Row>\n                </Col>\n                <Col>\n                  <Button\n                    type=\"text\"\n                    size=\"large\"\n                    onClick={editDAO}\n                    disabled={\n                      authority && walletAddress !== authority.toBase58()\n                    }\n                    style={{\n                      marginRight: -10,\n                      marginTop: -20,\n                    }}\n                    icon={<IonIcon name=\"open-outline\" />}\n                  />\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24}>\n              <Row gutter={[36, 16]}>\n                <Col xs={12} sm={6}>\n                  <StatisticCard\n                    title=\"Proposals\"\n                    value={numeric(Number(nonce)).format('0,0')}\n                  />\n                </Col>\n                <Col xs={12} sm={6}>\n                  <AmountMembers daoAddress={daoAddress} />\n                </Col>\n                <Col xs={12} sm={6}>\n                  <StatisticCard\n                    title=\"Vote by\"\n                    value={\n                      <Space>\n                        <MintAvatar mintAddress={mint.toBase58()} />\n                        <MintSymbol mintAddress={mint.toBase58()} />\n                      </Space>\n                    }\n                  />\n                </Col>\n                <Col xs={12} sm={6}>\n                  <StatisticCard\n                    title=\"Regime\"\n                    value={<RegimeTag regime={regime} />}\n                  />\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24} className=\"scrollbar\" style={{ height: 66 }}>\n              <Typography.Paragraph\n                type=\"secondary\"\n                ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n                style={{ margin: 0 }}\n              >\n                {metaData?.description}\n              </Typography.Paragraph>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col xs={24} md={8}>\n        <DaoOwnerAssets daoAddress={daoAddress} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoDetails\n","import { useHistory, useParams } from 'react-router-dom'\n\nimport { Button, Col, Row } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ProposalList from './proposalList'\nimport DaoDetails from '../dao/daoDetails'\n\nimport configs from 'app/configs'\nimport './index.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst Proposal = () => {\n  const history = useHistory()\n  const { daoAddress } = useParams<{ daoAddress: string }>()\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\" align=\"middle\">\n      <Col xs={24} lg={18}>\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Button\n              icon={<IonIcon name=\"arrow-back-outline\" />}\n              type=\"text\"\n              onClick={() => history.push(`/app/${appId}/dao`)}\n              style={{ marginLeft: -8 }}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col span={24}>\n            <DaoDetails daoAddress={daoAddress} />\n          </Col>\n        </Row>\n      </Col>\n      <Col xs={24} lg={18}>\n        <ProposalList daoAddress={daoAddress} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Proposal\n","import { ConsensusMechanism, ConsensusMechanisms } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\nimport { useUI } from '@senhub/providers'\n\nimport { Button, Row, Col, Space, Typography, Popover } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nexport type ConsensusMechanismInputProps = {\n  value: ConsensusMechanism\n  onChange: (value: ConsensusMechanism) => void\n}\n\nconst ConsensusMechanismInput = ({\n  value = ConsensusMechanisms.StakedTokenCounter,\n  onChange = () => {},\n}: ConsensusMechanismInputProps) => {\n  const {\n    ui: { infix },\n  } = useUI()\n  const mobileScreen = infix === 'xs'\n  const mobileSpan = mobileScreen ? 12 : undefined\n\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space>\n          <Typography.Text>Consensus Mechanism</Typography.Text>\n          <Popover\n            overlayStyle={{ maxWidth: 300 }}\n            trigger=\"click\"\n            content={\n              <Row gutter={[16, 16]}>\n                <Col span={24}>\n                  <Typography.Title level={5}>\n                    What are Consensus Mechanisms?\n                  </Typography.Title>\n                </Col>\n                <Col span={24}>\n                  <Space direction=\"vertical\">\n                    <Typography.Text>\n                      <strong>Staked (Token) Counter.</strong> The power of a\n                      vote is only counted based on the number of staked tokens.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Locked (Token) Counter.</strong> The power of a\n                      vote is the product of the number of staked tokens and the\n                      lock time in seconds.\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            }\n          >\n            <Button\n              type=\"text\"\n              size=\"small\"\n              icon={<IonIcon name=\"information-circle-outline\" />}\n            />\n          </Popover>\n        </Space>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusMechanisms.StakedTokenCounter)\n              ? ''\n              : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusMechanisms.StakedTokenCounter)}\n          block\n        >\n          Staked Counter\n        </Button>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusMechanisms.LockedTokenCounter)\n              ? ''\n              : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusMechanisms.LockedTokenCounter)}\n          block\n        >\n          Locked Counter\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ConsensusMechanismInput\n","import { ConsensusQuorum, ConsensusQuorums } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\nimport { useUI } from '@senhub/providers'\n\nimport { Button, Row, Col, Typography } from 'antd'\n\nexport type ConsensusQuorumInputProps = {\n  value: ConsensusQuorum\n  onChange: (value: ConsensusQuorum) => void\n}\n\nconst ConsensusQuorumInput = ({\n  value = ConsensusQuorums.Half,\n  onChange = () => {},\n}: ConsensusQuorumInputProps) => {\n  const {\n    ui: { infix },\n  } = useUI()\n  const mobileScreen = infix === 'xs'\n  const mobileSpan = mobileScreen ? 8 : undefined\n\n  return (\n    <Row gutter={[12, 12]}>\n      <Col span={24}>\n        <Typography.Text>Consensus Quorum</Typography.Text>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusQuorums.OneThird) ? '' : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusQuorums.OneThird)}\n          block\n        >\n          1/3\n        </Button>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusQuorums.Half) ? '' : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusQuorums.Half)}\n          block\n        >\n          1/2\n        </Button>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusQuorums.TwoThird) ? '' : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusQuorums.TwoThird)}\n          block\n        >\n          2/3\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ConsensusQuorumInput\n","import moment from 'moment'\n\nimport { Col, DatePicker, Row, Typography } from 'antd'\n\nexport type DurationInputType = {\n  value: Array<number>\n  onChange: (value: Array<number>) => void\n}\n\nconst DurationInput = ({ value, onChange }: DurationInputType) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Typography.Text>Proposal Duration</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[12, 12]}>\n          <Col span={12}>\n            <DatePicker\n              placeholder=\"Start Date\"\n              value={moment(value[0])}\n              onChange={(e) => onChange([e?.valueOf() || value[0], value[1]])}\n              showTime\n              style={{ width: '100%' }}\n            />\n          </Col>\n          <Col span={12}>\n            <DatePicker\n              placeholder=\"End Date\"\n              value={moment(value[1])}\n              onChange={(e) => onChange([value[0], e?.valueOf() || value[1]])}\n              showTime\n              style={{ width: '100%' }}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DurationInput\n","import { useSelector } from 'react-redux'\nimport { DaoData } from '@interdao/core'\nimport { SystemProgram } from '@solana/web3.js'\n\nimport { Col, Row, Space } from 'antd'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport StatisticCard from 'app/components/statisticCard'\nimport RegimeTag from 'app/components/regimeTag'\n\nimport { AppState } from 'app/model'\nimport { numeric, shortenAddress } from 'shared/util'\nimport useMembers from 'app/hooks/useMembers'\n\nexport type ProposalPreviewProps = {\n  daoAddress: string\n}\n\nconst ProposalPreview = ({ daoAddress }: ProposalPreviewProps) => {\n  const {\n    dao: { daos },\n  } = useSelector((state: AppState) => state)\n\n  const { regime, mint } =\n    daos[daoAddress] ||\n    ({\n      regime: {},\n      mint: SystemProgram.programId,\n    } as DaoData)\n  const members = useMembers(daoAddress)\n\n  return (\n    <Row gutter={[36, 16]}>\n      <Col xs={12} md={5}>\n        <StatisticCard title=\"DAO Address\" value={shortenAddress(daoAddress)} />\n      </Col>\n      <Col xs={12} md={5}>\n        <StatisticCard\n          title=\"Token\"\n          value={\n            <Space>\n              <MintAvatar mintAddress={mint.toBase58()} />\n              <MintSymbol mintAddress={mint.toBase58()} />\n            </Space>\n          }\n        />\n      </Col>\n      <Col xs={12} md={5}>\n        <StatisticCard title=\"Members\" value={numeric(members).format('0,0')} />\n      </Col>\n      <Col xs={12} md={5}>\n        <StatisticCard title=\"Regime\" value={<RegimeTag regime={regime} />} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProposalPreview\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  ConsensusMechanisms,\n  ConsensusQuorums,\n  FeeOptions,\n} from '@interdao/core'\nimport BN from 'bn.js'\nimport { CID } from 'ipfs-core'\n\nimport { Button, Card, Col, Divider, Input, Row, Space, Typography } from 'antd'\nimport ConsensusMechanismInput from './consensusMechanismInput'\nimport ConsensusQuorumInput from '../../../components/consensusQuorumInput'\nimport DurationInput from './durationInput'\nimport ProposalPreview from './proposalPreview'\n\nimport configs from 'app/configs'\nimport { explorer } from 'shared/util'\nimport IPFS from 'shared/pdb/ipfs'\nimport { AppState } from 'app/model'\nimport { clearTx } from 'app/model/template.controller'\nimport useMetaData from 'app/hooks/useMetaData'\n\nconst {\n  sol: { interDao, taxman, fee },\n  manifest: { appId },\n} = configs\n\nexport type ProposalMetaData = {\n  title: string\n  description: string\n  templateName: string\n}\n\nconst CURRENT_TIME = Number(new Date())\nconst ONE_DAY = 24 * 60 * 60 * 1000\n\nconst ProposalInitialization = () => {\n  const [consensusMechanism, setConsensusMechanism] = useState(\n    ConsensusMechanisms.StakedTokenCounter,\n  )\n  const [consensusQuorum, setConsensusQuorum] = useState(ConsensusQuorums.Half)\n  const [duration, setDuration] = useState([\n    CURRENT_TIME + ONE_DAY,\n    CURRENT_TIME + 15 * ONE_DAY,\n  ])\n  const [loading, setLoading] = useState(false)\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const { daoAddress } = useParams<{ daoAddress: string }>()\n  const {\n    template: { tx, templateName },\n    dao: { daos },\n  } = useSelector((state: AppState) => state)\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const daoMetaData = useMetaData(daoAddress)\n\n  const disabled = !title || !description\n  const isMultisigDAO = daoMetaData?.daoType === 'multisig-dao'\n\n  const proposalMetaData: ProposalMetaData = useMemo(() => {\n    return {\n      title,\n      description,\n      templateName,\n    }\n  }, [description, templateName, title])\n\n  const newProposal = useCallback(async () => {\n    const { authority } = daos[daoAddress]\n    if (!tx) return\n\n    try {\n      setLoading(true)\n\n      const ipfs = new IPFS()\n      const cid = await ipfs.set(proposalMetaData)\n      const {\n        multihash: { digest },\n      } = CID.parse(cid)\n\n      const feeOption: Partial<FeeOptions> = {\n        revenue: new BN(fee),\n        revenuemanAddress: authority.toBase58(),\n        tax: new BN(fee),\n        taxmanAddress: taxman,\n      }\n\n      const { programId, data, accounts } = tx\n\n      const metadata = Buffer.from(digest)\n      const valueAccounts = Object.values(accounts)\n      const { txId, proposalAddress } = await interDao.initializeProposal(\n        daoAddress,\n        programId.toBase58(),\n        data,\n        valueAccounts.map(({ pubkey }) => pubkey),\n        valueAccounts.map(({ isSigner }) => isSigner),\n        valueAccounts.map(({ isWritable }) => isWritable),\n        valueAccounts.map(({ isMaster }) => isMaster),\n        Math.floor(duration[0] / 1000),\n        Math.floor(duration[1] / 1000),\n        metadata,\n        consensusMechanism,\n        consensusQuorum,\n        feeOption,\n      )\n      window.notify({\n        type: 'success',\n        description:\n          'Create a new proposal successfully. Click here to view details.',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n\n      //Clear tx in redux\n      dispatch(clearTx())\n\n      return history.push(\n        `/app/${appId}/dao/${daoAddress}/proposal/${proposalAddress}`,\n      )\n    } catch (er: any) {\n      return window.notify({\n        type: 'error',\n        description: er.message,\n      })\n    } finally {\n      return setLoading(false)\n    }\n  }, [\n    daos,\n    daoAddress,\n    proposalMetaData,\n    tx,\n    duration,\n    consensusMechanism,\n    consensusQuorum,\n    dispatch,\n    history,\n  ])\n\n  useEffect(() => {\n    if (!tx) return history.push(`/app/${appId}/dao/${daoAddress}`)\n  }, [daoAddress, history, tx])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col xs={24} md={14}>\n        <Card bordered={false}>\n          <Row gutter={[24, 24]}>\n            <Col span={24}>\n              <Typography.Title level={1}>\n                Input proposal information\n              </Typography.Title>\n            </Col>\n            <Col span={24} />\n            <Col span={24}>\n              <ProposalPreview daoAddress={daoAddress} />\n            </Col>\n            <Col span={24}>\n              <Divider className=\"proposal-initialize\" />\n            </Col>\n            <Col span={24}>\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <Typography.Text>Title</Typography.Text>\n                <Input\n                  value={title}\n                  placeholder=\"A short summary of your proposal.\"\n                  className=\"border-less\"\n                  onChange={(e) => setTitle(e.target.value)}\n                />\n              </Space>\n            </Col>\n            <Col span={24}>\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <Typography.Text>Description</Typography.Text>\n                <Input.TextArea\n                  placeholder=\"More detail about your proposal...\"\n                  name=\"description\"\n                  className=\"border-less\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </Space>\n            </Col>\n            <Col span={24}>\n              <DurationInput value={duration} onChange={setDuration} />\n            </Col>\n            {!isMultisigDAO && (\n              <Col span={24}>\n                <ConsensusMechanismInput\n                  value={consensusMechanism}\n                  onChange={setConsensusMechanism}\n                />\n              </Col>\n            )}\n            <Col span={24}>\n              <ConsensusQuorumInput\n                value={consensusQuorum}\n                onChange={setConsensusQuorum}\n              />\n            </Col>\n            <Col span={24} />\n            <Col flex=\"auto\">\n              <Button\n                type=\"text\"\n                onClick={() => history.push(`/app/${appId}/dao/${daoAddress}`)}\n                size=\"large\"\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col>\n              <Button\n                onClick={newProposal}\n                loading={loading}\n                type=\"primary\"\n                size=\"large\"\n                disabled={disabled}\n              >\n                Add a new Proposal\n              </Button>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProposalInitialization\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { Card, Col, Radio, RadioChangeEvent, Row, Typography } from 'antd'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setInitMetadata } from 'app/model/metadata.controller'\n\nconst DAO_TYPE = [\n  {\n    key: 'flexible-dao',\n    label: 'Flexible DAO',\n    description:\n      'The Flexible DAO has 3 regimes that allow you to create a DAO customized for your individual requirements, community structure, and governance token setup.',\n    state: 1,\n  },\n  {\n    key: 'multisig-dao',\n    label: 'MultiSig DAO',\n    description:\n      'The Multisig DAO allows you to create an organization for your team members with Autonomous regime and jointly own, manage shared assets such as treasury accounts, NFTs or mints.',\n    state: 0,\n  },\n]\n\nconst ChooseDaoType = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const daoType = useSelector(\n    (state: AppState) => state.metadata.initMetadata.daoType,\n  )\n\n  const cardBorder = (key: string) =>\n    daoType !== key ? { borderColor: 'transparent' } : {}\n\n  const selectDaoType = async (e: RadioChangeEvent) => {\n    const daoType = e.target.value\n    dispatch(setInitMetadata({ daoType }))\n  }\n\n  return (\n    <Row>\n      <Col span={24}>\n        <Radio.Group\n          defaultValue={daoType}\n          onChange={selectDaoType}\n          className=\"btn-radio-card\"\n        >\n          <Row gutter={[24, 24]}>\n            {DAO_TYPE.map(({ key, label, description, state }) => (\n              <Col xs={24} md={12} key={key}>\n                <Radio.Button value={key} style={{ border: 'none' }}>\n                  <Card\n                    style={{ ...cardBorder(key) }}\n                    className={`group-btn-card ${key} ${\n                      daoType === key ? 'active' : ''\n                    }`}\n                    bordered={false}\n                  >\n                    <Row gutter={[12, 12]}>\n                      <Col span={24}>\n                        <Row>\n                          <Col flex=\"auto\">\n                            <Typography.Title level={4}>\n                              {label}\n                            </Typography.Title>\n                          </Col>\n                        </Row>\n                      </Col>\n                      <Col span={24}>\n                        <Typography.Text type=\"secondary\">\n                          {description}\n                        </Typography.Text>\n                      </Col>\n                    </Row>\n                  </Card>\n                </Radio.Button>\n              </Col>\n            ))}\n          </Row>\n        </Radio.Group>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ChooseDaoType\n","import { useSelector } from 'react-redux'\nimport { useUI } from '@senhub/providers'\n\nimport { Col, Image, Row, Space, Typography } from 'antd'\nimport CardRegime from '../components/cardRegime'\n\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport { AppState } from 'app/model'\nimport { numeric } from 'shared/util'\n\nconst MAX_WIDTH_RATIO = 24 / 16\nconst PAGE_SPACING = 24\nconst HEIGHT_RATIO = 1.777777\n\nconst ReviewAndCreate = () => {\n  const {\n    dao: { initDao },\n    metadata: { initMetadata },\n  } = useSelector((state: AppState) => state)\n  const {\n    ui: { width },\n  } = useUI()\n\n  const { regime, mintAddress, supply } = initDao\n  const { daoName, description, image } = initMetadata\n  const isMobile = width < 768\n  const desktopWidth = width > 992 ? width / MAX_WIDTH_RATIO : width\n  const logoSize = isMobile\n    ? '100%'\n    : (desktopWidth - 6 - PAGE_SPACING * 4) / HEIGHT_RATIO / 2 + 3\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col xs={24} md={12}>\n        <Space direction=\"vertical\" size={24} style={{ width: '100%' }}>\n          <Space direction=\"vertical\">\n            <Typography.Text type=\"secondary\">Name of DAO</Typography.Text>\n            <Typography.Title level={1}>{daoName}</Typography.Title>\n          </Space>\n          <Space direction=\"vertical\" style={{ width: '100%' }}>\n            <Typography.Text>DAO Regime</Typography.Text>\n            <CardRegime regime={regime} />\n          </Space>\n        </Space>\n      </Col>\n      <Col xs={24} md={12}>\n        <Space direction=\"vertical\" size={24}>\n          <Space direction=\"vertical\">\n            <Typography.Text type=\"secondary\">Token to vote</Typography.Text>\n            <Space>\n              <MintAvatar mintAddress={mintAddress} size={48} />\n              <Typography.Title level={1}>\n                <MintSymbol mintAddress={mintAddress} />\n              </Typography.Title>\n            </Space>\n          </Space>\n          <Space direction=\"vertical\" className=\"dao-logo-img\">\n            <Typography.Text>DAO Logo</Typography.Text>\n            <Image\n              style={{ width: logoSize, height: logoSize }}\n              src={image?.toString()}\n              preview={false}\n            />\n          </Space>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Text type=\"secondary\">Total power</Typography.Text>\n          <Typography.Title level={1}>\n            {numeric(supply?.toNumber()).format('0,0.[00]')}\n          </Typography.Title>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Text type=\"secondary\">Description</Typography.Text>\n          <Typography.Text>{description}</Typography.Text>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ReviewAndCreate\n","import { useSelector } from 'react-redux'\n\nimport { Col, Image, Row, Space, Typography } from 'antd'\nimport RowSpaceVertical from 'app/components/rowSpaceVertical'\nimport CardRegime from '../components/cardRegime'\n\nimport { AppState } from 'app/model'\nimport { useUI } from '@senhub/providers'\n\nconst PAGE_SPACING = 24\nconst HEIGHT_RATIO = 1.777777\nconst MAX_WIDTH_RATIO = 24 / 16\n\nconst ReviewAndCreate = () => {\n  const {\n    dao: { initDao },\n    metadata: { initMetadata },\n  } = useSelector((state: AppState) => state)\n  const { regime } = initDao\n  const { image, description, daoName, members } = initMetadata\n\n  const {\n    ui: { width },\n  } = useUI()\n\n  const isMobile = width < 768\n  const desktopWidth = width > 992 ? width / MAX_WIDTH_RATIO : width\n  const logoSize = isMobile\n    ? '100%'\n    : (desktopWidth - 6 - PAGE_SPACING * 4) / HEIGHT_RATIO / 2 + 3\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row justify=\"space-between\">\n          <Col>\n            <RowSpaceVertical\n              label=\"Name of DAO\"\n              value={<Typography.Title level={1}>{daoName}</Typography.Title>}\n            />\n          </Col>\n        </Row>\n      </Col>\n      <Col xs={24} md={12}>\n        <RowSpaceVertical\n          label=\"DAO Regime\"\n          value={<CardRegime regime={regime} />}\n        />\n      </Col>\n      <Col xs={24} md={12}>\n        <RowSpaceVertical\n          label=\"DAO Regime\"\n          value={\n            <Image\n              style={{ width: logoSize, height: logoSize }}\n              src={image?.toString()}\n              preview={false}\n            />\n          }\n        />\n      </Col>\n      <Col span={24}>\n        <Row gutter={[8, 8]}>\n          <Col span={24}>\n            <Typography.Text type=\"secondary\">\n              {members.length} members\n            </Typography.Text>\n          </Col>\n          {members.map(({ walletAddress, name }) => (\n            <Col span={24} key={walletAddress}>\n              <Space>\n                <Typography.Title level={4}>{name}</Typography.Title>\n                <Typography.Title level={4} type=\"secondary\">\n                  {walletAddress}\n                </Typography.Title>\n              </Space>\n            </Col>\n          ))}\n        </Row>\n      </Col>\n      <Col span={24}>\n        <RowSpaceVertical\n          label=\"Description\"\n          value={\n            <Typography.Paragraph style={{ margin: 0 }}>\n              {description}\n            </Typography.Paragraph>\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default ReviewAndCreate\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\nimport BN from 'bn.js'\n\n/**\n * Get token's total supply. This hook needs MintProvider for working.\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * @param mintAddress Mint address\n * @returns Decimals\n */\nconst useMintSupply = (mintAddress: string) => {\n  const [supply, setSupply] = useState<BN | undefined>(undefined)\n  const { getMint } = useMint()\n\n  const fetchSupply = useCallback(async () => {\n    try {\n      const {\n        [mintAddress]: { supply },\n      } = await getMint({ address: mintAddress })\n      return setSupply(new BN(supply.toString()))\n    } catch (er: any) {\n      return setSupply(undefined)\n    }\n  }, [mintAddress, getMint])\n\n  useEffect(() => {\n    fetchSupply()\n  }, [fetchSupply])\n\n  return supply\n}\n\nexport default useMintSupply\n","import BN from 'bn.js'\n\nimport { Button, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport NumericInput from 'shared/antd/numericInput'\n\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport useMintSupply from 'shared/hooks/useMintSupply'\nimport { numeric } from 'shared/util'\n\nexport type CirculatingSupplyInputProps = {\n  mintAddress?: string\n  value: string\n  onChange: (value: string) => void\n}\n\nconst CirculatingSupplyInput = ({\n  mintAddress = '',\n  value,\n  onChange,\n}: CirculatingSupplyInputProps) => {\n  const decimals = useMintDecimals(mintAddress) || 0\n  const supply = useMintSupply(mintAddress)\n  const suggestion = String(supply?.div(new BN(10 ** decimals)) || new BN(0))\n\n  return (\n    <Row gutter={[8, 8]} justify=\"end\">\n      <Col span={24}>\n        <Typography.Text>Total DAO Power</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <NumericInput\n          value={value}\n          onValue={onChange}\n          className=\"border-less\"\n          size=\"large\"\n          placeholder=\"Input Total DAO Power\"\n          suffix={\n            <Button\n              type=\"text\"\n              onClick={() => onChange(suggestion)}\n              icon={<IonIcon name=\"copy-outline\" />}\n              style={{ marginRight: -7 }}\n            >\n              By Suggestion\n            </Button>\n          }\n        />\n      </Col>\n      <Col>\n        <Space>\n          <Typography.Text type=\"secondary\">\n            Suggestion (Token Supply):\n          </Typography.Text>\n          <Typography.Text>{numeric(suggestion).format('0,0')}</Typography.Text>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CirculatingSupplyInput\n","import { Col, Input, Row, Typography } from 'antd'\nimport { MintSelection } from 'shared/antd/mint'\n\nexport type TokenAddressInputProps = {\n  value: string\n  onChange: (value: string) => void\n}\n\nconst TokenAddressInput = ({ value, onChange }: TokenAddressInputProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Typography.Text>Token to Vote</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <Input\n          size=\"large\"\n          placeholder=\"Input Token Address\"\n          value={value}\n          className=\"border-less\"\n          onChange={(e) => onChange(e.target.value || '')}\n          suffix={\n            <MintSelection\n              value={value}\n              onChange={onChange}\n              style={{ marginRight: -7 }}\n            />\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default TokenAddressInput\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\nimport {\n  DaoData,\n  DAO_DISCRIMINATOR,\n  DaoRegime,\n  DaoRegimes,\n} from '@interdao/core'\nimport { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { web3 } from '@project-serum/anchor'\nimport BN from 'bn.js'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport const DEFAULT_DAO_DATA = {\n  mintAddress: '',\n  supply: new BN(0),\n  metadata: undefined,\n  dao: undefined,\n  regime: DaoRegimes.Dictatorial,\n}\n\nexport type InitDao = {\n  mintAddress: string\n  supply: BN\n  metadata?: Buffer\n  dao?: web3.Keypair\n  regime: DaoRegime\n}\n\nexport type DaoState = {\n  daos: Record<string, DaoData>\n  initDao: InitDao\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'dao'\nconst initialState: DaoState = {\n  daos: {},\n  initDao: DEFAULT_DAO_DATA,\n}\n\n/**\n * Actions\n */\n\nexport const getDaos = createAsyncThunk(`${NAME}/getDaos`, async () => {\n  const {\n    provider: { connection },\n    programId,\n    account: { dao },\n  } = interDao.program\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await connection.getProgramAccounts(programId, {\n      filters: [\n        { dataSize: dao.size },\n        {\n          memcmp: {\n            offset: 0,\n            bytes: DAO_DISCRIMINATOR,\n          },\n        },\n      ],\n    })\n  let bulk: Record<string, DaoData> = {}\n  value.forEach(({ pubkey, account: { data: buf } }) => {\n    const address = pubkey.toBase58()\n    const data = interDao.parseDaoData(buf)\n    bulk[address] = { ...data }\n  })\n  return { daos: bulk }\n})\n\nexport const getDao = createAsyncThunk<\n  Partial<DaoState>,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getDao`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    dao: {\n      daoData: { [address]: data },\n    },\n  } = getState()\n  if (data && !force) return { [address]: data }\n  const raw = await interDao.getDaoData(address)\n  return {\n    [address]: {\n      ...raw,\n    },\n  }\n})\n\nexport const upsetDao = createAsyncThunk<\n  Partial<DaoState>,\n  { address: string; data: DaoData },\n  { state: any }\n>(`${NAME}/upsetDao`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return {\n    [address]: { ...data },\n  }\n})\n\nexport const setInitDao = createAsyncThunk(\n  `${NAME}/setInitDao`,\n  async (initDao?: InitDao) => {\n    if (!initDao) return { initDao: DEFAULT_DAO_DATA }\n    return { initDao }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getDaos.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getDao.fulfilled,\n        (state, { payload }) => void Object.assign(state.daos, payload),\n      )\n      .addCase(\n        upsetDao.fulfilled,\n        (state, { payload }) => void Object.assign(state.daos, payload),\n      )\n      .addCase(\n        setInitDao.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useDispatch, useSelector } from 'react-redux'\nimport BN from 'bn.js'\n\nimport { Col, Row } from 'antd'\nimport RegimeInput from './regimeInput'\nimport CirculatingSupplyInput from './circulatingSupplyInput'\nimport TokenAddressInput from './tokenAddressInput'\nimport { AppDispatch, AppState } from 'app/model'\nimport { setInitDao } from 'app/model/dao.controller'\n\nimport './index.less'\n\nconst DaoRule = () => {\n  const {\n    dao: { initDao },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { mintAddress, supply, regime } = initDao\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <RegimeInput\n          value={regime}\n          onChange={(regime) => dispatch(setInitDao({ ...initDao, regime }))}\n        />\n      </Col>\n      <Col span={24}>\n        <TokenAddressInput\n          value={mintAddress}\n          onChange={(mintAddress) =>\n            dispatch(setInitDao({ ...initDao, mintAddress }))\n          }\n        />\n      </Col>\n      <Col span={24}>\n        <CirculatingSupplyInput\n          mintAddress={mintAddress}\n          value={supply?.toString()}\n          onChange={(supply) =>\n            dispatch(setInitDao({ ...initDao, supply: new BN(supply) }))\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoRule\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { DaoRegimes } from '@interdao/core'\n\nimport { Col, Row, Typography } from 'antd'\nimport CardRegime from '../../components/cardRegime'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setInitDao } from 'app/model/dao.controller'\n\nconst Regime = () => {\n  const {\n    dao: { initDao },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n  const { regime } = initDao\n\n  useEffect(() => {\n    if (regime === DaoRegimes.Autonomous) return\n    dispatch(setInitDao({ ...initDao, regime: DaoRegimes.Autonomous }))\n  }, [initDao, dispatch, regime])\n\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Typography.Text>DAO Regime</Typography.Text>\n      </Col>\n      <Col xs={24} md={8}>\n        <CardRegime\n          value={DaoRegimes.Autonomous}\n          regime={DaoRegimes.Autonomous}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Regime\n","import { ChangeEvent } from 'react'\n\nimport { Button, Col, Input, Row } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { DAOMember } from 'app/model/metadata.controller'\n\ntype MemberInputProps = {\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void\n  disabledBtn?: boolean\n  disabledWalletInput?: boolean\n  disabledName?: boolean\n  remove?: () => void\n} & DAOMember\n\nconst MemberInput = ({\n  name = '',\n  walletAddress = '',\n  onChange,\n  disabledBtn = false,\n  disabledWalletInput = false,\n  disabledName = false,\n  remove = () => {},\n}: MemberInputProps) => {\n  return (\n    <Row gutter={[12, 12]}>\n      <Col span={4}>\n        <Input\n          className=\"border-less\"\n          onChange={onChange}\n          value={name}\n          placeholder=\"Name\"\n          name=\"name\"\n          disabled={disabledName}\n        />\n      </Col>\n      <Col span={18}>\n        <Input\n          className=\"border-less\"\n          value={walletAddress}\n          placeholder=\"Input wallet address\"\n          disabled={disabledWalletInput}\n          name=\"walletAddress\"\n          onChange={onChange}\n        />\n      </Col>\n      <Col span={2}>\n        <Button\n          disabled={disabledBtn}\n          type=\"text\"\n          icon={<IonIcon name=\"trash-outline\" />}\n          onClick={remove}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default MemberInput\n","import { ChangeEvent, useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useWallet } from '@senhub/providers'\n\nimport { Button, Col, Row, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport MemberInput from './memberInput'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setInitMetadata } from 'app/model/metadata.controller'\n\nconst MY_INDEX = 0\nconst DAOMembers = () => {\n  const {\n    wallet: { address: myAddress },\n  } = useWallet()\n  const {\n    metadata: { initMetadata },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n  const { members } = initMetadata\n\n  const setDefaultValue = useCallback(() => {\n    if (members.length) return\n    const DEFAULT_MEMBER = [{ name: '', walletAddress: myAddress }]\n    return dispatch(setInitMetadata({ members: DEFAULT_MEMBER }))\n  }, [dispatch, members.length, myAddress])\n\n  const addMember = () => {\n    const nextMembers = [...members]\n    nextMembers.push({ name: '', walletAddress: '' })\n    return dispatch(setInitMetadata({ members: nextMembers }))\n  }\n\n  const onChangeMember = (e: ChangeEvent<HTMLInputElement>, index: number) => {\n    const nextMembers = [...members]\n    nextMembers[index] = {\n      ...nextMembers[index],\n      [e.target.name]: e.target.value,\n    }\n    return dispatch(setInitMetadata({ members: nextMembers }))\n  }\n\n  const onChangeMyName = (e: ChangeEvent<HTMLInputElement>) => {\n    const nextMembers = [...members]\n    nextMembers[MY_INDEX] = { ...nextMembers[MY_INDEX], name: e.target.value }\n    return dispatch(setInitMetadata({ members: nextMembers }))\n  }\n\n  const remove = (index: number) => {\n    const nextMembers = [...members]\n    nextMembers.splice(index, 1)\n    return dispatch(setInitMetadata({ members: nextMembers }))\n  }\n\n  useEffect(() => {\n    setDefaultValue()\n  }, [setDefaultValue])\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Typography.Title level={4}>\n          People who'll be part of your team.\n        </Typography.Title>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[12, 12]}>\n          <Col span={24} key={myAddress}>\n            {members.length && (\n              <MemberInput\n                name={members[MY_INDEX].name}\n                walletAddress={myAddress}\n                onChange={onChangeMyName}\n                disabledBtn={true}\n                disabledWalletInput={true}\n              />\n            )}\n          </Col>\n          {members.length &&\n            members.map(({ name, walletAddress }, idx) => {\n              if (walletAddress === myAddress) return null\n              return (\n                <Col span={24} key={idx}>\n                  <MemberInput\n                    name={name}\n                    walletAddress={walletAddress}\n                    onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                      onChangeMember(e, idx)\n                    }\n                    remove={() => remove(idx)}\n                  />\n                </Col>\n              )\n            })}\n          <Col span={4}>\n            <Button\n              block\n              type=\"dashed\"\n              icon={<IonIcon name=\"add-outline\" />}\n              onClick={addMember}\n            >\n              Add\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DAOMembers\n","import { Col, Row } from 'antd'\nimport Regime from './regime'\nimport DAOMembers from './daoMembers'\n\nconst MultiSigDAORule = () => {\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <Regime />\n      </Col>\n      {/* <Col span={24}>\n        <PrivacyDAO value={privacy} onChange={setPrivacy} />\n      </Col> */}\n      <Col span={24}>\n        <DAOMembers />\n      </Col>\n    </Row>\n  )\n}\n\nexport default MultiSigDAORule\n","import { ChangeEvent } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport {\n  Button,\n  Card,\n  Col,\n  Image,\n  Input,\n  Row,\n  Space,\n  Typography,\n  Upload,\n} from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { UploadChangeParam } from 'antd/lib/upload'\nimport { fileToBase64 } from 'app/helpers'\nimport { MetaData, setInitMetadata } from 'app/model/metadata.controller'\nimport { AppDispatch, AppState } from 'app/model'\n\nconst MetaDataForm = () => {\n  const {\n    metadata: { initMetadata },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const formatMetaData = async (imgBase64: string | ArrayBuffer | null) => {\n    const nextMetaData: MetaData = {\n      ...initMetadata,\n      image: imgBase64,\n    }\n    return dispatch(setInitMetadata(nextMetaData))\n  }\n\n  const onFileChange = (file: UploadChangeParam) => {\n    const { fileList } = file\n    const originFile = fileList[0].originFileObj as File\n    fileToBase64(originFile, formatMetaData)\n  }\n\n  const onChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) =>\n    dispatch(setInitMetadata({ [e.target.name]: e.target.value }))\n\n  const onOptionalChange = (e: ChangeEvent<HTMLInputElement>, idx: number) => {\n    const socials: string[] = [...initMetadata.optionals]\n    socials[idx] = e.target.value\n    dispatch(setInitMetadata({ optionals: socials }))\n  }\n\n  const addLink = () => {\n    const socials: string[] = [...initMetadata.optionals]\n    socials.push('')\n    return dispatch(setInitMetadata({ optionals: socials }))\n  }\n\n  const remove = (index: number) => {\n    const socials: string[] = [...initMetadata.optionals]\n    socials.splice(index, 1)\n    return dispatch(setInitMetadata({ optionals: socials }))\n  }\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          <Typography.Text>DAO name</Typography.Text>\n          <Input\n            value={initMetadata.daoName}\n            placeholder=\"Input DAO name\"\n            onChange={onChange}\n            name=\"daoName\"\n            className=\"border-less\"\n          />\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          <Typography.Text>DAO description</Typography.Text>\n          <Input.TextArea\n            value={initMetadata.description}\n            placeholder=\"Input DAO description\"\n            name=\"description\"\n            onChange={onChange}\n            className=\"border-less\"\n          />\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Text>Avatar</Typography.Text>\n          {initMetadata.image ? (\n            <Card\n              className=\"img-card-preview-upload\"\n              bodyStyle={{ padding: 0, position: 'relative', height: '100%' }}\n            >\n              <Image\n                src={initMetadata.image?.toString() || ''}\n                preview={false}\n              />\n              <IonIcon\n                className=\"ico-action-upload\"\n                name=\"trash-outline\"\n                onClick={() => dispatch(setInitMetadata({ image: '' }))}\n              />\n            </Card>\n          ) : (\n            <Upload\n              className={`interdao-upload-metadata ${\n                !!initMetadata.image ? 'uploaded' : ''\n              }`}\n              accept=\"image/png,image/jpg,image/webp\"\n              name=\"avatar\"\n              listType=\"picture-card\"\n              maxCount={1}\n              onChange={onFileChange}\n              onRemove={() => {\n                dispatch(setInitMetadata({ image: '' }))\n                return true\n              }}\n            >\n              <Space direction=\"vertical\" size={0}>\n                <Typography.Text style={{ fontSize: 24 }}>\n                  <IonIcon name=\"cloud-upload-outline\" />\n                </Typography.Text>\n                <Typography.Text type=\"secondary\" style={{ fontSize: 10 }}>\n                  Support JPG, PNG\n                </Typography.Text>\n              </Space>\n            </Upload>\n          )}\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          <Typography.Text>Social media (Optional)</Typography.Text>\n          <Row gutter={[8, 8]}>\n            {initMetadata.optionals.map((social, index) => (\n              <Col span={24} key={index}>\n                <Row gutter={[12, 12]}>\n                  <Col span={22}>\n                    <Input\n                      value={social}\n                      placeholder=\"Input link\"\n                      onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                        onOptionalChange(e, index)\n                      }\n                      className=\"border-less\"\n                    />\n                  </Col>\n                  <Col span={2}>\n                    <Button\n                      type=\"text\"\n                      icon={<IonIcon name=\"trash-outline\" />}\n                      onClick={() => remove(index)}\n                    />\n                  </Col>\n                </Row>\n              </Col>\n            ))}\n            <Col span={24}>\n              <Button\n                type=\"dashed\"\n                icon={<IonIcon name=\"add-outline\" />}\n                onClick={addLink}\n              >\n                Add\n              </Button>\n            </Col>\n          </Row>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default MetaDataForm\n","import { AppState } from 'app/model'\nimport { useSelector } from 'react-redux'\n\nimport ChooseDaoType from './chooseDaoType'\nimport ReviewAndCreateFlexibleDAO from './flexibleDAO/reviewAndCreate'\nimport ReviewAndCreateMultisigDAO from './multisigDAO/reviewAndCreate'\nimport FlexibleDAORule from './flexibleDAO/daoRule'\nimport MultiSigDAORule from './multisigDAO/daoRule'\nimport MetaDataForm from './metaDataForm'\n\nexport enum CreateSteps {\n  stepOne = 1,\n  stepTwo = 2,\n  stepThree = 3,\n}\n\nconst InitDAOContainer = ({ step }: { step: number }) => {\n  const daoType = useSelector(\n    (state: AppState) => state.metadata.initMetadata.daoType,\n  )\n  if (step === CreateSteps.stepOne) return <MetaDataForm />\n\n  if (step === CreateSteps.stepTwo && daoType === 'flexible-dao')\n    return <FlexibleDAORule />\n  if (step === CreateSteps.stepTwo && daoType === 'multisig-dao')\n    return <MultiSigDAORule />\n\n  if (step === CreateSteps.stepThree && daoType === 'flexible-dao')\n    return <ReviewAndCreateFlexibleDAO />\n  if (step === CreateSteps.stepThree && daoType === 'multisig-dao')\n    return <ReviewAndCreateMultisigDAO />\n\n  return <ChooseDaoType />\n}\n\nexport default InitDAOContainer\n","import { Progress, Space, Typography } from 'antd'\n\nexport type InitDAOHeaderProps = {\n  step: number\n  onHandleStep?: () => void\n  onConfirm?: () => void\n  loading?: boolean\n  disabled?: boolean\n}\n\nconst DEFAULT_PERCENT = 25\nconst DAO_PROGRESS_TITLE = [\n  'Choose type of DAO',\n  'Input DAO infomation',\n  'Set the rule',\n  'Review',\n]\n\nconst InitDAOHeader = ({ step }: InitDAOHeaderProps) => {\n  return (\n    <Space direction=\"vertical\" size={12}>\n      <Typography.Title level={1}>{DAO_PROGRESS_TITLE[step]}</Typography.Title>\n      <Progress\n        className=\"create-progress\"\n        percent={step * DEFAULT_PERCENT + DEFAULT_PERCENT}\n        steps={4}\n        showInfo={false}\n      />\n    </Space>\n  )\n}\n\nexport default InitDAOHeader\n","import { useHistory } from 'react-router-dom'\n\nimport { Button } from 'antd'\nimport { InitDAOHeaderProps } from '../initDAOHeader'\n\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst BackAction = ({ step, onHandleStep = () => {} }: InitDAOHeaderProps) => {\n  const history = useHistory()\n\n  if (step > 0)\n    return (\n      <Button type=\"text\" onClick={onHandleStep} size=\"large\">\n        Back\n      </Button>\n    )\n  return (\n    <Button\n      type=\"text\"\n      onClick={() => history.push(`/app/${appId}/dao`)}\n      size=\"large\"\n    >\n      Cancel\n    </Button>\n  )\n}\n\nexport default BackAction\n","import { Button } from 'antd'\nimport { InitDAOHeaderProps } from '../initDAOHeader'\nimport { CreateSteps } from '../initDAOContainer'\n\nconst ContinuesAction = ({\n  step,\n  onHandleStep,\n  onConfirm,\n  disabled = false,\n  loading = false,\n}: InitDAOHeaderProps) => {\n  if (step === CreateSteps.stepThree)\n    return (\n      <Button onClick={onConfirm} type=\"primary\" size=\"large\" loading={loading}>\n        Confirm\n      </Button>\n    )\n  return (\n    <Button\n      onClick={onHandleStep}\n      type=\"primary\"\n      size=\"large\"\n      disabled={disabled}\n    >\n      Continues\n    </Button>\n  )\n}\n\nexport default ContinuesAction\n","import { Col, Row } from 'antd'\nimport React from 'react'\nimport { InitDAOHeaderProps } from '../initDAOHeader'\nimport BackAction from './backAction'\nimport ContinuesAction from './continuesAction'\n\ntype ActionButtonProps = {\n  setStep: () => void\n} & InitDAOHeaderProps\n\nconst ActionButton = ({\n  step,\n  onHandleStep,\n  onConfirm,\n  loading,\n  disabled,\n  setStep,\n}: ActionButtonProps) => {\n  return (\n    <Row>\n      <Col flex=\"auto\">\n        <BackAction step={step} onHandleStep={setStep} />\n      </Col>\n      <Col>\n        <ContinuesAction\n          step={step}\n          onHandleStep={onHandleStep}\n          onConfirm={onConfirm}\n          loading={loading}\n          disabled={disabled}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default ActionButton\n","import { DEFAULT_EMPTY_ADDRESS, WalletInterface } from '@senswap/sen-js'\nimport {\n  Spl,\n  AnchorProvider,\n  web3,\n  setProvider,\n  BN,\n  utils,\n} from '@project-serum/anchor'\nimport { PublicKey } from '@solana/web3.js'\n\nclass MultisigWallet {\n  private _mint: PublicKey\n\n  constructor(mintAddress: string) {\n    this._mint = new PublicKey(mintAddress)\n  }\n\n  getAnchorProvider = async (\n    node: string,\n    walletAddress: string,\n    wallet: WalletInterface,\n  ): Promise<AnchorProvider> => {\n    const connection = new web3.Connection(node, 'confirmed')\n\n    const signAllTransactions = async (transactions: web3.Transaction[]) => {\n      const signedTransactions = []\n      for (const transaction of transactions) {\n        const signedTransaction = await wallet.signTransaction(transaction)\n        signedTransactions.push(signedTransaction)\n      }\n      return signedTransactions\n    }\n\n    const publicKey = new web3.PublicKey(walletAddress)\n    const anchorProvider = new AnchorProvider(\n      connection,\n      {\n        publicKey: new web3.PublicKey(publicKey),\n        signTransaction: wallet.signTransaction,\n        signAllTransactions,\n      },\n      {\n        commitment: 'confirmed',\n        skipPreflight: true,\n      },\n    )\n    setProvider(anchorProvider)\n    return anchorProvider\n  }\n\n  initializeAccount = async (\n    associatedTokenAccount: web3.PublicKey,\n    token: web3.PublicKey,\n    authority: web3.PublicKey,\n    provider: AnchorProvider,\n  ) => {\n    const ix = new web3.TransactionInstruction({\n      keys: [\n        {\n          pubkey: provider.wallet.publicKey,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: associatedTokenAccount,\n          isSigner: false,\n          isWritable: true,\n        },\n        {\n          pubkey: authority,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: token,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: web3.SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: utils.token.TOKEN_PROGRAM_ID,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: web3.SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n      ],\n      programId: utils.token.ASSOCIATED_PROGRAM_ID,\n      data: Buffer.from([]),\n    })\n    const tx = new web3.Transaction().add(ix)\n    return await provider.sendAndConfirm(tx)\n  }\n\n  initializeMint = async (\n    decimals: number,\n    token: web3.Keypair,\n    provider: AnchorProvider,\n  ) => {\n    const spl = Spl.token()\n    const ix = await (spl.account as any).mint.createInstruction(token)\n    const tx = new web3.Transaction().add(ix)\n    await provider.sendAndConfirm(tx, [token])\n    return await spl.rpc.initializeMint(\n      decimals,\n      provider.wallet.publicKey,\n      provider.wallet.publicKey,\n      {\n        accounts: {\n          mint: token.publicKey,\n          rent: web3.SYSVAR_RENT_PUBKEY,\n        },\n        signers: [],\n      },\n    )\n  }\n\n  getProvider = async () => {\n    const { splt, wallet } = window.sentre\n    const walletAddress = await wallet.getAddress()\n    const provider = await this.getAnchorProvider(\n      splt.nodeUrl,\n      walletAddress,\n      wallet,\n    )\n    return provider\n  }\n\n  createNewToken = async () => {\n    const mint = new web3.Keypair()\n    const provider = await this.getProvider()\n    await this.initializeMint(0, mint, provider)\n    this._mint = mint.publicKey\n  }\n\n  isValidMint = (): boolean => {\n    return this._mint.toBase58() !== DEFAULT_EMPTY_ADDRESS\n  }\n\n  mintToAccount = async (pubkey: PublicKey) => {\n    if (!this.isValidMint()) throw new Error('Please create mint first!')\n\n    const provider = await this.getProvider()\n    const spl = Spl.token()\n    // Derive token account\n    const tokenAccount = await utils.token.associatedAddress({\n      mint: this._mint,\n      owner: pubkey,\n    })\n    await this.initializeAccount(tokenAccount, this._mint, pubkey, provider)\n\n    //mintTo\n    await spl.rpc.mintTo(new BN(1), {\n      accounts: {\n        mint: this._mint,\n        to: tokenAccount,\n        authority: provider.wallet.publicKey,\n      },\n    })\n  }\n\n  burnAccount = async (\n    authority: PublicKey,\n    mint: PublicKey,\n    source: PublicKey,\n  ) => {\n    await this.getProvider()\n    const spl = Spl.token()\n    const tokenAccount = await utils.token.associatedAddress({\n      mint: mint,\n      owner: source,\n    })\n\n    await spl.rpc.burn(new BN(1), {\n      accounts: {\n        source: tokenAccount,\n        mint,\n        authority,\n      },\n    })\n  }\n\n  getMintAddress = (): string => {\n    if (!this.isValidMint()) return ''\n    return this._mint.toBase58()\n  }\n}\n\nexport default MultisigWallet\n","import { useCallback, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport IPFS from 'shared/pdb/ipfs'\nimport { CID } from 'ipfs-core'\nimport { BN } from 'bn.js'\nimport { account, DEFAULT_EMPTY_ADDRESS } from '@senswap/sen-js'\n\nimport { Row, Col, Card } from 'antd'\nimport InitDAOContainer, { CreateSteps } from './initDAOContainer'\nimport InitDAOHeader from './initDAOHeader'\nimport ActionButton from './actions'\n\nimport { AppState } from 'app/model'\nimport { explorer } from 'shared/util'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport MultisigWallet from 'app/helpers/mutisigWallet'\nimport configs from 'app/configs'\n\nimport './index.less'\n\nconst {\n  sol: { interDao },\n  manifest: { appId },\n} = configs\n\nconst DaoInitialization = () => {\n  const [step, setStep] = useState(0)\n  const [loading, setLoading] = useState(false)\n  const {\n    dao: { initDao },\n    metadata: { initMetadata },\n  } = useSelector((state: AppState) => state)\n  const history = useHistory()\n  const { mintAddress, supply, regime } = initDao\n  const { members, daoType } = initMetadata\n  const decimals = useMintDecimals(mintAddress) || 0\n\n  const onNextStep = useCallback(async () => {\n    try {\n      if (step === CreateSteps.stepOne && !initMetadata)\n        throw new Error('Invalid Metadata')\n      if (step === CreateSteps.stepTwo && !initDao)\n        throw new Error('Invalid DAO data')\n      return setStep(step + 1)\n    } catch (err: any) {\n      window.notify({ type: 'error', description: err.message })\n    }\n  }, [initDao, initMetadata, step])\n\n  const disabled = useMemo(() => {\n    if (step === CreateSteps.stepOne)\n      return (\n        !initMetadata.daoName ||\n        !initMetadata.image ||\n        !initMetadata.description\n      )\n\n    if (step === CreateSteps.stepTwo && daoType === 'flexible-dao')\n      return !initDao.mintAddress || !initDao.regime || !Number(initDao.supply)\n\n    if (step === CreateSteps.stepTwo && daoType === 'multisig-dao' && members) {\n      let valid = false\n      for (const member of members) {\n        const { name, walletAddress } = member\n        if (!name || !account.isAddress(walletAddress)) {\n          valid = true\n          break\n        }\n      }\n      return valid\n    }\n  }, [initDao, initMetadata, step, daoType, members])\n\n  const getMintAddr = useCallback(async () => {\n    if (mintAddress || !members) return mintAddress\n    try {\n      const multiSigWallet = new MultisigWallet(DEFAULT_EMPTY_ADDRESS)\n      await multiSigWallet.createNewToken()\n\n      for (const { walletAddress } of members) {\n        await multiSigWallet.mintToAccount(account.fromAddress(walletAddress))\n      }\n\n      return multiSigWallet.getMintAddress()\n    } catch (err: any) {\n      window.notify({ type: 'error', description: err.message })\n      return ''\n    }\n  }, [members, mintAddress])\n\n  const onCreateDao = useCallback(async () => {\n    try {\n      setLoading(true)\n      const ipfs = new IPFS()\n      const cid = await ipfs.set(initMetadata)\n      const {\n        multihash: { digest },\n      } = CID.parse(cid)\n      const metadata = Buffer.from(digest)\n\n      const totalSupply =\n        daoType === 'flexible-dao'\n          ? supply.mul(new BN(10).pow(new BN(decimals)))\n          : new BN(members.length)\n\n      const mintAddress = await getMintAddr()\n\n      const { txId, daoAddress } = await interDao.initializeDao(\n        mintAddress,\n        totalSupply,\n        metadata,\n        undefined, // Optional DAO's keypair\n        regime,\n      )\n      window.notify({\n        type: 'success',\n        description: 'A new DAO is created. Click here to view details.',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n      return history.push(`/app/${appId}/dao/${daoAddress}`)\n    } catch (er: any) {\n      window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }, [\n    initMetadata,\n    daoType,\n    supply,\n    decimals,\n    members,\n    getMintAddr,\n    regime,\n    history,\n  ])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col xs={24} lg={16}>\n        <Card bordered={false}>\n          <Row gutter={[24, 32]}>\n            <Col span={24}>\n              <InitDAOHeader step={step} />\n            </Col>\n            <Col span={24}>\n              <InitDAOContainer step={step} />\n            </Col>\n            <Col span={24}>\n              <ActionButton\n                step={step}\n                onHandleStep={onNextStep}\n                onConfirm={onCreateDao}\n                loading={loading}\n                disabled={disabled}\n                setStep={() => setStep(step - 1)}\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoInitialization\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { AccountInfo, PublicKey } from '@solana/web3.js'\n\nimport configs from 'app/configs'\nimport { ReceiptData } from '@interdao/core'\n\nconst {\n  sol: { interDao },\n} = configs\n\nexport const getReceipts = async (\n  proposalAddress: string,\n): Promise<Record<string, ReceiptData>> => {\n  if (!account.isAddress(proposalAddress)) throw new Error('Invalid address')\n  const {\n    provider: { connection },\n    programId,\n    account: { receipt },\n  } = interDao.program\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await connection.getProgramAccounts(programId, {\n      filters: [\n        { dataSize: receipt.size },\n        {\n          memcmp: {\n            offset: 48,\n            bytes: proposalAddress,\n          },\n        },\n      ],\n    })\n  let bulk: Record<string, ReceiptData> = {}\n\n  value.forEach(({ pubkey, account: { data: buf } }) => {\n    const data = interDao.parseReceiptData(buf)\n    bulk[pubkey.toBase58()] = data\n  })\n  return bulk\n}\n\nconst useReceipts = ({ proposalAddress }: { proposalAddress: string }) => {\n  const [receipts, setReceipts] = useState<Record<string, ReceiptData>>({})\n\n  const fetchReceipts = useCallback(async () => {\n    if (!account.isAddress(proposalAddress)) return setReceipts({})\n    const listReceipt = await getReceipts(proposalAddress)\n    return setReceipts(listReceipt)\n  }, [proposalAddress])\n\n  useEffect(() => {\n    fetchReceipts()\n  }, [fetchReceipts])\n\n  return { receipts }\n}\n\nexport default useReceipts\n","import { useCallback, useMemo, useState } from 'react'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ProposalStatus from 'app/components/proposalStatus'\n\nimport { ProposalChildCardProps } from './index'\nimport { explorer, shortenAddress } from 'shared/util'\nimport useProposalStatus from 'app/hooks/useProposalStatus'\nimport useProposalMetaData from 'app/hooks/useProposalMetaData'\nimport useReceipts from 'app/hooks/useReceipts'\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst CardStatus = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const [loading, setLoading] = useState(false)\n\n  const { status } = useProposalStatus(proposalAddress)\n  const metaData = useProposalMetaData(proposalAddress)\n  const { receipts } = useReceipts({ proposalAddress })\n\n  const members = useMemo(() => {\n    if (!Object.values(receipts).length) return 0\n    const authorities: string[] = []\n\n    for (const receipt of Object.values(receipts)) {\n      const { authority } = receipt\n      if (authorities.includes(authority.toBase58())) continue\n      authorities.push(authority.toBase58())\n    }\n\n    return authorities.length\n  }, [receipts])\n\n  const disabled = useMemo(() => {\n    if (status === 'Succeeded') return false\n    return true\n  }, [status])\n\n  const execute = useCallback(async () => {\n    setLoading(true)\n    try {\n      const { txId } = await interDao.executeProposal(proposalAddress)\n      return window.notify({\n        type: 'success',\n        description: 'Execute successfully',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (error: any) {\n      return window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setLoading(false)\n    }\n  }, [proposalAddress])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Row gutter={[24, 24]} wrap={false}>\n            <Col flex=\"auto\">\n              <Space direction=\"vertical\">\n                <Row gutter={[8, 8]} align=\"middle\">\n                  <Col>\n                    <Typography.Title\n                      level={3}\n                      style={{ wordBreak: 'break-all' }}\n                    >\n                      {metaData?.title\n                        ? metaData.title\n                        : shortenAddress(proposalAddress)}\n                    </Typography.Title>\n                  </Col>\n                  <Col>\n                    <ProposalStatus status={status} />\n                  </Col>\n                </Row>\n                <Space>\n                  <IonIcon name=\"people-outline\" />\n                  <Typography.Text>Member: {members}</Typography.Text>\n                </Space>\n              </Space>\n            </Col>\n            <Col>\n              <Button\n                size=\"large\"\n                type=\"primary\"\n                onClick={execute}\n                loading={loading}\n                disabled={disabled}\n              >\n                Execute\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph\n            type=\"secondary\"\n            ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n          >\n            {metaData?.description}\n          </Typography.Paragraph>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CardStatus\n","import { useMemo } from 'react'\nimport { ReceiptData } from '@interdao/core'\n\nimport { Typography } from 'antd'\n\nconst ColumnType = ({ record }: { record: ReceiptData }) => {\n  const type = useMemo(() => {\n    const action = Object.keys(record.action || {})[0]\n    if (action === 'voteAgainst') return 'DISAGREE'\n    return 'AGREE'\n  }, [record.action])\n\n  return <Typography.Text>{type}</Typography.Text>\n}\n\nexport default ColumnType\n","import { useSelector } from 'react-redux'\nimport { DaoData, ReceiptData } from '@interdao/core'\nimport { utils } from '@senswap/sen-js'\n\nimport { Typography } from 'antd'\n\nimport { AppState } from 'app/model'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { numeric } from 'shared/util'\n\nconst ColumnPower = ({ receipt }: { receipt: ReceiptData }) => {\n  const daos = useSelector((state: AppState) => state.dao.daos)\n  const proposal = useSelector((state: AppState) => state.proposal)\n  const { power, proposal: proposalPubkey } = receipt\n  const { dao: daoPubkey } = proposal[proposalPubkey.toBase58()] || {}\n  const { mint } = daos[daoPubkey?.toBase58() || ''] || ({} as DaoData)\n  const mintDecimal = useMintDecimals(mint?.toBase58()) || 0\n\n  return (\n    <Typography.Text>\n      {numeric(\n        utils.undecimalize(BigInt(power.toNumber()), mintDecimal),\n      ).format('0,0.[0000]a')}\n    </Typography.Text>\n  )\n}\n\nexport default ColumnPower\n","import { Fragment, useCallback, useEffect, useState } from 'react'\nimport { useWallet } from '@senhub/providers'\nimport { ReceiptData } from '@interdao/core'\nimport BN from 'bn.js'\nimport moment from 'moment'\n\nimport { Button, Col, Modal, Row, Space, Typography, Table } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ColumnType from './history/columnType'\nimport ColumnPower from './history/columnPower'\n\nimport { ProposalChildCardProps } from './index'\nimport useReceipts from 'app/hooks/useReceipts'\nimport configs from 'app/configs'\nimport { explorer } from 'shared/util'\n\nconst COLUMNS = [\n  {\n    title: 'TIME',\n    dataIndex: 'lockedDate',\n    render: (lockedDate: BN) => (\n      <Typography.Text>\n        {moment(lockedDate.toNumber() * 1000).format('DD/MM/YYYY HH:mm')}\n      </Typography.Text>\n    ),\n  },\n  {\n    title: 'POWER',\n    dataIndex: 'power',\n    render: (_: any, receipt: ReceiptData) => <ColumnPower receipt={receipt} />,\n  },\n  {\n    title: 'TYPE',\n    dataIndex: 'authority',\n    render: (_: any, receipt: ReceiptData) => <ColumnType record={receipt} />,\n  },\n]\n\nexport type Receipt = ReceiptData & { address: string }\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst Withdraw = ({ daoAddress, proposalAddress }: ProposalChildCardProps) => {\n  const [visible, setVisible] = useState(false)\n  const [loading, setLoading] = useState(false)\n  const [listReceipt, setListReceipt] = useState<Receipt[]>([])\n  const [receiptAddress, setReceiptAddress] = useState<string[]>([])\n  const { receipts } = useReceipts({ proposalAddress })\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const filterReceipts = useCallback(() => {\n    const listRecept = Object.keys(receipts).map((address) => {\n      return { address, ...receipts[address] }\n    })\n\n    setListReceipt(\n      listRecept.filter(\n        (receipt) => receipt.authority.toBase58() === walletAddress,\n      ),\n    )\n  }, [receipts, walletAddress])\n\n  const onSelect = (_: React.Key[], receipts: Receipt[]) => {\n    const addresses: string[] = []\n    for (const { address } of receipts) {\n      addresses.push(address)\n    }\n    return setReceiptAddress(addresses)\n  }\n\n  const onConfirm = useCallback(async () => {\n    if (!receiptAddress.length) return\n    const nextReceiptAddress = [...listReceipt]\n\n    setLoading(true)\n    try {\n      for (const address of receiptAddress) {\n        const { txId } = await interDao.close(address)\n        window.notify({\n          type: 'success',\n          description: 'Close receipt successfully. Click to view details!',\n          onClick: () => window.open(explorer(txId), '_blank'),\n        })\n      }\n\n      //for real time\n      setListReceipt(\n        nextReceiptAddress.filter(\n          (receipt) => !receiptAddress.includes(receipt.address),\n        ),\n      )\n    } catch (error: any) {\n      window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setLoading(false)\n    }\n  }, [listReceipt, receiptAddress])\n\n  useEffect(() => {\n    filterReceipts()\n  }, [filterReceipts])\n\n  return (\n    <Fragment>\n      <Button\n        onClick={() => setVisible(true)}\n        icon={<IonIcon name=\"log-out-outline\" />}\n      >\n        Withdraw\n      </Button>\n      <Modal\n        visible={visible}\n        footer={null}\n        closeIcon={<IonIcon name=\"close-outline\" />}\n        onCancel={() => setVisible(false)}\n      >\n        <Row gutter={[32, 32]}>\n          <Col span={24}>\n            <Typography.Title level={4}>Withdraw</Typography.Title>\n          </Col>\n          <Col span={24}>\n            <Table\n              rowSelection={{ type: 'checkbox', onChange: onSelect }}\n              columns={COLUMNS}\n              dataSource={listReceipt}\n              pagination={false}\n              rowKey={({ index, lockedDate }) =>\n                index.toNumber() + lockedDate.toNumber()\n              }\n            />\n          </Col>\n          <Col span={24} style={{ textAlign: 'right' }}>\n            <Space>\n              <Button onClick={() => setVisible(false)}>Cancel</Button>\n              <Button loading={loading} onClick={onConfirm} type=\"primary\">\n                Confirm\n              </Button>\n            </Space>\n          </Col>\n        </Row>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default Withdraw\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type VoteBidState = {\n  amount: string\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'voteBid'\nconst initialState: VoteBidState = {\n  amount: '',\n}\n\n/**\n * Actions\n */\n\nexport const setVoteBidAmount = createAsyncThunk(\n  `${NAME}/setVoteBidAmount`,\n  async (amount: string) => {\n    if (!amount) return { amount: '' }\n    return { amount }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      setVoteBidAmount.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { useEffect, useState } from 'react'\nimport { account, DEFAULT_EMPTY_ADDRESS, utils } from '@senswap/sen-js'\nimport { useAccount, useWallet } from '@senhub/providers'\n\nimport useMintDecimals from './useMintDecimals'\n\nexport type AccountBalanceReturn = {\n  amount: bigint\n  decimals: number\n  balance: number\n  mintAddress: string\n}\n\nconst buildResult = (\n  mintAddress?: string,\n  amount?: bigint,\n  decimals?: number,\n) => {\n  if (\n    !account.isAddress(mintAddress) ||\n    amount === undefined ||\n    decimals === undefined\n  )\n    return { amount: BigInt(0), decimals: 0, balance: 0 }\n  return {\n    mintAddress,\n    amount,\n    decimals,\n    balance: Number(utils.undecimalize(amount, decimals)),\n  }\n}\n\n/**\n * Get account balance. This hook needs WalletProvider, MintProvider, and AccountProvider for working.\n * WalletProvider Ref: https://docs.sentre.io/senhub/development/providers/wallet-provider\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * AccountProvider Ref: https://docs.sentre.io/senhub/development/providers/account-provider\n * @param accountAddress Associated account address\n * @returns AccountBalanceReturn\n * - AccountBalanceReturn.amount: The amount with decimals\n * - AccountBalanceReturn.decimals: The corresponding mint decimals\n * - AccountBalanceReturn.balance: The human-readable balance (undecimalized amount)\n * - AccountBalanceReturn.mintAddress: The corresponding mint\n */\nconst useAccountBalance = (accountAddress: string) => {\n  const {\n    wallet: { address: walletAddress, lamports },\n  } = useWallet()\n  const { accounts } = useAccount()\n  const { amount, mint: mintAddress } = accounts[accountAddress] || {}\n  const decimals = useMintDecimals(mintAddress) || 0\n\n  if (!account.isAddress(walletAddress) || !account.isAddress(accountAddress))\n    return buildResult()\n  if (accountAddress === walletAddress)\n    return buildResult(DEFAULT_EMPTY_ADDRESS, lamports, 9)\n\n  return buildResult(mintAddress, amount, decimals)\n}\n\nexport default useAccountBalance\n\n/**\n * The same as useAccountBalance but the input is mint address\n * @param mintAddress Mint address\n * @returns AccountBalanceReturn\n */\nexport const useAccountBalanceByMintAddress = (mintAddress: string) => {\n  const [accountAddress, setAccountAddress] = useState('')\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const data = useAccountBalance(accountAddress)\n\n  useEffect(() => {\n    ;(async () => {\n      if (!account.isAddress(walletAddress) || !account.isAddress(mintAddress))\n        return setAccountAddress('')\n      const {\n        sentre: { splt },\n      } = window\n      try {\n        const address = await splt.deriveAssociatedAddress(\n          walletAddress,\n          mintAddress,\n        )\n        return setAccountAddress(address)\n      } catch (er) {\n        return setAccountAddress('')\n      }\n    })()\n  })\n\n  return data\n}\n","import dayjs from 'dayjs'\n\nexport function getRemainingTime(timestampMs: number, finishTime?: number) {\n  const timestampDayjs = dayjs(timestampMs)\n  const nowDayjs = finishTime ? finishTime : dayjs()\n\n  // times of the past\n  if (timestampDayjs.isBefore(nowDayjs)) {\n    return {\n      minutes: '00',\n      hours: '00',\n      days: '00',\n      seconds: '00',\n    }\n  }\n\n  return {\n    minutes: getRemainingMinutes(nowDayjs, timestampDayjs),\n    hours: getRemainingHours(nowDayjs, timestampDayjs),\n    days: getRemainingDays(nowDayjs, timestampDayjs),\n    seconds: getRemainingSeconds(nowDayjs, timestampDayjs),\n  }\n}\n\n/** Get the difference function */\nfunction getRemainingSeconds(nowDayjs: any, timestampDayjs: any) {\n  const seconds = (timestampDayjs.diff(nowDayjs, 'seconds') % 60) % 60\n  return startWithZeros(seconds, 2)\n}\n\nfunction getRemainingMinutes(nowDayjs: any, timestampDayjs: any) {\n  const minutes = timestampDayjs.diff(nowDayjs, 'minutes') % 60\n  return startWithZeros(minutes, 2)\n}\n\nfunction getRemainingHours(nowDayjs: any, timestampDayjs: any) {\n  const hours = timestampDayjs.diff(nowDayjs, 'hours') % 24\n  return startWithZeros(hours, 2)\n}\n\nfunction getRemainingDays(nowDayjs: any, timestampDayjs: any) {\n  const days = timestampDayjs.diff(nowDayjs, 'days')\n  return days.toString()\n}\n\nfunction startWithZeros(number: number, minLength: number) {\n  const numberString = number.toString()\n  if (numberString.length >= minLength) return numberString\n  return '0'.repeat(minLength - numberString.length) + numberString\n}\n","import { Fragment, useCallback, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account, utils } from '@senswap/sen-js'\nimport { DaoData, FeeOptions } from '@interdao/core'\nimport { BN } from 'bn.js'\n\nimport { Button, Card, Col, Row, Typography, Space, Tooltip } from 'antd'\nimport NumericInput from 'shared/antd/numericInput'\nimport IonIcon from 'shared/antd/ionicon'\nimport Withdraw from './withdraw'\n\nimport { AppState } from 'app/model'\nimport { setVoteBidAmount } from 'app/model/voteBid.controller'\nimport { ProposalChildCardProps } from './index'\nimport { explorer, numeric } from 'shared/util'\nimport configs from 'app/configs'\nimport { useAccountBalanceByMintAddress } from 'shared/hooks/useAccountBalance'\nimport { MintSymbol } from 'shared/antd/mint'\nimport useProposalStatus from 'app/hooks/useProposalStatus'\nimport { getRemainingTime } from 'app/helpers/countDown'\nimport useMetaData from 'app/hooks/useMetaData'\nimport useProposal from 'app/hooks/useProposal'\n\nconst {\n  sol: { interDao, taxman, fee },\n} = configs\n\nconst defaultRemainingTime = {\n  minutes: '00',\n  hours: '00',\n  days: '00',\n  seconds: '00',\n}\n\nconst DEFAULT_VALUE_VOTE_MULTISIG = 1\n\ntype LockedVotingProps = {\n  proposalAddress: string\n  daoAddress: string\n}\nconst LockedVoting = ({ proposalAddress, daoAddress }: LockedVotingProps) => {\n  const [remainingTime, setRemainingTime] = useState(defaultRemainingTime)\n  const { status } = useProposalStatus(proposalAddress)\n  const voteAmount = useSelector((state: AppState) => state.voteBid.amount)\n  const { consensusMechanism, endDate, startDate } = useProposal(\n    proposalAddress,\n    daoAddress,\n  )\n\n  const voteNow = new Date().getTime()\n  const endTime = Number(endDate) * 1000\n  const startTime = Number(startDate) * 1000\n\n  const isLockedVote =\n    Object.keys(consensusMechanism || [])?.[0] === 'lockedTokenCounter'\n  const remaining = voteNow < endTime ? endTime - voteNow : 0\n  const votePower = (Number(voteAmount) * remaining) / 1000\n\n  const updateRemainingTime = useCallback(\n    (countdown: number, startTime?: number) => {\n      setRemainingTime(getRemainingTime(countdown, startTime))\n    },\n    [],\n  )\n\n  useEffect(() => {\n    if (status === 'Preparing') return updateRemainingTime(endTime, startTime)\n    const intervalId = setInterval(() => {\n      updateRemainingTime(endTime)\n    }, 1000)\n    return () => clearInterval(intervalId)\n  }, [endTime, startTime, status, updateRemainingTime])\n\n  if (!isLockedVote) return <Fragment />\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col flex=\"auto\">\n        <Space direction=\"vertical\">\n          <Typography.Text>Time remaining</Typography.Text>\n          <Typography.Title level={5}>\n            {remainingTime.days}d : {remainingTime.hours}h :{' '}\n            {remainingTime.minutes}m : {remainingTime.seconds}s\n          </Typography.Title>\n        </Space>\n      </Col>\n      <Col>\n        <Space direction=\"vertical\">\n          <Space>\n            <Tooltip title=\"Your power will be equal to the token amount multiplied by the remaining time (by seconds)\">\n              <IonIcon\n                style={{ cursor: 'pointer' }}\n                name=\"information-circle-outline\"\n              />\n            </Tooltip>\n            <Typography.Text>Power of your votes</Typography.Text>\n          </Space>\n\n          <Typography.Title level={5} style={{ textAlign: 'right' }}>\n            {numeric(votePower).format('0,0.[0000]')}\n          </Typography.Title>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nconst CardVote = ({ proposalAddress, daoAddress }: ProposalChildCardProps) => {\n  const [loadingFor, setLoadingFor] = useState(false)\n  const [loadingAgainst, setLoadingAgainst] = useState(false)\n  const {\n    dao: { daos },\n    voteBid: { amount },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch()\n  const { mint, regime, authority } = daos[daoAddress] || ({} as DaoData)\n  const { balance, decimals } = useAccountBalanceByMintAddress(mint?.toBase58())\n  const { status } = useProposalStatus(proposalAddress)\n  const daoMetaData = useMetaData(daoAddress)\n\n  const isMultisigDAO = daoMetaData?.daoType === 'multisig-dao'\n\n  const disabled = useMemo(() => {\n    if (isMultisigDAO) {\n      return status !== 'Voting' || balance <= 0\n    }\n    return status !== 'Voting' || !amount || !account.isAddress(proposalAddress)\n  }, [amount, balance, isMultisigDAO, proposalAddress, status])\n\n  const parseRegime = useMemo(() => {\n    if (!regime) return ''\n    return Object.keys(regime)[0]\n  }, [regime])\n\n  const proposalFee = useMemo(() => {\n    if (!parseRegime || !authority) return\n\n    const feeOption: FeeOptions = {\n      tax: new BN(fee),\n      taxmanAddress: taxman,\n      revenue: new BN(fee),\n      revenuemanAddress: authority.toBase58(),\n    }\n\n    if (parseRegime === 'democratic')\n      return {\n        tax: new BN(0),\n        taxmanAddress: taxman,\n        revenue: new BN(0),\n        revenuemanAddress: authority.toBase58(),\n      }\n\n    return feeOption\n  }, [authority, parseRegime])\n\n  const onChange = useCallback(\n    (value: string) => {\n      dispatch(setVoteBidAmount(value))\n    },\n    [dispatch],\n  )\n\n  const onVoteFor = useCallback(async () => {\n    setLoadingFor(true)\n    try {\n      if ((!amount || !account.isAddress(proposalAddress)) && !isMultisigDAO)\n        return\n      const actualAmount = isMultisigDAO ? DEFAULT_VALUE_VOTE_MULTISIG : amount\n      const voteAmount = utils.decimalize(actualAmount, decimals)\n      const nextAmount = new BN(voteAmount.toString())\n      const { txId } = await interDao.voteFor(\n        proposalAddress,\n        nextAmount,\n        proposalFee,\n      )\n      window.notify({\n        type: 'success',\n        description: 'Voted successfully. Click to view details!',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (error: any) {\n      window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setLoadingFor(false)\n    }\n  }, [amount, proposalAddress, isMultisigDAO, decimals, proposalFee])\n\n  const onVoteAgainst = useCallback(async () => {\n    setLoadingAgainst(true)\n    try {\n      if ((!amount || !account.isAddress(proposalAddress)) && !isMultisigDAO)\n        return\n      const actualAmount = isMultisigDAO ? DEFAULT_VALUE_VOTE_MULTISIG : amount\n      const voteAmount = utils.decimalize(actualAmount, decimals)\n      const nextAmount = new BN(voteAmount.toString())\n      const { txId } = await interDao.voteAgainst(\n        proposalAddress,\n        nextAmount,\n        proposalFee,\n      )\n      window.notify({\n        type: 'success',\n        description: 'Voted successfully. Click to view details!',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (error: any) {\n      window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setLoadingAgainst(false)\n    }\n  }, [amount, proposalAddress, isMultisigDAO, decimals, proposalFee])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Row>\n            <Col flex=\"auto\">\n              <Typography.Title level={5}>Cast your votes</Typography.Title>\n            </Col>\n            <Col>\n              <Withdraw\n                daoAddress={daoAddress}\n                proposalAddress={proposalAddress}\n              />\n            </Col>\n          </Row>\n        </Col>\n        {!isMultisigDAO && (\n          <Col span={24}>\n            <Card\n              className=\"numric-ip-card\"\n              bodyStyle={{ padding: '8px 12px' }}\n              bordered={false}\n            >\n              <Row gutter={[8, 8]}>\n                <Col flex=\"auto\">\n                  <Typography.Text>Amount votes</Typography.Text>\n                </Col>\n                <Col>\n                  <Typography.Text>\n                    Available: {numeric(balance).format('0,0.[00]')}\n                  </Typography.Text>{' '}\n                  <MintSymbol mintAddress={mint?.toBase58()} />\n                </Col>\n                <Col span={24}>\n                  <NumericInput\n                    bordered={false}\n                    style={{ padding: 0 }}\n                    placeholder=\"0\"\n                    value={amount}\n                    onValue={onChange}\n                    suffix={\n                      <Typography.Text\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => onChange(balance.toString())}\n                      >\n                        MAX\n                      </Typography.Text>\n                    }\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        )}\n        {!isMultisigDAO && (\n          <Col span={24}>\n            <LockedVoting\n              proposalAddress={proposalAddress}\n              daoAddress={daoAddress}\n            />\n          </Col>\n        )}\n        <Col span={isMultisigDAO ? 24 : 12}>\n          <Button\n            onClick={onVoteFor}\n            type=\"primary\"\n            disabled={disabled}\n            loading={loadingFor}\n            block\n            size=\"large\"\n            icon={<IonIcon name=\"thumbs-up-outline\" />}\n          >\n            Agree\n          </Button>\n        </Col>\n        <Col span={isMultisigDAO ? 24 : 12}>\n          <Button\n            onClick={onVoteAgainst}\n            type=\"primary\"\n            disabled={disabled}\n            loading={loadingAgainst}\n            block\n            size=\"large\"\n            icon={<IonIcon name=\"thumbs-down-outline\" />}\n          >\n            Disagree\n          </Button>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\nexport default CardVote\n","import { Col, Modal, Row, Typography } from 'antd'\n\nimport { ProposalChildCardProps } from '../proposalDetails/index'\nimport TemplateInfo from './component/templateInfo'\n\ntype TemplateInfoProps = {\n  visible: boolean\n  setVisible: (visible: boolean) => void\n} & ProposalChildCardProps\n\nconst ModalTemplateInfo = ({\n  proposalAddress,\n  daoAddress,\n  visible,\n  setVisible,\n}: TemplateInfoProps) => {\n  return (\n    <Modal\n      className=\"template-card template-info\"\n      visible={visible}\n      footer={false}\n      onCancel={() => setVisible(false)}\n    >\n      <Row>\n        <Col\n          className=\"template-info-header\"\n          span={24}\n          style={{ textAlign: 'left' }}\n        >\n          <Typography.Title level={4}>Template information</Typography.Title>\n        </Col>\n        <Col span={24} className=\"template-info-body\">\n          <TemplateInfo\n            proposalAddress={proposalAddress}\n            daoAddress={daoAddress}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default ModalTemplateInfo\n","import { useMemo } from 'react'\nimport { ConsensusQuorum } from '@interdao/core'\n\nconst useParseQuorumText = (quorum?: ConsensusQuorum) => {\n  const quorumText = useMemo(() => {\n    if (!quorum) return '-'\n    const mechanismQuorum = Object.keys(quorum)[0]\n    if (mechanismQuorum === 'half') return '1/2'\n    if (mechanismQuorum === 'oneThird') return '1/3'\n    if (mechanismQuorum === 'twoThird') return '2/3'\n  }, [quorum])\n\n  return quorumText\n}\nexport default useParseQuorumText\n","import { useMemo, useState } from 'react'\nimport moment from 'moment'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\nimport { Card, Col, Row, Space, Typography, Tooltip, Button } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ModalTemplateInfo from '../modalTemplateInfo'\nimport RowSpaceBetween from 'app/components/rowSpaceBetween'\n\nimport useProposal from 'app/hooks/useProposal'\nimport { asyncWait, explorer, shortenAddress } from 'shared/util'\nimport { ProposalChildCardProps } from './index'\nimport useParseQuorumText from 'app/hooks/useParseQuorumText'\n\nconst CardInfo = ({ proposalAddress, daoAddress }: ProposalChildCardProps) => {\n  const [copied, setCopied] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const { consensusQuorum, startDate, endDate, consensusMechanism, creator } =\n    useProposal(proposalAddress, daoAddress)\n  const authProposalAddress = creator?.toBase58() || ''\n  const quorum = useParseQuorumText(consensusQuorum)\n\n  const onCopy = async () => {\n    setCopied(true)\n    await asyncWait(1500)\n    setCopied(false)\n  }\n\n  const consensus = useMemo(() => {\n    if (!consensusMechanism) return '-'\n    const _consensusMechanism = Object.keys(consensusMechanism)[0]\n    if (_consensusMechanism === 'stakedTokenCounter') return 'Staked counter'\n    if (_consensusMechanism === 'lockedTokenCounter') return 'Locked counter'\n  }, [consensusMechanism])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Row align=\"middle\">\n            <Col flex=\"auto\">\n              <Typography.Title level={5}>Information</Typography.Title>\n            </Col>\n            <Col>\n              <Button\n                type=\"text\"\n                icon={<IonIcon name=\"information-circle-outline\" />}\n                style={{ marginRight: -10 }}\n                onClick={() => setVisible(true)}\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Space style={{ width: '100%' }} direction=\"vertical\">\n            <RowSpaceBetween\n              label=\"Proposal ID\"\n              value={shortenAddress(proposalAddress, 3)}\n            />\n            <RowSpaceBetween\n              label=\"Start time\"\n              value={moment(startDate?.toNumber() * 1000).format(\n                'MMM DD,yyyy HH:mm',\n              )}\n            />\n            <RowSpaceBetween\n              label=\"End time\"\n              value={moment(endDate?.toNumber() * 1000).format(\n                'MMM DD,yyyy HH:mm',\n              )}\n            />\n            <RowSpaceBetween\n              label=\"Author\"\n              value={\n                <Space size={10}>\n                  <Typography.Text\n                    style={{ cursor: 'pointer', textDecoration: 'underline' }}\n                    onClick={() =>\n                      window.open(explorer(authProposalAddress), '_blank')\n                    }\n                  >\n                    {shortenAddress(authProposalAddress, 3)}\n                  </Typography.Text>\n                  <Tooltip title=\"Copied\" visible={copied}>\n                    <CopyToClipboard text={authProposalAddress} onCopy={onCopy}>\n                      <IonIcon\n                        style={{ cursor: 'pointer' }}\n                        name=\"copy-outline\"\n                        onClick={onCopy}\n                      />\n                    </CopyToClipboard>\n                  </Tooltip>\n                </Space>\n              }\n            />\n            <RowSpaceBetween label=\"Quorum\" value={quorum} />\n            <RowSpaceBetween label=\"Vote method\" value={consensus} />\n          </Space>\n        </Col>\n      </Row>\n      <ModalTemplateInfo\n        setVisible={setVisible}\n        visible={visible}\n        proposalAddress={proposalAddress}\n        daoAddress={daoAddress}\n      />\n    </Card>\n  )\n}\n\nexport default CardInfo\n","import { useSelector } from 'react-redux'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { DaoData } from '@interdao/core'\nimport { utils } from '@senswap/sen-js'\nimport { useUI } from '@senhub/providers'\nimport BN from 'bn.js'\n\nimport { Card, Col, Row, Space, Typography, Progress } from 'antd'\nimport RowSpaceVertical from 'app/components/rowSpaceVertical'\n\nimport { ProposalChildCardProps } from './index'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { AppState } from 'app/model'\nimport { numeric } from 'shared/util'\nimport useProposalStatus from 'app/hooks/useProposalStatus'\nimport useProposal from 'app/hooks/useProposal'\n\nconst STROKE_COLOR = {\n  dark: { default: '#312B29', agree: '#698033', disagree: '#F9575E' },\n  light: { default: '#F2EFE9', agree: '#F9DEB0', disagree: '#F9575E' },\n}\n\nconst CardProgress = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const [backGroundColor, setBackGroundColor] = useState('')\n  const [successColor, setSuccessColor] = useState('')\n  const daos = useSelector((state: AppState) => state.dao.daos)\n\n  const { votingAgainstPower, votingForPower, consensusQuorum } = useProposal(\n    proposalAddress,\n    daoAddress,\n  )\n  const { mint } = daos[daoAddress] || ({} as DaoData)\n  const mintDecimal = useMintDecimals(mint?.toBase58()) || 0\n  const { actualSupply } = useProposalStatus(proposalAddress)\n  const {\n    ui: { theme },\n  } = useUI()\n\n  const noVote = Number(votingAgainstPower) || 0\n  const yesVote = Number(votingForPower) || 0\n  const totalVote = yesVote + noVote\n  const percentYes = (yesVote / totalVote) * 100\n  const percentNo = (noVote / totalVote) * 100\n\n  const currentPower = useMemo(() => {\n    if (!consensusQuorum) return new BN(0)\n    const actualYesVote = votingForPower.sub(votingAgainstPower)\n\n    const mechanismQuorum = Object.keys(consensusQuorum)[0]\n\n    if (mechanismQuorum === 'half')\n      return actualYesVote.mul(new BN(200)).div(actualSupply)\n\n    if (mechanismQuorum === 'oneThird')\n      return actualYesVote.mul(new BN(300)).div(actualSupply)\n\n    if (mechanismQuorum === 'twoThird')\n      return actualYesVote.mul(new BN(300)).div(actualSupply.mul(new BN(2)))\n\n    return new BN(0)\n  }, [actualSupply, consensusQuorum, votingAgainstPower, votingForPower])\n\n  const powerRequire = useMemo(() => {\n    if (!consensusQuorum || !actualSupply || currentPower.gte(new BN(100)))\n      return new BN(0)\n    const actualYesVote = votingForPower.sub(votingAgainstPower)\n\n    const mechanismQuorum = Object.keys(consensusQuorum)[0]\n\n    if (mechanismQuorum === 'half')\n      return actualSupply.div(new BN(2)).sub(actualYesVote)\n\n    if (mechanismQuorum === 'oneThird')\n      return actualSupply.div(new BN(3)).sub(actualYesVote)\n\n    if (mechanismQuorum === 'twoThird')\n      return actualSupply.mul(new BN(2)).div(new BN(3)).sub(actualYesVote)\n    return new BN(0)\n  }, [\n    actualSupply,\n    consensusQuorum,\n    currentPower,\n    votingAgainstPower,\n    votingForPower,\n  ])\n\n  const percentSuccess = useMemo(() => {\n    if (percentYes) return percentYes\n    if (percentNo) return 100 - percentNo\n    return 0\n  }, [percentNo, percentYes])\n\n  const getColors = useCallback(() => {\n    if (!percentNo && !percentYes)\n      return setBackGroundColor(STROKE_COLOR[theme].default)\n    if (!percentNo && percentYes)\n      return setSuccessColor(STROKE_COLOR[theme].agree)\n    if (percentNo && !percentYes)\n      return setBackGroundColor(STROKE_COLOR[theme].disagree)\n\n    setBackGroundColor(STROKE_COLOR[theme].disagree)\n    return setSuccessColor(STROKE_COLOR[theme].agree)\n  }, [percentNo, percentYes, theme])\n\n  useEffect(() => {\n    getColors()\n  }, [getColors])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Current results</Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Space size={0} style={{ width: '100%' }} direction=\"vertical\">\n            <Typography.Text type=\"secondary\">Quorum</Typography.Text>\n            <Typography.Text>\n              {numeric(\n                utils.undecimalize(\n                  BigInt(powerRequire.toString()),\n                  mintDecimal,\n                ),\n              ).format('0,0.[0000]')}{' '}\n              more Yes votes required\n            </Typography.Text>\n            <Progress\n              percent={100}\n              strokeColor={STROKE_COLOR[theme].default}\n              success={{\n                percent: currentPower.toNumber(),\n                strokeColor: STROKE_COLOR[theme].agree,\n              }}\n              showInfo={false}\n            />\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[4, 4]}>\n            <Col flex=\"auto\">\n              <RowSpaceVertical\n                label=\"Agree\"\n                size={0}\n                value={\n                  <Typography.Title level={4}>\n                    {numeric(\n                      utils.undecimalize(BigInt(yesVote), mintDecimal),\n                    ).format('0,0.[0000]')}\n                  </Typography.Title>\n                }\n              />\n            </Col>\n            <Col>\n              <RowSpaceVertical\n                label=\"Disagree\"\n                size={0}\n                align=\"end\"\n                value={\n                  <Typography.Title level={4}>\n                    {numeric(\n                      utils.undecimalize(BigInt(noVote), mintDecimal),\n                    ).format('0,0.[0000]')}\n                  </Typography.Title>\n                }\n              />\n            </Col>\n            <Col span={24}>\n              <Progress\n                style={{ width: '100%' }}\n                percent={100}\n                strokeColor={backGroundColor}\n                success={{\n                  percent: percentSuccess,\n                  strokeColor: successColor,\n                }}\n                showInfo={false}\n              />\n            </Col>\n            <Col span={24}>\n              <Row>\n                <Col flex=\"auto\">\n                  <Typography.Text type=\"secondary\">\n                    {numeric(percentYes).format('0,0.[00]')}%\n                  </Typography.Text>\n                </Col>\n                <Col>\n                  <Typography.Text type=\"secondary\">\n                    {numeric(percentNo).format('0,0.[00]')}%\n                  </Typography.Text>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CardProgress\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport useMetaData from 'app/hooks/useMetaData'\nimport { AppState } from 'app/model'\nimport { Typography } from 'antd'\n\ntype ColumnNameProps = {\n  authority: string\n  proposalAddress: string\n}\n\nconst ColumnName = ({ authority, proposalAddress }: ColumnNameProps) => {\n  const { proposal } = useSelector((state: AppState) => state)\n  const { dao } = proposal?.[proposalAddress]\n  const metaData = useMetaData(dao.toBase58())\n\n  const name = useMemo(() => {\n    const members = metaData?.members || []\n    for (const { walletAddress, name } of members) {\n      if (walletAddress === authority) {\n        return name\n      }\n    }\n    return '--'\n  }, [authority, metaData])\n\n  return <Typography.Text className=\"t-16\">{name}</Typography.Text>\n}\n\nexport default ColumnName\n","import { PublicKey } from '@solana/web3.js'\nimport { ReceiptData } from '@interdao/core'\n\nimport { Typography } from 'antd'\nimport ColumnType from './columnType'\nimport ColumnPower from './columnPower'\n\nimport { shortenAddress } from 'shared/util'\nimport ColumnName from './columnName'\n\nexport const HISTORY_COLUMNS_FLEXIBLE = [\n  {\n    title: 'WALLET ADDRESS',\n    dataIndex: 'authority',\n    render: (walletAddress: PublicKey) => (\n      <Typography>{shortenAddress(walletAddress.toBase58())}</Typography>\n    ),\n  },\n  {\n    title: 'TYPE',\n    dataIndex: 'authority',\n    render: (_: any, receipt: ReceiptData) => <ColumnType record={receipt} />,\n  },\n  {\n    title: 'POWER',\n    dataIndex: 'power',\n    render: (_: any, receipt: ReceiptData) => <ColumnPower receipt={receipt} />,\n  },\n]\n\nexport const HISTORY_COLUMNS_MULTISIG = [\n  {\n    title: 'NAME',\n    dataIndex: 'authority',\n    render: (authority: PublicKey, receipt: ReceiptData) => (\n      <ColumnName\n        proposalAddress={receipt.proposal.toBase58()}\n        authority={authority.toBase58()}\n      />\n    ),\n  },\n  {\n    title: 'WALLET ADDRESS',\n    dataIndex: 'authority',\n    render: (walletAddress: PublicKey) => (\n      <Typography>{shortenAddress(walletAddress.toBase58())}</Typography>\n    ),\n  },\n  {\n    title: 'TYPE',\n    dataIndex: 'authority',\n    render: (_: any, receipt: ReceiptData) => <ColumnType record={receipt} />,\n  },\n]\n","import { useCallback, useEffect, useState } from 'react'\nimport { ReceiptData } from '@interdao/core'\n\nimport { Card, Col, Row, Typography, Table, Button } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { HISTORY_COLUMNS_MULTISIG, HISTORY_COLUMNS_FLEXIBLE } from './column'\nimport { getReceipts } from 'app/hooks/useReceipts'\n\nimport './index.less'\nimport useMetaData from 'app/hooks/useMetaData'\n\nconst DEFAULT_AMOUNT_HISTORY = 5\n\nconst History = ({\n  proposalAddress,\n  daoAddress,\n}: {\n  proposalAddress: string\n  daoAddress: string\n}) => {\n  const [amount, setAmount] = useState(DEFAULT_AMOUNT_HISTORY)\n  const [loading, setLoading] = useState(false)\n  const [listReceipt, setListReceipt] = useState<ReceiptData[]>([])\n  const metaData = useMetaData(daoAddress)\n  const isMultisigDAO = metaData?.daoType === 'multisig-dao'\n  const historyColum = isMultisigDAO\n    ? HISTORY_COLUMNS_MULTISIG\n    : HISTORY_COLUMNS_FLEXIBLE\n\n  const fetchReceipts = useCallback(async () => {\n    setLoading(true)\n    const receipts = await getReceipts(proposalAddress)\n    const nextReceipts: ReceiptData[] = []\n    Object.values(receipts).forEach((receipt) => {\n      const { authority, power, action } = receipt\n      const actionType = Object.keys(action || {})[0]\n      const owner = authority.toBase58()\n\n      const existReceipt = nextReceipts.find((_receipt) => {\n        const { action: _action, authority: _authority } = _receipt\n        const _actionType = Object.keys(_action || {})[0]\n        const _owner = _authority.toBase58()\n\n        return _owner === owner && actionType === _actionType\n      })\n      if (!existReceipt) return nextReceipts.push(receipt)\n\n      const { power: oldPower } = existReceipt\n      const index = nextReceipts.findIndex(\n        (_receipt) => _receipt === existReceipt,\n      )\n      if (index !== -1)\n        return (nextReceipts[index] = {\n          ...nextReceipts[index],\n          power: oldPower.add(power),\n        })\n    })\n    setLoading(false)\n    return setListReceipt(nextReceipts)\n  }, [proposalAddress])\n\n  useEffect(() => {\n    fetchReceipts()\n  }, [fetchReceipts])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Row>\n            <Col flex=\"auto\">\n              <Typography.Title level={5}> Votes</Typography.Title>\n            </Col>\n            <Col>\n              <Button onClick={fetchReceipts}>Refresh</Button>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Table\n            columns={historyColum}\n            dataSource={listReceipt.slice(0, amount)}\n            pagination={false}\n            loading={loading}\n            rowKey={({ index, lockedDate }) =>\n              index.toNumber() + lockedDate.toNumber()\n            }\n          />\n        </Col>\n        <Col span={24} style={{ textAlign: 'center' }}>\n          <Button\n            disabled={listReceipt.length <= amount}\n            onClick={() => setAmount(amount + DEFAULT_AMOUNT_HISTORY)}\n            icon={<IonIcon name=\"chevron-down-outline\" />}\n          >\n            View more\n          </Button>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\nexport default History\n","import { useParams, useHistory } from 'react-router-dom'\n\nimport { Button, Col, Row } from 'antd'\nimport CardStatus from './cardStatus'\nimport CardVote from './cardVote'\nimport CardInfo from './cardInfo'\nimport CardProgress from './cardProgress'\nimport History from './history'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport configs from 'app/configs'\nimport './index.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport type ProposalChildCardProps = {\n  proposalAddress: string\n  daoAddress: string\n}\n\nconst ProposalDetails = () => {\n  const history = useHistory()\n  const { proposalAddress, daoAddress } =\n    useParams<{ daoAddress: string; proposalAddress: string }>()\n\n  return (\n    <Row justify=\"center\">\n      <Col xs={24} lg={18}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Button\n              type=\"text\"\n              icon={<IonIcon name=\"arrow-back-outline\" />}\n              onClick={() => history.push(`/app/${appId}/dao/${daoAddress}`)}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col span={24}>\n            <Row gutter={[24, 24]}>\n              <Col xs={24} md={16}>\n                <Row gutter={[24, 24]}>\n                  <Col span={24}>\n                    <CardStatus\n                      proposalAddress={proposalAddress}\n                      daoAddress={daoAddress}\n                    />\n                  </Col>\n                  <Col span={24}>\n                    <CardVote\n                      proposalAddress={proposalAddress}\n                      daoAddress={daoAddress}\n                    />\n                  </Col>\n                  <Col span={24}>\n                    <History\n                      proposalAddress={proposalAddress}\n                      daoAddress={daoAddress}\n                    />\n                  </Col>\n                </Row>\n              </Col>\n              <Col xs={24} md={8}>\n                <Row gutter={[24, 24]}>\n                  <Col span={24}>\n                    <CardInfo\n                      proposalAddress={proposalAddress}\n                      daoAddress={daoAddress}\n                    />\n                  </Col>\n                  <Col span={24}>\n                    <CardProgress\n                      proposalAddress={proposalAddress}\n                      daoAddress={daoAddress}\n                    />\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\nexport default ProposalDetails\n","import { useHistory } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\n\nimport { Row, Button, Col, ButtonProps } from 'antd'\n\nimport configs from 'app/configs'\nimport { AppDispatch } from 'app/model'\nimport { setInitDao } from 'app/model/dao.controller'\nimport { setInitMetadata } from 'app/model/metadata.controller'\n\nconst {\n  manifest: { appId },\n} = configs\n\ntype ActionButtonProps = {\n  daoAddress: string\n  onSave: () => void\n} & ButtonProps\n\nconst ActionButton = ({ daoAddress, onSave, ...rest }: ActionButtonProps) => {\n  const history = useHistory()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onCancel = async () => {\n    await dispatch(setInitDao())\n    await dispatch(setInitMetadata())\n    return history.push(`/app/${appId}/dao/${daoAddress}`)\n  }\n\n  return (\n    <Row>\n      <Col flex=\"auto\">\n        <Button onClick={onCancel} type=\"text\">\n          Cancel\n        </Button>\n      </Col>\n      <Col>\n        <Button {...rest} onClick={onSave} type=\"primary\">\n          Save\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ActionButton\n","import { useEffect, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { CID } from 'ipfs-core'\n\nimport { Col, Row } from 'antd'\nimport MetaDataForm from '../daoInitialization/metaDataForm'\nimport ActionButton from './actionButton'\n\nimport IPFS from 'shared/pdb/ipfs'\nimport { explorer } from 'shared/util'\nimport configs from 'app/configs'\nimport { AppDispatch, AppState } from 'app/model'\nimport useMetaData from 'app/hooks/useMetaData'\nimport { setInitMetadata } from 'app/model/metadata.controller'\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst Information = ({ daoAddress }: { daoAddress: string }) => {\n  const [loading, setLoading] = useState(false)\n  const {\n    metadata: { initMetadata },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n  const metaData = useMetaData(daoAddress)\n\n  useEffect(() => {\n    dispatch(setInitMetadata(metaData))\n  }, [dispatch, metaData])\n\n  const updateMetaData = async () => {\n    setLoading(true)\n    try {\n      const ipfs = new IPFS()\n      const cid = await ipfs.set(initMetadata)\n      const {\n        multihash: { digest },\n      } = CID.parse(cid)\n      const daoMetaData = Buffer.from(digest)\n      const { txId } = await interDao.updateDaoMetadata(daoMetaData, daoAddress)\n      return window.notify({\n        type: 'success',\n        description:\n          'Update information successfully. Click here to view details',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <MetaDataForm />\n      </Col>\n      <Col span={24}>\n        <ActionButton\n          onSave={updateMetaData}\n          daoAddress={daoAddress}\n          loading={loading}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Information\n","import { ChangeEvent, useCallback, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { CID } from 'ipfs-core'\nimport isEqual from 'react-fast-compare'\n\nimport { Button, Col, Row, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport MemberInput from '../../daoInitialization/multisigDAO/daoRule/memberInput'\nimport Regime from '../../daoInitialization/multisigDAO/daoRule/regime'\nimport ActionButton from '../actionButton'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setInitMetadata } from 'app/model/metadata.controller'\nimport { explorer } from 'shared/util'\nimport configs from 'app/configs'\nimport IPFS from 'shared/pdb/ipfs'\nimport MultisigWallet from 'app/helpers/mutisigWallet'\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst DAOMembers = () => {\n  const [oldMember, setOldMember] = useState<string[]>([])\n  const {\n    metadata: { initMetadata },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n  const { members } = initMetadata\n\n  const addMember = () => {\n    const nextMembers = [...members]\n    nextMembers.push({ name: '', walletAddress: '' })\n    return dispatch(setInitMetadata({ members: nextMembers }))\n  }\n\n  const onChangeMember = (e: ChangeEvent<HTMLInputElement>, index: number) => {\n    const nextMembers = [...members]\n    for (const { walletAddress } of members) {\n      if (isEqual(walletAddress, e.target.value))\n        return window.notify({\n          type: 'warning',\n          description: 'This wallet address already exists',\n        })\n    }\n    nextMembers[index] = {\n      ...nextMembers[index],\n      [e.target.name]: e.target.value,\n    }\n    return dispatch(setInitMetadata({ members: nextMembers }))\n  }\n\n  const remove = (index: number) => {\n    const nextMembers = [...members]\n    nextMembers.splice(index, 1)\n    return dispatch(setInitMetadata({ members: nextMembers }))\n  }\n\n  const setDefaultMembers = useCallback(() => {\n    if (oldMember.length) return\n    const oldAddresses = []\n    for (const { walletAddress } of members) {\n      oldAddresses.push(walletAddress)\n    }\n    return setOldMember(oldAddresses)\n  }, [members, oldMember])\n\n  useEffect(() => {\n    setDefaultMembers()\n  }, [setDefaultMembers])\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Typography.Title level={4}>\n          People who'll be part of your team.\n        </Typography.Title>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[12, 12]}>\n          {members.length &&\n            members.map(({ name, walletAddress }, idx) => {\n              return (\n                <Col span={24} key={idx}>\n                  <MemberInput\n                    name={name}\n                    walletAddress={walletAddress}\n                    onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                      onChangeMember(e, idx)\n                    }\n                    remove={() => remove(idx)}\n                    disabledBtn={oldMember.includes(walletAddress)}\n                    disabledWalletInput={oldMember.includes(walletAddress)}\n                    disabledName={oldMember.includes(walletAddress)}\n                  />\n                </Col>\n              )\n            })}\n          <Col span={4}>\n            <Button\n              block\n              type=\"dashed\"\n              icon={<IonIcon name=\"add-outline\" />}\n              onClick={addMember}\n            >\n              Add\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nconst EditMultisigDaoRule = ({ daoAddress }: { daoAddress: string }) => {\n  const [loading, setLoading] = useState(false)\n  const {\n    dao: { daos: daoData },\n    metadata: { initMetadata },\n  } = useSelector((state: AppState) => state)\n  const { members } = initMetadata\n\n  const disabled = useMemo(() => {\n    for (const { walletAddress } of members) {\n      if (!account.isAddress(walletAddress)) return true\n    }\n    return false\n  }, [members])\n\n  const validAccount = async (walletAddress: string, mintAddress: string) => {\n    try {\n      const { splt } = window.sentre\n      const associatedAddress = await splt.deriveAssociatedAddress(\n        walletAddress,\n        mintAddress,\n      )\n      const data = await splt.getAccountData(associatedAddress)\n      if (data) return false\n    } catch (error) {\n      return true\n    }\n  }\n\n  const updateMember = async () => {\n    const { mint } = daoData?.[daoAddress]\n    const mintAddress = mint.toBase58()\n    try {\n      setLoading(true)\n      const ipfs = new IPFS()\n      const cid = await ipfs.set(initMetadata)\n      const {\n        multihash: { digest },\n      } = CID.parse(cid)\n      const daoMetaData = Buffer.from(digest)\n      const { txId } = await interDao.updateDaoMetadata(daoMetaData, daoAddress)\n      const multisigWallet = new MultisigWallet(mintAddress)\n\n      for (const { walletAddress } of members) {\n        const isValid = await validAccount(walletAddress, mintAddress)\n        if (!isValid) continue\n        const walletPubkey = account.fromAddress(walletAddress)\n        await multisigWallet.mintToAccount(walletPubkey)\n      }\n\n      return window.notify({\n        type: 'success',\n        description:\n          'Update information successfully. Click here to view details',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (er: any) {\n      window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <Regime />\n      </Col>\n      <Col span={24}>\n        <DAOMembers />\n      </Col>\n      <Col span={24}>\n        <ActionButton\n          loading={loading}\n          onSave={updateMember}\n          daoAddress={daoAddress}\n          disabled={disabled}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default EditMultisigDaoRule\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { SystemProgram } from '@solana/web3.js'\nimport BN from 'bn.js'\nimport { DaoRegime } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\n\nimport { Col, Row } from 'antd'\nimport DaoRule from '../../daoInitialization/flexibleDAO/daoRule'\nimport ActionButton from '../actionButton'\n\nimport configs from 'app/configs'\nimport { AppState } from 'app/model'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { explorer } from 'shared/util'\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst EditFlexibleDaoRule = ({ daoAddress }: { daoAddress: string }) => {\n  const [loading, setLoading] = useState(false)\n  const [oldRegime, setOldRegime] = useState<DaoRegime>()\n  const [oldSupply, setOldSupply] = useState<BN>(new BN(0))\n  const {\n    dao: { daos, initDao },\n  } = useSelector((state: AppState) => state)\n  const { mint, regime, supply } = daos?.[daoAddress] || {\n    regime: {},\n    supply: new BN(0),\n    mint: SystemProgram.programId,\n  }\n  const decimals = useMintDecimals(mint.toBase58()) || 0\n\n  const updateRegime = async () => {\n    const { regime } = initDao\n    if (!regime || isEqual(regime, oldRegime)) return\n    try {\n      const { txId } = await interDao.updateDaoRegime(regime, daoAddress)\n      window.notify({\n        type: 'success',\n        description: 'Update regime successfully. Click here to view details',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (er: any) {\n      window.notify({ type: 'error', description: er.message })\n    }\n  }\n\n  const updateSupply = async () => {\n    const { supply } = initDao\n    const supplyDecimal = supply.mul(new BN(10).pow(new BN(decimals)))\n    if (!supply || isEqual(supplyDecimal, oldSupply)) return\n    try {\n      const { txId: txIdSupply } = await interDao.updateDaoSupply(\n        supplyDecimal,\n        daoAddress,\n      )\n      return window.notify({\n        type: 'success',\n        description: 'Update supply successfully. Click here to view details',\n        onClick: () => window.open(explorer(txIdSupply), '_blank'),\n      })\n    } catch (er: any) {\n      window.notify({ type: 'error', description: er.message })\n    }\n  }\n\n  const onUpdate = async () => {\n    setLoading(true)\n    await updateRegime()\n    await updateSupply()\n    return setLoading(false)\n  }\n\n  const setDefaultValue = useCallback(() => {\n    if (oldSupply && oldRegime) return\n    setOldSupply(supply)\n    setOldRegime(regime)\n  }, [oldRegime, oldSupply, regime, supply])\n\n  useEffect(() => {\n    setDefaultValue()\n  }, [setDefaultValue])\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <DaoRule />\n      </Col>\n      <Col span={24}>\n        <ActionButton\n          loading={loading}\n          onSave={onUpdate}\n          daoAddress={daoAddress}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default EditFlexibleDaoRule\n","import { useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account, utils } from '@senswap/sen-js'\nimport { SystemProgram } from '@solana/web3.js'\nimport { BN } from 'bn.js'\n\nimport EditMultisigDaoRule from './editMultisigDaoRule'\nimport EditFlexibleDaoRule from './editFlexibleDaoRule'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { InitDao, setInitDao } from 'app/model/dao.controller'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport useMetaData from 'app/hooks/useMetaData'\n\nconst Rule = ({ daoAddress }: { daoAddress: string }) => {\n  const {\n    dao: { daos: daoData },\n  } = useSelector((state: AppState) => state)\n  const { mint, regime, supply } = daoData?.[daoAddress] || {\n    regime: {},\n    supply: new BN(0),\n    mint: SystemProgram.programId,\n  }\n  const decimals = useMintDecimals(mint.toBase58()) || 0\n  const dispatch = useDispatch<AppDispatch>()\n  const metaData = useMetaData(daoAddress)\n\n  const setDefaultValue = useCallback(() => {\n    if (!account.isAddress(daoAddress)) return\n    const nextData: InitDao = {\n      mintAddress: mint.toBase58(),\n      supply: new BN(utils.undecimalize(BigInt(supply.toNumber()), decimals)),\n      regime,\n    }\n    return dispatch(setInitDao(nextData))\n  }, [daoAddress, decimals, dispatch, mint, regime, supply])\n\n  useEffect(() => {\n    setDefaultValue()\n  }, [setDefaultValue])\n\n  return metaData?.daoType === 'multisig-dao' ? (\n    <EditMultisigDaoRule daoAddress={daoAddress} />\n  ) : (\n    <EditFlexibleDaoRule daoAddress={daoAddress} />\n  )\n}\n\nexport default Rule\n","import { ChangeEvent, useState } from 'react'\nimport { account } from '@senswap/sen-js'\n\nimport { Col, Input, Row, Space, Typography } from 'antd'\nimport RowSpaceVertical from 'app/components/rowSpaceVertical'\nimport ActionButton from './actionButton'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport configs from 'app/configs'\nimport { explorer } from 'shared/util'\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst TransferAuthority = ({ daoAddress }: { daoAddress: string }) => {\n  const [authority, setAuthority] = useState('')\n  const [loading, setLoading] = useState(false)\n\n  const updateAuthority = async () => {\n    if (!account.isAddress(authority)) return\n    try {\n      setLoading(true)\n      const { txId } = await interDao.transferAuthority(authority, daoAddress)\n      return window.notify({\n        type: 'success',\n        description:\n          'Transfer authority successfully. Click here to view details',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space size={12}>\n          <IonIcon name=\"alert-circle-outline\" />\n          <Typography.Text type=\"secondary\" className=\"caption\">\n            Your current account will lose the DAO control when you transfer\n            authority.\n          </Typography.Text>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <RowSpaceVertical\n          style={{ width: '100%' }}\n          label=\"Transfer to author\"\n          value={\n            <Input\n              placeholder=\"E.g. Agt8...\"\n              onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                setAuthority(e.target.value)\n              }\n              className=\"border-less\"\n            />\n          }\n        />\n      </Col>\n      <Col span={24} />\n      <Col span={24}>\n        <ActionButton\n          loading={loading}\n          daoAddress={daoAddress}\n          onSave={updateAuthority}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default TransferAuthority\n","import { useParams } from 'react-router-dom'\n\nimport { Card, Col, Row, Tabs, Typography } from 'antd'\nimport Information from './information'\nimport Rule from './rule'\nimport TransferAuthority from './transferAuthority'\n\nimport './index.less'\n\nconst EditDAO = () => {\n  const { daoAddress } = useParams<{ daoAddress: string }>()\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col xs={24} lg={16}>\n        <Card bodyStyle={{ padding: 0 }} bordered={false} className=\"edit-dao\">\n          <Row>\n            <Col span={24} className=\"edit-dao_header\">\n              <Typography.Title level={4}>Edit DAO</Typography.Title>\n            </Col>\n            <Col span={24} className=\"edit-dao_body\">\n              <Tabs>\n                <Tabs.TabPane key=\"information\" tab=\"Information\">\n                  <Information daoAddress={daoAddress} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"rule\" tab=\"Rule\">\n                  <Rule daoAddress={daoAddress} />\n                </Tabs.TabPane>\n                <Tabs.TabPane key=\"transfer-authority\" tab=\"Transfer Authority\">\n                  <TransferAuthority daoAddress={daoAddress} />\n                </Tabs.TabPane>\n              </Tabs>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\nexport default EditDAO\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { useWallet } from '@senhub/providers'\nimport { PublicKey } from '@solana/web3.js'\n\nimport { AppDispatch } from 'app/model'\nimport configs from 'app/configs'\nimport { getDao, getDaos } from 'app/model/dao.controller'\n\nconst {\n  sol: { interDao },\n} = configs\n\n// Watch id\nlet initializeDAOEventId = 0\nlet updateDaoRegimeEventId = 0\nlet updateSupplyEventId = 0\nlet transferAuthorityEventId = 0\n\nconst DaoWatcher = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadDaoData = useCallback(\n    ({ dao: daoPublicKey }: { dao: PublicKey }) => {\n      const daoAddress = daoPublicKey.toBase58()\n      return dispatch(getDao({ address: daoAddress, force: true }))\n    },\n    [dispatch],\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getDaos()).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of DAOs',\n      })\n    }\n  }, [dispatch, walletAddress])\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    initializeDAOEventId = await interDao.addListener(\n      'InitializeDAOEvent',\n      reloadDaoData,\n    )\n    updateDaoRegimeEventId = await interDao.addListener(\n      'UpdateDaoRegimeEvent',\n      reloadDaoData,\n    )\n    updateSupplyEventId = await interDao.addListener(\n      'UpdateSupplyEvent',\n      reloadDaoData,\n    )\n    transferAuthorityEventId = await interDao.addListener(\n      'TransferAuthorityEvent',\n      reloadDaoData,\n    )\n  }, [reloadDaoData])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await interDao.removeListener(initializeDAOEventId)\n          await interDao.removeListener(updateDaoRegimeEventId)\n          await interDao.removeListener(updateSupplyEventId)\n          await interDao.removeListener(transferAuthorityEventId)\n        } catch (er: any) {\n          console.warn(er.message)\n        } finally {\n          initializeDAOEventId = 0\n          updateDaoRegimeEventId = 0\n          updateSupplyEventId = 0\n          transferAuthorityEventId = 0\n        }\n      })()\n    }\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default DaoWatcher\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { PublicKey } from '@solana/web3.js'\n\nimport { AppDispatch } from 'app/model'\nimport configs from 'app/configs'\nimport { getProposal, getProposals } from 'app/model/proposal.controller'\n\nconst {\n  sol: { interDao },\n} = configs\n\n// Watch id\nlet initializeProposalEventId = 0\nlet voteForEventId = 0\nlet voteAgainstEventId = 0\nlet executeProposalEventId = 0\n\nconst ProposalWatcher = () => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadProposalData = useCallback(\n    ({ proposal: proposalPublicKey }: { proposal: PublicKey }) => {\n      const proposalAddress = proposalPublicKey.toBase58()\n      return dispatch(getProposal({ address: proposalAddress, force: true }))\n    },\n    [dispatch],\n  )\n\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    initializeProposalEventId = await interDao.addListener(\n      'InitializeProposalEvent',\n      reloadProposalData,\n    )\n    voteForEventId = await interDao.addListener(\n      'VoteForEvent',\n      reloadProposalData,\n    )\n    voteAgainstEventId = await interDao.addListener(\n      'VoteAgainstEvent',\n      reloadProposalData,\n    )\n    executeProposalEventId = await interDao.addListener(\n      'ExecuteProposalEvent',\n      reloadProposalData,\n    )\n  }, [reloadProposalData])\n\n  useEffect(() => {\n    watchData()\n    dispatch(getProposals()) //fetch all proposal\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await interDao.removeListener(initializeProposalEventId)\n          await interDao.removeListener(voteForEventId)\n          await interDao.removeListener(voteAgainstEventId)\n          await interDao.removeListener(executeProposalEventId)\n        } catch (er: any) {\n          console.warn(er.message)\n        } finally {\n          initializeProposalEventId = 0\n          voteForEventId = 0\n          voteAgainstEventId = 0\n          executeProposalEventId = 0\n        }\n      })()\n    }\n  }, [dispatch, watchData])\n\n  return <Fragment />\n}\n\nexport default ProposalWatcher\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport {\n  ProposalData,\n  ReceiptData,\n  RECEIPT_DISCRIMINATOR,\n} from '@interdao/core'\nimport { account } from '@senswap/sen-js'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type ReceiptState = Record<string, ReceiptData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'receipt'\nconst initialState: ReceiptState = {}\n\n/**\n * Actions\n */\n\nexport const getReceipts = createAsyncThunk(\n  `${NAME}/getReceipts`,\n  async ({ authorityAddress }: { authorityAddress: string }) => {\n    if (!account.isAddress(authorityAddress)) throw new Error('Invalid address')\n    const {\n      provider: { connection },\n      programId,\n      account: { receipt },\n    } = interDao.program\n    const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n      await connection.getProgramAccounts(programId, {\n        filters: [\n          { dataSize: receipt.size },\n          {\n            memcmp: {\n              offset: 0,\n              bytes: RECEIPT_DISCRIMINATOR,\n            },\n          },\n          {\n            memcmp: {\n              offset: 16,\n              bytes: authorityAddress,\n            },\n          },\n        ],\n      })\n    let bulk: ReceiptState = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = interDao.parseReceiptData(buf)\n      bulk[address] = data\n    })\n    return bulk\n  },\n)\n\nexport const getReceipt = createAsyncThunk<\n  ReceiptState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getReceipt`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    dao: { [address]: data },\n  } = getState()\n  if (data && !force) return { [address]: data }\n  const raw = await interDao.getReceiptData(address)\n  return { [address]: raw }\n})\n\nexport const upsetReceipt = createAsyncThunk<\n  ReceiptState,\n  { address: string; data: ProposalData },\n  { state: any }\n>(`${NAME}/upsetReceipt`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteReceipt = createAsyncThunk(\n  `${NAME}/deleteReceipt`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getReceipts.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { PublicKey } from '@solana/web3.js'\nimport { useWallet } from '@senhub/providers'\nimport { account } from '@senswap/sen-js'\n\nimport { AppDispatch } from 'app/model'\nimport configs from 'app/configs'\nimport { getReceipt, getReceipts } from 'app/model/receipt.controller'\n\nconst {\n  sol: { interDao },\n} = configs\n\n// Watch id\nlet voteForEventId = 0\nlet voteAgainstEventId = 0\nlet closeEventId = 0\n\nconst ReceiptWatcher = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadReceiptData = useCallback(\n    ({ receipt: receiptPublicKey }: { receipt: PublicKey }) => {\n      const receiptAddress = receiptPublicKey.toBase58()\n      return dispatch(getReceipt({ address: receiptAddress, force: true }))\n    },\n    [dispatch],\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getReceipts({ authorityAddress: walletAddress })).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of receipts',\n      })\n    }\n  }, [dispatch, walletAddress])\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    voteForEventId = await interDao.addListener(\n      'VoteForEvent',\n      reloadReceiptData,\n    )\n    voteAgainstEventId = await interDao.addListener(\n      'VoteAgainstEvent',\n      reloadReceiptData,\n    )\n    closeEventId = await interDao.addListener('CloseEvent', reloadReceiptData)\n  }, [reloadReceiptData])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await interDao.removeListener(voteForEventId)\n          await interDao.removeListener(voteAgainstEventId)\n          await interDao.removeListener(closeEventId)\n        } catch (er: any) {\n          console.warn(er.message)\n        } finally {\n          voteForEventId = 0\n          voteAgainstEventId = 0\n          closeEventId = 0\n        }\n      })()\n    }\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default ReceiptWatcher\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'app/model'\nimport { getCID } from 'app/helpers'\nimport IPFS from 'shared/pdb/ipfs'\nimport { MetaData } from 'app/model/metadata.controller'\nimport usePDB from 'app/hooks/usePDB'\n\nconst ipfs = new IPFS()\n\nconst MetadataWatcher = () => {\n  const daos = useSelector((state: AppState) => state.dao.daos)\n  const pdb = usePDB()\n\n  const loadAllMetaData = useCallback(async () => {\n    const keys = await pdb.keys()\n    Object.keys(daos).map(async (daoAddress) => {\n      if (keys.includes(daoAddress)) return\n      let metadataId = daos[daoAddress].metadata\n      const cid = getCID(metadataId)\n      const data: MetaData = await ipfs.get(cid)\n      await pdb.setItem(daoAddress, data)\n    })\n  }, [daos, pdb])\n\n  useEffect(() => {\n    loadAllMetaData()\n  }, [loadAllMetaData])\n\n  return <Fragment />\n}\n\nexport default MetadataWatcher\n","import { useEffect } from 'react'\nimport { useUI } from '@senhub/providers'\nimport { Redirect, Route, Switch } from 'react-router-dom'\n\nimport { Row, Col } from 'antd'\nimport Dao from './dao'\nimport Proposal from './proposal'\nimport ProposalInitialization from './proposal/proposalInitialization'\nimport DaoInitialization from './dao/daoInitialization'\nimport ProposalDetails from './proposal/proposalDetails'\nimport EditDAO from './dao/editDao'\nimport DaoWatcher from './watcher/dao.watcher'\nimport ProposalWatcher from './watcher/proposal.watcher'\nimport ReceiptWatcher from './watcher/receipt.watcher'\nimport MetadataWatcher from './watcher/metadata.watcher'\n\nimport BG from 'app/static/images/system/bg-dark.png'\nimport BG_LIGHT from 'app/static/images/system/bg-light.png'\nimport configs from 'app/configs'\n\nimport 'app/static/styles/dark.less'\nimport 'app/static/styles/light.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst View = () => {\n  const { setBackground } = useUI()\n\n  useEffect(() => {\n    setBackground({ light: BG_LIGHT, dark: BG })\n  }, [setBackground])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col span={24}>\n        <Switch>\n          <Route exact path={`/app/${appId}/dao`} component={Dao} />\n          <Route\n            exact\n            path={`/app/${appId}/dao/new-dao`}\n            component={DaoInitialization}\n          />\n          <Route\n            exact\n            path={`/app/${appId}/dao/:daoAddress`}\n            component={Proposal}\n          />\n          <Route\n            exact\n            path={`/app/${appId}/dao/:daoAddress/edit`}\n            component={EditDAO}\n          />\n          <Route\n            exact\n            path={`/app/${appId}/dao/:daoAddress/new-proposal`}\n            component={ProposalInitialization}\n          />\n          <Route\n            exact\n            path={`/app/${appId}/dao/:daoAddress/proposal/:proposalAddress`}\n            component={ProposalDetails}\n          />\n          <Redirect from=\"*\" to={`/app/${appId}/dao`} />\n        </Switch>\n      </Col>\n      <Col span={24} />\n      <DaoWatcher />\n      <ProposalWatcher />\n      <ReceiptWatcher />\n      <MetadataWatcher />\n    </Row>\n  )\n}\n\nexport default View\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport dao from 'app/model/dao.controller'\nimport metadata from 'app/model/metadata.controller'\nimport proposal from 'app/model/proposal.controller'\nimport receipt from 'app/model/receipt.controller'\nimport voteBid from 'app/model/voteBid.controller'\nimport template from 'app/model/template.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools(process.env.REACT_APP_ID as string),\n  reducer: {\n    dao,\n    metadata,\n    proposal,\n    receipt,\n    voteBid,\n    template,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { Provider } from 'react-redux'\nimport {\n  WalletProvider,\n  UIProvider,\n  AccountProvider,\n  PoolProvider,\n  MintProvider,\n} from '@senhub/providers'\n\nimport View from 'app/view'\nimport model from 'app/model'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <UIProvider appId={appId} antd={{ prefixCls: appId }}>\n      <WalletProvider>\n        <AccountProvider>\n          <PoolProvider>\n            <MintProvider>\n              <Provider store={model}>\n                <View />\n              </Provider>\n            </MintProvider>\n          </PoolProvider>\n        </AccountProvider>\n      </WalletProvider>\n    </UIProvider>\n  )\n}\n","export type LimitConfig = {\n  calls: number\n  time: number\n}\n\nexport type CacheConfig = {\n  ttl: number // millisecond\n}\n\nexport type SingleFlightConfig = {\n  limit?: LimitConfig\n  cache?: CacheConfig\n}\n\n// 10 request per 1 second\nexport const DEFAULT_LIMIT_CONFIG: LimitConfig = {\n  calls: 10,\n  time: 1000,\n}\n\n// 10 request per 1 second\nexport const DEFAULT_CACHE_CONFIG: CacheConfig = {\n  ttl: 30000,\n}\n\nexport const DEFAULT_SINGLE_FLIGHT_CONFIG: SingleFlightConfig = {\n  limit : DEFAULT_LIMIT_CONFIG,\n  cache: DEFAULT_CACHE_CONFIG\n}","export interface IRequestQueue {\n  key: string\n  add(resolve: any, reject: any): void\n  resolves(data: any): void\n  rejects(error: any): void\n}\n\nexport class RequestQueue implements IRequestQueue {\n  key = ''\n  private resolveQueue: any[] = []\n  private rejectQueue: any[] = []\n  constructor(key: string) {\n    this.key = key\n  }\n\n  add(resolve: any, reject: any) {\n    this.resolveQueue.push(resolve)\n    this.rejectQueue.push(reject)\n  }\n\n  resolves(data: any) {\n    while (this.resolveQueue.length > 0) {\n      const resolve = this.resolveQueue.shift()\n      resolve(data)\n    }\n  }\n\n  rejects(error: any) {\n    while (this.rejectQueue.length > 0) {\n      const reject = this.rejectQueue.shift()\n      reject(error)\n    }\n  }\n}\n","import { DEFAULT_CACHE_CONFIG } from './constant'\nimport { CacheConfig } from './constant'\n\nexport class SingleFlightCache {\n  private static mapCache = new Map<string, any>()\n\n  static set(\n    key: string,\n    value: any,\n    configs: CacheConfig = DEFAULT_CACHE_CONFIG,\n  ) {\n    this.mapCache.set(key, value)\n    setTimeout(() => {\n      this.mapCache.delete(key)\n    }, configs.ttl)\n  }\n\n  static get(key: string) {\n    return this.mapCache.get(key)\n  }\n}\n","import { DEFAULT_SINGLE_FLIGHT_CONFIG, SingleFlightConfig } from './constant'\n\nimport { IRequestQueue, RequestQueue } from './request'\nimport { SingleFlightCache } from './cache'\n\nexport class DataLoader {\n  static mapInstance = new Map<string, SingleFlight>()\n\n  private static getSingleFlight(configs: SingleFlightConfig): SingleFlight {\n    const instanceKey = JSON.stringify(configs)\n    if (this.mapInstance.has(instanceKey)) {\n      const instance = this.mapInstance.get(instanceKey)\n      if (instance) return instance\n    }\n\n    let newSingleFlight = new SingleFlight(configs)\n    this.mapInstance.set(instanceKey, newSingleFlight)\n    return newSingleFlight\n  }\n\n  static async load<T>(\n    requestKey: string | object,\n    callback: () => Promise<T>,\n    configs: SingleFlightConfig = {},\n  ): Promise<T> {\n    if (typeof requestKey === 'object') requestKey = JSON.stringify(requestKey)\n\n    let singleFlight = DataLoader.getSingleFlight(configs)\n    DataLoader.mapInstance.set(requestKey, singleFlight)\n    const newRequest = new RequestQueue(requestKey)\n    return singleFlight.load<T>(newRequest, callback)\n  }\n}\n\nclass SingleFlight {\n  private config: SingleFlightConfig\n  private intervalRequest: any\n  private timeLogs: number[] = []\n\n  private mapRequestCalling = new Map<string, IRequestQueue>()\n  private requestQueue: IRequestQueue[] = []\n\n  constructor(configs: SingleFlightConfig) {\n    this.config = Object.assign(DEFAULT_SINGLE_FLIGHT_CONFIG, configs)\n  }\n\n  async load<T>(newRequest: IRequestQueue, callback: () => Promise<T>) {\n    const cacheData = SingleFlightCache.get(newRequest.key)\n    if (cacheData) return Promise.resolve(cacheData)\n\n    let isFetch = false\n    let request = this.mapRequestCalling.get(newRequest.key)\n    if (!request) {\n      request = newRequest\n      isFetch = true\n      this.mapRequestCalling.set(request.key, request)\n    }\n\n    return new Promise((resolve, reject) => {\n      if (!request) return reject('Not found request!')\n      request.add(resolve, reject)\n      if (isFetch) {\n        this.fetch<T>(request, callback)\n      }\n    })\n  }\n\n  private fetch<T>(request: IRequestQueue, callback: () => Promise<T>) {\n    if (!this.validateLimit()) {\n      return this.addRequestQueue(request, callback)\n    }\n    this.createTimeLogs()\n\n    callback()\n      .then((response) => {\n        SingleFlightCache.set(request.key, response, this.config.cache)\n        request.resolves(response)\n      })\n      .catch((error) => {\n        request.rejects(error)\n      })\n      .finally(() => {\n        this.mapRequestCalling.delete(request.key)\n        this.fetchRequestQueue(callback)\n      })\n  }\n\n  private fetchRequestQueue(callback: () => Promise<any>) {\n    if (!this.validateLimit()) return\n    const request = this.requestQueue.shift()\n    if (request) this.load(request, callback)\n\n    if (this.requestQueue.length === 0 && this.intervalRequest) {\n      clearInterval(this.intervalRequest)\n    }\n  }\n\n  private addRequestQueue(\n    request: IRequestQueue,\n    callback: () => Promise<any>,\n  ) {\n    this.requestQueue.push(request)\n    this.intervalRequest = setInterval(() => {\n      this.fetchRequestQueue(callback)\n    }, this.config.limit?.time)\n  }\n\n  private validateLimit(): boolean {\n    return true\n  }\n\n  private createTimeLogs() {\n    if (!this.config.limit) return\n\n    const now = new Date().getTime()\n    this.timeLogs.push(now)\n    if (this.timeLogs.length > this.config.limit?.calls) {\n      this.timeLogs.shift()\n    }\n  }\n}\n","import { PublicKey } from '@solana/web3.js'\nimport BN from 'bn.js'\n\n// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint' ||\n    val instanceof PublicKey ||\n    val instanceof BN ||\n    val instanceof Buffer\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import localForage from 'localforage'\nimport { account } from '@senswap/sen-js'\nimport IPFS from './ipfs'\n\n/**\n * Persistent Database\n */\nclass PDB {\n  readonly dbName: string\n  private driver: any\n  private ipfs: IPFS\n\n  constructor(walletAddress: string) {\n    if (!account.isAddress(walletAddress)) throw new Error('Invalid address')\n    this.dbName = walletAddress\n    this.driver = [localForage.WEBSQL, localForage.LOCALSTORAGE]\n    this.ipfs = new IPFS()\n  }\n\n  /**\n   * Local\n   */\n\n  createInstance = (appId: string): LocalForage => {\n    return localForage.createInstance({\n      driver: this.driver,\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  dropInstance = async (appId: string): Promise<void> => {\n    const instance = this.createInstance(appId)\n    await instance.clear()\n    return await localForage.dropInstance({\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  all = async (): Promise<any> => {\n    let data: any = {}\n    const appIds = (\n      ((await this.createInstance('sentre').getItem('appIds')) as string[]) ||\n      []\n    )\n      .flat()\n      .concat(['sentre'])\n    for (const appId of appIds) {\n      data[appId] = {}\n      const instance = this.createInstance(appId)\n      await instance.iterate((value: string, key: string) => {\n        data[appId][key] = value\n      })\n    }\n    return data\n  }\n\n  /**\n   * Cloud\n   */\n\n  fetch = async (cid: string) => {\n    return await this.ipfs.get(cid)\n  }\n\n  backup = async () => {\n    const data = await this.all()\n    return await this.ipfs.set(data)\n  }\n\n  restore = async (cid: string) => {\n    // Download data\n    const data = await this.fetch(cid)\n    // Apply to storage\n    for (const appId in data) {\n      const instance = await this.createInstance(appId)\n      for (const key in data[appId]) {\n        const value = data[appId][key]\n        await instance.setItem(key, value)\n      }\n    }\n    return data\n  }\n}\n\nexport default PDB\n\n/**\n * High abtraction pdb for app\n */\nexport const createPDB = (walletArress: string, appId: string) => {\n  return account.isAddress(walletArress)\n    ? new PDB(walletArress).createInstance(appId)\n    : undefined\n}\n","import { create, isIPFS } from 'ipfs-core'\nimport { asyncWait } from 'shared/util'\n\nconst GET_CID_TIMEOUT = 15000\nclass IPFS {\n  private _ipfs: any = async () => {\n    try {\n      if (!window.ipfs) window.ipfs = await create()\n      return window.ipfs\n    } catch (er) {\n      await asyncWait(500)\n      return await this._ipfs()\n    }\n  }\n\n  static isCID = (cid: string | undefined | null): boolean => {\n    try {\n      if (!cid) return false\n      return isIPFS.multihash(cid)\n    } catch (er) {\n      return false\n    }\n  }\n\n  get = async (cid: string) => {\n    if (!IPFS.isCID(cid)) throw new Error('Invalid CID')\n    try {\n      const ipfs = await this._ipfs()\n      const stream = await ipfs.cat(cid, { timeout: GET_CID_TIMEOUT })\n      let raw = ''\n      for await (const chunk of stream) raw += Buffer.from(chunk).toString()\n      const data = JSON.parse(raw)\n      return data\n    } catch (err) {\n      // notthing\n    }\n  }\n\n  set = async (data: object): Promise<string> => {\n    if (!data) throw new Error('Empty data')\n    const raw = JSON.stringify(data)\n    const ipfs = await this._ipfs()\n    const { cid } = await ipfs.add(raw)\n    return cid.toString()\n  }\n}\n\nexport default IPFS\n","import storage from './storage'\n\n/**\n * Environment\n */\nconst getEnv = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'development':\n      return 'development'\n    case 'staging':\n      return 'staging'\n    case 'production':\n      return 'production'\n    default:\n      return 'development'\n  }\n}\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = getEnv()\n\n/**\n * Network\n */\nconst getNetwork = () => {\n  switch (storage.get('network')) {\n    case 'devnet':\n      return 'devnet'\n    case 'testnet':\n      return 'testnet'\n    case 'mainnet':\n      return 'mainnet'\n    default:\n      return 'mainnet'\n  }\n}\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = getNetwork()\n\nexport const onSwitchNetwork = (value: Net) => {\n  storage.set('network', value)\n  return window.location.reload()\n}\n\n/**\n * Chain ID\n */\nconst getChainId = () => {\n  switch (net) {\n    case 'devnet':\n      return 103\n    case 'testnet':\n      return 102\n    case 'mainnet':\n      return 101\n    default:\n      return 101\n  }\n}\nexport type ChainId = 101 | 102 | 103\nexport const chainId: ChainId = getChainId()\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  try {\n    if (!value) return null\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n","import { account, utils } from '@senswap/sen-js'\nimport numbro from 'numbro'\n\nimport { net } from 'shared/runtime'\nimport { DataLoader } from './dataloader'\n\n/**\n * Delay by async/await\n * @param ms - milisenconds\n * @returns\n */\nexport const asyncWait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\n/**\n * Shorten a long address\n * @param address - The long address\n * @param num - The number of the heading and trailing characters\n * @param delimiter - The delimiter\n * @returns Shortened address\n */\nexport const shortenAddress = (address: string, num = 4, delimiter = '...') => {\n  return (\n    address.substring(0, num) +\n    delimiter +\n    address.substring(address.length - num, address.length)\n  )\n}\n\n/**\n * Build a explorer url by context including addresses or transaction ids\n * @param addressOrTxId - Address or TxId\n * @returns\n */\nexport const explorer = (addressOrTxId: string): string => {\n  if (account.isAddress(addressOrTxId)) {\n    return `https://explorer.solana.com/address/${addressOrTxId}?cluster=${net}`\n  }\n  return `https://explorer.solana.com/tx/${addressOrTxId}?cluster=${net}`\n}\n\n/**\n * Wrapped Numbro - https://numbrojs.com/old-format.html\n * @param value - value\n * @returns\n */\nexport const numeric = (\n  value?: number | string | BigInt,\n): ReturnType<typeof numbro> => {\n  if (!value) return numbro('0')\n  return numbro(value)\n}\n\n/**\n * Generate a random color\n * @param seed - Seed\n * @param opacity - Opacity\n * @returns\n */\nexport const randomColor = (seed?: string, opacity?: string | number) => {\n  let hash = Math.floor(Math.random() * 16777215)\n  if (seed) {\n    hash = 0\n    for (let i = 0; i < seed.length; i++) {\n      hash = seed.charCodeAt(i) + ((hash << 5) - hash)\n    }\n  }\n  var rgb = [0, 0, 0]\n  for (let i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 255\n    rgb[i] = value\n  }\n  return `rgba(${rgb[0]}, 100, ${rgb[1]},${opacity || 1})`\n}\n\n/**\n * Fetch coingecko data with cache\n * @param ticket - Token ticket\n * @returns\n */\nexport const fetchCGK = async (ticket = '') => {\n  return DataLoader.load('fetchCGK' + ticket, () => utils.parseCGK(ticket))\n}\n\n/**\n * Randomly choose an element in the input array\n * @param arr - Original array of elements\n * @returns\n */\nexport const randChoose = <T>(arr: T[]): T => {\n  const rand = Math.floor(Math.random() * arr.length)\n  return arr[rand]\n}\n\n/**\n * Randomize a subarray in the input array with a specific number of elements\n * @param arr - Original array of elements\n * @param num - Number of elements in randomized subarray\n * @returns\n */\nexport const randElements = <T>(arr: T[], num: number): T[] => {\n  if (arr.length < num) return [...arr]\n  const re: T[] = []\n  while (re.length < num) {\n    const el = randChoose(arr)\n    if (!re.includes(el)) re.push(el)\n  }\n  return re\n}\n"],"names":["CUSTOM_ICONS","forwardRef","ref","name","className","props","cln","src","Row","gutter","justify","Col","Space","direction","size","Typography","level","style","fontSize","textAlign","span","type","icon","title","value","Card","bordered","background","borderLeft","borderRadius","bodyStyle","padding","dao","daos","proposal","useSelector","state","totalDao","useMemo","Object","keys","length","totalProposal","count","nonce","values","toNumber","executeProposal","total","proposalAddr","executed","xs","lg","sm","numeric","format","includes","regime","special","tag","isEqual","DaoRegimes","Tag","margin","DEFAULT_AVATARS","undefined","mintAddress","reversed","avatars","setAvatars","useState","tokenProvider","useMint","pools","usePool","deriveAvatar","useCallback","async","token","findByAddress","address","logoURI","deriveAvatars","account","poolData","find","mint_lpt","mint_a","mint_b","Promise","all","map","reverse","avatar","useEffect","Avatar","backgroundColor","border","display","whiteSpace","i","DEFAULT_NAME","separator","setName","deriveName","deriveNames","names","join","DEFAULT_SYMBOL","symbol","setSymbol","deriveSymbol","substring","deriveSymbols","symbols","onClick","active","cursor","randomColor","Boolean","color","boxShadow","align","useAllMintAddresses","allMintAddresses","setAllMintAddresses","getRecommendedMintAddresses","addresses","filter","searching","onChange","visible","setVisible","keyword","setKeyword","recommendedMintAddresses","setRecommendedMintAddresses","accounts","useAccount","myMintAddresses","mint","index","self","indexOf","useRecommendedMintAddresses","searchedMintAddresses","loading","setLoading","setSearchedMintAddresses","clearTimeout","setTimeout","useSearchedMintAddresses","randomHundredAddresses","refresh","limit","shuffle","setShuffle","randElements","useRandomMintAddresses","onSelect","onRefresh","list","document","getElementById","scrollTop","forceCheck","Fragment","Button","Modal","onCancel","footer","closeIcon","centered","destroyOnClose","Input","placeholder","suffix","marginRight","e","target","maxHeight","id","height","overflow","Divider","marginBottom","string2Number","seed","buf","Buffer","from","BN","mod","Number","Math","random","toString","avatarProps","colors","gradients","alt","shared","appId","process","url","development","staging","production","constructor","_wallet","window","sentre","wallet","_publicKey","PublicKey","_init","this","getAddress","signTransaction","tx","signAllTransactions","signedTxs","txs","signedTx","push","publicKey","console","warn","devnet","interDao","InterDAO","SafeWallet","fee","taxman","testnet","mainnet","manifest","env","sol","net","configs","DEFAULT_META_DATA","daoName","description","image","optionals","daoType","members","NAME","initialState","tokenHolders","initMetadata","getTokenHolders","createAsyncThunk","daoAddress","force","getState","Error","metadata","amountHolder","toBase58","provider","connection","program","getProgramAccounts","utils","filters","dataSize","memcmp","bytes","offset","setInitMetadata","metaData","createSlice","reducers","extraReducers","builder","addCase","fulfilled","payload","assign","dispatch","useDispatch","isExistDao","walletAddress","useWallet","PDB","createInstance","SOCIALS_MEDIA","t","twitter","facebook","discord","global","medium","getCID","digest","v0Prefix","Uint8Array","v0Digest","set","CID","validURL","RegExp","test","getIcon","socialName","host","URL","hostname","replace","char","iconName","ipfs","IPFS","setMetaData","pdb","usePDB","getMetaData","data","getItem","metadataId","cid","get","setItem","DAO_CARD_BG","autonomous","democratic","dictatorial","HEIGHT_RATIO","history","useHistory","ui","width","useUI","heightRatio","useMembers","useMetaData","parseRegime","isMobile","desktopWidth","PAGE_PADDING","Image","preview","minHeight","wrap","shape","flex","Tooltip","marginTop","ellipsis","rows","shortenAddress","marginLeft","idx","open","onSearch","prefix","Spin","indicator","LoadingOutlined","position","bottom","left","backdropFilter","textTransform","fontWeight","REGIME_LIST","Popover","overlayStyle","maxWidth","trigger","content","md","onSort","Select","register","daoMap","engine","_setDaoMap","forEach","Array","has","addr","fuzzy","search","findIndex","nextDaos","slice","Map","lunr","field","doc","add","daoAddresses","searchData","setSearchData","nextData","daoProvider","DaoProvider","err","delayToSearch","sortKey","setSortKey","searchKey","setSearchKey","filterDaoAddress","filteredAddress","useSearchDao","xl","Empty","filteredDaos","daoAddr","authority","authAddress","Tabs","tabBarExtraContent","tab","STATUS_COLOR","Succeeded","Failed","Preparing","Executed","Voting","status","label","rest","decimals","setDecimals","getDecimals","fetchDecimals","er","InfoTransferInProposal","transferInfo","copied","setCopied","source","destination","amount","useMintDecimals","onCopy","asyncWait","BigInt","textDecoration","explorer","text","InfoTransferInDaoDetail","endTime","moment","isProposalDetail","getProposals","bulk","proposals","proposalData","getProposal","getProposalData","upsetProposal","deleteProposal","proposalAddress","isExistProposal","setTransferInfo","templateName","setTemplateName","useProposal","fetchProposalInfo","info","decodeSplInstruction","splt","sourceAssociated","pubkey","sourceAddress","getAccountData","error","currentDate","floor","Date","startDate","endDate","supply","votingAgainstPower","votingForPower","consensusQuorum","consensusMechanism","actualSupply","mul","sub","isSuccess","quorum","votingPower","lte","cmp","div","notify","message","BG_PROPOSAL","spl_transfer","SystemProgram","useProposalStatus","useProposalMetaData","hoverable","setTx","clearTx","timeoutId","max","onValue","setError","setCursor","innerRef","useRef","onAmount","val","onError","parseFloat","current","setSelectionRange","selectionStart","toData","schema","key","soproxABI","code","toBuffer","setValue","setMintAddress","receiverAddress","setReceiverAddress","srcAddress","setSrcAddress","dstAddress","setDstAddress","setAmount","listDAO","daoMetaData","senderAddress","master","valid","confirm","re","dst","payer","isWritable","isSigner","isMaster","programId","buildTransferSplvalue","Templates","SPL_TRANSFER","close","setSourceAddress","owner","setDestinationAddress","getAmount","String","disabled","CardOption","SOLANA_LOGO","expandable","Radio","template","setStatus","mobileScreen","numSupply","authorized","proposalAddresses","filterProposalAddresses","stakeSupply","lockSupply","defaultValue","minWidth","block","DEFAULT_DATA","price","priceChange","rank","totalVolume","getBalance","inUSD","cgkData","ticket","extensions","coingeckoId","fetchCGK","fetchCgkData","balance","totalUSD","setTotalUSD","clcTotalUSD","usdBalance","setUSDBalance","mintBalance","setMintBalance","fetchBalance","InfoDAOMaster","listAccount","setListAccount","useTotalUSD","daoMasterAddress","fetchAccount","ownerPublicKey","getTokenAccountsByOwner","spltProgramId","parseAccountData","placement","overlayClassName","InfoMember","isMultisigDAO","useParams","ConsensusMechanisms","infix","mobileSpan","ConsensusQuorums","DatePicker","valueOf","showTime","CURRENT_TIME","ONE_DAY","setConsensusMechanism","setConsensusQuorum","duration","setDuration","setTitle","setDescription","proposalMetaData","newProposal","multihash","feeOption","revenue","revenuemanAddress","tax","taxmanAddress","valueAccounts","txId","initializeProposal","DAO_TYPE","cardBorder","borderColor","initDao","logoSize","PAGE_SPACING","setSupply","getMint","fetchSupply","useMintSupply","suggestion","DEFAULT_DAO_DATA","getDaos","DAO_DISCRIMINATOR","parseDaoData","getDao","daoData","getDaoData","upsetDao","setInitDao","disabledBtn","disabledWalletInput","disabledName","remove","myAddress","setDefaultValue","nextMembers","onChangeMember","splice","formatMetaData","nextMetaData","imgBase64","Upload","accept","listType","maxCount","file","fileList","callBack","reader","FileReader","readAsDataURL","onload","result","fileToBase64","originFileObj","onRemove","social","socials","onOptionalChange","CreateSteps","step","stepOne","stepTwo","stepThree","DAO_PROGRESS_TITLE","Progress","percent","steps","showInfo","onHandleStep","onConfirm","setStep","_mint","getAnchorProvider","node","web3","anchorProvider","AnchorProvider","signedTransactions","transaction","transactions","signedTransaction","commitment","skipPreflight","setProvider","initializeAccount","associatedTokenAccount","ix","sendAndConfirm","initializeMint","spl","Spl","createInstruction","rpc","rent","signers","getProvider","nodeUrl","createNewToken","isValidMint","DEFAULT_EMPTY_ADDRESS","mintToAccount","tokenAccount","mintTo","to","burnAccount","burn","getMintAddress","onNextStep","member","getMintAddr","multiSigWallet","MultisigWallet","onCreateDao","totalSupply","pow","initializeDao","getReceipts","receipt","parseReceiptData","receipts","setReceipts","fetchReceipts","listReceipt","useReceipts","authorities","execute","wordBreak","record","action","power","proposalPubkey","daoPubkey","mintDecimal","COLUMNS","dataIndex","render","lockedDate","_","setListReceipt","receiptAddress","setReceiptAddress","filterReceipts","listRecept","nextReceiptAddress","Table","rowSelection","columns","dataSource","pagination","rowKey","setVoteBidAmount","buildResult","useAccountBalance","accountAddress","lamports","getRemainingSeconds","nowDayjs","timestampDayjs","startWithZeros","diff","getRemainingMinutes","getRemainingHours","getRemainingDays","number","minLength","numberString","repeat","defaultRemainingTime","minutes","hours","days","seconds","LockedVoting","remainingTime","setRemainingTime","voteAmount","voteBid","voteNow","getTime","startTime","isLockedVote","remaining","votePower","updateRemainingTime","countdown","timestampMs","finishTime","dayjs","isBefore","getRemainingTime","intervalId","setInterval","clearInterval","loadingFor","setLoadingFor","loadingAgainst","setLoadingAgainst","setAccountAddress","deriveAssociatedAddress","useAccountBalanceByMintAddress","proposalFee","onVoteFor","actualAmount","nextAmount","voteFor","onVoteAgainst","voteAgainst","mechanismQuorum","creator","authProposalAddress","useParseQuorumText","consensus","_consensusMechanism","STROKE_COLOR","dark","default","agree","disagree","light","backGroundColor","setBackGroundColor","successColor","setSuccessColor","theme","noVote","yesVote","totalVote","percentYes","percentNo","currentPower","actualYesVote","powerRequire","gte","percentSuccess","getColors","strokeColor","success","HISTORY_COLUMNS_FLEXIBLE","HISTORY_COLUMNS_MULTISIG","historyColum","nextReceipts","actionType","existReceipt","_receipt","_action","_authority","_actionType","oldPower","onSave","updateDaoMetadata","DAOMembers","oldMember","setOldMember","setDefaultMembers","oldAddresses","validAccount","associatedAddress","multisigWallet","walletPubkey","oldRegime","setOldRegime","oldSupply","setOldSupply","updateDaoRegime","updateRegime","supplyDecimal","txIdSupply","updateDaoSupply","updateSupply","setAuthority","transferAuthority","initializeDAOEventId","updateDaoRegimeEventId","updateSupplyEventId","transferAuthorityEventId","reloadDaoData","daoPublicKey","fetchData","unwrap","watchData","addListener","removeListener","initializeProposalEventId","voteForEventId","voteAgainstEventId","executeProposalEventId","reloadProposalData","proposalPublicKey","authorityAddress","RECEIPT_DISCRIMINATOR","getReceipt","getReceiptData","upsetReceipt","deleteReceipt","closeEventId","reloadReceiptData","receiptPublicKey","loadAllMetaData","setBackground","Switch","Route","exact","path","component","Dao","DaoInitialization","Proposal","EditDAO","ProposalInitialization","ProposalDetails","Redirect","configureStore","middleware","getDefaultMiddleware","bigintSerializationMiddleware","devTools","reducer","Page","UIProvider","antd","prefixCls","WalletProvider","AccountProvider","PoolProvider","MintProvider","Provider","store","model","DEFAULT_CACHE_CONFIG","ttl","DEFAULT_SINGLE_FLIGHT_CONFIG","calls","time","cache","RequestQueue","resolveQueue","rejectQueue","resolve","reject","resolves","shift","rejects","SingleFlightCache","mapCache","delete","DataLoader","instanceKey","JSON","stringify","mapInstance","instance","newSingleFlight","SingleFlight","requestKey","callback","singleFlight","getSingleFlight","newRequest","load","config","intervalRequest","timeLogs","mapRequestCalling","requestQueue","cacheData","isFetch","request","fetch","validateLimit","addRequestQueue","createTimeLogs","then","response","catch","finally","fetchRequestQueue","now","appName","prototype","toJSON","serializableCheck","isSerializable","isArray","obj","proto","getPrototypeOf","isPlainObject","dbName","driver","localForage","storeName","dropInstance","clear","appIds","flat","concat","iterate","backup","restore","_ipfs","create","isCID","stream","cat","timeout","raw","chunk","parse","isIPFS","storage","getNetwork","chainId","getChainId","KEY","localStorage","convert","ms","num","delimiter","addressOrTxId","numbro","opacity","hash","charCodeAt","rgb","randChoose","arr","el"],"sourceRoot":""}