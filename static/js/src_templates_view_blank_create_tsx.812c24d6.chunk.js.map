{"version":3,"file":"static/js/src_templates_view_blank_create_tsx.812c24d6.chunk.js","mappings":"yOAWO,MAAMA,EAAgB,KAC3B,MAAMC,GAAWC,EAAAA,EAAAA,eACXC,GAAUC,EAAAA,EAAAA,cAqChB,MAAO,CAAEC,SAnCOC,EAAAA,EAAAA,cACdC,MACEC,EACAC,EACAC,EACAC,KAEA,MAAMC,EAAmBC,EAAAA,KAAAA,QAAAA,WAAwBC,UAY3CC,EAAW,CACfN,iBACAC,eACAM,cAdoBL,EAAaM,KAAKC,IAEtCA,EAAYC,gBAAkBP,EAAiBQ,WAC/CF,EAAYG,SAAWT,EAEhBM,EACJI,UAAU,CACTC,sBAAsB,IAEvBC,SAAS,aAMZhB,oBAEIP,GAASwB,EAAAA,EAAAA,IAAgBV,IAC/BZ,EAAQuB,KAAKC,EAAAA,EAAAA,eAAAA,aAAsC,CAAC,GAAG,GAEzD,CAAC1B,EAAUE,IAOKyB,OAJJtB,EAAAA,EAAAA,cAAYC,gBAClBN,GAAS4B,EAAAA,EAAAA,MAAgB,GAC9B,CAAC5B,IAEqB,C,mCC9CpB,MAEM6B,EAAwC,CACnDC,K,SAAMC,EAAAA,cACNC,MAAO,QACPC,WALwD,G,iJCS1D,MAyCA,EAzCe,IAGkC,IAHjC,WACd1B,EAAa,GAAE,YACf2B,GACyC,EACzC,MAAMC,GAAUC,EAAAA,EAAAA,GAAW7B,IACrB,QAAEH,EAAO,MAAEuB,IAAU5B,EAAAA,EAAAA,KAmB3B,OACE,UAAC,EAAAsC,IAAG,CAACC,OAAQ,CAAC,GAAI,IAAI,WACpB,SAAC,EAAAC,IAAG,CAACC,KAAM,MACX,SAAC,EAAAD,IAAG,CAACC,KAAM,GAAIC,MAAO,CAAEC,UAAW,SAAU,UAC3C,UAAC,EAAAC,MAAK,YACJ,SAAC,EAAAC,OAAM,CAACC,KAAK,OAAOC,QAASnB,EAAM,oBAGnC,SAAC,EAAAiB,OAAM,CAACC,KAAK,UAAUC,QAzBTxC,UACpB,IACE,MAAMyC,EAAK,IAAInC,EAAAA,KAAAA,uBAA4B,CACzCoC,KAAM,CAAC,CAAEC,OAAe,OAAPd,QAAO,IAAPA,OAAO,EAAPA,EAASe,OAASC,UAAU,EAAMC,YAAY,IAC/DC,KAAMC,EAAOC,KAAK,qBAAsB,SACxCC,UAAW,IAAI5C,EAAAA,KAAAA,UACb,iDAGJ,OAAOR,EAAQG,EAAYsB,EAAAA,EAAkB,CAAC,EAAG,EAC/C,IAAIjB,EAAAA,KAAAA,aAAmB6C,IAAIV,IAI/B,CAFE,MAAOW,IACPC,EAAAA,EAAAA,IAAYD,EACd,GAWoD,6BAK9C,C","sources":["templates/hooks/useConfirmIdl.ts","templates/view/blank/configs.ts","templates/view/blank/create.tsx"],"sourcesContent":["import { useHistory } from 'react-router-dom'\nimport { useCallback } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { web3 } from '@project-serum/anchor'\n\nimport { AppDispatch } from 'model'\nimport { clearTemplate, confirmTemplate } from 'model/template.controller'\n\nimport { TemplateConfig } from '../constant/index'\nimport { APP_ROUTE } from 'configs/route'\n\nexport const useConfirmIdl = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const history = useHistory()\n\n  const confirm = useCallback(\n    async (\n      daoAddress: string,\n      templateConfig: TemplateConfig<any>,\n      templateData: Record<string, string>,\n      transactions: web3.Transaction[],\n    ) => {\n      const defaultPublickey = web3.Keypair.generate().publicKey\n      const serializedTxs = transactions.map((transaction) => {\n        // Fix for serialize is require recentBlockhash + feePayer\n        transaction.recentBlockhash = defaultPublickey.toBase58()\n        transaction.feePayer = defaultPublickey\n        // Serialize transaction base64\n        return transaction\n          .serialize({\n            requireAllSignatures: false,\n          })\n          .toString('base64')\n      })\n      const template = {\n        templateConfig,\n        templateData,\n        serializedTxs,\n        daoAddress,\n      }\n      await dispatch(confirmTemplate(template))\n      history.push(APP_ROUTE.createProposal.generatePath({}))\n    },\n    [dispatch, history],\n  )\n\n  const close = useCallback(async () => {\n    await dispatch(clearTemplate())\n  }, [dispatch])\n\n  return { confirm, close }\n}\n","import { ComponentConfigs } from 'templates/components/templateForm'\nimport { TemplateConfig, TemplateNames } from '../../constant'\n\nexport type IDS = ''\nexport const COMPONENT_CONFIGS: ComponentConfigs<IDS>[] = []\n\nexport const TEMPLATE_CONFIGS: TemplateConfig<IDS> = {\n  name: TemplateNames.BlankTemplate,\n  title: 'Blank',\n  components: COMPONENT_CONFIGS,\n}\n","import { web3 } from '@project-serum/anchor'\n\nimport { Button, Col, Row, Space } from 'antd'\nimport { TemplateData } from 'templates/components/templateForm'\n\nimport { TEMPLATE_CONFIGS, IDS } from './configs'\nimport { PropsCreateComponent } from 'templates/constant'\nimport { useConfirmIdl } from 'templates/hooks/useConfirmIdl'\nimport { useDaoData } from 'hooks/dao'\nimport { notifyError } from 'helpers'\n\ntype NativeTemplateData = TemplateData<IDS>\n\nconst Create = ({\n  daoAddress = '',\n  defaultData,\n}: PropsCreateComponent<NativeTemplateData>) => {\n  const daoData = useDaoData(daoAddress)\n  const { confirm, close } = useConfirmIdl()\n\n  const handleConfirm = async () => {\n    try {\n      const ix = new web3.TransactionInstruction({\n        keys: [{ pubkey: daoData?.master!, isSigner: true, isWritable: true }],\n        data: Buffer.from('Dao proposal blank', 'utf-8'),\n        programId: new web3.PublicKey(\n          'MemoSq4gqABAXKb96qnH8TysNcWxMyWCqXgDLGmfcHr',\n        ),\n      })\n      return confirm(daoAddress, TEMPLATE_CONFIGS, {}, [\n        new web3.Transaction().add(ix),\n      ])\n    } catch (error) {\n      notifyError(error)\n    }\n  }\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24} />\n      <Col span={24} style={{ textAlign: 'right' }}>\n        <Space>\n          <Button type=\"text\" onClick={close}>\n            Close\n          </Button>\n          <Button type=\"primary\" onClick={handleConfirm}>\n            Continue\n          </Button>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Create\n"],"names":["useConfirmIdl","dispatch","useDispatch","history","useHistory","confirm","useCallback","async","daoAddress","templateConfig","templateData","transactions","defaultPublickey","web3","publicKey","template","serializedTxs","map","transaction","recentBlockhash","toBase58","feePayer","serialize","requireAllSignatures","toString","confirmTemplate","push","APP_ROUTE","close","clearTemplate","TEMPLATE_CONFIGS","name","TemplateNames","title","components","defaultData","daoData","useDaoData","Row","gutter","Col","span","style","textAlign","Space","Button","type","onClick","ix","keys","pubkey","master","isSigner","isWritable","data","Buffer","from","programId","add","error","notifyError"],"sourceRoot":""}