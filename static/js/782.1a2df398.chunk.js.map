{"version":3,"file":"static/js/782.1a2df398.chunk.js","mappings":"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","sources":["shared/antd/ionicon/assets/icon-telegram.svg","shared/antd/ionicon/customs.tsx","shared/antd/ionicon/index.tsx","app/view/dao/hero/banner.tsx","app/view/dao/hero/infoCard.tsx","app/configs/manifest.config.ts","app/helpers/safeWallet.ts","app/configs/sol.config.ts","app/configs/index.ts","app/model/proposal.controller.tsx","app/view/dao/hero/index.tsx","app/components/statisticCard.tsx","app/components/regimeTag.tsx","shared/antd/mint/mintAvatar.tsx","shared/antd/mint/mintName.tsx","shared/antd/mint/mintSymbol.tsx","shared/antd/mint/mintSelection/mintTag.tsx","shared/antd/mint/mintSelection/mintCard.tsx","shared/antd/mint/mintSelection/useAllMintAddresses.ts","shared/antd/mint/mintSelection/useSearchedMintAddresses.ts","shared/antd/mint/mintSelection/index.tsx","shared/antd/mint/mintSelection/useRecommendedMintAddresses.ts","shared/antd/mint/mintSelection/useRandomMintAddress.ts","app/components/gradientAvatar/index.tsx","app/model/metadata.controller.tsx","app/hooks/useMembers.ts","app/helpers/index.ts","app/hooks/useMetaData.ts","app/view/dao/daoList/daoCard.tsx","app/view/dao/daoList/search/index.tsx","app/view/dao/daoInitialization/daoRule/cardRegmie.tsx","app/view/dao/daoInitialization/daoRule/regimeInput.tsx","app/view/dao/daoList/sortDao.tsx","app/view/dao/daoList/search/daoProvider.ts","app/hooks/useSearchDao.ts","app/view/dao/daoList/index.tsx","app/view/dao/daoList/yourDao.tsx","app/view/dao/index.tsx","app/components/proposalStatus.tsx","app/hooks/useProposalStatus.ts","app/hooks/useProposalMetaData.ts","app/view/proposal/proposalList/proposalCard.tsx","shared/hooks/useMintDecimals.ts","app/model/template.controller.tsx","shared/antd/numericInput.tsx","app/view/templates/spl/transfer/index.tsx","app/static/images/templates/solana.svg","app/view/templates/spl/index.tsx","app/view/templates/index.tsx","app/view/proposal/proposalList/index.tsx","app/view/dao/daoDetails.tsx","app/view/proposal/index.tsx","app/view/proposal/proposalInitialization/consensusMechanismInput.tsx","app/view/proposal/proposalInitialization/consensusQuorumInput.tsx","app/view/proposal/proposalInitialization/durationInput.tsx","app/view/proposal/proposalInitialization/proposalPreview.tsx","app/view/proposal/proposalInitialization/index.tsx","app/model/dao.controller.tsx","app/view/dao/daoInitialization/chooseDaoType.tsx","app/view/dao/daoInitialization/confirmCreate.tsx","shared/hooks/useMintSupply.ts","app/view/dao/daoInitialization/daoRule/circulatingSupplyInput.tsx","app/view/dao/daoInitialization/daoRule/tokenAddressInput.tsx","app/view/dao/daoInitialization/daoRule/index.tsx","app/view/dao/daoInitialization/metaDataForm.tsx","app/view/dao/daoInitialization/createDaoSteps.tsx","app/view/dao/daoInitialization/createDaoProgress.tsx","app/view/dao/daoInitialization/actions/backAction.tsx","app/view/dao/daoInitialization/actions/continuesAction.tsx","app/view/dao/daoInitialization/index.tsx","app/hooks/useProposal.ts","app/view/proposal/proposalDetails/cardStatus.tsx","app/model/voteBid.controller.tsx","shared/hooks/useAccountBalance.ts","app/helpers/countDown.ts","app/view/proposal/proposalDetails/cardVote.tsx","app/view/proposal/proposalDetails/cardInfo.tsx","app/view/proposal/proposalDetails/cardProgress.tsx","app/view/proposal/proposalDetails/history/columnType.tsx","app/view/proposal/proposalDetails/history/columnPower.tsx","app/view/proposal/proposalDetails/history/column.tsx","app/hooks/useReceipts.ts","app/view/proposal/proposalDetails/history/index.tsx","app/view/proposal/proposalDetails/index.tsx","app/view/watcher/dao.watcher.tsx","app/view/watcher/proposal.watcher.tsx","app/model/receipt.controller.tsx","app/view/watcher/receipt.watcher.tsx","app/view/index.tsx","app/model/index.ts","app/bootstrap.app.tsx","shared/dataloader/constant.ts","shared/dataloader/request.ts","shared/dataloader/cache.ts","shared/dataloader/index.ts","shared/devTools.ts","shared/pdb/ipfs.ts","shared/runtime.ts","shared/storage.ts","shared/util.ts"],"sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgIconTelegram(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"inherit\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    width: \"50px\",\n    height: \"50px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.137,6.552c-0.75-0.636-1.928-0.727-3.146-0.238l-0.002,0C41.708,6.828,6.728,21.832,5.304,22.445 c-0.259,0.09-2.521,0.934-2.288,2.814c0.208,1.695,2.026,2.397,2.248,2.478l8.893,3.045c0.59,1.964,2.765,9.21,3.246,10.758 c0.3,0.965,0.789,2.233,1.646,2.494c0.752,0.29,1.5,0.025,1.984-0.355l5.437-5.043l8.777,6.845l0.209,0.125 c0.596,0.264,1.167,0.396,1.712,0.396c0.421,0,0.825-0.079,1.211-0.237c1.315-0.54,1.841-1.793,1.896-1.935l6.556-34.077 C47.231,7.933,46.675,7.007,46.137,6.552z M22,32l-3,8l-3-10l23-17L22,32z\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconTelegram);\nexport default __webpack_public_path__ + \"static/media/icon-telegram.2450489f40d03000fe65fc1c6f238d85.svg\";\nexport { ForwardRef as ReactComponent };","import IconTele from './assets/icon-telegram.svg'\n\nexport const CUSTOM_ICONS: Record<string, string> = {\n  'logo-telegram': IconTele,\n}\n","/**\n * IonIcon 5\n * Credit https://ionic.io/ionicons\n */\n\nimport { forwardRef } from 'react'\nimport { CUSTOM_ICONS } from './customs'\n\n/**\n * IonIcon\n * @param name The icon name. You can find it here https://ionic.io/ionicons\n * @param className To modify the span class\n */\nconst IonIcon = forwardRef<\n  HTMLElement,\n  { name: string; className?: string } & any\n>(({ name, className, ...props }, ref) => {\n  const cln = className ? 'anticon ' + className : 'anticon'\n\n  return (\n    <span className={cln} {...props}>\n      {CUSTOM_ICONS[name] ? (\n        <ion-icon ref={ref} src={CUSTOM_ICONS[name]} />\n      ) : (\n        <ion-icon ref={ref} name={name} />\n      )}\n    </span>\n  )\n})\n\nexport default IonIcon\n","import { Col, Row, Space, Typography } from 'antd'\n\nconst Banner = () => {\n  return (\n    <Row gutter={[16, 16]} justify=\"center\">\n      <Col>\n        <Space direction=\"vertical\" size={0}>\n          <Typography.Title\n            level={1}\n            style={{ fontSize: 56, textAlign: 'center' }}\n          >\n            Let's build\n          </Typography.Title>\n          <Typography.Title\n            level={1}\n            style={{ fontSize: 56, textAlign: 'center' }}\n            className=\"spec-title\"\n          >\n            Your own DAO.\n          </Typography.Title>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Typography.Paragraph\n          type=\"secondary\"\n          style={{ fontSize: 20, textAlign: 'center' }}\n        >\n          Customize the DAO to your purpose - No coding needed.\n        </Typography.Paragraph>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Banner\n","import { ReactNode } from 'react'\n\nimport { Card, Col, Row, Space, Typography } from 'antd'\n\nexport type InfoCardProps = {\n  icon?: ReactNode\n  title?: string\n  value?: string\n}\n\nconst InfoCard = ({ icon, title, value }: InfoCardProps) => {\n  return (\n    <Card\n      bordered={false}\n      style={{\n        background: 'transparent',\n        borderLeft: '1px solid',\n        borderRadius: 'unset',\n      }}\n      bodyStyle={{\n        padding: '0 24px',\n      }}\n    >\n      <Row gutter={[5, 5]}>\n        <Col span={24}>\n          <Space>\n            {icon}\n            <Typography.Text type=\"secondary\">{title}</Typography.Text>\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Typography.Title level={4}>{value}</Typography.Title>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default InfoCard\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Transaction, PublicKey } from '@solana/web3.js'\nimport { AnchorWallet } from '@interdao/core'\nimport { WalletInterface } from '@senswap/sen-js'\n\nclass SafeWallet implements AnchorWallet {\n  private _wallet: WalletInterface = window.sentre.wallet\n  private _publicKey: PublicKey = new PublicKey(\n    'GuestAccount11111111111111111111111111111111',\n  )\n\n  constructor() {\n    this._init()\n  }\n\n  private _init = async () => {\n    const address = await this._wallet.getAddress()\n    this._publicKey = new PublicKey(address)\n  }\n\n  signTransaction = async (tx: Transaction): Promise<Transaction> => {\n    return this._wallet.signTransaction(tx)\n  }\n\n  signAllTransactions = async (txs: Transaction[]): Promise<Transaction[]> => {\n    let signedTxs: Transaction[] = []\n    for (const tx of txs) {\n      const signedTx = await this.signTransaction(tx)\n      signedTxs.push(signedTx)\n    }\n    return signedTxs\n  }\n\n  get publicKey() {\n    console.warn(\n      'This is an async getter for interface consistency. Please do not fully rely on this function.',\n    )\n    return this._publicKey\n  }\n}\n\nexport default SafeWallet\n","import InterDAO from '@interdao/core'\n\nimport SafeWallet from 'app/helpers/safeWallet'\nimport { Net } from 'shared/runtime'\n\n/**\n * Contructor\n */\ntype Conf = {\n  rpc: string\n  interDao: InterDAO\n  fee: string\n  taxman: string\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    rpc: 'https://api.devnet.solana.com',\n    interDao: new InterDAO(new SafeWallet()),\n    fee: '1000000', // 0.001 SOL\n    taxman: '8W6QginLcAydYyMYjxuyKQN56NzeakDE3aRFrAmocS6D',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    rpc: 'https://api.testnet.solana.com',\n    interDao: new InterDAO(new SafeWallet()),\n    fee: '1000000', // 0.001 SOL\n    taxman: '8W6QginLcAydYyMYjxuyKQN56NzeakDE3aRFrAmocS6D',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    rpc: 'https://ssc-dao.genesysgo.net',\n    interDao: new InterDAO(new SafeWallet()),\n    fee: '100000000', // 0.01 SOL\n    taxman: '8W6QginLcAydYyMYjxuyKQN56NzeakDE3aRFrAmocS6D',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from 'shared/runtime'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { ProposalData } from '@interdao/core'\nimport { account } from '@senswap/sen-js'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type ProposalState = Record<string, ProposalData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'proposal'\nconst initialState: ProposalState = {}\n\n/**\n * Actions\n */\n\nexport const getProposals = createAsyncThunk(\n  `${NAME}/getProposals`,\n  async ({ daoAddress }: { daoAddress: string }) => {\n    const {\n      provider: { connection },\n      programId,\n    } = interDao.program\n    const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n      await connection.getProgramAccounts(programId, {\n        filters: [\n          {\n            memcmp: {\n              offset: 48,\n              bytes: daoAddress,\n            },\n          },\n        ],\n      })\n    let bulk: ProposalState = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = interDao.parseProposalData(buf)\n      bulk[address] = data\n    })\n    return bulk\n  },\n)\n\nexport const getProposal = createAsyncThunk<\n  ProposalState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getProposal`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    dao: { [address]: data },\n  } = getState()\n  if (data && !force) return { [address]: data }\n  const raw = await interDao.getProposalData(address)\n  return { [address]: raw }\n})\n\nexport const upsetProposal = createAsyncThunk<\n  ProposalState,\n  { address: string; data: ProposalData },\n  { state: any }\n>(`${NAME}/upsetProposal`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteProposal = createAsyncThunk(\n  `${NAME}/deleteProposal`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getProposals.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Col, Row } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport Banner from './banner'\nimport InfoCard from './infoCard'\n\nimport { numeric } from 'shared/util'\nimport { AppDispatch, AppState } from 'app/model'\nimport { getProposals } from 'app/model/proposal.controller'\n\nimport './index.less'\n\nconst Hero = () => {\n  const {\n    dao: { daoData },\n    proposal,\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const totalDao = useMemo(() => {\n    if (!daoData) return 0\n    return Object.keys(daoData).length\n  }, [daoData])\n\n  const totalProposal = useMemo(() => {\n    if (!daoData) return 0\n    return Object.keys(proposal).length\n  }, [daoData, proposal])\n\n  const executeProposal = useMemo(() => {\n    let total = 0\n    for (const proposalAddr in proposal) {\n      const { executed } = proposal[proposalAddr]\n      if (executed) total++\n      continue\n    }\n    return total\n  }, [proposal])\n\n  useEffect(() => {\n    const daoAddresses = Object.keys(daoData)\n    for (const daoAddress of daoAddresses) {\n      dispatch(getProposals({ daoAddress }))\n    }\n  }, [daoData, dispatch])\n\n  return (\n    <Row className=\"interdao-banner\" justify=\"center\">\n      <Col xs={24} lg={18}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Banner />\n          </Col>\n          <Col xs={24} sm={12} lg={8}>\n            <InfoCard\n              icon={<IonIcon name=\"earth-outline\" />}\n              title=\"Total DAOs\"\n              value={numeric(totalDao).format('0,0')}\n            />\n          </Col>\n          <Col xs={24} sm={12} lg={8}>\n            <InfoCard\n              icon={<IonIcon name=\"pencil-outline\" />}\n              title=\"Total Proposals\"\n              value={numeric(totalProposal).format('0,0')}\n            />\n          </Col>\n          <Col xs={24} sm={12} lg={8}>\n            <InfoCard\n              icon={<IonIcon name=\"thumbs-up-outline\" />}\n              title=\"Total executed proposals\"\n              value={numeric(executeProposal).format('0,0')}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Hero\n","import { ReactNode } from 'react'\n\nimport { Space, Typography } from 'antd'\n\nexport type StatisticCardProps = {\n  title: string\n  value: string | number | ReactNode\n}\nconst StatisticCard = ({ title, value }: StatisticCardProps) => {\n  return (\n    <Space direction=\"vertical\">\n      <Typography.Text className=\"caption\" type=\"secondary\">\n        {title}\n      </Typography.Text>\n      {['number', 'string'].includes(typeof value) ? (\n        <Typography.Text>{value}</Typography.Text>\n      ) : (\n        value\n      )}\n    </Space>\n  )\n}\n\nexport default StatisticCard\n","import { useMemo } from 'react'\nimport { DaoRegime, DaoRegimes } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\n\nimport { Tag } from 'antd'\n\nimport { randomColor } from 'shared/util'\n\nexport type RegimeTagProps = { regime: DaoRegime; special?: boolean }\n\nconst RegimeTag = ({ regime, special }: RegimeTagProps) => {\n  const tag = useMemo(() => {\n    if (isEqual(regime, DaoRegimes.Dictatorial)) return 'Dictatorial'\n    if (isEqual(regime, DaoRegimes.Democratic)) return 'Democratic'\n    if (isEqual(regime, DaoRegimes.Autonomous)) return 'Autonomous'\n    return 'DAO Regime'\n  }, [regime])\n\n  const className = special ? 'regime-tag' : ''\n\n  return (\n    <Tag\n      className={className}\n      style={{ color: randomColor(tag), margin: 0 }}\n      color={randomColor(tag, 0.2)}\n    >\n      {tag}\n    </Tag>\n  )\n}\n\nexport default RegimeTag\n","import { ReactNode, useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nimport { Avatar } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst DEFAULT_AVATARS: Array<string | undefined> = [undefined]\n\nexport type MintAvatarProps = {\n  mintAddress: string\n  size?: number\n  icon?: ReactNode\n  reversed?: boolean\n}\n\n/**\n * Mint/Token avatar, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param size - Avatar size. Default 24px.\n * @param icon - Fallback icon for unknown token\n * @param reversed - (Optional) The default LP token avatar is A-B. The reversed is to change it to B-A\n * @returns name\n */\nconst MintAvatar = ({\n  mintAddress,\n  size = 24,\n  icon = <IonIcon name=\"diamond-outline\" />,\n  reversed = false,\n  ...props\n}: MintAvatarProps) => {\n  const [avatars, setAvatars] = useState(DEFAULT_AVATARS)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveAvatar = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.logoURI) return token.logoURI\n      return undefined\n    },\n    [tokenProvider],\n  )\n\n  const deriveAvatars = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setAvatars(DEFAULT_AVATARS)\n    // LP mint\n    const poolData = Object.values(pools || {}).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const avatars = await Promise.all([mint_a, mint_b].map(deriveAvatar))\n      if (reversed) avatars.reverse()\n      return setAvatars(avatars)\n    }\n    // Normal mint\n    const avatar = await deriveAvatar(mintAddress)\n    return setAvatars([avatar])\n  }, [mintAddress, reversed, deriveAvatar, pools])\n\n  useEffect(() => {\n    deriveAvatars()\n  }, [deriveAvatars])\n\n  if (avatars.length === 1)\n    return (\n      <Avatar\n        src={avatars[0]}\n        size={size}\n        style={{ backgroundColor: '#2D3355', border: 'none' }}\n        {...props}\n      >\n        {icon}\n      </Avatar>\n    )\n  return (\n    <Avatar.Group style={{ display: 'block', whiteSpace: 'nowrap' }} {...props}>\n      {avatars.map((avatar, i) => (\n        <Avatar\n          key={i}\n          src={avatar}\n          size={size}\n          style={{ backgroundColor: '#2D3355', border: 'none' }}\n        >\n          {icon}\n        </Avatar>\n      ))}\n    </Avatar.Group>\n  )\n}\n\nexport default MintAvatar\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nconst DEFAULT_NAME = 'Unknown Token'\n\n/**\n * Mint/Token name, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param separator - (Optional) In case of LP tokens, the names is combined by 2 token names. The separator is to separate them.\n * @param reversed - (Optional) The default LP token names is A-B. The reversed is to change it to B-A\n * @returns name\n */\nconst MintName = ({\n  mintAddress,\n  separator = ' • ',\n  reversed = false,\n}: {\n  mintAddress: string\n  separator?: string\n  reversed?: boolean\n}) => {\n  const [name, setName] = useState(DEFAULT_NAME)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveName = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.name) return token.name\n      return DEFAULT_NAME\n    },\n    [tokenProvider],\n  )\n\n  const deriveNames = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setName(DEFAULT_NAME)\n    // LP mint\n    const poolData = Object.values(pools || {}).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const names = await Promise.all([mint_a, mint_b].map(deriveName))\n      if (reversed) names.reverse()\n      return setName(`${names.join(separator)} LP`)\n    }\n    // Normal mint\n    const name = await deriveName(mintAddress)\n    return setName(name)\n  }, [mintAddress, reversed, deriveName, pools, separator])\n\n  useEffect(() => {\n    deriveNames()\n  }, [deriveNames])\n\n  return <span>{name}</span>\n}\n\nexport default MintName\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nconst DEFAULT_SYMBOL = 'TOKN'\n\n/**\n * Mint/Token symbol, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param separator - (Optional) In case of LP tokens, the symbols is combined by 2 token symbols. The separator is to separate them.\n * @param reversed - (Optional) The default LP token symbol is A-B. The reversed is to change it to B-A\n * @returns symbol\n */\nconst MintSymbol = ({\n  mintAddress,\n  separator = ' • ',\n  reversed = false,\n}: {\n  mintAddress: string\n  separator?: string\n  reversed?: boolean\n}) => {\n  const [symbol, setSymbol] = useState(DEFAULT_SYMBOL)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveSymbol = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.symbol) return token.symbol\n      return address.substring(0, 4)\n    },\n    [tokenProvider],\n  )\n\n  const deriveSymbols = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setSymbol(DEFAULT_SYMBOL)\n    // LP mint\n    const poolData = Object.values(pools || {}).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const symbols = await Promise.all([mint_a, mint_b].map(deriveSymbol))\n      if (reversed) symbols.reverse()\n      return setSymbol(symbols.join(separator))\n    }\n    // Normal mint\n    const symbol = await deriveSymbol(mintAddress)\n    return setSymbol(symbol)\n  }, [mintAddress, reversed, deriveSymbol, pools, separator])\n\n  useEffect(() => {\n    deriveSymbols()\n  }, [deriveSymbols])\n\n  return <span>{symbol}</span>\n}\n\nexport default MintSymbol\n","import { Card, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport { MintAvatar, MintName } from 'shared/antd/mint'\n\nimport { randomColor } from 'shared/util'\n\nexport type MintTagProps = {\n  mintAddress: string\n  onClick?: (mintAddress: string) => void\n  active?: boolean\n}\n\nconst MintTag = ({\n  mintAddress,\n  onClick = () => {},\n  active = false,\n}: MintTagProps) => {\n  return (\n    <Card\n      bodyStyle={{ padding: 8, cursor: 'pointer' }}\n      style={{ backgroundColor: randomColor(mintAddress, 0.2) }}\n      bordered={Boolean(active)}\n      onClick={() => onClick(mintAddress)}\n    >\n      <Space>\n        <MintAvatar mintAddress={mintAddress} />\n        <Space>\n          <Typography.Text style={{ color: randomColor(mintAddress) }}>\n            <MintName mintAddress={mintAddress} />\n          </Typography.Text>\n          {active ? <IonIcon name=\"checkmark-outline\" /> : null}\n        </Space>\n      </Space>\n    </Card>\n  )\n}\nexport default MintTag\n","import { Card, Col, Row, Space, Typography } from 'antd'\nimport { MintAvatar, MintName, MintSymbol } from 'shared/antd/mint'\n\nexport type MintSelectionProps = {\n  mintAddress: string\n  onClick?: (mintAddress: string) => void\n}\n\nconst MintCard = ({ mintAddress, onClick = () => {} }: MintSelectionProps) => {\n  return (\n    <Card\n      bodyStyle={{ padding: 8 }}\n      style={{ boxShadow: 'unset', cursor: 'pointer' }}\n      bordered={false}\n      onClick={() => onClick(mintAddress)}\n    >\n      <Row gutter={[16, 16]} align=\"middle\">\n        <Col>\n          <MintAvatar mintAddress={mintAddress} size={36} />\n        </Col>\n        <Col>\n          <Space direction=\"vertical\" size={0}>\n            <Typography.Text>\n              <MintSymbol mintAddress={mintAddress} />\n            </Typography.Text>\n            <Typography.Text type=\"secondary\" className=\"caption\">\n              <MintName mintAddress={mintAddress} />\n            </Typography.Text>\n          </Space>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default MintCard\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\n\nexport const useAllMintAddresses = () => {\n  const [allMintAddresses, setAllMintAddresses] = useState<string[]>([])\n  const { tokenProvider } = useMint()\n\n  const getRecommendedMintAddresses = useCallback(async () => {\n    const allMintAddresses = (await tokenProvider.all()).map(\n      ({ address }) => address,\n    )\n    const addresses = allMintAddresses.filter((mintAddress) =>\n      allMintAddresses.includes(mintAddress),\n    )\n    return setAllMintAddresses(addresses)\n  }, [tokenProvider])\n\n  useEffect(() => {\n    getRecommendedMintAddresses()\n  }, [getRecommendedMintAddresses])\n\n  return allMintAddresses\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\n\nlet searching: NodeJS.Timeout\n\nexport const useSearchedMintAddresses = (keyword: string = '') => {\n  const [loading, setLoading] = useState(false)\n  const [searchedMintAddresses, setSearchedMintAddresses] = useState<\n    string[] | undefined\n  >()\n  const { tokenProvider } = useMint()\n\n  const getRecommendedMintAddresses = useCallback(async () => {\n    if (!keyword) {\n      setLoading(false)\n      return setSearchedMintAddresses(undefined)\n    }\n    if (searching) clearTimeout(searching)\n    setLoading(true)\n    searching = setTimeout(async () => {\n      const addresses = (await tokenProvider.find(keyword)).map(\n        ({ address }) => address,\n      )\n      setLoading(false)\n      return setSearchedMintAddresses(addresses)\n    }, 500)\n  }, [keyword, tokenProvider])\n\n  useEffect(() => {\n    getRecommendedMintAddresses()\n  }, [getRecommendedMintAddresses])\n\n  return { searchedMintAddresses, loading }\n}\n","import {\n  CSSProperties,\n  Fragment,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react'\nimport LazyLoad, { forceCheck } from '@senswap/react-lazyload'\nimport { account } from '@senswap/sen-js'\n\nimport {\n  Button,\n  Col,\n  Divider,\n  Input,\n  Modal,\n  Row,\n  Space,\n  Typography,\n} from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport MintTag from './mintTag'\nimport MintCard from './mintCard'\n\nimport { useRecommendedMintAddresses } from './useRecommendedMintAddresses'\nimport { useSearchedMintAddresses } from './useSearchedMintAddresses'\nimport { useRandomMintAddresses } from './useRandomMintAddress'\n\nconst LIMIT = 50\n\nexport type MintSelectionProps = {\n  value: string\n  onChange: (value: string) => void\n  style?: CSSProperties\n}\n\nconst MintSelection = ({ value, onChange, style = {} }: MintSelectionProps) => {\n  const [visible, setVisible] = useState(false)\n  const [keyword, setKeyword] = useState('')\n  const recommendedMintAddresses = useRecommendedMintAddresses()\n  const { searchedMintAddresses, loading } = useSearchedMintAddresses(keyword)\n  const { randomHundredAddresses, refresh } = useRandomMintAddresses(LIMIT)\n\n  const onSelect = useCallback(\n    (mintAddress: string) => {\n      setVisible(false)\n      onChange(mintAddress)\n    },\n    [onChange],\n  )\n  const onRefresh = useCallback(() => {\n    const list = document.getElementById('sentre-token-selection-list')\n    if (list) list.scrollTop = 0\n    return refresh()\n  }, [refresh])\n\n  useEffect(() => {\n    forceCheck()\n  }, [searchedMintAddresses])\n\n  useEffect(() => {\n    if (!visible) setKeyword('')\n  }, [visible])\n\n  return (\n    <Fragment>\n      <Button\n        type=\"text\"\n        onClick={() => setVisible(true)}\n        style={{ padding: 4, ...style }}\n      >\n        <Space>\n          <MintAvatar mintAddress={value} />\n          <MintSymbol mintAddress={value} />\n          <IonIcon name=\"chevron-down-outline\" />\n        </Space>\n      </Button>\n      <Modal\n        visible={visible}\n        onCancel={() => setVisible(false)}\n        footer={null}\n        closeIcon={<IonIcon name=\"close-outline\" />}\n        centered\n        destroyOnClose\n      >\n        <Row gutter={[32, 32]}>\n          <Col span={24}>\n            <Typography.Title level={5} type=\"secondary\">\n              Token Selection\n            </Typography.Title>\n          </Col>\n          <Col span={24}>\n            <Input\n              placeholder=\"Search token symbol, name, address, ...\"\n              suffix={\n                <Button\n                  type=\"text\"\n                  style={{ marginRight: -7 }}\n                  icon={\n                    <IonIcon\n                      name={keyword ? 'close-outline' : 'search-outline'}\n                    />\n                  }\n                  onClick={keyword ? () => setKeyword('') : () => {}}\n                  loading={loading}\n                />\n              }\n              value={keyword}\n              onChange={(e) => setKeyword(e.target.value || '')}\n            />\n          </Col>\n          <Col span={24}>\n            <Row gutter={[8, 8]}>\n              {account.isAddress(value) ? (\n                <Col>\n                  <MintTag mintAddress={value} active />\n                </Col>\n              ) : null}\n              {recommendedMintAddresses\n                .filter((mintAddress) => mintAddress !== value)\n                .map((mintAddress) => (\n                  <Col key={mintAddress}>\n                    <MintTag mintAddress={mintAddress} onClick={onSelect} />\n                  </Col>\n                ))}\n            </Row>\n          </Col>\n          <Col span={24}>\n            <Row\n              gutter={[8, 8]}\n              style={{ maxHeight: 360 }}\n              className=\"scrollbar\"\n              id=\"sentre-token-selection-list\"\n            >\n              {(searchedMintAddresses || randomHundredAddresses).map(\n                (mintAddress) => (\n                  <Col span={24} key={mintAddress}>\n                    <LazyLoad height={60} overflow>\n                      <MintCard mintAddress={mintAddress} onClick={onSelect} />\n                    </LazyLoad>\n                  </Col>\n                ),\n              )}\n              {!searchedMintAddresses ? (\n                <Fragment>\n                  <Col span={24}>\n                    <Divider style={{ marginBottom: 0 }} />\n                  </Col>\n                  <Col span={24}>\n                    <Typography.Text type=\"secondary\" className=\"caption\">\n                      <IonIcon\n                        name=\"chatbox-ellipses-outline\"\n                        style={{ marginRight: 6 }}\n                      />\n                      This is the list of {LIMIT} random tokens while the full\n                      list is pretty longer. You can find your tokens by the\n                      search bar. Or{' '}\n                      <Typography.Link onClick={onRefresh}>\n                        Click here\n                      </Typography.Link>{' '}\n                      to refresh the current list.\n                    </Typography.Text>\n                  </Col>\n                </Fragment>\n              ) : null}\n            </Row>\n          </Col>\n        </Row>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default MintSelection\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useAccount } from '@senhub/providers'\n\nimport { useAllMintAddresses } from './useAllMintAddresses'\n\nexport const useRecommendedMintAddresses = () => {\n  const [recommendedMintAddresses, setRecommendedMintAddresses] = useState<\n    string[]\n  >([])\n  const { accounts } = useAccount()\n  const allMintAddresses = useAllMintAddresses()\n\n  const myMintAddresses = useMemo(() => {\n    return Object.values(accounts)\n      .map(({ mint }) => mint)\n      .filter((mintAddress, index, self) => self.indexOf(mintAddress) === index)\n  }, [accounts])\n\n  const getRecommendedMintAddresses = useCallback(async () => {\n    const addresses = myMintAddresses.filter((mintAddress) =>\n      allMintAddresses.includes(mintAddress),\n    )\n    return setRecommendedMintAddresses(addresses)\n  }, [myMintAddresses, allMintAddresses])\n\n  useEffect(() => {\n    getRecommendedMintAddresses()\n  }, [getRecommendedMintAddresses])\n\n  return recommendedMintAddresses\n}\n","import { useCallback, useMemo, useState } from 'react'\n\nimport { useAllMintAddresses } from './useAllMintAddresses'\nimport { randElements } from 'shared/util'\n\nexport const useRandomMintAddresses = (limit: number = 0) => {\n  const [shuffle, setShuffle] = useState(0)\n  const allMintAddresses = useAllMintAddresses()\n\n  // A random limited list of tokens is to secure component performance\n  const randomHundredAddresses = useMemo(() => {\n    return randElements(allMintAddresses, limit + (shuffle - shuffle))\n  }, [allMintAddresses, shuffle, limit])\n\n  const refresh = useCallback(() => {\n    return setShuffle(shuffle + 1)\n  }, [shuffle])\n\n  return { randomHundredAddresses, refresh }\n}\n","import BN from 'bn.js'\n\nimport { Avatar, AvatarProps } from 'antd'\n\nimport gradients from './gradients.json'\n\nconst string2Number = (seed: string, limit: number) => {\n  const buf = Buffer.from(seed)\n  const index = new BN(buf).mod(new BN(limit))\n  return Number(index)\n}\n\nexport type GradientAvatarProps = { seed?: string; avatarProps?: AvatarProps }\n\nconst GradientAvatar = ({\n  seed = Math.random().toString(),\n  avatarProps = {},\n}: GradientAvatarProps) => {\n  const direction = string2Number(seed, 360)\n  const { name, colors } = gradients[string2Number(seed, gradients.length)]\n  return (\n    <Avatar\n      style={{\n        background: `linear-gradient(${direction}deg, ${colors.join(', ')})`,\n      }}\n      alt={name}\n      {...avatarProps}\n    />\n  )\n}\n\nexport default GradientAvatar\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\nimport { utils } from '@project-serum/anchor'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport const SOCIAL_MEDIA = ['twitter', 'discord']\n\nconst getDefaultSocial = () => {\n  return SOCIAL_MEDIA.map(() => '')\n}\n\nexport const DEFAULT_META_DATA = {\n  address: '',\n  daoName: '',\n  description: '',\n  image: '',\n  optionals: getDefaultSocial(),\n  daoRegime: '',\n}\n\nexport type MetaData = {\n  daoName: string\n  description: string\n  image: string | ArrayBuffer | null\n  optionals: string[]\n  address: string\n  daoRegime: string\n}\nexport type MetaDataMember = { members: number }\nexport type DaoMetaDataState = Record<string, MetaDataMember>\nexport type MetaDataState = {\n  daoMetaData: DaoMetaDataState\n  createMetaData: MetaData\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'metadata'\nconst initialState: MetaDataState = {\n  daoMetaData: {},\n  createMetaData: DEFAULT_META_DATA,\n}\n\n/**\n * Actions\n */\n\nexport const getMember = createAsyncThunk<\n  Partial<MetaDataState>,\n  { daoAddress: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getMember`, async ({ daoAddress, force }, { getState }) => {\n  if (!account.isAddress(daoAddress)) throw new Error('Invalid address')\n  const {\n    dao: {\n      daoData: {\n        [daoAddress]: { mint },\n      },\n    },\n    metadata: {\n      daoMetaData: { [daoAddress]: data },\n    },\n  } = getState()\n  const mintAddress = mint.toBase58()\n  if (!account.isAddress(mintAddress)) return {}\n  if (data && !force) return { [daoAddress]: data }\n  const {\n    provider: { connection },\n  } = interDao.program\n  const accounts = await connection.getProgramAccounts(\n    utils.token.TOKEN_PROGRAM_ID,\n    {\n      filters: [\n        { dataSize: 165 },\n        { memcmp: { bytes: mintAddress, offset: 0 } },\n      ],\n    },\n  )\n  return { daoMetaData: { [daoAddress]: { members: accounts.length } } }\n})\n\nexport const setCreateDaoMetaData = createAsyncThunk(\n  `${NAME}/setCreateDaoMetaData`,\n  async (metaData?: MetaData) => {\n    if (!metaData) return { createMetaData: DEFAULT_META_DATA }\n    return { createMetaData: metaData }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getMember.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setCreateDaoMetaData.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { getMember, MetaData } from 'app/model/metadata.controller'\n\nconst useMembers = (daoAddress: string) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const {\n    metadata: { daoMetaData },\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n\n  const { members } = useMemo(\n    () => daoMetaData[daoAddress] || ({} as MetaData),\n    [daoAddress, daoMetaData],\n  )\n  const isExistDao = useMemo(() => {\n    return !!Object.keys(daoData).length\n  }, [daoData])\n\n  useEffect(() => {\n    if (isExistDao && account.isAddress(daoAddress)) {\n      dispatch(getMember({ daoAddress }))\n    }\n  }, [dispatch, daoAddress, isExistDao])\n\n  return members || 0\n}\n\nexport default useMembers\n","import { CID } from 'ipfs-core'\nimport { DaoData } from '@interdao/core'\nimport IPFS from 'shared/pdb/ipfs'\n\nimport { DaoDataState } from 'app/model/dao.controller'\nimport { MetaData } from 'app/model/metadata.controller'\n\nexport const fileToBase64 = (\n  file: File,\n  callBack: (result: string | ArrayBuffer | null) => void,\n) => {\n  const reader = new FileReader()\n  reader.readAsDataURL(file)\n  reader.onload = async () => {\n    if (reader.result) callBack(reader.result)\n  }\n}\n\nexport const getCID = (digest: number[]) => {\n  const v0Prefix = new Uint8Array([18, 32])\n  const v0Digest = new Uint8Array(v0Prefix.length + digest?.length)\n  v0Digest.set(v0Prefix) // multicodec + length\n  v0Digest.set(digest, v0Prefix.length)\n  const cid = CID.decode(v0Digest)\n  return cid.toString()\n}\n\nexport const parseDaoData = async (\n  daoData: DaoDataState,\n): Promise<Record<string, DaoData & MetaData> | undefined> => {\n  try {\n    if (!daoData) throw new Error('Invalid Dao data!')\n    const ipfs = new IPFS()\n    const results = await Promise.all(\n      Object.keys(daoData).map(async (daoAddr) => {\n        const { metadata: digest, regime } = daoData[daoAddr]\n        const cid = getCID(digest)\n        const data = await ipfs.get(cid)\n        const daoRegime = Object.keys(regime)[0]\n        return {\n          [daoAddr]: {\n            ...daoData[daoAddr],\n            ...data,\n            address: daoAddr,\n            daoRegime,\n          },\n        }\n      }),\n    )\n    const nextDaoData: Record<string, DaoData & MetaData> = {}\n    for (const rs of results) {\n      const daoAddr = Object.keys(rs)[0]\n      nextDaoData[daoAddr] = rs[daoAddr]\n    }\n    if (!nextDaoData) return\n    return nextDaoData\n  } catch (err) {\n    return\n  }\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport IPFS from 'shared/pdb/ipfs'\n\nimport { MetaData } from 'app/model/metadata.controller'\nimport { AppState } from 'app/model'\nimport { getCID } from 'app/helpers'\n\nconst useMetaData = (daoAddress: string) => {\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const [metaData, setMetaData] = useState<MetaData>()\n  const { metadata: digest } = daoData?.[daoAddress] || {}\n\n  const getMetaData = useCallback(async () => {\n    if (!digest) return setMetaData(undefined)\n    const cid = getCID(digest)\n    const ipfs = new IPFS()\n    try {\n      const data = await ipfs.get(cid)\n      return setMetaData(data)\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    }\n  }, [digest])\n\n  useEffect(() => {\n    getMetaData()\n  }, [getMetaData])\n\n  return metaData\n}\n\nexport default useMetaData\n","import { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { DaoData } from '@interdao/core'\nimport { useUI } from '@senhub/providers'\n\nimport {\n  Avatar,\n  Button,\n  Card,\n  Col,\n  Image,\n  Row,\n  Space,\n  Tooltip,\n  Typography,\n} from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport StatisticCard from 'app/components/statisticCard'\nimport RegimeTag from 'app/components/regimeTag'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport GradientAvatar from 'app/components/gradientAvatar'\n\nimport { AppState } from 'app/model'\nimport { numeric, shortenAddress } from 'shared/util'\nimport useMembers from 'app/hooks/useMembers'\nimport useMetaData from 'app/hooks/useMetaData'\n\nimport autonomous from 'app/static/images/system/bg-autonomous.png'\nimport democratic from 'app/static/images/system/bg-democratic.png'\nimport dictatorial from 'app/static/images/system/bg-dictatorial.png'\n\nexport type DaoCardProps = { daoAddress: string; special?: boolean }\nexport type DaoCardBackground = 'autonomous' | 'democratic' | 'dictatorial'\nconst DAO_CARD_BG = {\n  autonomous,\n  democratic,\n  dictatorial,\n}\nconst PAGE_PADDING = 24\nconst HEIGHT_RATIO = 1.777777\nconst MAX_WIDTH_RATE = 24 / 18 // full screen is 24 col, max width is 18 col\n\nconst DaoCard = ({ daoAddress, special }: DaoCardProps) => {\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const history = useHistory()\n  const {\n    ui: { width },\n  } = useUI()\n\n  const { regime, nonce, mint } = daoData?.[daoAddress] || ({} as DaoData)\n  const members = useMembers(daoAddress)\n  const metaData = useMetaData(daoAddress)\n  const parseRegime = Object.keys(regime)?.[0]\n  const isMobile = width < 768\n  const desktopWidth = width > 992 ? width / MAX_WIDTH_RATE : width\n  const heightRatio = isMobile ? HEIGHT_RATIO : HEIGHT_RATIO * 2\n\n  return (\n    <Row\n      gutter={[0, 0]}\n      className=\"dao-card-wrapper\"\n      onClick={() => history.push(`dao/${daoAddress}`)}\n    >\n      <Col\n        span={24}\n        className=\"dao-card-img\"\n        style={{\n          height: !isMobile\n            ? (desktopWidth - PAGE_PADDING * 2) / heightRatio\n            : (width - PAGE_PADDING) / heightRatio,\n        }}\n      >\n        <Image\n          preview={false}\n          src={DAO_CARD_BG[parseRegime as DaoCardBackground]}\n        />\n      </Col>\n      <Col span={24}>\n        <Card bordered={false}>\n          <Row gutter={[20, 20]}>\n            <Col span={24}>\n              <Row gutter={[16, 16]} wrap={false}>\n                <Col>\n                  {!metaData?.image ? (\n                    <GradientAvatar\n                      seed={daoAddress}\n                      avatarProps={{ shape: 'square', size: 56 }}\n                    />\n                  ) : (\n                    <Avatar shape=\"square\" size={56} src={metaData?.image} />\n                  )}\n                </Col>\n                <Col flex=\"auto\">\n                  <Space direction=\"vertical\" size={0}>\n                    <Tooltip\n                      title={metaData?.daoName ? metaData.daoName : daoAddress}\n                    >\n                      <Typography.Title level={4}>\n                        {metaData?.daoName\n                          ? metaData.daoName\n                          : shortenAddress(daoAddress)}\n                      </Typography.Title>\n                    </Tooltip>\n                    <Space size={2} style={{ marginLeft: -8 }}>\n                      <Button\n                        type=\"text\"\n                        icon={<IonIcon name=\"logo-discord\" />}\n                      />\n                      <Button\n                        type=\"text\"\n                        icon={<IonIcon name=\"logo-twitter\" />}\n                      />\n                      <Button\n                        type=\"text\"\n                        icon={<IonIcon name=\"logo-telegram\" />}\n                      />\n                    </Space>\n                  </Space>\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24}>\n              <Row gutter={[16, 16]}>\n                <Col span={8}>\n                  <StatisticCard\n                    title=\"Token\"\n                    value={\n                      <Space>\n                        <MintAvatar mintAddress={mint.toBase58()} />\n                        <MintSymbol mintAddress={mint.toBase58()} />\n                      </Space>\n                    }\n                  />\n                </Col>\n                <Col span={8}>\n                  <StatisticCard\n                    title=\"Proposals\"\n                    value={numeric(Number(nonce)).format('0,0')}\n                  />\n                </Col>\n                <Col span={8}>\n                  <StatisticCard\n                    title=\"Members\"\n                    value={numeric(members).format('0,0')}\n                  />\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24} style={{ minHeight: 66 }}>\n              <Typography.Paragraph\n                style={{ margin: 0 }}\n                type=\"secondary\"\n                ellipsis={{ rows: 3 }}\n              >\n                {metaData?.description}\n              </Typography.Paragraph>\n            </Col>\n            <Col className=\"regmie-tag-wrapper\">\n              <RegimeTag regime={regime} special />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoCard\n","import { Button, Input } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\ntype SearchDaoProps = {\n  onSearch: (keyword: string) => void\n}\n\nconst SearchDao = ({ onSearch }: SearchDaoProps) => {\n  return (\n    <Input\n      prefix={\n        <Button\n          type=\"text\"\n          size=\"small\"\n          icon={<IonIcon name=\"search-outline\" />}\n        />\n      }\n      placeholder=\"Search by name, address\"\n      style={{ width: '100%' }}\n      onChange={(e) => onSearch(e.target.value)}\n    />\n  )\n}\nexport default SearchDao\n","import isEqual from 'react-fast-compare'\nimport { DaoRegime } from '@interdao/core'\n\nimport { Card, Image, Typography } from 'antd'\n\nimport autonomous from 'app/static/images/system/bg-autonomous.png'\nimport democratic from 'app/static/images/system/bg-democratic.png'\nimport dictatorial from 'app/static/images/system/bg-dictatorial.png'\nimport { DaoCardBackground } from '../../daoList/daoCard'\n\nconst DAO_CARD_BG = {\n  autonomous,\n  democratic,\n  dictatorial,\n}\n\nconst CardRegmie = ({\n  value,\n  regmie,\n  onChange = () => {},\n}: {\n  value?: DaoRegime\n  regmie: DaoRegime\n  onChange?: (regmie: DaoRegime) => void\n}) => {\n  return (\n    <Card\n      bordered={false}\n      style={{ overflow: 'hidden', cursor: 'pointer' }}\n      bodyStyle={{ padding: 0 }}\n      onClick={() => onChange(regmie)}\n      className={`card-regime ${isEqual(value, regmie) ? 'active' : ''}`}\n    >\n      <Image\n        src={DAO_CARD_BG[Object.keys(regmie)[0] as DaoCardBackground]}\n        preview={false}\n      />\n      <Typography.Text\n        style={{\n          position: 'absolute',\n          bottom: 0,\n          left: 0,\n          textAlign: 'center',\n          width: '100%',\n          padding: 4,\n          backdropFilter: 'blur(4px)',\n          color: '#fff',\n        }}\n      >\n        {Object.keys(regmie)[0]}\n      </Typography.Text>\n    </Card>\n  )\n}\n\nexport default CardRegmie\n","import { DaoRegime, DaoRegimes } from '@interdao/core'\n\nimport { Button, Row, Col, Space, Typography, Popover } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport CardRegmie from './cardRegmie'\n\nexport type RegimeInputProps = {\n  value: DaoRegime\n  onChange: (value: DaoRegime) => void\n}\n\nexport const REGIME_LIST = [\n  DaoRegimes.Dictatorial,\n  DaoRegimes.Democratic,\n  DaoRegimes.Autonomous,\n]\n\nconst RegimeInput = ({\n  value = DaoRegimes.Dictatorial,\n  onChange = () => {},\n}: RegimeInputProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space>\n          <Typography.Text>DAO Regime</Typography.Text>\n          <Popover\n            overlayStyle={{ maxWidth: 300 }}\n            trigger=\"click\"\n            content={\n              <Row gutter={[16, 16]}>\n                <Col span={24}>\n                  <Typography.Title level={5}>\n                    What is DAO Regime?\n                  </Typography.Title>\n                </Col>\n                <Col span={24}>\n                  <Space direction=\"vertical\">\n                    <Typography.Text>\n                      <strong>Dictatorial.</strong> Only DAO owner can create\n                      and execute proposals.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Democratic.</strong> Community can create\n                      proposals, DAO owner execute proposals.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Autonomous.</strong> Community can create and\n                      execute proposals.\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            }\n          >\n            <Button\n              type=\"text\"\n              size=\"small\"\n              icon={<IonIcon name=\"information-circle-outline\" />}\n            />\n          </Popover>\n        </Space>\n      </Col>\n      {REGIME_LIST.map((regmie, idx) => (\n        <Col xs={24} md={8} key={idx}>\n          <CardRegmie value={value} regmie={regmie} onChange={onChange} />\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default RegimeInput\n","import { Select } from 'antd'\nimport { REGIME_LIST } from '../daoInitialization/daoRule/regimeInput'\n\ntype SortDaoProps = { value: string; onSort: (value: string) => void }\n\nconst SortDao = ({ onSort, value }: SortDaoProps) => {\n  return (\n    <Select\n      value={value}\n      style={{ textTransform: 'capitalize' }}\n      onChange={onSort}\n    >\n      <Select.Option value=\"all-regime\">All mechanisms</Select.Option>\n      {REGIME_LIST.map((regime, idx) => {\n        const value = Object.keys(regime)[0]\n        return (\n          <Select.Option\n            key={idx}\n            value={value}\n            style={{ textTransform: 'capitalize' }}\n          >\n            {value}\n          </Select.Option>\n        )\n      })}\n    </Select>\n  )\n}\n\nexport default SortDao\n","import lunr, { Index } from 'lunr'\n\nimport { DaoData } from '@interdao/core'\nimport { MetaData } from 'app/model/metadata.controller'\n\ntype SearchDataType = DaoData & MetaData\ntype RegisterDaoData = Record<string, SearchDataType>\nclass DaoProvider {\n  private daoMap: Map<string, SearchDataType>\n  private engine: Index | undefined\n  register: RegisterDaoData\n\n  constructor(register: RegisterDaoData) {\n    this.register = register\n    this.daoMap = new Map<string, SearchDataType>()\n    this.engine = lunr(function () {\n      this.ref('address')\n      this.field('address')\n      this.field('daoName')\n      this.field('description')\n      this.field('daoRegime')\n      Object.keys(register).forEach((address: string) => {\n        const doc = register[address]\n        if (doc) this.add(doc)\n      })\n    })\n    // build dao map\n    this._setDaoMap()\n  }\n\n  private _setDaoMap = async (): Promise<[Map<string, SearchDataType>]> => {\n    Object.keys(this.register).forEach((daoAddress) =>\n      this.daoMap.set(daoAddress, this.register[daoAddress]),\n    )\n    return [this.daoMap]\n  }\n\n  all = async (): Promise<SearchDataType[]> => {\n    const [daoMap] = await this._setDaoMap()\n    return Array.from(daoMap.values())\n  }\n\n  findByAddress = async (addr: string): Promise<string[] | undefined> => {\n    const [daoMap] = await this._setDaoMap()\n    if (daoMap.has(addr)) return [addr]\n    return\n  }\n\n  find = async (keyword: string, limit = 10): Promise<string[] | undefined> => {\n    const [daoMap] = await this._setDaoMap()\n    const engine = this.engine\n    if (!engine) return\n\n    let daos: SearchDataType[] = []\n    if (!keyword) return\n\n    const fuzzy = keyword + '~3'\n    engine.search(fuzzy).forEach(({ ref }) => {\n      if (daos.findIndex(({ mint }) => mint.toBase58() === ref) < 0) {\n        const dao = daoMap.get(ref)\n        if (dao) daos.push(dao)\n      }\n    })\n    const nextDaos: string[] = []\n    daos.slice(0, limit).forEach((dao) => {\n      if (dao.address) nextDaos.push(dao.address)\n    })\n    return nextDaos\n  }\n}\n\nexport default DaoProvider\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { DaoData } from '@interdao/core'\n\nimport { parseDaoData } from 'app/helpers'\nimport { AppState } from 'app/model'\nimport { MetaData } from 'app/model/metadata.controller'\nimport DaoProvider from 'app/view/dao/daoList/search/daoProvider'\nimport { DaoDataState } from 'app/model/dao.controller'\n\nconst useSearchDao = (keyword?: string, data?: DaoDataState) => {\n  const [parseData, setParseData] = useState<\n    Record<string, DaoData & MetaData> | undefined\n  >()\n  const [searchData, setSearchData] = useState<string[]>()\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n\n  const daoProvider = useMemo(() => {\n    if (!parseData) return\n    return new DaoProvider(parseData)\n  }, [parseData])\n\n  const onParseDaoData = useCallback(async () => {\n    let parseData: Record<string, DaoData & MetaData> | undefined = undefined\n    if (data) parseData = await parseDaoData(data)\n    else parseData = await parseDaoData(daoData)\n    setParseData(parseData)\n  }, [daoData, data])\n\n  const onSearch = useCallback(async () => {\n    if (\n      !keyword ||\n      keyword.length < 3 ||\n      !daoProvider ||\n      keyword === 'all-regime'\n    )\n      return setSearchData(undefined)\n    try {\n      if (account.isAddress(keyword)) {\n        const data = await daoProvider.findByAddress(keyword)\n        return setSearchData(data)\n      }\n      const data = await daoProvider.find(keyword)\n      return setSearchData(data)\n    } catch (err) {\n      setSearchData(undefined)\n    }\n  }, [daoProvider, keyword])\n\n  useEffect(() => {\n    onParseDaoData()\n  }, [onParseDaoData])\n\n  useEffect(() => {\n    const delayToSearch = setTimeout(() => {\n      //  delay to waiting keyboard typing\n      onSearch()\n    }, 500)\n    return () => clearTimeout(delayToSearch)\n  }, [onSearch])\n\n  return searchData\n}\n\nexport default useSearchDao\n","import { useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport LazyLoad from '@senswap/react-lazyload'\nimport { DaoData } from '@interdao/core'\n\nimport { Col, Row } from 'antd'\nimport DaoCard from './daoCard'\nimport SearchDao from './search'\nimport SortDao from './sortDao'\n\nimport { AppState } from 'app/model'\nimport useSearchDao from 'app/hooks/useSearchDao'\n\nimport './index.less'\n\nconst DaoList = () => {\n  const [sortKey, setSortKey] = useState('all-regime')\n  const [searchKey, setSearchKey] = useState('')\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const sortDaoRegime = useSearchDao(sortKey)\n  const filterDaoData = useMemo(() => {\n    if (!sortDaoRegime) return\n    const data: Record<string, DaoData> = {}\n    sortDaoRegime.forEach((daoAddr) => (data[daoAddr] = daoData[daoAddr]))\n    return data\n  }, [daoData, sortDaoRegime])\n  const searchDao = useSearchDao(searchKey, filterDaoData)\n\n  const searchData =\n    !searchKey || searchKey.length < 3 ? sortDaoRegime : searchDao\n\n  return (\n    <Row gutter={[24, 16]}>\n      <Col xs={24} md={12}>\n        <Row gutter={[24, 24]}>\n          <Col>\n            <SortDao onSort={setSortKey} value={sortKey} />\n          </Col>\n          <Col flex=\"auto\">\n            <SearchDao onSearch={setSearchKey} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24} />\n      {(searchData || Object.keys(daoData)).map((daoAddress) => (\n        <Col key={daoAddress} xs={24} md={12}>\n          <LazyLoad height={350.88}>\n            <DaoCard daoAddress={daoAddress} special />\n          </LazyLoad>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default DaoList\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport LazyLoad from '@senswap/react-lazyload'\nimport { useWallet } from '@senhub/providers'\nimport { account } from '@senswap/sen-js'\nimport { DaoData } from '@interdao/core'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport DaoCard from './daoCard'\n\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst YourDaos = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const history = useHistory()\n\n  const filteredDaos = useMemo(\n    () =>\n      Object.keys(daoData).filter((daoAddr) => {\n        const { authority } = daoData[daoAddr] || ({} as DaoData)\n        const authAddress = authority.toBase58()\n        return account.isAddress(authAddress) && authAddress === walletAddress\n      }),\n    [daoData, walletAddress],\n  )\n\n  if (!!filteredDaos.length)\n    return (\n      <Row gutter={[24, 24]}>\n        {filteredDaos.map((daoAddress) => (\n          <Col span={12} key={daoAddress}>\n            <LazyLoad height={191.5}>\n              <DaoCard daoAddress={daoAddress} />\n            </LazyLoad>\n          </Col>\n        ))}\n      </Row>\n    )\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Card bordered={false} bodyStyle={{ padding: 45, textAlign: 'center' }}>\n          <Space direction=\"vertical\" align=\"center\">\n            <Typography.Text type=\"secondary\">\n              You have no DAO yet!\n            </Typography.Text>\n            <Button onClick={() => history.push(`/app/${appId}/dao/new-dao`)}>\n              Build your DAO\n            </Button>\n          </Space>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default YourDaos\n","import { useHistory } from 'react-router-dom'\n\nimport { Row, Col, Button, Tabs } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport Hero from './hero'\nimport DaoList from './daoList'\nimport YourDaos from './daoList/yourDao'\n\nimport configs from 'app/configs'\n\nimport './index.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst Dao = () => {\n  const history = useHistory()\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Hero />\n      </Col>\n      <Col span={24}>\n        <Row justify=\"center\">\n          <Col xs={24} lg={18}>\n            <Tabs\n              style={{ overflow: 'visible' }}\n              className=\"dao-tabs\"\n              tabBarExtraContent={\n                <Button\n                  type=\"primary\"\n                  onClick={() => history.push(`/app/${appId}/dao/new-dao`)}\n                  icon={<IonIcon name=\"add-outline\" />}\n                >\n                  New DAO\n                </Button>\n              }\n            >\n              <Tabs.TabPane tab=\"Community DAOs\" key=\"community-daos\">\n                <DaoList />\n              </Tabs.TabPane>\n              <Tabs.TabPane tab=\"Your DAOs\" key=\"your-daos\">\n                <YourDaos />\n              </Tabs.TabPane>\n            </Tabs>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Dao\n","import { Tag } from 'antd'\n\nexport type ProposalStatusType =\n  | 'Failed'\n  | 'Voting'\n  | 'Preparing'\n  | 'Succeeded'\n  | 'Executed'\n\nexport type ProposalStatusProps = {\n  status: ProposalStatusType\n}\n\nconst STATUS_COLOR: Record<string, string> = {\n  Succeeded: '#0CA1BF',\n  Failed: '#F9575E',\n  Preparing: '#D4B106',\n  Executed: '#03A326',\n  Voting: '#40A9FF',\n}\n\nconst ProposalStatus = ({ status }: ProposalStatusProps) => {\n  return (\n    <Tag\n      style={{ color: STATUS_COLOR[status], border: 'solid', margin: 0 }}\n      color={'transparent'}\n    >\n      {status}\n    </Tag>\n  )\n}\n\nexport default ProposalStatus\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'app/model'\nimport { ProposalStatusType } from 'app/components/proposalStatus'\n\nconst currentDate = Math.floor(Number(new Date()) / 1000)\n\nconst useProposalStatus = (proposalAddress: string) => {\n  const { proposal } = useSelector((state: AppState) => state)\n  const {\n    startDate,\n    endDate,\n    executed,\n    supply,\n    votingAgainstPower,\n    votingForPower,\n    consensusQuorum,\n    consensusMechanism,\n  } = proposal[proposalAddress] || {}\n\n  const actualSupply = useMemo(() => {\n    if (!supply) return 0\n    const mechanism = consensusMechanism\n      ? Object.keys(consensusMechanism)[0]\n      : ''\n    if (mechanism === 'StakedTokenCounter') return supply.toNumber()\n    return Number(supply) * (Number(endDate) - Number(startDate))\n  }, [consensusMechanism, endDate, startDate, supply])\n\n  const isSuccess = useMemo(() => {\n    const quorum = consensusQuorum ? Object.keys(consensusQuorum)[0] : ''\n\n    const votingPower = Number(votingForPower) - Number(votingAgainstPower)\n    if (votingPower <= 0) return false\n    if (quorum === 'half' && votingPower > actualSupply / 2) return true\n    if (quorum === 'oneThird' && votingPower > actualSupply / 3) return true\n    if (quorum === 'twoThird' && votingPower > (actualSupply * 2) / 3)\n      return true\n    return false\n  }, [actualSupply, consensusQuorum, votingAgainstPower, votingForPower])\n\n  const status: ProposalStatusType = useMemo(() => {\n    if (currentDate < Number(startDate)) return 'Preparing'\n    if (currentDate < Number(endDate)) return 'Voting'\n    if (executed) return 'Executed'\n    if (isSuccess) return 'Succeeded'\n    return 'Failed'\n  }, [endDate, executed, isSuccess, startDate])\n\n  return { status, isSuccess, actualSupply }\n}\n\nexport default useProposalStatus\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'app/model'\nimport { getCID } from 'app/helpers'\nimport { ProposalMetaData } from 'app/view/proposal/proposalInitialization'\nimport IPFS from 'shared/pdb/ipfs'\n\nconst useProposalMetaData = (proposalAddress: string) => {\n  const [metaData, setMetaData] = useState<ProposalMetaData>()\n  const { proposal } = useSelector((state: AppState) => state)\n  const { metadata: digest } = proposal[proposalAddress] || {}\n\n  const getMetaData = useCallback(async () => {\n    if (!digest) return setMetaData(undefined)\n    const cid = getCID(digest)\n    const ipfs = new IPFS()\n    try {\n      const data = await ipfs.get(cid)\n      return setMetaData(data)\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    }\n  }, [digest])\n\n  useEffect(() => {\n    getMetaData()\n  }, [getMetaData])\n\n  return metaData\n}\n\nexport default useProposalMetaData\n","import { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { SystemProgram } from '@solana/web3.js'\nimport moment from 'moment'\nimport BN from 'bn.js'\n\nimport { Card, Col, Row, Space, Typography } from 'antd'\nimport ProposalStatus from 'app/components/proposalStatus'\n\nimport { shortenAddress } from 'shared/util'\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\nimport useProposalStatus from 'app/hooks/useProposalStatus'\nimport useProposalMetaData from 'app/hooks/useProposalMetaData'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport type ProposalCardProps = { proposalAddress: string }\n\nconst currentDate = Math.floor(Number(new Date()) / 1000)\n\nconst ProposalCard = ({ proposalAddress }: ProposalCardProps) => {\n  const { proposal } = useSelector((state: AppState) => state)\n  const { dao, endDate } = proposal[proposalAddress] || {\n    dao: SystemProgram.programId,\n    endDate: new BN(currentDate),\n  }\n  const { status } = useProposalStatus(proposalAddress)\n  const history = useHistory()\n  const metaData = useProposalMetaData(proposalAddress)\n\n  return (\n    <Card\n      bordered={false}\n      onClick={() =>\n        history.push(\n          `/app/${appId}/dao/${dao.toBase58()}/proposal/${proposalAddress}`,\n        )\n      }\n      className=\"proposal-card\"\n      style={{ background: `url(${metaData?.imageBackground})` }}\n      hoverable\n    >\n      <Row gutter={[8, 8]}>\n        <Col span={24}>\n          <Row>\n            <Col flex=\"auto\">\n              <Typography.Title level={4}>\n                {metaData?.title\n                  ? metaData.title\n                  : shortenAddress(proposalAddress)}\n              </Typography.Title>\n            </Col>\n            <Col>\n              <ProposalStatus status={status} />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Space>\n            <Typography.Text className=\"caption\" type=\"secondary\">\n              End Date:\n            </Typography.Text>\n            <Typography.Text className=\"caption\">\n              {moment(Number(endDate) * 1000).format('hh:mm A, MMM Do, YYYY')}\n            </Typography.Text>\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph type=\"secondary\" ellipsis={{ rows: 2 }}>\n            {metaData?.description}\n          </Typography.Paragraph>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default ProposalCard\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\n\n/**\n * Get token decimals from multiple resources. This hook needs MintProvider for working.\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * @param mintAddress Mint address\n * @returns Decimals\n */\nconst useMintDecimals = (mintAddress: string) => {\n  const [decimals, setDecimals] = useState<number | undefined>(undefined)\n  const { getDecimals } = useMint()\n\n  const fetchDecimals = useCallback(async () => {\n    try {\n      const decimals = await getDecimals(mintAddress)\n      return setDecimals(decimals)\n    } catch (er: any) {\n      return setDecimals(undefined)\n    }\n  }, [mintAddress, getDecimals])\n\n  useEffect(() => {\n    fetchDecimals()\n  }, [fetchDecimals])\n\n  return decimals\n}\n\nexport default useMintDecimals\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport { ProposalReturnType } from 'app/view/templates/types'\n\n/**\n * Interface & Utility\n */\n\nexport type TemplateState = {\n  visible: boolean\n  tx?: ProposalReturnType\n  imageBackground: string\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'template'\nconst initialState: TemplateState = {\n  visible: false,\n  tx: undefined,\n  imageBackground: '',\n}\n\n/**\n * Actions\n */\n\nexport const setVisible = createAsyncThunk(\n  `${NAME}/setVisible`,\n  async (visible: boolean) => {\n    return { visible }\n  },\n)\n\nexport const setTx = createAsyncThunk(\n  `${NAME}/setTx`,\n  async (tx?: ProposalReturnType) => {\n    return { tx }\n  },\n)\n\nexport const setImgBackground = createAsyncThunk(\n  `${NAME}/setImgBackground`,\n  async (image: string) => {\n    return { imageBackground: image }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setVisible.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setTx.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setImgBackground.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { ChangeEvent, useState, forwardRef, useCallback, useRef } from 'react'\n\nimport { Input, Tooltip, Space, InputProps } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nlet timeoutId: ReturnType<typeof setTimeout> | undefined\n\n/**\n * Numeric Input\n * - Check balance based on the max\n * - Only accept numeric characters\n * @remarks The props of input follows the same as https://ant.design/components/input/#API. Extra & Overrided props\n * @param max - Maximum\n * @param onValue - A triggerred function if a valid number\n */\nconst NumericInput = forwardRef(\n  (\n    {\n      max,\n      onValue = () => {},\n      onChange = () => {},\n      ...props\n    }: InputProps & {\n      onValue?: (val: string) => void\n      max?: string | number\n    },\n    ref: any,\n  ) => {\n    const [error, setError] = useState('')\n    const [cursor, setCursor] = useState<number | null>(null)\n    const innerRef = useRef(ref)\n\n    // Handle amount\n    const onAmount = useCallback(\n      (val: string) => {\n        const onError = (er: string) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId)\n            timeoutId = undefined\n          }\n          setError(er)\n          timeoutId = setTimeout(() => setError(''), 500)\n        }\n        const reg = /^\\d*(\\.\\d*)?$/\n        if (!reg.test(val)) return onError('Invalid character')\n        if (max && parseFloat(val) > parseFloat(max.toString()))\n          return onError('Not enough balance')\n        return onValue(val)\n      },\n      [max, onValue],\n    )\n\n    // Handle cursor jumping\n    // To prevent autofocus on mobile, we must strictly check cursor different from null\n    if (cursor !== null) innerRef?.current?.setSelectionRange(cursor, cursor)\n\n    return (\n      <Tooltip\n        title={\n          <Space>\n            <IonIcon name=\"warning\" />\n            {error}\n          </Space>\n        }\n        visible={!!error}\n      >\n        <Input\n          {...props}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => {\n            onChange(e)\n            setCursor(e.target.selectionStart)\n            onAmount(e.target.value || '')\n          }}\n          ref={innerRef}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nexport default NumericInput\n","import { useCallback, useState, useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { PublicKey } from '@solana/web3.js'\nimport { utils } from '@project-serum/anchor'\nimport BN from 'bn.js'\n// @ts-ignore\nimport * as soproxABI from 'soprox-abi'\nimport { account } from '@senswap/sen-js'\n\nimport { Button, Col, Input, Row, Space, Typography } from 'antd'\nimport { MintSelection } from 'shared/antd/mint'\n\nimport { ProposalReturnType } from 'app/view/templates/types'\nimport { AppDispatch, AppState } from 'app/model'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport {\n  setImgBackground,\n  setTx,\n  setVisible,\n} from 'app/model/template.controller'\nimport configs from 'app/configs'\nimport BG_SOLANA from 'app/static/images/templates/bg-spl.png'\nimport NumericInput from 'shared/antd/numericInput'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const NAME = 'spl/transfer'\n\nexport const toData = (amount = new BN(0)) => {\n  const schema = [\n    { key: 'code', type: 'u8' },\n    { key: 'amount', type: 'u64' },\n  ]\n  const buf = new soproxABI.struct(schema, {\n    code: 3,\n    amount: BigInt(amount.toString()),\n  }).toBuffer()\n  return buf\n}\n\nexport const buildTransferSplvalue = (\n  amount: string | number | BN,\n  src: string,\n  dst: string,\n  payer: string,\n) => {\n  const value: ProposalReturnType = {\n    name: NAME,\n    data: toData(new BN(amount)),\n    accounts: {\n      src: {\n        pubkey: new PublicKey(src),\n        isWritable: true,\n        isSigner: false,\n        isMaster: false,\n      },\n      dst: {\n        pubkey: new PublicKey(dst),\n        isWritable: true,\n        isSigner: false,\n        isMaster: false,\n      },\n      payer: {\n        pubkey: new PublicKey(payer),\n        isWritable: true,\n        isSigner: true,\n        isMaster: true,\n      },\n    },\n    programId: utils.token.TOKEN_PROGRAM_ID,\n  }\n  return value\n}\n\ntype TransferSplPluginProps = {\n  daoAddress: string\n}\n\nconst TransferSplPlugin = ({ daoAddress = '' }: TransferSplPluginProps) => {\n  const [value, setValue] = useState('')\n  const [mintAddress, setMintAddress] = useState('')\n  const [receiverAddress, setReceiverAddress] = useState('')\n  const [srcAddress, setSrcAddress] = useState('')\n  const [dstAddress, setDstAddress] = useState('')\n\n  const [amount, setAmount] = useState('')\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const decimals = useMintDecimals(mintAddress)\n  const dispatch = useDispatch<AppDispatch>()\n  const history = useHistory()\n  const senderAddress = useMemo(() => {\n    const { master } = daoData[daoAddress] || {}\n    return master?.toBase58() || ''\n  }, [daoData, daoAddress])\n\n  const valid = useMemo(() => {\n    return Boolean(\n      amount && account.isAddress(srcAddress) && account.isAddress(dstAddress),\n    )\n  }, [amount, srcAddress, dstAddress])\n\n  const confirm = useCallback(async () => {\n    if (!valid) return dispatch(setTx(undefined))\n    const re = buildTransferSplvalue(\n      amount,\n      srcAddress,\n      dstAddress,\n      senderAddress,\n    )\n    await dispatch(setTx(re))\n    await dispatch(setImgBackground(BG_SOLANA))\n    await dispatch(setVisible(false))\n    return history.push(`/app/${appId}/dao/${daoAddress}/new-proposal`)\n  }, [\n    valid,\n    dispatch,\n    amount,\n    srcAddress,\n    dstAddress,\n    senderAddress,\n    history,\n    daoAddress,\n  ])\n\n  const close = useCallback(async () => {\n    setValue('')\n    setMintAddress('')\n    setReceiverAddress('')\n    await dispatch(setTx(undefined))\n    return dispatch(setVisible(false))\n  }, [dispatch])\n\n  const setSourceAddress = useCallback(async () => {\n    if (account.isAddress(senderAddress) && account.isAddress(mintAddress)) {\n      const pubkey = await utils.token.associatedAddress({\n        owner: new PublicKey(senderAddress),\n        mint: new PublicKey(mintAddress),\n      })\n      setSrcAddress(pubkey.toBase58())\n    } else setSrcAddress('')\n  }, [mintAddress, senderAddress])\n\n  const setDestinationAddress = useCallback(async () => {\n    if (account.isAddress(receiverAddress) && account.isAddress(mintAddress)) {\n      const pubkey = await utils.token.associatedAddress({\n        owner: new PublicKey(receiverAddress),\n        mint: new PublicKey(mintAddress),\n      })\n      setDstAddress(pubkey.toBase58())\n    } else setDstAddress('')\n  }, [mintAddress, receiverAddress])\n\n  const getAmount = useCallback(() => {\n    if (Number(value) && decimals)\n      setAmount(String(Number(value) * 10 ** decimals))\n    else setAmount('')\n  }, [decimals, value])\n\n  useEffect(() => {\n    setSourceAddress()\n  }, [setSourceAddress])\n\n  useEffect(() => {\n    setDestinationAddress()\n  }, [setDestinationAddress])\n\n  useEffect(() => {\n    getAmount()\n  }, [getAmount])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Space direction=\"vertical\" size={4} style={{ width: '100%' }}>\n          <Typography.Text type=\"secondary\">Transfer</Typography.Text>\n          <NumericInput\n            className=\"border-less\"\n            placeholder=\"Input Amount\"\n            value={value}\n            onValue={(value) => setValue(value || '')}\n            prefix={\n              <MintSelection\n                value={mintAddress}\n                onChange={setMintAddress}\n                style={{ marginLeft: -7 }}\n              />\n            }\n          />\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\" size={4} style={{ width: '100%' }}>\n          <Typography.Text type=\"secondary\">\n            Sender's Wallet Address\n          </Typography.Text>\n          <Input\n            className=\"border-less\"\n            placeholder=\"Input Sender's Wallet Address\"\n            value={senderAddress}\n          />\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\" size={4} style={{ width: '100%' }}>\n          <Typography.Text type=\"secondary\">\n            Receiver's Wallet Address\n          </Typography.Text>\n          <Input\n            className=\"border-less\"\n            placeholder=\"Input Receiver's Wallet Address\"\n            value={receiverAddress}\n            onChange={(e) => setReceiverAddress(e.target.value || '')}\n          />\n        </Space>\n      </Col>\n      <Col span={24} />\n      <Col span={24} style={{ textAlign: 'right' }}>\n        <Space>\n          <Button type=\"text\" onClick={close}>\n            Close\n          </Button>\n          <Button type=\"primary\" onClick={confirm} disabled={!valid}>\n            Continue\n          </Button>\n        </Space>\n      </Col>\n      {/* <TemplateInfo content=\"\" /> */}\n    </Row>\n  )\n}\n\nexport default TransferSplPlugin\n","var _path, _path2, _path3, _defs;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgSolana(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.09822 38.7451C9.43613 38.4072 9.90075 38.2101 10.3935 38.2101H55.082C55.8986 38.2101 56.3069 39.1956 55.7297 39.7729L46.9018 48.6008C46.5639 48.9387 46.0993 49.1358 45.6065 49.1358H0.918008C0.101395 49.1358 -0.306912 48.1502 0.270349 47.573L9.09822 38.7451Z\",\n    fill: \"url(#paint0_linear_514_9086)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.09822 5.78502C9.45021 5.44711 9.91483 5.25 10.3935 5.25L55.082 5.25C55.8986 5.25 56.3069 6.23557 55.7297 6.81283L46.9018 15.6407C46.5639 15.9786 46.0993 16.1757 45.6065 16.1757H0.918008C0.101395 16.1757 -0.306912 15.1902 0.270349 14.6129L9.09822 5.78502Z\",\n    fill: \"url(#paint1_linear_514_9086)\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.9018 22.1596C46.5639 21.8217 46.0993 21.6246 45.6065 21.6246H0.918008C0.101395 21.6246 -0.306912 22.6101 0.270349 23.1874L9.09822 32.0153C9.43613 32.3532 9.90075 32.5503 10.3935 32.5503H55.082C55.8986 32.5503 56.3069 31.5647 55.7297 30.9875L46.9018 22.1596Z\",\n    fill: \"url(#paint2_linear_514_9086)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_514_9086\",\n    x1: 50.8129,\n    y1: -0.023655,\n    x2: 19.885,\n    y2: 59.2159,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#00FFA3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DC1FFF\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear_514_9086\",\n    x1: 37.2896,\n    y1: -7.08387,\n    x2: 6.36157,\n    y2: 52.1556,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#00FFA3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DC1FFF\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint2_linear_514_9086\",\n    x1: 44.0082,\n    y1: -3.57611,\n    x2: 13.0802,\n    y2: 55.6634,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#00FFA3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DC1FFF\"\n  })))));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSolana);\nexport default __webpack_public_path__ + \"static/media/solana.6db9bd9600699ad1fc2b302acd0731be.svg\";\nexport { ForwardRef as ReactComponent };","import { Button, Col, Image, Radio, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport TransferSplPlugin from './transfer'\n\nimport SOLANA_LOGO from 'app/static/images/templates/solana.svg'\n\ntype CardOptionProps = {\n  label: string\n  description: string\n  icon: string\n}\n\nconst CardOption = ({ label, description, icon }: CardOptionProps) => {\n  return (\n    <Row>\n      <Col span={24}>\n        <Row>\n          <Col flex=\"auto\">\n            <Typography.Title level={5}>{label}</Typography.Title>\n          </Col>\n          <Col>\n            <IonIcon style={{ fontSize: 24 }} name={icon} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Typography.Text type=\"secondary\">{description}</Typography.Text>\n      </Col>\n    </Row>\n  )\n}\n\nconst SPL = ({ daoAddress }: { daoAddress: string }) => {\n  return (\n    <Row>\n      <Col span={16} style={{ background: ' #2b2523' }}>\n        <Row gutter={[16, 16]} className=\"spl-info\">\n          <Col span={24}>\n            <Space size={24}>\n              <Image preview={false} src={SOLANA_LOGO} />\n              <Space size={0} direction=\"vertical\">\n                <Typography.Text>Solana Program Library</Typography.Text>\n                <Space size={2} style={{ marginLeft: -8 }}>\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-discord\" />} />\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-twitter\" />} />\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-telegram\" />} />\n                </Space>\n              </Space>\n            </Space>\n          </Col>\n          <Col span={24}>\n            <Typography.Text type=\"secondary\">\n              The Solana Program Library (SPL) is a collection of on-chain\n              programs targeting the Sealevel parallel runtime. These programs\n              are tested against Solana's implementation of Sealevel,\n              solana-runtime, and deployed to its mainnet. As others implement\n              Sealevel, we will graciously accept patches to ensure the programs\n              here are portable across all implementations.\n            </Typography.Text>\n          </Col>\n          <Col span={24}>\n            <Space direction=\"vertical\" style={{ width: '100%' }}>\n              <Typography.Text>Templates</Typography.Text>\n              <Radio.Group\n                value=\"transfer\"\n                style={{ width: '100%' }}\n                className=\"select-spl-option\"\n              >\n                <Row gutter={[24, 24]}>\n                  <Col xs={24} sm={12} md={12} lg={12}>\n                    <Radio.Button value=\"transfer\">\n                      <CardOption\n                        label=\"Transfer\"\n                        description=\"Transfer token to another wallet address\"\n                        icon=\"paper-plane-outline\"\n                      />\n                    </Radio.Button>\n                  </Col>\n                  <Col xs={24} sm={12} md={12} lg={12}>\n                    <Radio.Button value=\"approve\" disabled>\n                      <CardOption\n                        label=\"Approve\"\n                        description=\"Coming soon\"\n                        icon=\"thumbs-up-outline\"\n                      />\n                    </Radio.Button>\n                  </Col>\n                </Row>\n              </Radio.Group>\n            </Space>\n          </Col>\n        </Row>\n      </Col>\n      <Col span={8} className=\"spl-option-transfer\">\n        <TransferSplPlugin daoAddress={daoAddress} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default SPL\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { Col, Modal, Row, Tabs, Typography } from 'antd'\nimport SPL from './spl'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setVisible } from 'app/model/template.controller'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst Template = ({ daoAddress }: { daoAddress: string }) => {\n  const {\n    template: { visible },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n\n  return (\n    <Modal\n      visible={visible}\n      footer={false}\n      closeIcon={<IonIcon name=\"close-outline\" />}\n      className=\"template-card template-modal\"\n      onCancel={() => dispatch(setVisible(false))}\n    >\n      <Row>\n        <Col span={24} className=\"template-header\">\n          <Typography.Title level={4}>Choose a template</Typography.Title>\n        </Col>\n        <Col className=\"template-body\" span={24}>\n          <Tabs>\n            <Tabs.TabPane tab=\"SPL\" key=\"spl\">\n              <SPL daoAddress={daoAddress} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Atrix\" key=\"atrix\" disabled />\n\n            <Tabs.TabPane tab=\"Quarry\" key=\"quarry\" disabled />\n\n            <Tabs.TabPane tab=\"Advanced\" key=\"advanced\" disabled />\n          </Tabs>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default Template\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport LazyLoad from '@senswap/react-lazyload'\nimport { useWallet } from '@senhub/providers'\nimport { DaoRegimes } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\nimport { SystemProgram } from '@solana/web3.js'\n\nimport { Button, Col, Empty, Row, Select, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ProposalCard from './proposalCard'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { getProposals } from 'app/model/proposal.controller'\nimport Template from 'app/view/templates'\nimport { setVisible } from 'app/model/template.controller'\n\nexport type ProposalListProps = { daoAddress: string }\n\nconst currentDate = Math.floor(Number(new Date()) / 1000)\n\nconst ProposalList = ({ daoAddress }: ProposalListProps) => {\n  const [status, setStatus] = useState('all-status')\n  const {\n    proposal,\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n\n  const { regime, authority } = daoData[daoAddress] || {\n    regime: DaoRegimes.Dictatorial,\n    authority: SystemProgram.programId,\n  }\n\n  const isSuccess = useCallback(\n    (quorum: string, votingPower: number, numSupply: number) => {\n      if (votingPower <= 0) return false\n      if (quorum === 'half' && votingPower >= numSupply / 2) return true\n      if (quorum === 'oneThird' && votingPower >= numSupply / 3) return true\n      if (quorum === 'twoThird' && votingPower >= (numSupply * 2) / 3)\n        return true\n      return false\n    },\n    [],\n  )\n\n  const authorized = useMemo(() => {\n    if (isEqual(regime, DaoRegimes.Autonomous)) return true\n    if (isEqual(regime, DaoRegimes.Democratic)) return true\n    if (authority.toBase58() === walletAddress) return true\n    return false\n  }, [regime, authority, walletAddress])\n\n  const proposalAddresses = useMemo(() => {\n    const expandedProposal = Object.keys(proposal).map((address) => ({\n      address,\n      ...proposal[address],\n    }))\n    return expandedProposal\n      .filter(({ dao }) => dao.toBase58() === daoAddress)\n      .map(({ address }) => address)\n  }, [proposal, daoAddress])\n\n  const filterProposalAddresses = useMemo(() => {\n    if (!proposalAddresses.length) return []\n    const filteredAddress = []\n\n    for (const address of proposalAddresses) {\n      let valid = false\n      const {\n        endDate,\n        startDate,\n        executed,\n        supply,\n        votingForPower,\n        consensusQuorum,\n        consensusMechanism,\n        votingAgainstPower,\n      } = proposal[address] || {}\n\n      const quorum = consensusQuorum ? Object.keys(consensusQuorum)[0] : ''\n      const votingPower = Number(votingForPower) - Number(votingAgainstPower)\n      const stakeSupply = supply?.toNumber() || 0\n      const lockSupply = Number(supply) * (Number(endDate) - Number(startDate))\n      const mechanism = consensusMechanism\n        ? Object.keys(consensusMechanism)[0]\n        : ''\n      const actualSupply =\n        mechanism === 'StakedTokenCounter' ? stakeSupply : lockSupply\n\n      switch (status) {\n        case 'preparing':\n          valid = currentDate < Number(startDate)\n          break\n        case 'voting':\n          valid =\n            currentDate <= Number(endDate) && currentDate >= Number(startDate)\n          break\n        case 'executed':\n          valid = executed\n          break\n        case 'succeeded':\n          valid =\n            isSuccess(quorum, votingPower, actualSupply) &&\n            !executed &&\n            currentDate > Number(endDate)\n          break\n        case 'failed':\n          valid =\n            !isSuccess(quorum, votingPower, actualSupply) &&\n            currentDate > Number(endDate)\n          break\n        default:\n          valid = true\n          break\n      }\n      if (valid) filteredAddress.push(address)\n    }\n    return filteredAddress\n  }, [isSuccess, proposal, proposalAddresses, status])\n\n  useEffect(() => {\n    dispatch(getProposals({ daoAddress }))\n  }, [dispatch, daoAddress])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row gutter={[16, 16]} wrap={false} align=\"bottom\">\n          <Col flex=\"auto\">\n            <Typography.Title level={4}>Proposals</Typography.Title>\n          </Col>\n          <Col>\n            <Space>\n              <Select\n                className=\"select-filter-proposal\"\n                defaultValue=\"all-status\"\n                onChange={setStatus}\n                style={{ width: 150 }}\n              >\n                <Select.Option value=\"all-status\">All status</Select.Option>\n                <Select.Option value=\"preparing\">Preparing</Select.Option>\n                <Select.Option value=\"voting\">Voting</Select.Option>\n                <Select.Option value=\"succeeded\">Succeeded</Select.Option>\n                <Select.Option value=\"executed\">Executed</Select.Option>\n                <Select.Option value=\"failed\">Failed</Select.Option>\n              </Select>\n              <Button\n                type=\"primary\"\n                icon={<IonIcon name=\"add-outline\" />}\n                onClick={() => dispatch(setVisible(true))}\n                disabled={!authorized}\n              >\n                New Proposal\n              </Button>\n            </Space>\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row>\n          {filterProposalAddresses.length ? (\n            filterProposalAddresses.map((proposalAddress) => (\n              <Col key={proposalAddress} span={24}>\n                <LazyLoad height={176}>\n                  <ProposalCard proposalAddress={proposalAddress} />\n                </LazyLoad>\n              </Col>\n            ))\n          ) : (\n            <Col span={24} style={{ textAlign: 'center' }}>\n              <Empty />\n            </Col>\n          )}\n        </Row>\n      </Col>\n      <Template daoAddress={daoAddress} />\n    </Row>\n  )\n}\n\nexport default ProposalList\n","import { useSelector } from 'react-redux'\nimport { SystemProgram } from '@solana/web3.js'\nimport BN from 'bn.js'\n\nimport {\n  Avatar,\n  Button,\n  Card,\n  Col,\n  Divider,\n  Row,\n  Space,\n  Typography,\n} from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport StatisticCard from 'app/components/statisticCard'\nimport RegimeTag from 'app/components/regimeTag'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport GradientAvatar from 'app/components/gradientAvatar'\n\nimport { AppState } from 'app/model'\nimport { numeric, shortenAddress } from 'shared/util'\nimport useMembers from 'app/hooks/useMembers'\nimport useMetaData from 'app/hooks/useMetaData'\n\nexport type DaoDetailsProps = { daoAddress: string }\n\nconst DaoDetails = ({ daoAddress }: DaoDetailsProps) => {\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const { regime, nonce, mint } = daoData?.[daoAddress] || {\n    regime: {},\n    nonce: new BN(0),\n    mint: SystemProgram.programId,\n  }\n  const members = useMembers(daoAddress)\n  const metaData = useMetaData(daoAddress)\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[24, 24]}>\n        <Col span={24}>\n          <Row gutter={[16, 16]} wrap={false}>\n            <Col>\n              {!metaData?.image ? (\n                <GradientAvatar\n                  seed={daoAddress}\n                  avatarProps={{ shape: 'square', size: 56 }}\n                />\n              ) : (\n                <Avatar shape=\"square\" size={56} src={metaData?.image} />\n              )}\n            </Col>\n            <Col>\n              <Space direction=\"vertical\" size={0}>\n                <Typography.Title level={4}>\n                  {metaData?.daoName\n                    ? metaData.daoName\n                    : shortenAddress(daoAddress)}\n                </Typography.Title>\n                <Space size={2} style={{ marginLeft: -8 }}>\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-discord\" />} />\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-twitter\" />} />\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-telegram\" />} />\n                </Space>\n              </Space>\n            </Col>\n            <Col>\n              <Divider type=\"vertical\" style={{ height: '100%' }} />\n            </Col>\n            <Col flex=\"auto\">\n              <Row gutter={[36, 36]} wrap={false}>\n                <Col md={4}>\n                  <StatisticCard\n                    title=\"Token\"\n                    value={\n                      <Space>\n                        <MintAvatar mintAddress={mint.toBase58()} />\n                        <MintSymbol mintAddress={mint.toBase58()} />\n                      </Space>\n                    }\n                  />\n                </Col>\n                <Col md={4}>\n                  <StatisticCard\n                    title=\"Proposals\"\n                    value={numeric(Number(nonce)).format('0,0')}\n                  />\n                </Col>\n                <Col md={4}>\n                  <StatisticCard\n                    title=\"Members\"\n                    value={numeric(members).format('0,0')}\n                  />\n                </Col>\n                <Col md={4}>\n                  <StatisticCard\n                    title=\"Regime\"\n                    value={<RegimeTag regime={regime} />}\n                  />\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph\n            type=\"secondary\"\n            ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n          >\n            {metaData?.description}\n          </Typography.Paragraph>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default DaoDetails\n","import { useHistory, useParams } from 'react-router-dom'\n\nimport { Button, Col, Row } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ProposalList from './proposalList'\nimport DaoDetails from '../dao/daoDetails'\n\nimport configs from 'app/configs'\nimport './index.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst Proposal = () => {\n  const history = useHistory()\n  const { daoAddress } = useParams<{ daoAddress: string }>()\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\" align=\"middle\">\n      <Col xs={24} lg={18}>\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Button\n              icon={<IonIcon name=\"arrow-back-outline\" />}\n              type=\"text\"\n              onClick={() => history.push(`/app/${appId}/dao`)}\n              style={{ marginLeft: -8 }}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col span={24}>\n            <DaoDetails daoAddress={daoAddress} />\n          </Col>\n        </Row>\n      </Col>\n      <Col xs={24} lg={18}>\n        <ProposalList daoAddress={daoAddress} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Proposal\n","import { ConsensusMechanism, ConsensusMechanisms } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\n\nimport { Button, Row, Col, Space, Typography, Popover } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nexport type ConsensusMechanismInputProps = {\n  value: ConsensusMechanism\n  onChange: (value: ConsensusMechanism) => void\n}\n\nconst ConsensusMechanismInput = ({\n  value = ConsensusMechanisms.StakedTokenCounter,\n  onChange = () => {},\n}: ConsensusMechanismInputProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space>\n          <Typography.Text>Consensus Mechanism</Typography.Text>\n          <Popover\n            overlayStyle={{ maxWidth: 300 }}\n            trigger=\"click\"\n            content={\n              <Row gutter={[16, 16]}>\n                <Col span={24}>\n                  <Typography.Title level={5}>\n                    What are Consensus Mechanisms?\n                  </Typography.Title>\n                </Col>\n                <Col span={24}>\n                  <Space direction=\"vertical\">\n                    <Typography.Text>\n                      <strong>Staked (Token) Counter.</strong> The power of a\n                      vote is only counted based on the number of staked tokens.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Locked (Token) Counter.</strong> The power of a\n                      vote is the product of the number of staked tokens and the\n                      lock time in seconds.\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            }\n          >\n            <Button\n              type=\"text\"\n              size=\"small\"\n              icon={<IonIcon name=\"information-circle-outline\" />}\n            />\n          </Popover>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space>\n          <Button\n            className={\n              isEqual(value, ConsensusMechanisms.StakedTokenCounter)\n                ? ''\n                : 'btn-unselect'\n            }\n            onClick={() => onChange(ConsensusMechanisms.StakedTokenCounter)}\n          >\n            Staked Counter\n          </Button>\n          <Button\n            className={\n              isEqual(value, ConsensusMechanisms.LockedTokenCounter)\n                ? ''\n                : 'btn-unselect'\n            }\n            onClick={() => onChange(ConsensusMechanisms.LockedTokenCounter)}\n          >\n            Locked Counter\n          </Button>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ConsensusMechanismInput\n","import { ConsensusQuorum, ConsensusQuorums } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\n\nimport { Button, Row, Col, Space, Typography } from 'antd'\n\nexport type ConsensusQuorumInputProps = {\n  value: ConsensusQuorum\n  onChange: (value: ConsensusQuorum) => void\n}\n\nconst ConsensusQuorumInput = ({\n  value = ConsensusQuorums.Half,\n  onChange = () => {},\n}: ConsensusQuorumInputProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Typography.Text>Consensus Quorum</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <Space>\n          <Button\n            className={\n              isEqual(value, ConsensusQuorums.OneThird) ? '' : 'btn-unselect'\n            }\n            onClick={() => onChange(ConsensusQuorums.OneThird)}\n          >\n            1/3\n          </Button>\n          <Button\n            className={\n              isEqual(value, ConsensusQuorums.Half) ? '' : 'btn-unselect'\n            }\n            onClick={() => onChange(ConsensusQuorums.Half)}\n          >\n            1/2\n          </Button>\n          <Button\n            className={\n              isEqual(value, ConsensusQuorums.TwoThird) ? '' : 'btn-unselect'\n            }\n            onClick={() => onChange(ConsensusQuorums.TwoThird)}\n          >\n            2/3\n          </Button>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ConsensusQuorumInput\n","import moment from 'moment'\n\nimport { Col, DatePicker, Row, Typography } from 'antd'\n\nexport type DurationInputType = {\n  value: Array<number>\n  onChange: (value: Array<number>) => void\n}\n\nconst DurationInput = ({ value, onChange }: DurationInputType) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Typography.Text>Proposal Duration</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[12, 12]}>\n          <Col span={12}>\n            <DatePicker\n              placeholder=\"Start Date\"\n              value={moment(value[0])}\n              onChange={(e) => onChange([e?.valueOf() || value[0], value[1]])}\n              showTime\n              style={{ width: '100%' }}\n            />\n          </Col>\n          <Col span={12}>\n            <DatePicker\n              placeholder=\"End Date\"\n              value={moment(value[1])}\n              onChange={(e) => onChange([value[0], e?.valueOf() || value[1]])}\n              showTime\n              style={{ width: '100%' }}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DurationInput\n","import { useSelector } from 'react-redux'\nimport { DaoData } from '@interdao/core'\nimport { SystemProgram } from '@solana/web3.js'\n\nimport { Col, Row, Space } from 'antd'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport StatisticCard from 'app/components/statisticCard'\nimport RegimeTag from 'app/components/regimeTag'\n\nimport { AppState } from 'app/model'\nimport { numeric, shortenAddress } from 'shared/util'\nimport useMembers from 'app/hooks/useMembers'\n\nexport type ProposalPreviewProps = {\n  daoAddress: string\n}\n\nconst ProposalPreview = ({ daoAddress }: ProposalPreviewProps) => {\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n\n  const { regime, mint } =\n    daoData[daoAddress] ||\n    ({\n      regime: {},\n      mint: SystemProgram.programId,\n    } as DaoData)\n  const members = useMembers(daoAddress)\n\n  return (\n    <Row gutter={[36, 36]}>\n      <Col span={5}>\n        <StatisticCard title=\"DAO Address\" value={shortenAddress(daoAddress)} />\n      </Col>\n      <Col span={5}>\n        <StatisticCard\n          title=\"Token\"\n          value={\n            <Space>\n              <MintAvatar mintAddress={mint.toBase58()} />\n              <MintSymbol mintAddress={mint.toBase58()} />\n            </Space>\n          }\n        />\n      </Col>\n      <Col span={5}>\n        <StatisticCard title=\"Members\" value={numeric(members).format('0,0')} />\n      </Col>\n      <Col span={5}>\n        <StatisticCard title=\"Regime\" value={<RegimeTag regime={regime} />} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProposalPreview\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport {\n  ConsensusMechanisms,\n  ConsensusQuorums,\n  FeeOptions,\n} from '@interdao/core'\nimport BN from 'bn.js'\nimport { CID } from 'ipfs-core'\n\nimport { Button, Card, Col, Divider, Input, Row, Space, Typography } from 'antd'\nimport ConsensusMechanismInput from './consensusMechanismInput'\nimport ConsensusQuorumInput from './consensusQuorumInput'\nimport DurationInput from './durationInput'\nimport ProposalPreview from './proposalPreview'\n\nimport configs from 'app/configs'\nimport { explorer } from 'shared/util'\nimport IPFS from 'shared/pdb/ipfs'\nimport { AppState } from 'app/model'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport type ProposalMetaData = {\n  title: string\n  description: string\n  imageBackground: string\n}\n\nconst CURRENT_TIME = Number(new Date())\nconst ONE_DAY = 24 * 60 * 60 * 1000\n\nconst ProposalInitialization = () => {\n  const [consensusMechanism, setConsensusMechanism] = useState(\n    ConsensusMechanisms.StakedTokenCounter,\n  )\n  const [consensusQuorum, setConsensusQuorum] = useState(ConsensusQuorums.Half)\n  const [duration, setDuration] = useState([\n    CURRENT_TIME + ONE_DAY,\n    CURRENT_TIME + 15 * ONE_DAY,\n  ])\n  const [loading, setLoading] = useState(false)\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const { daoAddress } = useParams<{ daoAddress: string }>()\n  const {\n    template: { tx, imageBackground },\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const history = useHistory()\n\n  const metaData: ProposalMetaData = useMemo(() => {\n    return {\n      title,\n      description,\n      imageBackground,\n    }\n  }, [description, imageBackground, title])\n\n  const newProposal = useCallback(async () => {\n    const { authority } = daoData[daoAddress]\n    try {\n      setLoading(true)\n\n      const ipfs = new IPFS()\n      const cid = await ipfs.set(metaData)\n      const {\n        multihash: { digest },\n      } = CID.parse(cid)\n\n      const {\n        sol: { interDao, taxman },\n      } = configs\n\n      const feeOption: Partial<FeeOptions> = {\n        revenue: new BN(50000),\n        revenuemanAddress: authority.toBase58(),\n        tax: new BN(50000),\n        taxmanAddress: taxman,\n      }\n\n      if (!tx) return\n\n      const {\n        programId,\n        data,\n        accounts: { src, dst, payer },\n      } = tx\n\n      const metadata = Buffer.from(digest)\n      const accounts = [src, dst, payer]\n      const { txId, proposalAddress } = await interDao.initializeProposal(\n        daoAddress,\n        programId.toBase58(),\n        data,\n        accounts.map(({ pubkey }) => pubkey),\n        accounts.map(({ isSigner }) => isSigner),\n        accounts.map(({ isWritable }) => isWritable),\n        accounts.map(({ isMaster }) => isMaster),\n        Math.floor(duration[0] / 1000),\n        Math.floor(duration[1] / 1000),\n        metadata,\n        consensusMechanism,\n        consensusQuorum,\n        feeOption,\n      )\n      window.notify({\n        type: 'success',\n        description:\n          'Create a new proposal successfully. Click here to view details.',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n      return history.push(\n        `/app/${appId}/dao/${daoAddress}/proposal/${proposalAddress}`,\n      )\n    } catch (er: any) {\n      return window.notify({\n        type: 'error',\n        description: er.message,\n      })\n    } finally {\n      return setLoading(false)\n    }\n  }, [\n    daoData,\n    daoAddress,\n    metaData,\n    tx,\n    duration,\n    consensusMechanism,\n    consensusQuorum,\n    history,\n  ])\n\n  useEffect(() => {\n    if (!tx) return history.push(`/app/${appId}/dao/${daoAddress}`)\n  }, [daoAddress, history, tx])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col xs={24} md={14}>\n        <Card bordered={false}>\n          <Row gutter={[24, 24]}>\n            <Col span={24}>\n              <Typography.Title level={1}>\n                Input proposal information\n              </Typography.Title>\n            </Col>\n            <Col span={24} />\n            <Col span={24}>\n              <ProposalPreview daoAddress={daoAddress} />\n            </Col>\n            <Col span={24}>\n              <Divider style={{ margin: 0, borderTop: 'solid 1px #F9DEB0' }} />\n            </Col>\n            <Col span={24}>\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <Typography.Text>Title</Typography.Text>\n                <Input\n                  value={title}\n                  placeholder=\"A short summary of your proposal.\"\n                  className=\"border-less\"\n                  onChange={(e) => setTitle(e.target.value)}\n                />\n              </Space>\n            </Col>\n            <Col span={24}>\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <Typography.Text>Description</Typography.Text>\n                <Input.TextArea\n                  placeholder=\"More detail about your proposal...\"\n                  name=\"description\"\n                  className=\"border-less\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </Space>\n            </Col>\n            <Col span={24}>\n              <DurationInput value={duration} onChange={setDuration} />\n            </Col>\n            <Col span={24}>\n              <ConsensusMechanismInput\n                value={consensusMechanism}\n                onChange={setConsensusMechanism}\n              />\n            </Col>\n            <Col span={24}>\n              <ConsensusQuorumInput\n                value={consensusQuorum}\n                onChange={setConsensusQuorum}\n              />\n            </Col>\n\n            <Col span={24} />\n            <Col flex=\"auto\">\n              <Button\n                type=\"text\"\n                onClick={() => history.push(`/app/${appId}/dao/${daoAddress}`)}\n                size=\"large\"\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col>\n              <Button\n                onClick={newProposal}\n                loading={loading}\n                type=\"primary\"\n                size=\"large\"\n              >\n                Add a new Proposal\n              </Button>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProposalInitialization\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\nimport {\n  DaoData,\n  DAO_DISCRIMINATOR,\n  DaoRegime,\n  DaoRegimes,\n} from '@interdao/core'\nimport { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { web3 } from '@project-serum/anchor'\nimport BN from 'bn.js'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport const DEFAULT_CREATE_DAO_DATA = {\n  mintAddress: '',\n  supply: new BN(0),\n  metadata: undefined,\n  dao: undefined,\n  regime: DaoRegimes.Dictatorial,\n}\n\nexport type DaoType = 'flexible-dao' | 'multisig-dao'\n\nexport type CreateDaoData = {\n  mintAddress: string\n  supply: BN\n  metadata?: Buffer\n  dao?: web3.Keypair\n  regime: DaoRegime\n}\n\nexport type DaoDataState = Record<string, DaoData>\nexport type DaoState = {\n  daoData: DaoDataState\n  createDaoData: CreateDaoData\n  daoType: DaoType\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'dao'\nconst initialState: DaoState = {\n  daoData: {},\n  createDaoData: DEFAULT_CREATE_DAO_DATA,\n  daoType: 'flexible-dao',\n}\n\n/**\n * Actions\n */\n\nexport const getDaos = createAsyncThunk(`${NAME}/getDaos`, async () => {\n  const {\n    provider: { connection },\n    programId,\n    account: { dao },\n  } = interDao.program\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await connection.getProgramAccounts(programId, {\n      filters: [\n        { dataSize: dao.size },\n        {\n          memcmp: {\n            offset: 0,\n            bytes: DAO_DISCRIMINATOR,\n          },\n        },\n      ],\n    })\n  let bulk: DaoDataState = {}\n  value.forEach(({ pubkey, account: { data: buf } }) => {\n    const address = pubkey.toBase58()\n    const data = interDao.parseDaoData(buf)\n    bulk[address] = { ...data }\n  })\n  return { daoData: bulk }\n})\n\nexport const getDao = createAsyncThunk<\n  Partial<DaoState>,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getDao`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    dao: {\n      daoData: { [address]: data },\n    },\n  } = getState()\n  if (data && !force) return { [address]: data }\n  const raw = await interDao.getDaoData(address)\n  return {\n    daoData: {\n      [address]: {\n        ...raw,\n      },\n    },\n  }\n})\n\nexport const upsetDao = createAsyncThunk<\n  Partial<DaoState>,\n  { address: string; data: DaoData },\n  { state: any }\n>(`${NAME}/upsetDao`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return {\n    daoData: {\n      [address]: { ...data },\n    },\n  }\n})\n\nexport const setCreateDaoData = createAsyncThunk(\n  `${NAME}/setCreateDaoData`,\n  async (createDaoData?: CreateDaoData) => {\n    if (!createDaoData) return { createDaoData: DEFAULT_CREATE_DAO_DATA }\n    return { createDaoData }\n  },\n)\nexport const setCreateDaoType = createAsyncThunk(\n  `${NAME}/setCreateDaoType`,\n  async (type: string) => {\n    return { daoType: type }\n  },\n)\n\nexport const deleteDao = createAsyncThunk(\n  `${NAME}/deleteDao`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getDaos.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getDao.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetDao.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setCreateDaoData.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setCreateDaoType.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteDao.fulfilled,\n        (state, { payload }) => void Object.assign(state.daoData, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { Card, Col, Radio, Row, Typography } from 'antd'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setCreateDaoType } from 'app/model/dao.controller'\n\nconst DAO_TYPE = [\n  {\n    key: 'flexible-dao',\n    label: 'Flexible DAO',\n    description:\n      'The Normal DAO has 3 regimes that allow you to create a DAO customized for your individual requirements, community structure, and governance token setup.',\n    state: 1,\n  },\n  {\n    key: 'multisig-dao',\n    label: 'MultiSig DAO',\n    description:\n      'The Normal DAO has 3 regimes that allow you to create a DAO customized for your individual requirements, community structure, and governance token setup.',\n    state: 0,\n  },\n]\n\nconst ChooseDaoType = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const {\n    dao: { daoType },\n  } = useSelector((state: AppState) => state)\n\n  const cardBorder = (key: string) =>\n    daoType !== key ? { borderColor: 'transparent' } : {}\n\n  return (\n    <Row>\n      <Col span={24}>\n        <Radio.Group\n          defaultValue={daoType}\n          onChange={(e) => dispatch(setCreateDaoType(e.target.value))}\n          className=\"btn-radio-card\"\n        >\n          <Row gutter={[24, 24]}>\n            {DAO_TYPE.map(({ key, label, description, state }) => (\n              <Col xs={24} md={12} key={key}>\n                <Radio.Button\n                  value={key}\n                  style={{ border: 'none' }}\n                  disabled={!state}\n                >\n                  <Card\n                    style={{ ...cardBorder(key) }}\n                    className={`group-btn-card ${key}`}\n                  >\n                    {daoType === key}\n                    <Row gutter={[12, 12]}>\n                      <Col span={24}>\n                        <Row>\n                          <Col flex=\"auto\">\n                            <Typography.Title level={4}>\n                              {label}\n                            </Typography.Title>\n                          </Col>\n                          {!state && (\n                            <Col>\n                              <Typography.Text style={{ fontSize: 12 }}>\n                                Coming soon\n                              </Typography.Text>\n                            </Col>\n                          )}\n                        </Row>\n                      </Col>\n                      <Col span={24}>\n                        <Typography.Text type=\"secondary\">\n                          {description}\n                        </Typography.Text>\n                      </Col>\n                    </Row>\n                  </Card>\n                </Radio.Button>\n              </Col>\n            ))}\n          </Row>\n        </Radio.Group>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ChooseDaoType\n","import { useSelector } from 'react-redux'\nimport { useUI } from '@senhub/providers'\n\nimport { Col, Image, Row, Space, Typography } from 'antd'\nimport CardRegmie from './daoRule/cardRegmie'\n\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport { AppState } from 'app/model'\n\nconst MAX_WIDTH_RATIO = 24 / 16\nconst PAGE_SPACING = 24\nconst HEIGHT_RATIO = 1.777777\n\nconst ConfirmCreate = () => {\n  const {\n    dao: { createDaoData },\n    metadata: { createMetaData },\n  } = useSelector((state: AppState) => state)\n  const {\n    ui: { width },\n  } = useUI()\n\n  const { regime, mintAddress, supply } = createDaoData\n  const { daoName, description, image } = createMetaData\n  const isMobile = width < 768\n  const desktopWidth = width > 992 ? width / MAX_WIDTH_RATIO : width\n  const logoSize = isMobile\n    ? '100%'\n    : (desktopWidth - 6 - PAGE_SPACING * 4) / HEIGHT_RATIO / 2 + 3\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col xs={24} md={12}>\n        <Space direction=\"vertical\" size={24} style={{ width: '100%' }}>\n          <Space direction=\"vertical\">\n            <Typography.Text type=\"secondary\">Name of DAO</Typography.Text>\n            <Typography.Title level={1}>{daoName}</Typography.Title>\n          </Space>\n          <Space direction=\"vertical\" style={{ width: '100%' }}>\n            <Typography.Text>DAO Regmie</Typography.Text>\n            <CardRegmie regmie={regime} />\n          </Space>\n        </Space>\n      </Col>\n      <Col xs={24} md={12}>\n        <Space direction=\"vertical\" size={24}>\n          <Space direction=\"vertical\">\n            <Typography.Text type=\"secondary\">Token to vote</Typography.Text>\n            <Space>\n              <MintAvatar mintAddress={mintAddress} size={48} />\n              <Typography.Title level={1}>\n                <MintSymbol mintAddress={mintAddress} />\n              </Typography.Title>\n            </Space>\n          </Space>\n          <Space direction=\"vertical\" className=\"dao-logo-img\">\n            <Typography.Text>DAO Logo</Typography.Text>\n            <Image\n              style={{ width: logoSize, height: logoSize }}\n              src={image?.toString()}\n              preview={false}\n            />\n          </Space>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Text type=\"secondary\">Total power</Typography.Text>\n          <Typography.Title level={1}>{supply?.toNumber()}</Typography.Title>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Text type=\"secondary\">Description</Typography.Text>\n          <Typography.Text>{description}</Typography.Text>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ConfirmCreate\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\nimport BN from 'bn.js'\n\n/**\n * Get token's total supply. This hook needs MintProvider for working.\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * @param mintAddress Mint address\n * @returns Decimals\n */\nconst useMintSupply = (mintAddress: string) => {\n  const [supply, setSupply] = useState<BN | undefined>(undefined)\n  const { getMint } = useMint()\n\n  const fetchSupply = useCallback(async () => {\n    try {\n      const {\n        [mintAddress]: { supply },\n      } = await getMint({ address: mintAddress })\n      return setSupply(new BN(supply.toString()))\n    } catch (er: any) {\n      return setSupply(undefined)\n    }\n  }, [mintAddress, getMint])\n\n  useEffect(() => {\n    fetchSupply()\n  }, [fetchSupply])\n\n  return supply\n}\n\nexport default useMintSupply\n","import BN from 'bn.js'\n\nimport { Button, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport NumericInput from 'shared/antd/numericInput'\n\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport useMintSupply from 'shared/hooks/useMintSupply'\nimport { numeric } from 'shared/util'\n\nexport type CirculatingSupplyInputProps = {\n  mintAddress?: string\n  value: string\n  onChange: (value: string) => void\n}\n\nconst CirculatingSupplyInput = ({\n  mintAddress = '',\n  value,\n  onChange,\n}: CirculatingSupplyInputProps) => {\n  const decimals = useMintDecimals(mintAddress) || 0\n  const supply = useMintSupply(mintAddress)\n  const suggestion = String(supply?.div(new BN(10 ** decimals)) || new BN(0))\n\n  return (\n    <Row gutter={[8, 8]} justify=\"end\">\n      <Col span={24}>\n        <Typography.Text>Total DAO Power</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <NumericInput\n          value={value}\n          onValue={onChange}\n          className=\"border-less\"\n          size=\"large\"\n          placeholder=\"Input Total DAO Power\"\n          suffix={\n            <Button\n              type=\"text\"\n              onClick={() => onChange(suggestion)}\n              icon={<IonIcon name=\"copy-outline\" />}\n              style={{ marginRight: -7 }}\n            >\n              By Suggestion\n            </Button>\n          }\n        />\n      </Col>\n      <Col>\n        <Space>\n          <Typography.Text type=\"secondary\">\n            Suggestion (Token Supply):\n          </Typography.Text>\n          <Typography.Text>{numeric(suggestion).format('0,0')}</Typography.Text>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CirculatingSupplyInput\n","import { Col, Input, Row, Typography } from 'antd'\nimport { MintSelection } from 'shared/antd/mint'\n\nexport type TokenAddressInputProps = {\n  value: string\n  onChange: (value: string) => void\n}\n\nconst TokenAddressInput = ({ value, onChange }: TokenAddressInputProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Typography.Text>Token to Vote</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <Input\n          size=\"large\"\n          placeholder=\"Input Token Address\"\n          value={value}\n          className=\"border-less\"\n          onChange={(e) => onChange(e.target.value || '')}\n          suffix={\n            <MintSelection\n              value={value}\n              onChange={onChange}\n              style={{ marginRight: -7 }}\n            />\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default TokenAddressInput\n","import { useDispatch, useSelector } from 'react-redux'\nimport BN from 'bn.js'\n\nimport { Col, Row } from 'antd'\nimport RegimeInput from './regimeInput'\nimport CirculatingSupplyInput from './circulatingSupplyInput'\nimport TokenAddressInput from './tokenAddressInput'\nimport { AppDispatch, AppState } from 'app/model'\nimport { setCreateDaoData } from 'app/model/dao.controller'\n\nimport './index.less'\n\nconst DaoRule = () => {\n  const {\n    dao: { createDaoData },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { mintAddress, supply, regime } = createDaoData\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <RegimeInput\n          value={regime}\n          onChange={(regime) =>\n            dispatch(setCreateDaoData({ ...createDaoData, regime }))\n          }\n        />\n      </Col>\n      <Col span={24}>\n        <TokenAddressInput\n          value={mintAddress}\n          onChange={(mintAddress) =>\n            dispatch(setCreateDaoData({ ...createDaoData, mintAddress }))\n          }\n        />\n      </Col>\n      <Col span={24}>\n        <CirculatingSupplyInput\n          mintAddress={mintAddress}\n          value={supply?.toString()}\n          onChange={(supply) =>\n            dispatch(\n              setCreateDaoData({ ...createDaoData, supply: new BN(supply) }),\n            )\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoRule\n","import React, { ChangeEvent } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Card, Col, Image, Input, Row, Space, Typography, Upload } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { UploadChangeParam } from 'antd/lib/upload'\nimport { fileToBase64 } from 'app/helpers'\nimport {\n  MetaData,\n  setCreateDaoMetaData,\n  SOCIAL_MEDIA,\n} from 'app/model/metadata.controller'\nimport { AppDispatch, AppState } from 'app/model'\n\nconst MetaDataForm = () => {\n  const {\n    metadata: { createMetaData },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const formatMetaData = async (imgBase64: string | ArrayBuffer | null) => {\n    const nextMetaData: MetaData = {\n      ...createMetaData,\n      image: imgBase64,\n    }\n    return dispatch(setCreateDaoMetaData(nextMetaData))\n  }\n\n  const onFileChange = (file: UploadChangeParam) => {\n    const { fileList } = file\n    const originFile = fileList[0].originFileObj as File\n    fileToBase64(originFile, formatMetaData)\n  }\n\n  const onChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) =>\n    dispatch(\n      setCreateDaoMetaData({\n        ...createMetaData,\n        [e.target.name]: e.target.value,\n      }),\n    )\n  const onOptionalChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    idx: number,\n  ) => {\n    const nextMetaData: MetaData = JSON.parse(JSON.stringify(createMetaData))\n    nextMetaData.optionals.splice(idx, 1, e.target.value)\n    dispatch(setCreateDaoMetaData(nextMetaData))\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          <Typography.Text>Dao name</Typography.Text>\n          <Input\n            value={createMetaData.daoName}\n            onChange={onChange}\n            name=\"daoName\"\n            className=\"border-less\"\n          />\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          <Typography.Text>Dao description</Typography.Text>\n          <Input.TextArea\n            value={createMetaData.description}\n            name=\"description\"\n            onChange={onChange}\n            className=\"border-less\"\n          />\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Text>Avatar</Typography.Text>\n          <Upload\n            className={`interdao-upload-metadata ${\n              !!createMetaData.image ? 'uploaded' : ''\n            }`}\n            accept=\"image/png,image/jpg\"\n            name=\"avatar\"\n            listType=\"picture-card\"\n            maxCount={1}\n            onChange={onFileChange}\n            itemRender={(eml, uploadFile, uploadFiles, { remove }) => {\n              return (\n                <Card\n                  className=\"img-card-preview-upload\"\n                  bodyStyle={{ padding: 0, position: 'relative' }}\n                >\n                  <Image src={uploadFile.thumbUrl} preview={false} />\n                  <IonIcon\n                    className=\"ico-action-upload\"\n                    name=\"trash-outline\"\n                    onClick={remove}\n                  />\n                </Card>\n              )\n            }}\n            onRemove={() => {\n              dispatch(setCreateDaoMetaData({ ...createMetaData, image: '' }))\n              return true\n            }}\n          >\n            <Space direction=\"vertical\" size={0}>\n              <Typography.Text style={{ fontSize: 24 }}>\n                <IonIcon name=\"cloud-upload-outline\" />\n              </Typography.Text>\n              <Typography.Text type=\"secondary\" style={{ fontSize: 10 }}>\n                Support JPG, PNG\n              </Typography.Text>\n            </Space>\n          </Upload>\n        </Space>\n      </Col>\n      {SOCIAL_MEDIA.map((social, idx) => (\n        <Col span={24} key={idx}>\n          <Space direction=\"vertical\" style={{ width: '100%' }}>\n            <Typography.Text style={{ textTransform: 'capitalize' }}>\n              {social}\n            </Typography.Text>\n            <Input\n              value={createMetaData.optionals[idx]}\n              onChange={(e) => onOptionalChange(e, idx)}\n              name=\"optionals\"\n              className=\"border-less\"\n            />\n          </Space>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default MetaDataForm\n","import ChooseDaoType from './chooseDaoType'\nimport ConfirmCreate from './confirmCreate'\nimport DaoRule from './daoRule'\nimport MetaDataForm from './metaDataForm'\n\nexport enum CreateSteps {\n  stepOne = 1,\n  stepTwo = 2,\n  stepThree = 3,\n}\n\nconst CreateDaoSteps = ({ step }: { step: number }) => {\n  if (step === CreateSteps.stepOne) return <MetaDataForm />\n  if (step === CreateSteps.stepTwo) return <DaoRule />\n  if (step === CreateSteps.stepThree) return <ConfirmCreate />\n  return <ChooseDaoType />\n}\n\nexport default CreateDaoSteps\n","import { Progress, Space, Typography } from 'antd'\n\nexport type CreateDaoTitleProps = {\n  step: number\n  onHandleStep?: () => void\n  onConfirm?: () => void\n}\n\nconst DEFAULT_PERCENT = 25\nconst DAO_PROGRESS_TITILE = [\n  'Choose type of DAO',\n  'Input DAO infomation',\n  'Set the rule',\n  'Review',\n]\n\nconst CreateDaoProgress = ({ step }: CreateDaoTitleProps) => {\n  return (\n    <Space direction=\"vertical\" size={12}>\n      <Typography.Title level={1}>{DAO_PROGRESS_TITILE[step]}</Typography.Title>\n      <Progress\n        className=\"create-progress\"\n        percent={step * DEFAULT_PERCENT + DEFAULT_PERCENT}\n        steps={4}\n        showInfo={false}\n      />\n    </Space>\n  )\n}\n\nexport default CreateDaoProgress\n","import { useHistory } from 'react-router-dom'\n\nimport { Button } from 'antd'\nimport { CreateDaoTitleProps } from '../createDaoProgress'\n\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst BackAction = ({ step, onHandleStep = () => {} }: CreateDaoTitleProps) => {\n  const history = useHistory()\n\n  if (step > 0)\n    return (\n      <Button type=\"text\" onClick={onHandleStep} size=\"large\">\n        Back\n      </Button>\n    )\n  return (\n    <Button\n      type=\"text\"\n      onClick={() => history.push(`/app/${appId}/dao`)}\n      size=\"large\"\n    >\n      Cancel\n    </Button>\n  )\n}\n\nexport default BackAction\n","import { Button } from 'antd'\nimport { CreateDaoTitleProps } from '../createDaoProgress'\nimport { CreateSteps } from '../createDaoSteps'\n\nconst ContinuesAction = ({\n  step,\n  onHandleStep,\n  onConfirm,\n}: CreateDaoTitleProps) => {\n  if (step === CreateSteps.stepThree)\n    return (\n      <Button onClick={onConfirm} type=\"primary\" size=\"large\">\n        Confirm\n      </Button>\n    )\n  return (\n    <Button onClick={onHandleStep} type=\"primary\" size=\"large\">\n      Continues\n    </Button>\n  )\n}\n\nexport default ContinuesAction\n","import { useCallback, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport IPFS from 'shared/pdb/ipfs'\nimport { CID } from 'ipfs-core'\nimport { BN } from 'bn.js'\n\nimport { Row, Col, Card } from 'antd'\nimport CreateDaoSteps, { CreateSteps } from './createDaoSteps'\nimport CreateDaoProgress from './createDaoProgress'\nimport BackAction from './actions/backAction'\nimport ContinuesAction from './actions/continuesAction'\n\nimport { AppState } from 'app/model'\nimport { explorer } from 'shared/util'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\n\nimport configs from 'app/configs'\nimport './index.less'\n\nconst {\n  sol: { interDao },\n  manifest: { appId },\n} = configs\n\nconst DaoInitialization = () => {\n  const [step, setStep] = useState(0)\n  const {\n    dao: { createDaoData },\n    metadata: { createMetaData },\n  } = useSelector((state: AppState) => state)\n  const history = useHistory()\n\n  const { mintAddress, supply, regime } = createDaoData\n  const decimals = useMintDecimals(mintAddress) || 0\n\n  const onNextStep = useCallback(async () => {\n    try {\n      if (step === CreateSteps.stepOne && !createMetaData)\n        throw new Error('Invalid Metadata')\n      if (step === CreateSteps.stepTwo && !createDaoData)\n        throw new Error('Invalid DAO data')\n      return setStep(step + 1)\n    } catch (err: any) {\n      window.notify({ type: 'error', description: err.message })\n    }\n  }, [createDaoData, createMetaData, step])\n\n  const onCreateDao = useCallback(async () => {\n    try {\n      const ipfs = new IPFS()\n      const cid = await ipfs.set(createMetaData)\n      const {\n        multihash: { digest },\n      } = CID.parse(cid)\n      const metadata = Buffer.from(digest)\n\n      const totalSupply = supply.mul(new BN(10).pow(new BN(decimals)))\n\n      const { txId, daoAddress } = await interDao.initializeDao(\n        mintAddress,\n        totalSupply,\n        metadata,\n        undefined, // Optional DAO's keypair\n        regime,\n      )\n      window.notify({\n        type: 'success',\n        description: 'A new DAO is created. Click here to view details.',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n      return history.push(`/app/${appId}/dao/${daoAddress}`)\n    } catch (err: any) {\n      window.notify({ type: 'error', description: err.message })\n    }\n  }, [createMetaData, decimals, history, mintAddress, regime, supply])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col xs={24} lg={16}>\n        <Card bordered={false}>\n          <Row gutter={[24, 32]}>\n            <Col span={24}>\n              <CreateDaoProgress step={step} />\n            </Col>\n            <Col span={24}>\n              <CreateDaoSteps step={step} />\n            </Col>\n            <Col span={24} />\n            <Col flex=\"auto\">\n              <BackAction step={step} onHandleStep={() => setStep(step - 1)} />\n            </Col>\n            <Col>\n              <ContinuesAction\n                step={step}\n                onHandleStep={onNextStep}\n                onConfirm={onCreateDao}\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoInitialization\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { ProposalData } from '@interdao/core'\nimport { getProposal, getProposals } from 'app/model/proposal.controller'\n\nconst useProposal = (proposalAddress: string, daoAddress: string) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { proposal } = useSelector((state: AppState) => state)\n\n  const data = useMemo(\n    () => proposal[proposalAddress] || ({} as ProposalData),\n    [proposal, proposalAddress],\n  )\n  const isExistProposal = useMemo(() => {\n    return !!Object.keys(proposal).length\n  }, [proposal])\n\n  useEffect(() => {\n    if (isExistProposal && account.isAddress(proposalAddress)) {\n      dispatch(getProposal({ address: proposalAddress }))\n    } else {\n      dispatch(getProposals({ daoAddress }))\n    }\n  }, [daoAddress, dispatch, isExistProposal, proposalAddress])\n\n  return { ...data }\n}\n\nexport default useProposal\n","import { useCallback, useMemo, useState } from 'react'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ProposalStatus from 'app/components/proposalStatus'\n\nimport { ProposalChildCardProps } from './index'\nimport useProposal from 'app/hooks/useProposal'\nimport configs from 'app/configs'\nimport { explorer, shortenAddress } from 'shared/util'\nimport useProposalStatus from 'app/hooks/useProposalStatus'\nimport useProposalMetaData from 'app/hooks/useProposalMetaData'\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst CardStatus = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const [loading, setLoading] = useState(false)\n\n  const { accountsLen } = useProposal(proposalAddress, daoAddress)\n  const { status } = useProposalStatus(proposalAddress)\n  const metaData = useProposalMetaData(proposalAddress)\n\n  const disabled = useMemo(() => {\n    if (status === 'Succeeded') return false\n    return true\n  }, [status])\n\n  const execute = useCallback(async () => {\n    setLoading(true)\n    try {\n      const { txId } = await interDao.executeProposal(proposalAddress)\n      return window.notify({\n        type: 'success',\n        description: 'Execute successfully',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (error: any) {\n      return window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setLoading(false)\n    }\n  }, [proposalAddress])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col flex=\"auto\">\n          <Space direction=\"vertical\">\n            <Row gutter={[8, 8]} align=\"middle\">\n              <Col>\n                <Typography.Title level={3}>\n                  {metaData?.title\n                    ? metaData.title\n                    : shortenAddress(proposalAddress)}\n                </Typography.Title>\n              </Col>\n              <Col>\n                <ProposalStatus status={status} />\n              </Col>\n            </Row>\n            <Space>\n              <IonIcon name=\"people-outline\" />\n              <Typography.Text>Member: {accountsLen}</Typography.Text>\n            </Space>\n          </Space>\n        </Col>\n        <Col>\n          <Button\n            size=\"large\"\n            type=\"primary\"\n            onClick={execute}\n            loading={loading}\n            disabled={disabled}\n          >\n            Execute\n          </Button>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph\n            type=\"secondary\"\n            ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n          >\n            {metaData?.description}\n          </Typography.Paragraph>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CardStatus\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type VoteBidState = {\n  amount: string\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'voteBid'\nconst initialState: VoteBidState = {\n  amount: '',\n}\n\n/**\n * Actions\n */\n\nexport const setVoteBidAmount = createAsyncThunk(\n  `${NAME}/setVoteBidAmount`,\n  async (amount: string) => {\n    if (!amount) return { amount: '' }\n    return { amount }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      setVoteBidAmount.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { useEffect, useState } from 'react'\nimport { account, DEFAULT_EMPTY_ADDRESS, utils } from '@senswap/sen-js'\nimport { useAccount, useWallet } from '@senhub/providers'\n\nimport useMintDecimals from './useMintDecimals'\n\nexport type AccountBalanceReturn = {\n  amount: bigint\n  decimals: number\n  balance: number\n  mintAddress: string\n}\n\nconst buildResult = (\n  mintAddress?: string,\n  amount?: bigint,\n  decimals?: number,\n) => {\n  if (\n    !account.isAddress(mintAddress) ||\n    amount === undefined ||\n    decimals === undefined\n  )\n    return { amount: BigInt(0), decimals: 0, balance: 0 }\n  return {\n    mintAddress,\n    amount,\n    decimals,\n    balance: Number(utils.undecimalize(amount, decimals)),\n  }\n}\n\n/**\n * Get account balance. This hook needs WalletProvider, MintProvider, and AccountProvider for working.\n * WalletProvider Ref: https://docs.sentre.io/senhub/development/providers/wallet-provider\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * AccountProvider Ref: https://docs.sentre.io/senhub/development/providers/account-provider\n * @param accountAddress Associated account address\n * @returns AccountBalanceReturn\n * - AccountBalanceReturn.amount: The amount with decimals\n * - AccountBalanceReturn.decimals: The corresponding mint decimals\n * - AccountBalanceReturn.balance: The human-readable balance (undecimalized amount)\n * - AccountBalanceReturn.mintAddress: The corresponding mint\n */\nconst useAccountBalance = (accountAddress: string) => {\n  const {\n    wallet: { address: walletAddress, lamports },\n  } = useWallet()\n  const { accounts } = useAccount()\n  const { amount, mint: mintAddress } = accounts[accountAddress] || {}\n  const decimals = useMintDecimals(mintAddress) || 0\n\n  if (!account.isAddress(walletAddress) || !account.isAddress(accountAddress))\n    return buildResult()\n  if (accountAddress === walletAddress)\n    return buildResult(DEFAULT_EMPTY_ADDRESS, lamports, 9)\n\n  return buildResult(mintAddress, amount, decimals)\n}\n\nexport default useAccountBalance\n\n/**\n * The same as useAccountBalance but the input is mint address\n * @param mintAddress Mint address\n * @returns AccountBalanceReturn\n */\nexport const useAccountBalanceByMintAddress = (mintAddress: string) => {\n  const [accountAddress, setAccountAddress] = useState('')\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const data = useAccountBalance(accountAddress)\n\n  useEffect(() => {\n    ;(async () => {\n      if (!account.isAddress(walletAddress) || !account.isAddress(mintAddress))\n        return setAccountAddress('')\n      const {\n        sentre: { splt },\n      } = window\n      try {\n        const address = await splt.deriveAssociatedAddress(\n          walletAddress,\n          mintAddress,\n        )\n        return setAccountAddress(address)\n      } catch (er) {\n        return setAccountAddress('')\n      }\n    })()\n  })\n\n  return data\n}\n","import dayjs from 'dayjs'\n\nexport function getRemainingTime(timestampMs: number, finishTime?: number) {\n  const timestampDayjs = dayjs(timestampMs)\n  const nowDayjs = finishTime ? finishTime : dayjs()\n\n  // times of the past\n  if (timestampDayjs.isBefore(nowDayjs)) {\n    return {\n      minutes: '00',\n      hours: '00',\n      days: '00',\n      seconds: '00',\n    }\n  }\n\n  return {\n    minutes: getRemainingMinutes(nowDayjs, timestampDayjs),\n    hours: getRemainingHours(nowDayjs, timestampDayjs),\n    days: getRemainingDays(nowDayjs, timestampDayjs),\n    seconds: getRemainingSeconds(nowDayjs, timestampDayjs),\n  }\n}\n\n/** Get the difference function */\nfunction getRemainingSeconds(nowDayjs: any, timestampDayjs: any) {\n  const seconds = (timestampDayjs.diff(nowDayjs, 'seconds') % 60) % 60\n  return startWithZeros(seconds, 2)\n}\n\nfunction getRemainingMinutes(nowDayjs: any, timestampDayjs: any) {\n  const minutes = timestampDayjs.diff(nowDayjs, 'minutes') % 60\n  return startWithZeros(minutes, 2)\n}\n\nfunction getRemainingHours(nowDayjs: any, timestampDayjs: any) {\n  const hours = timestampDayjs.diff(nowDayjs, 'hours') % 24\n  return startWithZeros(hours, 2)\n}\n\nfunction getRemainingDays(nowDayjs: any, timestampDayjs: any) {\n  const days = timestampDayjs.diff(nowDayjs, 'days')\n  return days.toString()\n}\n\nfunction startWithZeros(number: number, minLength: number) {\n  const numberString = number.toString()\n  if (numberString.length >= minLength) return numberString\n  return '0'.repeat(minLength - numberString.length) + numberString\n}\n","import { Fragment, useCallback, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account, utils } from '@senswap/sen-js'\nimport { DaoData, FeeOptions } from '@interdao/core'\nimport { BN } from 'bn.js'\n\nimport { Button, Card, Col, Row, Typography, Space, Tooltip } from 'antd'\nimport NumericInput from 'shared/antd/numericInput'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport useProposal from 'app/hooks/useProposal'\nimport { AppState } from 'app/model'\nimport { setVoteBidAmount } from 'app/model/voteBid.controller'\nimport { ProposalChildCardProps } from './index'\nimport { explorer, numeric } from 'shared/util'\nimport configs from 'app/configs'\nimport { useAccountBalanceByMintAddress } from 'shared/hooks/useAccountBalance'\nimport { MintSymbol } from 'shared/antd/mint'\nimport useProposalStatus from 'app/hooks/useProposalStatus'\nimport { getRemainingTime } from 'app/helpers/countDown'\n\nconst {\n  sol: { interDao, taxman },\n} = configs\n\nconst defaultRemainingTime = {\n  minutes: '00',\n  hours: '00',\n  days: '00',\n  seconds: '00',\n}\n\ntype LockedVotingProps = {\n  proposalAddress: string\n  daoAddress: string\n}\nconst LockedVoting = ({ proposalAddress, daoAddress }: LockedVotingProps) => {\n  const [remainingTime, setRemainingTime] = useState(defaultRemainingTime)\n  const { status } = useProposalStatus(proposalAddress)\n  const {\n    voteBid: { amount: voteAmount },\n  } = useSelector((state: AppState) => state)\n  const { consensusMechanism, endDate, startDate } = useProposal(\n    proposalAddress,\n    daoAddress,\n  )\n\n  const voteNow = new Date().getTime()\n  const endTime = Number(endDate) * 1000\n  const startTime = Number(startDate) * 1000\n\n  const isLockedVote =\n    Object.keys(consensusMechanism || [])?.[0] === 'lockedTokenCounter'\n  const remaining = voteNow < endTime ? endTime - voteNow : 0\n  const votePower = (Number(voteAmount) * remaining) / 1000\n\n  const updateRemainingTime = useCallback(\n    (countdown: number, startTime?: number) => {\n      setRemainingTime(getRemainingTime(countdown, startTime))\n    },\n    [],\n  )\n\n  useEffect(() => {\n    if (status === 'Preparing') return updateRemainingTime(endTime, startTime)\n    const intervalId = setInterval(() => {\n      updateRemainingTime(endTime)\n    }, 1000)\n    return () => clearInterval(intervalId)\n  }, [endTime, startTime, status, updateRemainingTime])\n\n  if (!isLockedVote) return <Fragment />\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col flex=\"auto\">\n        <Space direction=\"vertical\">\n          <Typography.Text>Time remaining</Typography.Text>\n          <Typography.Title level={5}>\n            {remainingTime.days}days : {remainingTime.hours}h :{' '}\n            {remainingTime.minutes}m : {remainingTime.seconds}s\n          </Typography.Title>\n        </Space>\n      </Col>\n      <Col>\n        <Space direction=\"vertical\">\n          <Space>\n            <Tooltip title=\"Your power will be equal to the token amount multiplied by the remaining time (by seconds)\">\n              <IonIcon\n                style={{ cursor: 'pointer' }}\n                name=\"information-circle-outline\"\n              />\n            </Tooltip>\n            <Typography.Text>Power of your vote</Typography.Text>\n          </Space>\n\n          <Typography.Title level={5} style={{ textAlign: 'right' }}>\n            {numeric(votePower).format('0,0.[0000]')}\n          </Typography.Title>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nconst CardVote = ({ proposalAddress, daoAddress }: ProposalChildCardProps) => {\n  const [loadingFor, setLoadingFor] = useState(false)\n  const [loadingAgainst, setLoadingAgainst] = useState(false)\n  const {\n    dao: { daoData },\n    voteBid: { amount },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch()\n  const { mint, regime, authority } = daoData[daoAddress] || ({} as DaoData)\n  const { balance, decimals } = useAccountBalanceByMintAddress(mint?.toBase58())\n  const { status } = useProposalStatus(proposalAddress)\n\n  const disabled = useMemo(() => {\n    return status !== 'Voting' || !amount || !account.isAddress(proposalAddress)\n  }, [amount, proposalAddress, status])\n\n  const parseRegime = useMemo(() => {\n    if (!regime) return ''\n    return Object.keys(regime)[0]\n  }, [regime])\n\n  const fee = useMemo(() => {\n    if (!parseRegime || !authority) return\n\n    const feeOption: FeeOptions = {\n      tax: new BN(50000),\n      taxmanAddress: taxman,\n      revenue: new BN(50000),\n      revenuemanAddress: authority.toBase58(),\n    }\n\n    if (parseRegime === 'democratic')\n      return {\n        tax: new BN(0),\n        taxmanAddress: taxman,\n        revenue: new BN(0),\n        revenuemanAddress: authority.toBase58(),\n      }\n\n    return feeOption\n  }, [authority, parseRegime])\n\n  const onChange = useCallback(\n    (value: string) => {\n      if (!decimals) return\n      dispatch(setVoteBidAmount(value))\n    },\n    [dispatch, decimals],\n  )\n\n  const onVoteFor = useCallback(async () => {\n    setLoadingFor(true)\n    try {\n      if (!amount || !account.isAddress(proposalAddress)) return\n      const voteAmount = utils.decimalize(amount, decimals)\n      const nextAmount = new BN(voteAmount.toString())\n      const { txId } = await interDao.voteFor(proposalAddress, nextAmount, fee)\n      window.notify({\n        type: 'success',\n        description: 'Voted successfully. Click to view details!',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (error: any) {\n      window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setLoadingFor(false)\n    }\n  }, [amount, decimals, fee, proposalAddress])\n\n  const onVoteAgainst = useCallback(async () => {\n    setLoadingAgainst(true)\n    try {\n      if (!amount || !account.isAddress(proposalAddress)) return\n      const voteAmount = utils.decimalize(amount, decimals)\n      const nextAmount = new BN(voteAmount.toString())\n      const { txId } = await interDao.voteAgainst(\n        proposalAddress,\n        nextAmount,\n        fee,\n      )\n      window.notify({\n        type: 'success',\n        description: 'Voted successfully. Click to view details!',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (error: any) {\n      window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setLoadingAgainst(false)\n    }\n  }, [amount, decimals, fee, proposalAddress])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Cast your vote</Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Card\n            style={{\n              boxShadow: 'unset',\n              borderRadius: 4,\n              background: '#1A1311',\n            }}\n            bodyStyle={{ padding: '8px 12px' }}\n            bordered={false}\n          >\n            <Row gutter={[8, 8]}>\n              <Col flex=\"auto\">\n                <Typography.Text>Amount vote</Typography.Text>\n              </Col>\n              <Col>\n                <Typography.Text>\n                  Available: {numeric(balance).format('0,0.[00]')}\n                </Typography.Text>{' '}\n                <MintSymbol mintAddress={mint?.toBase58()} />\n              </Col>\n              <Col span={24}>\n                <NumericInput\n                  bordered={false}\n                  style={{ padding: 0 }}\n                  placeholder=\"0\"\n                  value={amount}\n                  onValue={onChange}\n                  suffix={\n                    <Typography.Text\n                      style={{ cursor: 'pointer' }}\n                      onClick={() => onChange(balance.toString())}\n                    >\n                      MAX\n                    </Typography.Text>\n                  }\n                />\n              </Col>\n            </Row>\n          </Card>\n        </Col>\n        <Col span={24}>\n          <LockedVoting\n            proposalAddress={proposalAddress}\n            daoAddress={daoAddress}\n          />\n        </Col>\n        <Col span={12}>\n          <Button\n            onClick={onVoteAgainst}\n            type=\"primary\"\n            disabled={disabled}\n            loading={loadingAgainst}\n            block\n            size=\"large\"\n            icon={<IonIcon name=\"thumbs-down-outline\" />}\n          >\n            Vote No\n          </Button>\n        </Col>\n        <Col span={12}>\n          <Button\n            onClick={onVoteFor}\n            type=\"primary\"\n            disabled={disabled}\n            loading={loadingFor}\n            block\n            size=\"large\"\n            icon={<IonIcon name=\"thumbs-up-outline\" />}\n          >\n            Vote Yes\n          </Button>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\nexport default CardVote\n","import { ReactNode, useMemo, useState } from 'react'\nimport moment from 'moment'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\nimport { Card, Col, Row, Space, Typography, Tooltip, Button } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport useProposal from 'app/hooks/useProposal'\nimport { asyncWait, explorer, shortenAddress } from 'shared/util'\nimport { ProposalChildCardProps } from './index'\n\ntype RowSpaceBetweenProps = {\n  label?: string\n  value?: string | ReactNode\n}\n\nconst RowSpaceBetween = ({ label = '', value = '' }: RowSpaceBetweenProps) => {\n  return (\n    <Row gutter={[24, 24]}>\n      <Col flex=\"auto\">{label}</Col>\n      <Col>{value}</Col>\n    </Row>\n  )\n}\n\nconst CardInfo = ({ proposalAddress, daoAddress }: ProposalChildCardProps) => {\n  const [copied, setCopied] = useState(false)\n  const { consensusQuorum, startDate, endDate, consensusMechanism, creator } =\n    useProposal(proposalAddress, daoAddress)\n  const authProposalAddress = creator?.toBase58() || ''\n\n  const onCopy = async () => {\n    setCopied(true)\n    await asyncWait(1500)\n    setCopied(false)\n  }\n\n  const quorum = useMemo(() => {\n    if (!consensusQuorum) return '-'\n    const mechanismQuorum = Object.keys(consensusQuorum)[0]\n    if (mechanismQuorum === 'half') return '1/2'\n    if (mechanismQuorum === 'oneThird') return '1/3'\n    if (mechanismQuorum === 'twoThird') return '2/3'\n  }, [consensusQuorum])\n\n  const consensus = useMemo(() => {\n    if (!consensusMechanism) return '-'\n    const _consensusMechanism = Object.keys(consensusMechanism)[0]\n    if (_consensusMechanism === 'stakedTokenCounter') return 'Staked counter'\n    if (_consensusMechanism === 'lockedTokenCounter') return 'Locked counter'\n  }, [consensusMechanism])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Row align=\"middle\">\n            <Col flex=\"auto\">\n              <Typography.Title level={5}>Information</Typography.Title>\n            </Col>\n            <Col>\n              <Button\n                type=\"text\"\n                icon={<IonIcon name=\"information-circle-outline\" />}\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Space style={{ width: '100%' }} direction=\"vertical\">\n            <RowSpaceBetween\n              label=\"Proposal ID\"\n              value={shortenAddress(proposalAddress, 3)}\n            />\n            <RowSpaceBetween\n              label=\"Start time\"\n              value={moment(startDate?.toNumber() * 1000).format(\n                'MMM DD,yyyy HH:mm',\n              )}\n            />\n            <RowSpaceBetween\n              label=\"End time\"\n              value={moment(endDate?.toNumber() * 1000).format(\n                'MMM DD,yyyy HH:mm',\n              )}\n            />\n            <RowSpaceBetween\n              label=\"Author\"\n              value={\n                <Space size={10}>\n                  <Typography.Text\n                    style={{ cursor: 'pointer', textDecoration: 'underline' }}\n                    onClick={() =>\n                      window.open(explorer(authProposalAddress), '_blank')\n                    }\n                  >\n                    {shortenAddress(authProposalAddress, 3)}\n                  </Typography.Text>\n                  <Tooltip title=\"Copied\" visible={copied}>\n                    <CopyToClipboard text={authProposalAddress} onCopy={onCopy}>\n                      <IonIcon\n                        style={{ cursor: 'pointer' }}\n                        name=\"copy-outline\"\n                        onClick={onCopy}\n                      />\n                    </CopyToClipboard>\n                  </Tooltip>\n                </Space>\n              }\n            />\n            <RowSpaceBetween label=\"Quorum\" value={quorum} />\n            <RowSpaceBetween label=\"Vote method\" value={consensus} />\n          </Space>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CardInfo\n","import { useSelector } from 'react-redux'\nimport { useMemo } from 'react'\nimport { DaoData } from '@interdao/core'\nimport { utils } from '@senswap/sen-js'\n\nimport { Card, Col, Row, Space, Typography, Progress } from 'antd'\n\nimport { ProposalChildCardProps } from './index'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport useProposal from 'app/hooks/useProposal'\nimport { AppState } from 'app/model'\nimport { numeric } from 'shared/util'\nimport useProposalStatus from 'app/hooks/useProposalStatus'\n\nconst CardProgress = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const { votingAgainstPower, votingForPower, consensusQuorum } = useProposal(\n    proposalAddress,\n    daoAddress,\n  )\n  const { mint } = daoData[daoAddress] || ({} as DaoData)\n  const mintDecimal = useMintDecimals(mint?.toBase58()) || 0\n  const { actualSupply } = useProposalStatus(proposalAddress)\n\n  const noVote = Number(votingAgainstPower) || 0\n  const yesVote = Number(votingForPower) || 0\n  const totalVote = yesVote + noVote\n  const percentYes = (yesVote / totalVote) * 100\n  const percentNo = (noVote / totalVote) * 100\n\n  const currentPower = useMemo(() => {\n    if (!consensusQuorum) return 0\n    const actualYesVote = yesVote - noVote\n    const mechanismQuorum = Object.keys(consensusQuorum)[0]\n\n    if (mechanismQuorum === 'half')\n      return ((2 * actualYesVote) / actualSupply) * 100\n\n    if (mechanismQuorum === 'oneThird')\n      return ((3 * actualYesVote) / actualSupply) * 100\n\n    if (mechanismQuorum === 'twoThird')\n      return ((3 * actualYesVote) / (2 * actualSupply)) * 100\n    return 0\n  }, [actualSupply, consensusQuorum, noVote, yesVote])\n\n  const powerRequire = useMemo(() => {\n    if (!consensusQuorum || !actualSupply || currentPower >= 100) return 0\n    const actualYesVote = yesVote - noVote\n    const mechanismQuorum = Object.keys(consensusQuorum)[0]\n\n    if (mechanismQuorum === 'half') return actualSupply / 2 - actualYesVote\n\n    if (mechanismQuorum === 'oneThird') return actualSupply / 3 - actualYesVote\n\n    if (mechanismQuorum === 'twoThird')\n      return (2 * actualSupply) / 3 - actualYesVote\n    return 0\n  }, [actualSupply, consensusQuorum, currentPower, noVote, yesVote])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Current results</Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Space size={0} style={{ width: '100%' }} direction=\"vertical\">\n            <Typography.Text type=\"secondary\">Quorum</Typography.Text>\n            <Typography.Text>\n              {utils.undecimalize(BigInt(powerRequire), mintDecimal)} more Yes\n              votes required\n            </Typography.Text>\n            <Progress\n              percent={100}\n              strokeColor=\"#312B29\"\n              success={{\n                percent: currentPower,\n                strokeColor: '#698033',\n              }}\n              showInfo={false}\n            />\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Space className=\"space-full-width\">\n            <Row gutter={[4, 4]}>\n              <Col flex=\"auto\">\n                <Typography.Text type=\"secondary\">Yes vote</Typography.Text>\n              </Col>\n              <Col>\n                <Space>\n                  <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n                    {numeric(percentYes).format('0,0.[00]')}%\n                  </Typography.Text>\n                  <Typography.Title level={5}>\n                    {numeric(\n                      utils.undecimalize(BigInt(yesVote), mintDecimal),\n                    ).format('0,0.[000]')}\n                  </Typography.Title>\n                </Space>\n              </Col>\n              <Col span={24}>\n                <Progress\n                  style={{ width: '100%' }}\n                  percent={100}\n                  strokeColor=\"#312B29\"\n                  success={{\n                    percent: percentYes,\n                    strokeColor: '#698033',\n                  }}\n                  showInfo={false}\n                />\n              </Col>\n            </Row>\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Space className=\"space-full-width\">\n            <Row gutter={[4, 4]}>\n              <Col flex=\"auto\">\n                <Typography.Text type=\"secondary\">No vote</Typography.Text>\n              </Col>\n              <Col>\n                <Space>\n                  <Typography.Text type=\"secondary\" style={{ fontSize: 12 }}>\n                    {numeric(percentNo).format('0,0.[00]')}%\n                  </Typography.Text>\n                  <Typography.Title level={5}>\n                    {numeric(\n                      utils.undecimalize(BigInt(noVote), mintDecimal),\n                    ).format('0,0.[000]')}\n                  </Typography.Title>\n                </Space>\n              </Col>\n              <Col span={24}>\n                <Progress\n                  percent={100}\n                  strokeColor=\"#312B29\"\n                  success={{\n                    percent: percentNo,\n                    strokeColor: '#698033',\n                  }}\n                  showInfo={false}\n                />\n              </Col>\n            </Row>\n          </Space>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CardProgress\n","import { useMemo } from 'react'\nimport { ReceiptData } from '@interdao/core'\n\nimport { Typography } from 'antd'\n\nconst ColumnType = ({ record }: { record: ReceiptData }) => {\n  const type = useMemo(() => {\n    const action = Object.keys(record.action || {})[0]\n    if (action === 'voteAgainst') return 'NO'\n    return 'YES'\n  }, [record.action])\n\n  return <Typography.Text>{type}</Typography.Text>\n}\n\nexport default ColumnType\n","import { useSelector } from 'react-redux'\nimport { DaoData, ReceiptData } from '@interdao/core'\nimport { utils } from '@senswap/sen-js'\n\nimport { Typography } from 'antd'\n\nimport { AppState } from 'app/model'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { numeric } from 'shared/util'\n\nconst ColumnPower = ({ receipt }: { receipt: ReceiptData }) => {\n  const { power, proposal: proposalAddress } = receipt\n  const {\n    dao: { daoData },\n    proposal,\n  } = useSelector((state: AppState) => state)\n  const { dao: daoAddress } = proposal[proposalAddress.toBase58()]\n  const { mint } = daoData[daoAddress.toBase58()] || ({} as DaoData)\n  const mintDecimal = useMintDecimals(mint?.toBase58()) || 0\n\n  return (\n    <Typography.Text>\n      {numeric(\n        utils.undecimalize(BigInt(power.toNumber()), mintDecimal),\n      ).format('0,0.[0000]a')}\n    </Typography.Text>\n  )\n}\n\nexport default ColumnPower\n","import { PublicKey } from '@solana/web3.js'\nimport { ReceiptData } from '@interdao/core'\n\nimport { Typography } from 'antd'\nimport ColumnType from './columnType'\nimport ColumnPower from './columnPower'\n\nimport { shortenAddress } from 'shared/util'\n\nexport const HISTORY_COLUMNS = [\n  {\n    title: 'WALLET ADDRESS',\n    dataIndex: 'authority',\n    render: (walletAddress: PublicKey) => (\n      <Typography>{shortenAddress(walletAddress.toBase58())}</Typography>\n    ),\n  },\n  {\n    title: 'TYPE',\n    dataIndex: 'authority',\n    render: (_: any, receipt: ReceiptData) => <ColumnType record={receipt} />,\n  },\n  {\n    title: 'POWER',\n    dataIndex: 'power',\n    render: (_: any, receipt: ReceiptData) => <ColumnPower receipt={receipt} />,\n  },\n]\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { AccountInfo, PublicKey } from '@solana/web3.js'\n\nimport configs from 'app/configs'\nimport { ReceiptData } from '@interdao/core'\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst useReceipts = ({ proposalAddress }: { proposalAddress: string }) => {\n  const [receipts, setReceipts] = useState<ReceiptData[]>([])\n  const getReceipts = useCallback(async () => {\n    if (!account.isAddress(proposalAddress)) throw new Error('Invalid address')\n    const {\n      provider: { connection },\n      programId,\n      account: { receipt },\n    } = interDao.program\n    const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n      await connection.getProgramAccounts(programId, {\n        filters: [\n          { dataSize: receipt.size },\n          {\n            memcmp: {\n              offset: 48,\n              bytes: proposalAddress,\n            },\n          },\n        ],\n      })\n    let bulk: ReceiptData[] = []\n\n    value.forEach(({ account: { data: buf } }) => {\n      const data = interDao.parseReceiptData(buf)\n      bulk.push(data)\n    })\n    setReceipts(bulk)\n  }, [proposalAddress])\n\n  useEffect(() => {\n    getReceipts()\n  }, [getReceipts])\n\n  return { receipts }\n}\n\nexport default useReceipts\n","import { useMemo, useState } from 'react'\nimport { ReceiptData } from '@interdao/core'\n\nimport { Card, Col, Row, Typography, Table, Button } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { HISTORY_COLUMNS } from './column'\nimport useReceipts from 'app/hooks/useReceipts'\nimport './index.less'\n\nconst DEFAULT_AMOUNT_HISTORY = 5\n\nconst History = ({\n  proposalAddress,\n  daoAddress,\n}: {\n  proposalAddress: string\n  daoAddress: string\n}) => {\n  const [amount, setAmount] = useState(DEFAULT_AMOUNT_HISTORY)\n\n  const { receipts } = useReceipts({ proposalAddress })\n\n  const filterReceipts = useMemo(() => {\n    const nextReceipts: ReceiptData[] = []\n    receipts.forEach((receipt) => {\n      const { authority, power, action } = receipt\n      const actionType = Object.keys(action || {})[0]\n      const owner = authority.toBase58()\n\n      const existReceipt = nextReceipts.find((_receipt) => {\n        const { action: _action, authority: _authority } = _receipt\n        const _actionType = Object.keys(_action || {})[0]\n        const _owner = _authority.toBase58()\n\n        return _owner === owner && actionType === _actionType\n      })\n      if (!existReceipt) return nextReceipts.push(receipt)\n\n      const { power: oldPower } = existReceipt\n      const index = nextReceipts.findIndex(\n        (_receipt) => _receipt === existReceipt,\n      )\n      if (index !== -1)\n        return (nextReceipts[index] = {\n          ...nextReceipts[index],\n          power: oldPower.add(power),\n        })\n    })\n    return nextReceipts\n  }, [receipts])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}> Votes</Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Table\n            columns={HISTORY_COLUMNS}\n            dataSource={filterReceipts.slice(0, amount)}\n            pagination={false}\n            rowKey={(record) =>\n              record.index.toNumber() + record.lockedDate.toNumber()\n            }\n          />\n        </Col>\n        <Col span={24} style={{ textAlign: 'center' }}>\n          <Button\n            disabled={filterReceipts.length <= amount}\n            onClick={() => setAmount(amount + DEFAULT_AMOUNT_HISTORY)}\n            icon={<IonIcon name=\"chevron-down-outline\" />}\n          >\n            View more\n          </Button>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\nexport default History\n","import { useParams, useHistory } from 'react-router-dom'\n\nimport { Button, Col, Row } from 'antd'\nimport CardStatus from './cardStatus'\nimport CardVote from './cardVote'\nimport CardInfo from './cardInfo'\nimport CardProgress from './cardProgress'\nimport History from './history'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport configs from 'app/configs'\nimport './index.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport type ProposalChildCardProps = {\n  proposalAddress: string\n  daoAddress: string\n}\n\nconst ProposalDetails = () => {\n  const history = useHistory()\n  const { proposalAddress, daoAddress } =\n    useParams<{ daoAddress: string; proposalAddress: string }>()\n\n  return (\n    <Row justify=\"center\">\n      <Col xs={24} lg={18}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Button\n              type=\"text\"\n              icon={<IonIcon name=\"arrow-back-outline\" />}\n              onClick={() => history.push(`/app/${appId}/dao/${daoAddress}`)}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col span={24}>\n            <Row gutter={[24, 24]}>\n              <Col xs={24} md={16}>\n                <Row gutter={[24, 24]}>\n                  <Col span={24}>\n                    <CardStatus\n                      proposalAddress={proposalAddress}\n                      daoAddress={daoAddress}\n                    />\n                  </Col>\n                  <Col span={24}>\n                    <CardVote\n                      proposalAddress={proposalAddress}\n                      daoAddress={daoAddress}\n                    />\n                  </Col>\n                  <Col span={24}>\n                    <History\n                      proposalAddress={proposalAddress}\n                      daoAddress={daoAddress}\n                    />\n                  </Col>\n                </Row>\n              </Col>\n              <Col xs={24} md={8}>\n                <Row gutter={[24, 24]}>\n                  <Col span={24}>\n                    <CardInfo\n                      proposalAddress={proposalAddress}\n                      daoAddress={daoAddress}\n                    />\n                  </Col>\n                  <Col span={24}>\n                    <CardProgress\n                      proposalAddress={proposalAddress}\n                      daoAddress={daoAddress}\n                    />\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\nexport default ProposalDetails\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { useWallet } from '@senhub/providers'\nimport { PublicKey } from '@solana/web3.js'\n\nimport { AppDispatch } from 'app/model'\nimport configs from 'app/configs'\nimport { getDao, getDaos } from 'app/model/dao.controller'\n\nconst {\n  sol: { interDao },\n} = configs\n\n// Watch id\nlet initializeDAOEventId = 0\nlet updateDaoRegimeEventId = 0\nlet updateSupplyEventId = 0\nlet transferAuthorityEventId = 0\n\nconst DaoWatcher = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadDaoData = useCallback(\n    ({ dao: daoPublicKey }: { dao: PublicKey }) => {\n      const daoAddress = daoPublicKey.toBase58()\n      return dispatch(getDao({ address: daoAddress, force: true }))\n    },\n    [dispatch],\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getDaos()).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of DAOs',\n      })\n    }\n  }, [dispatch, walletAddress])\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    initializeDAOEventId = await interDao.addListener(\n      'InitializeDAOEvent',\n      reloadDaoData,\n    )\n    updateDaoRegimeEventId = await interDao.addListener(\n      'UpdateDaoRegimeEvent',\n      reloadDaoData,\n    )\n    updateSupplyEventId = await interDao.addListener(\n      'UpdateSupplyEvent',\n      reloadDaoData,\n    )\n    transferAuthorityEventId = await interDao.addListener(\n      'TransferAuthorityEvent',\n      reloadDaoData,\n    )\n  }, [reloadDaoData])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await interDao.removeListener(initializeDAOEventId)\n          await interDao.removeListener(updateDaoRegimeEventId)\n          await interDao.removeListener(updateSupplyEventId)\n          await interDao.removeListener(transferAuthorityEventId)\n        } catch (er: any) {\n          console.warn(er.message)\n        } finally {\n          initializeDAOEventId = 0\n          updateDaoRegimeEventId = 0\n          updateSupplyEventId = 0\n          transferAuthorityEventId = 0\n        }\n      })()\n    }\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default DaoWatcher\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { PublicKey } from '@solana/web3.js'\n\nimport { AppDispatch } from 'app/model'\nimport configs from 'app/configs'\nimport { getProposal } from 'app/model/proposal.controller'\n\nconst {\n  sol: { interDao },\n} = configs\n\n// Watch id\nlet initializeProposalEventId = 0\nlet voteForEventId = 0\nlet voteAgainstEventId = 0\nlet executeProposalEventId = 0\n\nconst ProposalWatcher = () => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadProposalData = useCallback(\n    ({ proposal: proposalPublicKey }: { proposal: PublicKey }) => {\n      const proposalAddress = proposalPublicKey.toBase58()\n      return dispatch(getProposal({ address: proposalAddress, force: true }))\n    },\n    [dispatch],\n  )\n\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    initializeProposalEventId = await interDao.addListener(\n      'InitializeProposalEvent',\n      reloadProposalData,\n    )\n    voteForEventId = await interDao.addListener(\n      'VoteForEvent',\n      reloadProposalData,\n    )\n    voteAgainstEventId = await interDao.addListener(\n      'VoteAgainstEvent',\n      reloadProposalData,\n    )\n    executeProposalEventId = await interDao.addListener(\n      'ExecuteProposalEvent',\n      reloadProposalData,\n    )\n  }, [reloadProposalData])\n\n  useEffect(() => {\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await interDao.removeListener(initializeProposalEventId)\n          await interDao.removeListener(voteForEventId)\n          await interDao.removeListener(voteAgainstEventId)\n          await interDao.removeListener(executeProposalEventId)\n        } catch (er: any) {\n          console.warn(er.message)\n        } finally {\n          initializeProposalEventId = 0\n          voteForEventId = 0\n          voteAgainstEventId = 0\n          executeProposalEventId = 0\n        }\n      })()\n    }\n  }, [watchData])\n\n  return <Fragment />\n}\n\nexport default ProposalWatcher\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport {\n  ProposalData,\n  ReceiptData,\n  RECEIPT_DISCRIMINATOR,\n} from '@interdao/core'\nimport { account } from '@senswap/sen-js'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type ReceiptState = Record<string, ReceiptData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'receipt'\nconst initialState: ReceiptState = {}\n\n/**\n * Actions\n */\n\nexport const getReceipts = createAsyncThunk(\n  `${NAME}/getReceipts`,\n  async ({ authorityAddress }: { authorityAddress: string }) => {\n    if (!account.isAddress(authorityAddress)) throw new Error('Invalid address')\n    const {\n      provider: { connection },\n      programId,\n      account: { receipt },\n    } = interDao.program\n    const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n      await connection.getProgramAccounts(programId, {\n        filters: [\n          { dataSize: receipt.size },\n          {\n            memcmp: {\n              offset: 0,\n              bytes: RECEIPT_DISCRIMINATOR,\n            },\n          },\n          {\n            memcmp: {\n              offset: 16,\n              bytes: authorityAddress,\n            },\n          },\n        ],\n      })\n    let bulk: ReceiptState = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = interDao.parseReceiptData(buf)\n      bulk[address] = data\n    })\n    return bulk\n  },\n)\n\nexport const getReceipt = createAsyncThunk<\n  ReceiptState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getReceipt`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    dao: { [address]: data },\n  } = getState()\n  if (data && !force) return { [address]: data }\n  const raw = await interDao.getReceiptData(address)\n  return { [address]: raw }\n})\n\nexport const upsetReceipt = createAsyncThunk<\n  ReceiptState,\n  { address: string; data: ProposalData },\n  { state: any }\n>(`${NAME}/upsetReceipt`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteReceipt = createAsyncThunk(\n  `${NAME}/deleteReceipt`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getReceipts.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { PublicKey } from '@solana/web3.js'\nimport { useWallet } from '@senhub/providers'\nimport { account } from '@senswap/sen-js'\n\nimport { AppDispatch } from 'app/model'\nimport configs from 'app/configs'\nimport { getReceipt, getReceipts } from 'app/model/receipt.controller'\n\nconst {\n  sol: { interDao },\n} = configs\n\n// Watch id\nlet voteForEventId = 0\nlet voteAgainstEventId = 0\nlet closeEventId = 0\n\nconst ReceiptWatcher = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadReceiptData = useCallback(\n    ({ receipt: receiptPublicKey }: { receipt: PublicKey }) => {\n      const receiptAddress = receiptPublicKey.toBase58()\n      return dispatch(getReceipt({ address: receiptAddress, force: true }))\n    },\n    [dispatch],\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getReceipts({ authorityAddress: walletAddress })).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of receipts',\n      })\n    }\n  }, [dispatch, walletAddress])\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    voteForEventId = await interDao.addListener(\n      'VoteForEvent',\n      reloadReceiptData,\n    )\n    voteAgainstEventId = await interDao.addListener(\n      'VoteAgainstEvent',\n      reloadReceiptData,\n    )\n    closeEventId = await interDao.addListener('CloseEvent', reloadReceiptData)\n  }, [reloadReceiptData])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await interDao.removeListener(voteForEventId)\n          await interDao.removeListener(voteAgainstEventId)\n          await interDao.removeListener(closeEventId)\n        } catch (er: any) {\n          console.warn(er.message)\n        } finally {\n          voteForEventId = 0\n          voteAgainstEventId = 0\n          closeEventId = 0\n        }\n      })()\n    }\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default ReceiptWatcher\n","import { useEffect } from 'react'\nimport { useUI } from '@senhub/providers'\nimport { Redirect, Route, Switch } from 'react-router-dom'\n\nimport { Row, Col } from 'antd'\nimport Dao from './dao'\nimport Proposal from './proposal'\nimport ProposalInitialization from './proposal/proposalInitialization'\nimport DaoInitialization from './dao/daoInitialization'\nimport ProposalDetails from './proposal/proposalDetails'\nimport DaoWatcher from './watcher/dao.watcher'\nimport ProposalWatcher from './watcher/proposal.watcher'\nimport ReceiptWatcher from './watcher/receipt.watcher'\n\nimport 'app/static/styles/dark.less'\nimport 'app/static/styles/light.less'\nimport configs from 'app/configs'\nimport BG from 'app/static/images/system/bg-dark.png'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst View = () => {\n  const { setBackground } = useUI()\n\n  useEffect(() => {\n    setBackground({ light: BG, dark: BG })\n  }, [setBackground])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col span={24}>\n        <Switch>\n          <Route exact path={`/app/${appId}/dao`} component={Dao} />\n          <Route\n            exact\n            path={`/app/${appId}/dao/new-dao`}\n            component={DaoInitialization}\n          />\n          <Route\n            exact\n            path={`/app/${appId}/dao/:daoAddress`}\n            component={Proposal}\n          />\n          <Route\n            exact\n            path={`/app/${appId}/dao/:daoAddress/new-proposal`}\n            component={ProposalInitialization}\n          />\n          <Route\n            exact\n            path={`/app/${appId}/dao/:daoAddress/proposal/:proposalAddress`}\n            component={ProposalDetails}\n          />\n          <Redirect from=\"*\" to={`/app/${appId}/dao`} />\n        </Switch>\n      </Col>\n      <Col span={24} />\n      <DaoWatcher />\n      <ProposalWatcher />\n      <ReceiptWatcher />\n    </Row>\n  )\n}\n\nexport default View\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport dao from 'app/model/dao.controller'\nimport metadata from 'app/model/metadata.controller'\nimport proposal from 'app/model/proposal.controller'\nimport receipt from 'app/model/receipt.controller'\nimport voteBid from 'app/model/voteBid.controller'\nimport template from 'app/model/template.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools(process.env.REACT_APP_ID as string),\n  reducer: {\n    dao,\n    metadata,\n    proposal,\n    receipt,\n    voteBid,\n    template,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { Provider } from 'react-redux'\nimport {\n  WalletProvider,\n  UIProvider,\n  AccountProvider,\n  PoolProvider,\n  MintProvider,\n} from '@senhub/providers'\n\nimport View from 'app/view'\n\nimport model from 'app/model'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <UIProvider appId={appId} antd={{ prefixCls: appId }}>\n      <WalletProvider>\n        <AccountProvider>\n          <PoolProvider>\n            <MintProvider>\n              <Provider store={model}>\n                <View />\n              </Provider>\n            </MintProvider>\n          </PoolProvider>\n        </AccountProvider>\n      </WalletProvider>\n    </UIProvider>\n  )\n}\n","export type LimitConfig = {\n  calls: number\n  time: number\n}\n\nexport type CacheConfig = {\n  ttl: number // millisecond\n}\n\nexport type SingleFlightConfig = {\n  limit?: LimitConfig\n  cache?: CacheConfig\n}\n\n// 10 request per 1 second\nexport const DEFAULT_LIMIT_CONFIG: LimitConfig = {\n  calls: 10,\n  time: 1000,\n}\n\n// 10 request per 1 second\nexport const DEFAULT_CACHE_CONFIG: CacheConfig = {\n  ttl: 30000,\n}\n\nexport const DEFAULT_SINGLE_FLIGHT_CONFIG: SingleFlightConfig = {\n  limit : DEFAULT_LIMIT_CONFIG,\n  cache: DEFAULT_CACHE_CONFIG\n}","export interface IRequestQueue {\n  key: string\n  add(resolve: any, reject: any): void\n  resolves(data: any): void\n  rejects(error: any): void\n}\n\nexport class RequestQueue implements IRequestQueue {\n  key = ''\n  private resolveQueue: any[] = []\n  private rejectQueue: any[] = []\n  constructor(key: string) {\n    this.key = key\n  }\n\n  add(resolve: any, reject: any) {\n    this.resolveQueue.push(resolve)\n    this.rejectQueue.push(reject)\n  }\n\n  resolves(data: any) {\n    while (this.resolveQueue.length > 0) {\n      const resolve = this.resolveQueue.shift()\n      resolve(data)\n    }\n  }\n\n  rejects(error: any) {\n    while (this.rejectQueue.length > 0) {\n      const reject = this.rejectQueue.shift()\n      reject(error)\n    }\n  }\n}\n","import { DEFAULT_CACHE_CONFIG } from './constant'\nimport { CacheConfig } from './constant'\n\nexport class SingleFlightCache {\n  private static mapCache = new Map<string, any>()\n\n  static set(\n    key: string,\n    value: any,\n    configs: CacheConfig = DEFAULT_CACHE_CONFIG,\n  ) {\n    this.mapCache.set(key, value)\n    setTimeout(() => {\n      this.mapCache.delete(key)\n    }, configs.ttl)\n  }\n\n  static get(key: string) {\n    return this.mapCache.get(key)\n  }\n}\n","import { DEFAULT_SINGLE_FLIGHT_CONFIG, SingleFlightConfig } from './constant'\n\nimport { IRequestQueue, RequestQueue } from './request'\nimport { SingleFlightCache } from './cache'\n\nexport class DataLoader {\n  static mapInstance = new Map<string, SingleFlight>()\n\n  private static getSingleFlight(configs: SingleFlightConfig): SingleFlight {\n    const instanceKey = JSON.stringify(configs)\n    if (this.mapInstance.has(instanceKey)) {\n      const instance = this.mapInstance.get(instanceKey)\n      if (instance) return instance\n    }\n\n    let newSingleFlight = new SingleFlight(configs)\n    this.mapInstance.set(instanceKey, newSingleFlight)\n    return newSingleFlight\n  }\n\n  static async load<T>(\n    requestKey: string | object,\n    callback: () => Promise<T>,\n    configs: SingleFlightConfig = {},\n  ): Promise<T> {\n    if (typeof requestKey === 'object') requestKey = JSON.stringify(requestKey)\n\n    let singleFlight = DataLoader.getSingleFlight(configs)\n    DataLoader.mapInstance.set(requestKey, singleFlight)\n    const newRequest = new RequestQueue(requestKey)\n    return singleFlight.load<T>(newRequest, callback)\n  }\n}\n\nclass SingleFlight {\n  private config: SingleFlightConfig\n  private intervalRequest: any\n  private timeLogs: number[] = []\n\n  private mapRequestCalling = new Map<string, IRequestQueue>()\n  private requestQueue: IRequestQueue[] = []\n\n  constructor(configs: SingleFlightConfig) {\n    this.config = Object.assign(DEFAULT_SINGLE_FLIGHT_CONFIG, configs)\n  }\n\n  async load<T>(newRequest: IRequestQueue, callback: () => Promise<T>) {\n    const cacheData = SingleFlightCache.get(newRequest.key)\n    if (cacheData) return Promise.resolve(cacheData)\n\n    let isFetch = false\n    let request = this.mapRequestCalling.get(newRequest.key)\n    if (!request) {\n      request = newRequest\n      isFetch = true\n      this.mapRequestCalling.set(request.key, request)\n    }\n\n    return new Promise((resolve, reject) => {\n      if (!request) return reject('Not found request!')\n      request.add(resolve, reject)\n      if (isFetch) {\n        this.fetch<T>(request, callback)\n      }\n    })\n  }\n\n  private fetch<T>(request: IRequestQueue, callback: () => Promise<T>) {\n    if (!this.validateLimit()) {\n      return this.addRequestQueue(request, callback)\n    }\n    this.createTimeLogs()\n\n    callback()\n      .then((response) => {\n        SingleFlightCache.set(request.key, response, this.config.cache)\n        request.resolves(response)\n      })\n      .catch((error) => {\n        request.rejects(error)\n      })\n      .finally(() => {\n        this.mapRequestCalling.delete(request.key)\n        this.fetchRequestQueue(callback)\n      })\n  }\n\n  private fetchRequestQueue(callback: () => Promise<any>) {\n    if (!this.validateLimit()) return\n    const request = this.requestQueue.shift()\n    if (request) this.load(request, callback)\n\n    if (this.requestQueue.length === 0 && this.intervalRequest) {\n      clearInterval(this.intervalRequest)\n    }\n  }\n\n  private addRequestQueue(\n    request: IRequestQueue,\n    callback: () => Promise<any>,\n  ) {\n    this.requestQueue.push(request)\n    this.intervalRequest = setInterval(() => {\n      this.fetchRequestQueue(callback)\n    }, this.config.limit?.time)\n  }\n\n  private validateLimit(): boolean {\n    return true\n  }\n\n  private createTimeLogs() {\n    if (!this.config.limit) return\n\n    const now = new Date().getTime()\n    this.timeLogs.push(now)\n    if (this.timeLogs.length > this.config.limit?.calls) {\n      this.timeLogs.shift()\n    }\n  }\n}\n","import { PublicKey } from '@solana/web3.js'\nimport BN from 'bn.js'\n\n// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint' ||\n    val instanceof PublicKey ||\n    val instanceof BN ||\n    val instanceof Buffer\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import { create, isIPFS } from 'ipfs-core'\nimport { asyncWait } from 'shared/util'\n\nconst GET_CID_TIMEOUT = 15000\nclass IPFS {\n  private _ipfs: any = async () => {\n    try {\n      if (!window.ipfs) window.ipfs = await create()\n      return window.ipfs\n    } catch (er) {\n      await asyncWait(500)\n      return await this._ipfs()\n    }\n  }\n\n  static isCID = (cid: string | undefined | null): boolean => {\n    try {\n      if (!cid) return false\n      return isIPFS.multihash(cid)\n    } catch (er) {\n      return false\n    }\n  }\n\n  get = async (cid: string) => {\n    if (!IPFS.isCID(cid)) throw new Error('Invalid CID')\n    try {\n      const ipfs = await this._ipfs()\n      const stream = await ipfs.cat(cid, { timeout: GET_CID_TIMEOUT })\n      let raw = ''\n      for await (const chunk of stream) raw += Buffer.from(chunk).toString()\n      const data = JSON.parse(raw)\n      return data\n    } catch (err) {\n      // notthing\n    }\n  }\n\n  set = async (data: object): Promise<string> => {\n    if (!data) throw new Error('Empty data')\n    const raw = JSON.stringify(data)\n    const ipfs = await this._ipfs()\n    const { cid } = await ipfs.add(raw)\n    return cid.toString()\n  }\n}\n\nexport default IPFS\n","import storage from './storage'\n\n/**\n * Environment\n */\nconst getEnv = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'development':\n      return 'development'\n    case 'staging':\n      return 'staging'\n    case 'production':\n      return 'production'\n    default:\n      return 'development'\n  }\n}\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = getEnv()\n\n/**\n * Network\n */\nconst getNetwork = () => {\n  switch (storage.get('network')) {\n    case 'devnet':\n      return 'devnet'\n    case 'testnet':\n      return 'testnet'\n    case 'mainnet':\n      return 'mainnet'\n    default:\n      return 'mainnet'\n  }\n}\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = getNetwork()\n\nexport const onSwitchNetwork = (value: Net) => {\n  storage.set('network', value)\n  return window.location.reload()\n}\n\n/**\n * Chain ID\n */\nconst getChainId = () => {\n  switch (net) {\n    case 'devnet':\n      return 103\n    case 'testnet':\n      return 102\n    case 'mainnet':\n      return 101\n    default:\n      return 101\n  }\n}\nexport type ChainId = 101 | 102 | 103\nexport const chainId: ChainId = getChainId()\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  try {\n    if (!value) return null\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n","import { account, utils } from '@senswap/sen-js'\nimport numbro from 'numbro'\n\nimport { net } from 'shared/runtime'\nimport { DataLoader } from './dataloader'\n\n/**\n * Delay by async/await\n * @param ms - milisenconds\n * @returns\n */\nexport const asyncWait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\n/**\n * Shorten a long address\n * @param address - The long address\n * @param num - The number of the heading and trailing characters\n * @param delimiter - The delimiter\n * @returns Shortened address\n */\nexport const shortenAddress = (address: string, num = 4, delimiter = '...') => {\n  return (\n    address.substring(0, num) +\n    delimiter +\n    address.substring(address.length - num, address.length)\n  )\n}\n\n/**\n * Build a explorer url by context including addresses or transaction ids\n * @param addressOrTxId - Address or TxId\n * @returns\n */\nexport const explorer = (addressOrTxId: string): string => {\n  if (account.isAddress(addressOrTxId)) {\n    return `https://explorer.solana.com/address/${addressOrTxId}?cluster=${net}`\n  }\n  return `https://explorer.solana.com/tx/${addressOrTxId}?cluster=${net}`\n}\n\n/**\n * Wrapped Numbro - https://numbrojs.com/old-format.html\n * @param value - value\n * @returns\n */\nexport const numeric = (\n  value?: number | string | BigInt,\n): ReturnType<typeof numbro> => {\n  if (!value) return numbro('0')\n  return numbro(value)\n}\n\n/**\n * Generate a random color\n * @param seed - Seed\n * @param opacity - Opacity\n * @returns\n */\nexport const randomColor = (seed?: string, opacity?: string | number) => {\n  let hash = Math.floor(Math.random() * 16777215)\n  if (seed) {\n    hash = 0\n    for (let i = 0; i < seed.length; i++) {\n      hash = seed.charCodeAt(i) + ((hash << 5) - hash)\n    }\n  }\n  var rgb = [0, 0, 0]\n  for (let i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 255\n    rgb[i] = value\n  }\n  return `rgba(${rgb[0]}, 100, ${rgb[1]},${opacity || 1})`\n}\n\n/**\n * Fetch coingecko data with cache\n * @param ticket - Token ticket\n * @returns\n */\nexport const fetchCGK = async (ticket = '') => {\n  return DataLoader.load('fetchCGK' + ticket, () => utils.parseCGK(ticket))\n}\n\n/**\n * Randomly choose an element in the input array\n * @param arr - Original array of elements\n * @returns\n */\nexport const randChoose = <T>(arr: T[]): T => {\n  const rand = Math.floor(Math.random() * arr.length)\n  return arr[rand]\n}\n\n/**\n * Randomize a subarray in the input array with a specific number of elements\n * @param arr - Original array of elements\n * @param num - Number of elements in randomized subarray\n * @returns\n */\nexport const randElements = <T>(arr: T[], num: number): T[] => {\n  if (arr.length < num) return [...arr]\n  const re: T[] = []\n  while (re.length < num) {\n    const el = randChoose(arr)\n    if (!re.includes(el)) re.push(el)\n  }\n  return re\n}\n"],"names":["CUSTOM_ICONS","forwardRef","ref","name","className","props","cln","src","Row","gutter","justify","Col","Space","direction","size","Typography","level","style","fontSize","textAlign","span","type","icon","title","value","Card","bordered","background","borderLeft","borderRadius","bodyStyle","padding","shared","appId","process","url","development","staging","production","constructor","_wallet","window","sentre","wallet","_publicKey","PublicKey","_init","async","address","this","getAddress","signTransaction","tx","signAllTransactions","signedTxs","txs","signedTx","push","publicKey","console","warn","devnet","rpc","interDao","InterDAO","SafeWallet","fee","taxman","testnet","mainnet","manifest","env","sol","net","configs","NAME","getProposals","createAsyncThunk","daoAddress","provider","connection","programId","program","getProgramAccounts","filters","memcmp","offset","bytes","bulk","forEach","pubkey","account","data","buf","toBase58","parseProposalData","getProposal","force","getState","Error","dao","getProposalData","upsetProposal","deleteProposal","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","payload","Object","assign","daoData","proposal","useSelector","dispatch","useDispatch","totalDao","useMemo","keys","length","totalProposal","executeProposal","total","proposalAddr","executed","useEffect","daoAddresses","xs","lg","sm","numeric","format","includes","regime","special","tag","isEqual","DaoRegimes","Tag","color","randomColor","margin","DEFAULT_AVATARS","undefined","mintAddress","reversed","avatars","setAvatars","useState","tokenProvider","useMint","pools","usePool","deriveAvatar","useCallback","token","findByAddress","logoURI","deriveAvatars","poolData","values","find","mint_lpt","mint_a","mint_b","Promise","all","map","reverse","avatar","Avatar","backgroundColor","border","display","whiteSpace","i","DEFAULT_NAME","separator","setName","deriveName","deriveNames","names","join","DEFAULT_SYMBOL","symbol","setSymbol","deriveSymbol","substring","deriveSymbols","symbols","onClick","active","cursor","Boolean","boxShadow","align","useAllMintAddresses","allMintAddresses","setAllMintAddresses","getRecommendedMintAddresses","addresses","filter","searching","onChange","visible","setVisible","keyword","setKeyword","recommendedMintAddresses","setRecommendedMintAddresses","accounts","useAccount","myMintAddresses","mint","index","self","indexOf","useRecommendedMintAddresses","searchedMintAddresses","loading","setLoading","setSearchedMintAddresses","clearTimeout","setTimeout","useSearchedMintAddresses","randomHundredAddresses","refresh","limit","shuffle","setShuffle","randElements","useRandomMintAddresses","onSelect","onRefresh","list","document","getElementById","scrollTop","forceCheck","Fragment","Button","Modal","onCancel","footer","closeIcon","centered","destroyOnClose","Input","placeholder","suffix","marginRight","e","target","maxHeight","id","height","overflow","Divider","marginBottom","string2Number","seed","Buffer","from","BN","mod","Number","Math","random","toString","avatarProps","colors","gradients","alt","SOCIAL_MEDIA","DEFAULT_META_DATA","daoName","description","image","optionals","daoRegime","daoMetaData","createMetaData","getMember","metadata","members","utils","dataSize","setCreateDaoMetaData","metaData","isExistDao","getCID","digest","v0Prefix","Uint8Array","v0Digest","set","CID","parseDaoData","ipfs","IPFS","results","daoAddr","cid","get","nextDaoData","rs","err","setMetaData","getMetaData","er","notify","message","DAO_CARD_BG","autonomous","democratic","dictatorial","HEIGHT_RATIO","history","useHistory","ui","width","useUI","nonce","useMembers","useMetaData","parseRegime","isMobile","desktopWidth","heightRatio","PAGE_PADDING","Image","preview","wrap","shape","flex","Tooltip","shortenAddress","marginLeft","minHeight","ellipsis","rows","onSearch","prefix","regmie","position","bottom","left","backdropFilter","REGIME_LIST","Popover","overlayStyle","maxWidth","trigger","content","idx","md","onSort","Select","textTransform","register","daoMap","engine","_setDaoMap","Array","has","addr","daos","fuzzy","search","findIndex","nextDaos","slice","Map","lunr","field","doc","add","parseData","setParseData","searchData","setSearchData","daoProvider","DaoProvider","onParseDaoData","delayToSearch","sortKey","setSortKey","searchKey","setSearchKey","sortDaoRegime","useSearchDao","filterDaoData","searchDao","walletAddress","useWallet","filteredDaos","authority","authAddress","Tabs","tabBarExtraContent","tab","STATUS_COLOR","Succeeded","Failed","Preparing","Executed","Voting","status","currentDate","floor","Date","proposalAddress","startDate","endDate","supply","votingAgainstPower","votingForPower","consensusQuorum","consensusMechanism","actualSupply","toNumber","isSuccess","quorum","votingPower","SystemProgram","useProposalStatus","useProposalMetaData","imageBackground","hoverable","moment","decimals","setDecimals","getDecimals","fetchDecimals","setTx","setImgBackground","timeoutId","max","onValue","error","setError","setCursor","innerRef","useRef","onAmount","val","onError","test","parseFloat","current","setSelectionRange","selectionStart","toData","amount","schema","key","soproxABI","code","BigInt","toBuffer","setValue","setMintAddress","receiverAddress","setReceiverAddress","srcAddress","setSrcAddress","dstAddress","setDstAddress","setAmount","useMintDecimals","senderAddress","master","valid","confirm","re","dst","payer","isWritable","isSigner","isMaster","buildTransferSplvalue","close","setSourceAddress","owner","setDestinationAddress","getAmount","String","disabled","CardOption","label","SOLANA_LOGO","Radio","template","setStatus","numSupply","authorized","proposalAddresses","filterProposalAddresses","filteredAddress","stakeSupply","lockSupply","defaultValue","Empty","expandable","useParams","ConsensusMechanisms","ConsensusQuorums","DatePicker","valueOf","showTime","CURRENT_TIME","ONE_DAY","setConsensusMechanism","setConsensusQuorum","duration","setDuration","setTitle","setDescription","newProposal","multihash","feeOption","revenue","revenuemanAddress","tax","taxmanAddress","txId","initializeProposal","open","explorer","borderTop","DEFAULT_CREATE_DAO_DATA","createDaoData","daoType","getDaos","DAO_DISCRIMINATOR","getDao","getDaoData","upsetDao","setCreateDaoData","setCreateDaoType","deleteDao","DAO_TYPE","cardBorder","borderColor","logoSize","PAGE_SPACING","setSupply","getMint","fetchSupply","useMintSupply","suggestion","div","formatMetaData","nextMetaData","imgBase64","Upload","accept","listType","maxCount","file","fileList","callBack","reader","FileReader","readAsDataURL","onload","result","fileToBase64","originFileObj","itemRender","eml","uploadFile","uploadFiles","remove","thumbUrl","onRemove","social","JSON","parse","stringify","splice","onOptionalChange","CreateSteps","step","stepOne","stepTwo","stepThree","DAO_PROGRESS_TITILE","Progress","percent","steps","showInfo","onHandleStep","onConfirm","setStep","onNextStep","onCreateDao","totalSupply","mul","pow","initializeDao","isExistProposal","accountsLen","useProposal","execute","setVoteBidAmount","buildResult","balance","useAccountBalance","accountAddress","lamports","DEFAULT_EMPTY_ADDRESS","getRemainingSeconds","nowDayjs","timestampDayjs","startWithZeros","diff","getRemainingMinutes","getRemainingHours","getRemainingDays","number","minLength","numberString","repeat","defaultRemainingTime","minutes","hours","days","seconds","LockedVoting","remainingTime","setRemainingTime","voteBid","voteAmount","voteNow","getTime","endTime","startTime","isLockedVote","remaining","votePower","updateRemainingTime","countdown","timestampMs","finishTime","dayjs","isBefore","getRemainingTime","intervalId","setInterval","clearInterval","loadingFor","setLoadingFor","loadingAgainst","setLoadingAgainst","setAccountAddress","splt","deriveAssociatedAddress","useAccountBalanceByMintAddress","onVoteFor","nextAmount","voteFor","onVoteAgainst","voteAgainst","block","RowSpaceBetween","copied","setCopied","creator","authProposalAddress","onCopy","asyncWait","mechanismQuorum","consensus","_consensusMechanism","textDecoration","text","mintDecimal","noVote","yesVote","totalVote","percentYes","percentNo","currentPower","actualYesVote","powerRequire","strokeColor","success","record","action","receipt","power","HISTORY_COLUMNS","dataIndex","render","_","receipts","setReceipts","getReceipts","parseReceiptData","useReceipts","filterReceipts","nextReceipts","actionType","existReceipt","_receipt","_action","_authority","_actionType","oldPower","Table","columns","dataSource","pagination","rowKey","lockedDate","initializeDAOEventId","updateDaoRegimeEventId","updateSupplyEventId","transferAuthorityEventId","reloadDaoData","daoPublicKey","fetchData","unwrap","watchData","addListener","removeListener","initializeProposalEventId","voteForEventId","voteAgainstEventId","executeProposalEventId","reloadProposalData","proposalPublicKey","authorityAddress","RECEIPT_DISCRIMINATOR","getReceipt","getReceiptData","upsetReceipt","deleteReceipt","closeEventId","reloadReceiptData","receiptPublicKey","receiptAddress","setBackground","light","BG","dark","Switch","Route","exact","path","component","Dao","DaoInitialization","Proposal","ProposalInitialization","ProposalDetails","Redirect","to","configureStore","middleware","getDefaultMiddleware","bigintSerializationMiddleware","devTools","reducer","Page","UIProvider","antd","prefixCls","WalletProvider","AccountProvider","PoolProvider","MintProvider","Provider","store","model","DEFAULT_CACHE_CONFIG","ttl","DEFAULT_SINGLE_FLIGHT_CONFIG","calls","time","cache","RequestQueue","resolveQueue","rejectQueue","resolve","reject","resolves","shift","rejects","SingleFlightCache","mapCache","delete","DataLoader","instanceKey","mapInstance","instance","newSingleFlight","SingleFlight","requestKey","callback","singleFlight","getSingleFlight","newRequest","load","config","intervalRequest","timeLogs","mapRequestCalling","requestQueue","cacheData","isFetch","request","fetch","validateLimit","addRequestQueue","createTimeLogs","then","response","catch","finally","fetchRequestQueue","now","appName","prototype","toJSON","serializableCheck","isSerializable","isArray","obj","proto","getPrototypeOf","isPlainObject","_ipfs","create","isCID","stream","cat","timeout","raw","chunk","isIPFS","storage","getNetwork","chainId","getChainId","KEY","driver","localStorage","convert","getItem","setItem","clear","ms","num","delimiter","addressOrTxId","numbro","opacity","hash","charCodeAt","rgb","randChoose","arr","el"],"sourceRoot":""}