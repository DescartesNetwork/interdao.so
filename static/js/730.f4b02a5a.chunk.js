(globalThis.webpackChunkinterdao=globalThis.webpackChunkinterdao||[]).push([[730],{60980:(e,t,s)=>{"use strict";s.d(t,{Z:()=>h});var r=s(15190);const n={spltAddress:"TokenkegQfeZyiNwAJbNbGKPFXCWuBvf9Ss623VQ5DA",splataAddress:"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL"},a={devnet:{...n,node:"https://api.devnet.solana.com",sntrAddress:"5YwUkPdXLoujGkZuo9B4LsLKj3hdkDcfP4derpspifSJ",sntrPoolAddress:"3EUPL7YQLbU6DNU5LZeQeHPXTf1MigJ2yASXA9rH5Ku4",swapAddress:"4erFSLP7oBFSVC1t35jdxmbfxEhYCKfoM6XdG2BLR3UF",taxmanAddress:"8UaZw2jDhJzv5V53569JbCd3bD4BnyCfBH3sjwgajGS9"},testnet:{...n,node:"https://api.testnet.solana.com",sntrAddress:"",sntrPoolAddress:"",swapAddress:"",taxmanAddress:""},mainnet:{...n,node:"https://sentre.genesysgo.net",sntrAddress:"SENBBKVCM7homnf5RX9zqpf1GFe935hnbU4uVzY1Y6M",sntrPoolAddress:"Aa3WZX7Xunfebp2MuAcz9CNw8TYTDL7mVrmb11rjyVm6",swapAddress:"SSW7ooZ1EbEognq5GosbygA3uWW1Hq1NsFq6TsftCFV",taxmanAddress:"9doo2HZQEmh2NgfT3Yx12M89aoBheycYqH1eaR5gKb3e"}};const i="interdao",o={[i]:{url:"https://descartesnetwork.github.io/interdao.so/index.js",appId:i,name:"InterDAO",author:{name:"Descartes Network",email:"hello@descartes.network"},tags:"dapps,dao".split(",").map((e=>e.trim())),description:"\ud83c\udf0f InterDAO is a universal DAO solution that projects on Solana can seamlessly construct their owned DAO.",verified:!1}},c={development:{defaultAppId:i,extra:o,senreg:"https://descartesnetwork.github.io/senreg/register.json"},staging:{defaultAppId:i,extra:o,senreg:"https://descartesnetwork.github.io/senreg/register.json"},production:{defaultAppId:i,extra:{},senreg:"https://descartesnetwork.github.io/senreg/register.json"}},d={devnet:{baseURL:"https://stat-dev.sentre.io"},testnet:{baseURL:"https://stat-dev.sentre.io"},mainnet:{baseURL:"https://stat.sentre.io"}},h={sol:a[r.ef],register:c[r.OB],stat:d[r.ef]}},33015:(e,t,s)=>{"use strict";s.d(t,{ZP:()=>d,ih:()=>i});var r=s(19289),n=s(95418);const a="mints",i=(0,r.createAsyncThunk)("mints/getMint",(async(e,t)=>{let{address:s,force:r=!1}=e,{getState:a}=t;if(!n.account.isAddress(s))throw new Error("Invalid mint address");if(!r){const{accounts:{[s]:e}}=a();if(e)return{[s]:e}}const{splt:i}=window.sentre;return{[s]:await i.getMintData(s)}})),o=(0,r.createAsyncThunk)("mints/upsetMint",(async e=>{let{address:t,data:s}=e;if(!n.account.isAddress(t))throw new Error("Invalid address");if(!s)throw new Error("Data is empty");return{[t]:s}})),c=(0,r.createAsyncThunk)("mints/deleteMint",(async e=>{let{address:t}=e;if(!n.account.isAddress(t))throw new Error("Invalid address");return{address:t}})),d=(0,r.createSlice)({name:a,initialState:{},reducers:{},extraReducers:e=>{e.addCase(i.fulfilled,((e,t)=>{let{payload:s}=t;Object.assign(e,s)})).addCase(o.fulfilled,((e,t)=>{let{payload:s}=t;Object.assign(e,s)})).addCase(c.fulfilled,((e,t)=>{let{payload:s}=t;delete e[s.address]}))}}).reducer},80781:(e,t,s)=>{"use strict";s.d(t,{Z:()=>c});var r=s(44967),n=s(95418),a=s(55721),i=s(97429).Buffer;class o extends a.Z{constructor(){super("Clover"),this.getProvider=async()=>{const{clover_solana:e}=window;if(null===e||void 0===e||!e.isCloverWallet)throw new Error("Wallet is not connected");return e},this.getAddress=async()=>{const e=await this.getProvider(),t=await e.getAccount();if(!n.account.isAddress(t))throw new Error("There is no Solana account");return t},this.rawSignTransaction=async e=>{const t=await this.getProvider(),s=await this.getAddress(),r=n.account.fromAddress(s);e.feePayer=r;const{signature:a}=await t.signTransaction(e);return{publicKey:r,signature:a}},this.signMessage=async e=>{if(!e)throw new Error("Message must be a non-empty string");const t=await this.getProvider(),s=await this.getAddress(),r=(new TextEncoder).encode(e),{signature:n}=await t.signMessage(r,"utf8");return{address:s,signature:i.from(n).toString("hex"),message:e}},this.verifySignature=async(e,t,s)=>{s=s||await this.getAddress();const a=n.account.fromAddress(s),o=i.from(e,"hex"),c=(new TextEncoder).encode(t);return r.sign.detached.verify(c,o,a.toBuffer())}}}const c=o},6051:(e,t,s)=>{"use strict";s.d(t,{Z:()=>o});var r=s(95418),n=s(68532),a=s(55721);class i extends a.Z{constructor(){super("Coin98"),this.getProvider=async()=>{var e;const{sol:t}=(null===(e=window)||void 0===e?void 0:e.coin98)||{};if(!t)throw new Error("Wallet is not connected");return t},this.getAddress=async()=>{const e=await this.getProvider(),[t]=await e.request({method:"sol_accounts"})||[];if(!r.account.isAddress(t))throw new Error("There is no Solana account");return t},this.rawSignTransaction=async e=>{const t=await this.getProvider(),s=await this.getAddress(),a=r.account.fromAddress(s);e.feePayer=a;const{signature:i}=await t.request({method:"sol_sign",params:[e]});return{publicKey:a,signature:(0,n.decode)(i)}},this.signMessage=async e=>{if(!e)throw new Error("Message must be a non-empty string");const t=await this.getProvider();return await t.request({method:"sol_sign",params:[e]})},this.verifySignature=async(e,t,s)=>{s=s||await this.getAddress();return await r.account.verifySignature(s,e,t)}}}const o=i},58181:(e,t,s)=>{"use strict";s.d(t,{Z:()=>a});var r=s(55721);class n extends r.Z{constructor(){let e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:()=>{};super("Guest"),this._callback=()=>{},this._error=()=>{throw new Error("You are in the Guest Mode. Please connect your personal wallet to proceed the action.")},this.getProvider=async()=>({address:"GuestAccount11111111111111111111111111111111",disconnect:()=>{}}),this.getAddress=async()=>{const{address:e}=await this.getProvider();return e},this.rawSignTransaction=async e=>(await this._callback(),this._error()),this.signMessage=async e=>(await this._callback(),this._error()),this.verifySignature=async(e,t,s)=>(await this._callback(),this._error()),this._callback=e}}const a=n},37344:(e,t,s)=>{"use strict";s.d(t,{Z:()=>c});var r=s(44967),n=s(95418),a=s(55721),i=s(97429).Buffer;class o extends a.Z{constructor(){super("Phantom"),this.getProvider=async()=>{const{solana:e}=window;if(null===e||void 0===e||!e.isPhantom)throw new Error("Wallet is not connected");return e.isConnected?e:(e.connect(),await new Promise((t=>e.on("connect",(()=>t(e))))))},this.getAddress=async()=>{const e=(await this.getProvider()).publicKey.toString();if(!n.account.isAddress(e))throw new Error("There is no Solana account");return e},this.rawSignTransaction=async e=>{const t=await this.getProvider(),s=await this.getAddress(),r=n.account.fromAddress(s);e.feePayer=r;const{signature:a}=await t.signTransaction(e);return{publicKey:r,signature:a}},this.signMessage=async e=>{if(!e)throw new Error("Message must be a non-empty string");const t=await this.getProvider(),s=await this.getAddress(),r=(new TextEncoder).encode(e),{signature:n}=await t.signMessage(r,"utf8");return{address:s,signature:i.from(n).toString("hex"),message:e}},this.verifySignature=async(e,t,s)=>{s=s||await this.getAddress();const a=n.account.fromAddress(s),o=i.from(e,"hex"),c=(new TextEncoder).encode(t);return r.sign.detached.verify(c,o,a.toBuffer())}}}const c=o},84048:(e,t,s)=>{"use strict";s.d(t,{Z:()=>d});var r=s(44967),n=s(95418),a=s(55721),i=s(88490),o=s(97429).Buffer;class c extends a.Z{constructor(e){super("SecretKey"),this._setSecretKey=e=>{if(!e)throw new Error("Invalid secret key");i.Z.set("SecretKey",e)},this.getProvider=async()=>{const e=i.Z.get("SecretKey"),t=n.account.fromSecretKey(e);if(!t)throw new Error("Cannot get the keystore-based provider");return{keypair:t,disconnect:()=>i.Z.clear("SecretKey")}},this.getAddress=async()=>{const{keypair:e}=await this.getProvider();return e.publicKey.toBase58()},this.rawSignTransaction=async e=>{if(!window.confirm("Please confirm to sign the transaction!"))throw new Error("User rejects to sign the transaction");const{keypair:t}=await this.getProvider(),s=e.serializeMessage();return{publicKey:t.publicKey,signature:r.sign.detached(s,t.secretKey)}},this.signMessage=async e=>{if(!e)throw new Error("Message must be a non-empty string");if(!window.confirm(`Please confirm to sign the message! Message: ${e}`))throw new Error("User rejects to sign the message");const{keypair:t}=await this.getProvider(),s=o.from(t.secretKey).toString("hex");return{...n.account.signMessage(e,s)}},this.verifySignature=async(e,t,s)=>{s=s||await this.getAddress();return n.account.verifySignature(s,e,t)},this._setSecretKey(e)}}const d=c},13974:(e,t,s)=>{"use strict";s.d(t,{Z:()=>h});var r=s(71256),n=s(44967),a=s(95418),i=s(68532),o=s(55721),c=s(97429).Buffer;class d extends o.Z{constructor(){super("Slope"),this.provider=void 0,this.getProvider=async()=>{const{Slope:e}=window||{};if(!e)throw new Error("Cannot connect to Slope");return this.provider||(this.provider=new e,await this.provider.connect()),this.provider},this.getAddress=async()=>{const e=await this.getProvider(),{data:t}=await e.connect();if(!t.publicKey)throw new Error("Wallet is not connected");return t.publicKey},this.rawSignTransaction=async e=>{const t=await this.getProvider(),s=(0,i.encode)(e.serializeMessage()),{msg:n,data:a}=await t.signTransaction(s);if(!a.publicKey)throw new Error(n);return{publicKey:new r.PublicKey(a.publicKey),signature:(0,i.decode)(a.signature)}},this.verifySignature=async(e,t,s)=>{const r=s||await this.getAddress(),i=a.account.fromAddress(r),o=c.from(e,"hex"),d=(new TextEncoder).encode(t);return n.sign.detached.verify(d,o,i.toBuffer())},this.provider=null}}const h=d},60766:(e,t,s)=>{"use strict";s.d(t,{Z:()=>c});var r=s(44967),n=s(95418),a=s(55721),i=s(97429).Buffer;class o extends a.Z{constructor(){super("SolflareExtension"),this.getProvider=async()=>{const{solflare:e}=window;if(!e.isSolflare)throw new Error("Wallet is not connected");return e.isConnected?e:(e.connect(),await new Promise((t=>e.on("connect",(()=>t(e))))))},this.getAddress=async()=>{const e=(await this.getProvider()).publicKey.toString();if(!n.account.isAddress(e))throw new Error("There is no Solana account");return e},this.rawSignTransaction=async e=>{const t=await this.getProvider(),s=await this.getAddress(),r=n.account.fromAddress(s);e.feePayer=r;const{signature:a}=await t.signTransaction(e);return{publicKey:r,signature:a}},this.signMessage=async e=>{if(!e)throw new Error("Message must be a non-empty string");const t=await this.getProvider(),s=await this.getAddress(),r=(new TextEncoder).encode(e),{signature:n}=await t.signMessage(r,"utf8");return{address:s,signature:i.from(n).toString("hex"),message:e}},this.verifySignature=async(e,t,s)=>{s=s||await this.getAddress();const a=n.account.fromAddress(s),o=i.from(e,"hex"),c=(new TextEncoder).encode(t);return r.sign.detached.verify(c,o,a.toBuffer())}}}const c=o},31669:(e,t,s)=>{"use strict";s.d(t,{Z:()=>h});var r=s(44967),n=s(95418),a=s(12053),i=s(55721),o=s(60980),c=s(97429).Buffer;class d extends i.Z{constructor(){super("SolflareWeb"),this.provider=void 0,this.getProvider=async()=>(this.provider.connected||await this.provider.connect(),this.provider),this.getAddress=async()=>{const e=await this.getProvider();if(!e.publicKey)throw new Error("Cannot connect to Solflare");return e.publicKey.toBase58()},this.rawSignTransaction=async e=>{const t=await this.getProvider(),s=await this.getAddress(),r=n.account.fromAddress(s);e.feePayer=r;const{signature:a}=await t.signTransaction(e);return{publicKey:r,signature:a}},this.signMessage=async e=>{if(!e)throw new Error("Message must be a non-empty string");const t=await this.getProvider(),s=await this.getAddress(),r=(new TextEncoder).encode(e),{signature:n}=await t.sign(r,"utf8");return{address:s,signature:c.from(n).toString("hex"),message:e}},this.verifySignature=async(e,t,s)=>{s=s||await this.getAddress();const a=n.account.fromAddress(s),i=c.from(e,"hex"),o=(new TextEncoder).encode(t);return r.sign.detached.verify(o,i,a.toBuffer())};const{sol:{node:e}}=o.Z;this.provider=new a.Z("https://solflare.com/provider",e)}}const h=d},2491:(e,t,s)=>{"use strict";s.d(t,{Z:()=>h});var r=s(44967),n=s(95418),a=s(12053),i=s(55721),o=s(60980),c=s(97429).Buffer;class d extends i.Z{constructor(){super("SolletWeb"),this.provider=void 0,this.getProvider=async()=>(this.provider.connected||await this.provider.connect(),this.provider),this.getAddress=async()=>{const e=await this.getProvider();if(!e.publicKey)throw new Error("Cannot connect to Sollet Web");return e.publicKey.toBase58()},this.rawSignTransaction=async e=>{const t=await this.getProvider(),s=await this.getAddress(),r=n.account.fromAddress(s);e.feePayer=r;const{signature:a}=await t.signTransaction(e);return{publicKey:r,signature:a}},this.signMessage=async e=>{if(!e)throw new Error("Message must be a non-empty string");const t=await this.getProvider(),s=await this.getAddress(),r=(new TextEncoder).encode(e),{signature:n}=await t.sign(r,"utf8");return{address:s,signature:c.from(n).toString("hex"),message:e}},this.verifySignature=async(e,t,s)=>{s=s||await this.getAddress();const a=n.account.fromAddress(s),i=c.from(e,"hex"),o=(new TextEncoder).encode(t);return r.sign.detached.verify(o,i,a.toBuffer())};const{sol:{node:e}}=o.Z;this.provider=new a.Z("https://www.sollet.io",e)}}const h=d},3007:(e,t,s)=>{"use strict";s.d(t,{Z:()=>c});var r=s(15454),n=s.n(r),a=s(95418),i=s(83868);class o{constructor(e){if(this.dbName=void 0,this.driver=void 0,this.ipfs=void 0,this.createInstance=e=>n().createInstance({driver:this.driver,name:this.dbName,storeName:e}),this.dropInstance=async e=>{const t=this.createInstance(e);return await t.clear(),await n().dropInstance({name:this.dbName,storeName:e})},this.all=async()=>{let e={};const t=(await this.createInstance("sentre").getItem("appIds")||[]).flat().concat(["sentre"]);for(const s of t){e[s]={};const t=this.createInstance(s);await t.iterate(((t,r)=>{e[s][r]=t}))}return e},this.fetch=async e=>await this.ipfs.get(e),this.backup=async()=>{const e=await this.all();return await this.ipfs.set(e)},this.restore=async e=>{const t=await this.fetch(e);for(const s in t){const e=await this.createInstance(s);for(const r in t[s]){const n=t[s][r];await e.setItem(r,n)}}return t},!a.account.isAddress(e))throw new Error("Invalid address");this.dbName=e,this.driver=[n().WEBSQL,n().LOCALSTORAGE],this.ipfs=new i.Z}}const c=o},83868:(e,t,s)=>{"use strict";s.d(t,{Z:()=>o});var r=s(850),n=s(12677),a=s(97429).Buffer;class i{constructor(){this._ipfs=async()=>{try{return window.ipfs||(window.ipfs=await(0,r.Ue)()),window.ipfs}catch(e){return await(0,n.sA)(500),await this._ipfs()}},this.get=async e=>{if(!i.isCID(e))throw new Error("Invalid CID");const t=await this._ipfs(),s=await t.cat(e);let r="";for await(const n of s)r+=a.from(n).toString();return JSON.parse(r)},this.set=async e=>{if(!e)throw new Error("Empty data");const t=JSON.stringify(e),s=await this._ipfs(),{path:r}=await s.add(t);return r}}}i.isCID=e=>{try{return!!e&&r.bf.multihash(e)}catch(t){return!1}};const o=i},43094:()=>{},69159:()=>{},35883:()=>{},5696:()=>{},64009:()=>{},42611:()=>{},88795:()=>{},89408:()=>{},87017:()=>{},74056:()=>{},57600:()=>{},21724:()=>{},39370:()=>{},62678:()=>{},25819:()=>{}}]);
//# sourceMappingURL=730.f4b02a5a.chunk.js.map