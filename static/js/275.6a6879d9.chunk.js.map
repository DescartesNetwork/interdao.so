{"version":3,"file":"static/js/275.6a6879d9.chunk.js","mappings":"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","sources":["../../../src/index.ts","../node_modules/localforage/dist/localforage.js"],"sourcesContent":[null,"/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n"],"names":["Wallet","EventEmitter","constructor","provider","_network","Map","e","_injectedProvider","source","window","origin","_providerUrl","_a","_popup","data","method","newPublicKey","PublicKey","params","publicKey","_publicKey","equals","handleDisconnect","_autoApprove","autoApprove","emit","result","error","promises","_responsePromises","get","id","resolve","reject","Error","disconnect","a","isObject","postMessage","isString","URL","hash","URLSearchParams","location","network","toString","handleConnect","_handlerAdded","addEventListener","handleMessage","_beforeUnload","Promise","sendRequest","name","open","once","removeEventListener","forEach","delete","connected","requestId","_nextRequestId","set","jsonrpc","_b","_c","_d","focus","connect","close","sign","display","Uint8Array","response","signature","bs58","signTransaction","transaction","message","serializeMessage","addSignature","signAllTransactions","transactions","messages","map","tx","signatures","s","idx","diffieHellman","module","exports","t","n","r","o","u","i","f","code","l","call","length","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","queue","oldQueue","len","immediate","task","push","this","self","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","value","returnValue","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","tryToUnwrap","tryCatch","status","out","reason","all","iterable","Object","prototype","values","Array","resolved","allResolver","resolveFromAll","outValue","race","_typeof","Symbol","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","indexOf","IDBKeyRange","createBlob","parts","properties","Blob","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","charCodeAt","_checkBlobSupportWithoutCaching","txn","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","db","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","onversionchange","target","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","mode","retries","undefined","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","getItem","req","iterate","openCursor","iterationNumber","cursor","setItem","blobSupport","store","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","config","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","c","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","isNaN","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js"],"sourceRoot":""}