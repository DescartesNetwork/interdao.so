{"version":3,"file":"static/js/143.53341a2c.chunk.js","mappings":"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","sources":["shared/antd/ionicon/assets/icon-telegram.svg","shared/antd/ionicon/customs.tsx","shared/antd/ionicon/index.tsx","app/view/dao/hero/banner.tsx","app/view/dao/hero/infoCard.tsx","app/configs/manifest.config.ts","app/helpers/safeWallet.ts","app/configs/sol.config.ts","app/configs/index.ts","app/model/proposal.controller.tsx","app/view/dao/hero/index.tsx","app/components/statisticCard.tsx","app/components/regimeTag.tsx","shared/antd/mint/mintAvatar.tsx","shared/antd/mint/mintName.tsx","shared/antd/mint/mintSymbol.tsx","shared/antd/mint/mintSelection/mintTag.tsx","shared/antd/mint/mintSelection/mintCard.tsx","shared/antd/mint/mintSelection/useAllMintAddresses.ts","shared/antd/mint/mintSelection/useSearchedMintAddresses.ts","shared/antd/mint/mintSelection/index.tsx","shared/antd/mint/mintSelection/useRecommendedMintAddresses.ts","shared/antd/mint/mintSelection/useRandomMintAddress.ts","app/components/gradientAvatar/index.tsx","app/model/metadata.controller.tsx","app/hooks/useMembers.ts","app/helpers/index.ts","app/hooks/useMetaData.ts","app/view/dao/daoList/daoCard.tsx","app/view/dao/daoList/search/index.tsx","app/view/dao/daoInitialization/components/cardRegime.tsx","app/view/dao/daoInitialization/flexibleDAO/daoRule/regimeInput.tsx","app/view/dao/daoList/sortDao.tsx","app/view/dao/daoList/typeOfDao.tsx","app/view/dao/daoList/search/daoProvider.ts","app/hooks/useSearchDao.ts","app/view/dao/daoList/index.tsx","app/view/dao/daoList/yourDao.tsx","app/view/dao/index.tsx","app/components/proposalStatus.tsx","app/components/rowSpaceBetween.tsx","app/components/rowSpaceVertical.tsx","shared/hooks/useMintDecimals.ts","app/view/proposal/modalTemplateInfo/transferInfo.tsx","app/hooks/useProposal.ts","app/view/proposal/modalTemplateInfo/component/templateInfo.tsx","app/hooks/useProposalStatus.ts","app/hooks/useProposalMetaData.ts","app/view/proposal/proposalList/proposalCard.tsx","app/model/template.controller.tsx","shared/antd/numericInput.tsx","app/view/templates/spl/transfer/index.tsx","app/static/images/templates/solana.svg","app/view/templates/spl/index.tsx","app/view/templates/index.tsx","app/view/proposal/proposalList/index.tsx","app/hooks/useBalance.ts","app/view/dao/daoDetails/daoOwnerAssets/treasury/mintBalance.tsx","app/view/dao/daoDetails/daoOwnerAssets/treasury/index.tsx","app/view/dao/daoDetails/daoOwnerAssets/index.tsx","app/view/dao/daoDetails/members.tsx","app/hooks/useParseQuorumText.ts","app/view/dao/daoDetails/index.tsx","app/view/proposal/index.tsx","app/view/proposal/proposalInitialization/consensusMechanismInput.tsx","app/components/consensusQuorumInput.tsx","app/view/proposal/proposalInitialization/durationInput.tsx","app/view/proposal/proposalInitialization/proposalPreview.tsx","app/view/proposal/proposalInitialization/index.tsx","app/model/dao.controller.tsx","app/view/dao/daoInitialization/chooseDaoType.tsx","app/view/dao/daoInitialization/flexibleDAO/reviewAndCreate.tsx","app/view/dao/daoInitialization/multisigDAO/reviewAndCreate.tsx","shared/hooks/useMintSupply.ts","app/view/dao/daoInitialization/flexibleDAO/daoRule/circulatingSupplyInput.tsx","app/view/dao/daoInitialization/flexibleDAO/daoRule/tokenAddressInput.tsx","app/view/dao/daoInitialization/flexibleDAO/daoRule/index.tsx","app/view/dao/daoInitialization/multisigDAO/daoRule/regime.tsx","app/view/dao/daoInitialization/components/privacyDAO.tsx","app/view/dao/daoInitialization/multisigDAO/daoRule/memberInput.tsx","app/view/dao/daoInitialization/multisigDAO/daoRule/daoMembers.tsx","app/view/dao/daoInitialization/multisigDAO/daoRule/index.tsx","app/view/dao/daoInitialization/metaDataForm.tsx","app/view/dao/daoInitialization/initDAOContainer.tsx","app/view/dao/daoInitialization/initDAOHeader.tsx","app/view/dao/daoInitialization/actions/backAction.tsx","app/view/dao/daoInitialization/actions/continuesAction.tsx","app/view/dao/daoInitialization/actions/index.tsx","app/helpers/mutisigWallet.ts","app/view/dao/daoInitialization/index.tsx","app/hooks/useReceipts.ts","app/view/proposal/proposalDetails/cardStatus.tsx","app/model/voteBid.controller.tsx","shared/hooks/useAccountBalance.ts","app/helpers/countDown.ts","app/view/proposal/proposalDetails/cardVote.tsx","app/view/proposal/modalTemplateInfo/index.tsx","app/view/proposal/proposalDetails/cardInfo.tsx","app/view/proposal/proposalDetails/cardProgress.tsx","app/view/proposal/proposalDetails/history/columnType.tsx","app/view/proposal/proposalDetails/history/columnPower.tsx","app/view/proposal/proposalDetails/history/columnName.tsx","app/view/proposal/proposalDetails/history/column.tsx","app/view/proposal/proposalDetails/history/index.tsx","app/view/proposal/proposalDetails/index.tsx","app/view/watcher/dao.watcher.tsx","app/view/watcher/proposal.watcher.tsx","app/model/receipt.controller.tsx","app/view/watcher/receipt.watcher.tsx","app/view/index.tsx","app/model/index.ts","app/bootstrap.app.tsx","shared/dataloader/constant.ts","shared/dataloader/request.ts","shared/dataloader/cache.ts","shared/dataloader/index.ts","shared/devTools.ts","shared/pdb/index.ts","shared/pdb/ipfs.ts","shared/runtime.ts","shared/storage.ts","shared/util.ts"],"sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgIconTelegram(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"inherit\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    width: \"50px\",\n    height: \"50px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.137,6.552c-0.75-0.636-1.928-0.727-3.146-0.238l-0.002,0C41.708,6.828,6.728,21.832,5.304,22.445 c-0.259,0.09-2.521,0.934-2.288,2.814c0.208,1.695,2.026,2.397,2.248,2.478l8.893,3.045c0.59,1.964,2.765,9.21,3.246,10.758 c0.3,0.965,0.789,2.233,1.646,2.494c0.752,0.29,1.5,0.025,1.984-0.355l5.437-5.043l8.777,6.845l0.209,0.125 c0.596,0.264,1.167,0.396,1.712,0.396c0.421,0,0.825-0.079,1.211-0.237c1.315-0.54,1.841-1.793,1.896-1.935l6.556-34.077 C47.231,7.933,46.675,7.007,46.137,6.552z M22,32l-3,8l-3-10l23-17L22,32z\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconTelegram);\nexport default __webpack_public_path__ + \"static/media/icon-telegram.2450489f40d03000fe65fc1c6f238d85.svg\";\nexport { ForwardRef as ReactComponent };","import IconTele from './assets/icon-telegram.svg'\n\nexport const CUSTOM_ICONS: Record<string, string> = {\n  'logo-telegram': IconTele,\n}\n","/**\n * IonIcon 5\n * Credit https://ionic.io/ionicons\n */\n\nimport { forwardRef } from 'react'\nimport { CUSTOM_ICONS } from './customs'\n\n/**\n * IonIcon\n * @param name The icon name. You can find it here https://ionic.io/ionicons\n * @param className To modify the span class\n */\nconst IonIcon = forwardRef<\n  HTMLElement,\n  { name: string; className?: string } & any\n>(({ name, className, ...props }, ref) => {\n  const cln = className ? 'anticon ' + className : 'anticon'\n\n  return (\n    <span className={cln} {...props}>\n      {CUSTOM_ICONS[name] ? (\n        <ion-icon ref={ref} src={CUSTOM_ICONS[name]} />\n      ) : (\n        <ion-icon ref={ref} name={name} />\n      )}\n    </span>\n  )\n})\n\nexport default IonIcon\n","import { Col, Row, Space, Typography } from 'antd'\n\nconst Banner = () => {\n  return (\n    <Row gutter={[16, 16]} justify=\"center\">\n      <Col>\n        <Space direction=\"vertical\" size={0}>\n          <Typography.Title\n            level={1}\n            style={{ fontSize: 72, textAlign: 'center' }}\n          >\n            Let's build\n          </Typography.Title>\n          <Typography.Title\n            level={1}\n            style={{ fontSize: 72, textAlign: 'center' }}\n            className=\"spec-title\"\n          >\n            Your own DAO.\n          </Typography.Title>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Typography.Paragraph\n          type=\"secondary\"\n          style={{ fontSize: 20, textAlign: 'center' }}\n        >\n          Customize the DAO to your purpose - No coding needed.\n        </Typography.Paragraph>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Banner\n","import { ReactNode } from 'react'\n\nimport { Card, Col, Row, Space, Typography } from 'antd'\n\nexport type InfoCardProps = {\n  icon?: ReactNode\n  title?: string\n  value?: string\n}\n\nconst InfoCard = ({ icon, title, value }: InfoCardProps) => {\n  return (\n    <Card\n      bordered={false}\n      style={{\n        background: 'transparent',\n        borderLeft: '1px solid',\n        borderRadius: 'unset',\n      }}\n      bodyStyle={{\n        padding: '0 24px',\n      }}\n    >\n      <Row gutter={[5, 5]}>\n        <Col span={24}>\n          <Space>\n            {icon}\n            <Typography.Text type=\"secondary\">{title}</Typography.Text>\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Typography.Title level={4}>{value}</Typography.Title>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default InfoCard\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Transaction, PublicKey } from '@solana/web3.js'\nimport { AnchorWallet } from '@interdao/core'\nimport { WalletInterface } from '@senswap/sen-js'\n\nclass SafeWallet implements AnchorWallet {\n  private _wallet: WalletInterface = window.sentre.wallet\n  private _publicKey: PublicKey = new PublicKey(\n    'GuestAccount11111111111111111111111111111111',\n  )\n\n  constructor() {\n    this._init()\n  }\n\n  private _init = async () => {\n    const address = await this._wallet.getAddress()\n    this._publicKey = new PublicKey(address)\n  }\n\n  signTransaction = async (tx: Transaction): Promise<Transaction> => {\n    return this._wallet.signTransaction(tx)\n  }\n\n  signAllTransactions = async (txs: Transaction[]): Promise<Transaction[]> => {\n    let signedTxs: Transaction[] = []\n    for (const tx of txs) {\n      const signedTx = await this.signTransaction(tx)\n      signedTxs.push(signedTx)\n    }\n    return signedTxs\n  }\n\n  get publicKey() {\n    console.warn(\n      'This is an async getter for interface consistency. Please do not fully rely on this function.',\n    )\n    return this._publicKey\n  }\n}\n\nexport default SafeWallet\n","import InterDAO from '@interdao/core'\n\nimport SafeWallet from 'app/helpers/safeWallet'\nimport { Net } from 'shared/runtime'\n\n/**\n * Contructor\n */\ntype Conf = {\n  interDao: InterDAO\n  fee: string\n  taxman: string\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    interDao: new InterDAO(new SafeWallet(), 'https://api.devnet.solana.com'),\n    fee: '50000', // 0.000005 SOL\n    taxman: '8W6QginLcAydYyMYjxuyKQN56NzeakDE3aRFrAmocS6D',\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    interDao: new InterDAO(new SafeWallet(), 'https://api.testnet.solana.com'),\n    fee: '50000', // 0.000005 SOL\n    taxman: '8W6QginLcAydYyMYjxuyKQN56NzeakDE3aRFrAmocS6D',\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    interDao: new InterDAO(new SafeWallet(), 'https://ssc-dao.genesysgo.net/'),\n    fee: '50000', // 0.000005 SOL\n    taxman: '8W6QginLcAydYyMYjxuyKQN56NzeakDE3aRFrAmocS6D',\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from 'shared/runtime'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { ProposalData } from '@interdao/core'\nimport { account } from '@senswap/sen-js'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type ProposalState = Record<string, ProposalData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'proposal'\nconst initialState: ProposalState = {}\n\n/**\n * Actions\n */\n\nexport const getProposals = createAsyncThunk(\n  `${NAME}/getProposals`,\n  async ({ daoAddress }: { daoAddress: string }) => {\n    const {\n      provider: { connection },\n      programId,\n    } = interDao.program\n    const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n      await connection.getProgramAccounts(programId, {\n        filters: [\n          {\n            memcmp: {\n              offset: 48,\n              bytes: daoAddress,\n            },\n          },\n        ],\n      })\n    let bulk: ProposalState = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = interDao.parseProposalData(buf)\n      bulk[address] = data\n    })\n    return bulk\n  },\n)\n\nexport const getProposal = createAsyncThunk<\n  ProposalState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getProposal`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    dao: { [address]: data },\n  } = getState()\n  if (data && !force) return { [address]: data }\n  const raw = await interDao.getProposalData(address)\n  return { [address]: raw }\n})\n\nexport const upsetProposal = createAsyncThunk<\n  ProposalState,\n  { address: string; data: ProposalData },\n  { state: any }\n>(`${NAME}/upsetProposal`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteProposal = createAsyncThunk(\n  `${NAME}/deleteProposal`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getProposals.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteProposal.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Col, Row } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport Banner from './banner'\nimport InfoCard from './infoCard'\n\nimport { numeric } from 'shared/util'\nimport { AppDispatch, AppState } from 'app/model'\nimport { getProposals } from 'app/model/proposal.controller'\n\nimport './index.less'\n\nconst Hero = () => {\n  const {\n    dao: { daoData },\n    proposal,\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const totalDao = useMemo(() => {\n    if (!daoData) return 0\n    return Object.keys(daoData).length\n  }, [daoData])\n\n  const totalProposal = useMemo(() => {\n    if (!daoData) return 0\n    return Object.keys(proposal).length\n  }, [daoData, proposal])\n\n  const executeProposal = useMemo(() => {\n    let total = 0\n    for (const proposalAddr in proposal) {\n      const { executed } = proposal[proposalAddr]\n      if (executed) total++\n      continue\n    }\n    return total\n  }, [proposal])\n\n  useEffect(() => {\n    const daoAddresses = Object.keys(daoData)\n    for (const daoAddress of daoAddresses) {\n      dispatch(getProposals({ daoAddress }))\n    }\n  }, [daoData, dispatch])\n\n  return (\n    <Row className=\"interdao-banner\" justify=\"center\">\n      <Col xs={24} lg={18}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Banner />\n          </Col>\n          <Col xs={24} sm={12} lg={8}>\n            <InfoCard\n              icon={<IonIcon name=\"earth-outline\" />}\n              title=\"Total DAOs\"\n              value={numeric(totalDao).format('0,0')}\n            />\n          </Col>\n          <Col xs={24} sm={12} lg={8}>\n            <InfoCard\n              icon={<IonIcon name=\"pencil-outline\" />}\n              title=\"Total Proposals\"\n              value={numeric(totalProposal).format('0,0')}\n            />\n          </Col>\n          <Col xs={24} sm={12} lg={8}>\n            <InfoCard\n              icon={<IonIcon name=\"thumbs-up-outline\" />}\n              title=\"Total executed proposals\"\n              value={numeric(executeProposal).format('0,0')}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Hero\n","import { ReactNode } from 'react'\n\nimport { Space, Typography } from 'antd'\n\nexport type StatisticCardProps = {\n  title: string\n  value: string | number | ReactNode\n}\nconst StatisticCard = ({ title, value }: StatisticCardProps) => {\n  return (\n    <Space direction=\"vertical\">\n      <Typography.Text className=\"caption\" type=\"secondary\">\n        {title}\n      </Typography.Text>\n      {['number', 'string'].includes(typeof value) ? (\n        <Typography.Text>{value}</Typography.Text>\n      ) : (\n        value\n      )}\n    </Space>\n  )\n}\n\nexport default StatisticCard\n","import { useMemo } from 'react'\nimport { DaoRegime, DaoRegimes } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\n\nimport { Tag } from 'antd'\n\nexport type RegimeTagProps = { regime: DaoRegime; special?: boolean }\n\nconst RegimeTag = ({ regime, special }: RegimeTagProps) => {\n  const tag = useMemo(() => {\n    if (isEqual(regime, DaoRegimes.Dictatorial)) return 'Dictatorial'\n    if (isEqual(regime, DaoRegimes.Democratic)) return 'Democratic'\n    if (isEqual(regime, DaoRegimes.Autonomous)) return 'Autonomous'\n    return 'DAO Regime'\n  }, [regime])\n\n  const className = special ? 'regime-tag dao-tag' : 'dao-tag'\n\n  return (\n    <Tag className={className} style={{ margin: 0 }}>\n      {tag}\n    </Tag>\n  )\n}\n\nexport default RegimeTag\n","import { ReactNode, useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nimport { Avatar } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nconst DEFAULT_AVATARS: Array<string | undefined> = [undefined]\n\nexport type MintAvatarProps = {\n  mintAddress: string\n  size?: number\n  icon?: ReactNode\n  reversed?: boolean\n}\n\n/**\n * Mint/Token avatar, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param size - Avatar size. Default 24px.\n * @param icon - Fallback icon for unknown token\n * @param reversed - (Optional) The default LP token avatar is A-B. The reversed is to change it to B-A\n * @returns name\n */\nconst MintAvatar = ({\n  mintAddress,\n  size = 24,\n  icon = <IonIcon name=\"diamond-outline\" />,\n  reversed = false,\n  ...props\n}: MintAvatarProps) => {\n  const [avatars, setAvatars] = useState(DEFAULT_AVATARS)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveAvatar = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.logoURI) return token.logoURI\n      return undefined\n    },\n    [tokenProvider],\n  )\n\n  const deriveAvatars = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setAvatars(DEFAULT_AVATARS)\n    // LP mint\n    const poolData = Object.values(pools || {}).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const avatars = await Promise.all([mint_a, mint_b].map(deriveAvatar))\n      if (reversed) avatars.reverse()\n      return setAvatars(avatars)\n    }\n    // Normal mint\n    const avatar = await deriveAvatar(mintAddress)\n    return setAvatars([avatar])\n  }, [mintAddress, reversed, deriveAvatar, pools])\n\n  useEffect(() => {\n    deriveAvatars()\n  }, [deriveAvatars])\n\n  if (avatars.length === 1)\n    return (\n      <Avatar\n        src={avatars[0]}\n        size={size}\n        style={{ backgroundColor: '#2D3355', border: 'none' }}\n        {...props}\n      >\n        {icon}\n      </Avatar>\n    )\n  return (\n    <Avatar.Group style={{ display: 'block', whiteSpace: 'nowrap' }} {...props}>\n      {avatars.map((avatar, i) => (\n        <Avatar\n          key={i}\n          src={avatar}\n          size={size}\n          style={{ backgroundColor: '#2D3355', border: 'none' }}\n        >\n          {icon}\n        </Avatar>\n      ))}\n    </Avatar.Group>\n  )\n}\n\nexport default MintAvatar\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nconst DEFAULT_NAME = 'Unknown Token'\n\n/**\n * Mint/Token name, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param separator - (Optional) In case of LP tokens, the names is combined by 2 token names. The separator is to separate them.\n * @param reversed - (Optional) The default LP token names is A-B. The reversed is to change it to B-A\n * @returns name\n */\nconst MintName = ({\n  mintAddress,\n  separator = ' • ',\n  reversed = false,\n}: {\n  mintAddress: string\n  separator?: string\n  reversed?: boolean\n}) => {\n  const [name, setName] = useState(DEFAULT_NAME)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveName = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.name) return token.name\n      return DEFAULT_NAME\n    },\n    [tokenProvider],\n  )\n\n  const deriveNames = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setName(DEFAULT_NAME)\n    // LP mint\n    const poolData = Object.values(pools || {}).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const names = await Promise.all([mint_a, mint_b].map(deriveName))\n      if (reversed) names.reverse()\n      return setName(`${names.join(separator)} LP`)\n    }\n    // Normal mint\n    const name = await deriveName(mintAddress)\n    return setName(name)\n  }, [mintAddress, reversed, deriveName, pools, separator])\n\n  useEffect(() => {\n    deriveNames()\n  }, [deriveNames])\n\n  return <span>{name}</span>\n}\n\nexport default MintName\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { useMint, usePool } from '@senhub/providers'\n\nconst DEFAULT_SYMBOL = 'TOKN'\n\n/**\n * Mint/Token symbol, supporting LP tokens\n * @param mintAddress -  Mint address\n * @param separator - (Optional) In case of LP tokens, the symbols is combined by 2 token symbols. The separator is to separate them.\n * @param reversed - (Optional) The default LP token symbol is A-B. The reversed is to change it to B-A\n * @returns symbol\n */\nconst MintSymbol = ({\n  mintAddress,\n  separator = ' • ',\n  reversed = false,\n}: {\n  mintAddress: string\n  separator?: string\n  reversed?: boolean\n}) => {\n  const [symbol, setSymbol] = useState(DEFAULT_SYMBOL)\n  const { tokenProvider } = useMint()\n  const { pools } = usePool()\n\n  const deriveSymbol = useCallback(\n    async (address: string) => {\n      const token = await tokenProvider.findByAddress(address)\n      if (token?.symbol) return token.symbol\n      return address.substring(0, 4)\n    },\n    [tokenProvider],\n  )\n\n  const deriveSymbols = useCallback(async () => {\n    if (!account.isAddress(mintAddress)) return setSymbol(DEFAULT_SYMBOL)\n    // LP mint\n    const poolData = Object.values(pools || {}).find(\n      ({ mint_lpt }) => mint_lpt === mintAddress,\n    )\n    if (poolData) {\n      const { mint_a, mint_b } = poolData\n      const symbols = await Promise.all([mint_a, mint_b].map(deriveSymbol))\n      if (reversed) symbols.reverse()\n      return setSymbol(symbols.join(separator))\n    }\n    // Normal mint\n    const symbol = await deriveSymbol(mintAddress)\n    return setSymbol(symbol)\n  }, [mintAddress, reversed, deriveSymbol, pools, separator])\n\n  useEffect(() => {\n    deriveSymbols()\n  }, [deriveSymbols])\n\n  return <span>{symbol}</span>\n}\n\nexport default MintSymbol\n","import { Card, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport { MintAvatar, MintName } from 'shared/antd/mint'\n\nimport { randomColor } from 'shared/util'\n\nexport type MintTagProps = {\n  mintAddress: string\n  onClick?: (mintAddress: string) => void\n  active?: boolean\n}\n\nconst MintTag = ({\n  mintAddress,\n  onClick = () => {},\n  active = false,\n}: MintTagProps) => {\n  return (\n    <Card\n      bodyStyle={{ padding: 8, cursor: 'pointer' }}\n      style={{ backgroundColor: randomColor(mintAddress, 0.2) }}\n      bordered={Boolean(active)}\n      onClick={() => onClick(mintAddress)}\n    >\n      <Space>\n        <MintAvatar mintAddress={mintAddress} />\n        <Space>\n          <Typography.Text style={{ color: randomColor(mintAddress) }}>\n            <MintName mintAddress={mintAddress} />\n          </Typography.Text>\n          {active ? <IonIcon name=\"checkmark-outline\" /> : null}\n        </Space>\n      </Space>\n    </Card>\n  )\n}\nexport default MintTag\n","import { Card, Col, Row, Space, Typography } from 'antd'\nimport { MintAvatar, MintName, MintSymbol } from 'shared/antd/mint'\n\nexport type MintSelectionProps = {\n  mintAddress: string\n  onClick?: (mintAddress: string) => void\n}\n\nconst MintCard = ({ mintAddress, onClick = () => {} }: MintSelectionProps) => {\n  return (\n    <Card\n      bodyStyle={{ padding: 8 }}\n      style={{ boxShadow: 'unset', cursor: 'pointer' }}\n      bordered={false}\n      onClick={() => onClick(mintAddress)}\n    >\n      <Row gutter={[16, 16]} align=\"middle\">\n        <Col>\n          <MintAvatar mintAddress={mintAddress} size={36} />\n        </Col>\n        <Col>\n          <Space direction=\"vertical\" size={0}>\n            <Typography.Text>\n              <MintSymbol mintAddress={mintAddress} />\n            </Typography.Text>\n            <Typography.Text type=\"secondary\" className=\"caption\">\n              <MintName mintAddress={mintAddress} />\n            </Typography.Text>\n          </Space>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default MintCard\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\n\nexport const useAllMintAddresses = () => {\n  const [allMintAddresses, setAllMintAddresses] = useState<string[]>([])\n  const { tokenProvider } = useMint()\n\n  const getRecommendedMintAddresses = useCallback(async () => {\n    const allMintAddresses = (await tokenProvider.all()).map(\n      ({ address }) => address,\n    )\n    const addresses = allMintAddresses.filter((mintAddress) =>\n      allMintAddresses.includes(mintAddress),\n    )\n    return setAllMintAddresses(addresses)\n  }, [tokenProvider])\n\n  useEffect(() => {\n    getRecommendedMintAddresses()\n  }, [getRecommendedMintAddresses])\n\n  return allMintAddresses\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\n\nlet searching: NodeJS.Timeout\n\nexport const useSearchedMintAddresses = (keyword: string = '') => {\n  const [loading, setLoading] = useState(false)\n  const [searchedMintAddresses, setSearchedMintAddresses] = useState<\n    string[] | undefined\n  >()\n  const { tokenProvider } = useMint()\n\n  const getRecommendedMintAddresses = useCallback(async () => {\n    if (!keyword) {\n      setLoading(false)\n      return setSearchedMintAddresses(undefined)\n    }\n    if (searching) clearTimeout(searching)\n    setLoading(true)\n    searching = setTimeout(async () => {\n      const addresses = (await tokenProvider.find(keyword)).map(\n        ({ address }) => address,\n      )\n      setLoading(false)\n      return setSearchedMintAddresses(addresses)\n    }, 500)\n  }, [keyword, tokenProvider])\n\n  useEffect(() => {\n    getRecommendedMintAddresses()\n  }, [getRecommendedMintAddresses])\n\n  return { searchedMintAddresses, loading }\n}\n","import {\n  CSSProperties,\n  Fragment,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react'\nimport LazyLoad, { forceCheck } from '@senswap/react-lazyload'\nimport { account } from '@senswap/sen-js'\n\nimport {\n  Button,\n  Col,\n  Divider,\n  Input,\n  Modal,\n  Row,\n  Space,\n  Typography,\n} from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport MintTag from './mintTag'\nimport MintCard from './mintCard'\n\nimport { useRecommendedMintAddresses } from './useRecommendedMintAddresses'\nimport { useSearchedMintAddresses } from './useSearchedMintAddresses'\nimport { useRandomMintAddresses } from './useRandomMintAddress'\n\nconst LIMIT = 50\n\nexport type MintSelectionProps = {\n  value: string\n  onChange: (value: string) => void\n  style?: CSSProperties\n}\n\nconst MintSelection = ({ value, onChange, style = {} }: MintSelectionProps) => {\n  const [visible, setVisible] = useState(false)\n  const [keyword, setKeyword] = useState('')\n  const recommendedMintAddresses = useRecommendedMintAddresses()\n  const { searchedMintAddresses, loading } = useSearchedMintAddresses(keyword)\n  const { randomHundredAddresses, refresh } = useRandomMintAddresses(LIMIT)\n\n  const onSelect = useCallback(\n    (mintAddress: string) => {\n      setVisible(false)\n      onChange(mintAddress)\n    },\n    [onChange],\n  )\n  const onRefresh = useCallback(() => {\n    const list = document.getElementById('sentre-token-selection-list')\n    if (list) list.scrollTop = 0\n    return refresh()\n  }, [refresh])\n\n  useEffect(() => {\n    forceCheck()\n  }, [searchedMintAddresses])\n\n  useEffect(() => {\n    if (!visible) setKeyword('')\n  }, [visible])\n\n  return (\n    <Fragment>\n      <Button\n        type=\"text\"\n        onClick={() => setVisible(true)}\n        style={{ padding: 4, ...style }}\n      >\n        <Space>\n          <MintAvatar mintAddress={value} />\n          <MintSymbol mintAddress={value} />\n          <IonIcon name=\"chevron-down-outline\" />\n        </Space>\n      </Button>\n      <Modal\n        visible={visible}\n        onCancel={() => setVisible(false)}\n        footer={null}\n        closeIcon={<IonIcon name=\"close-outline\" />}\n        centered\n        destroyOnClose\n      >\n        <Row gutter={[32, 32]}>\n          <Col span={24}>\n            <Typography.Title level={5} type=\"secondary\">\n              Token Selection\n            </Typography.Title>\n          </Col>\n          <Col span={24}>\n            <Input\n              placeholder=\"Search token symbol, name, address, ...\"\n              suffix={\n                <Button\n                  type=\"text\"\n                  style={{ marginRight: -7 }}\n                  icon={\n                    <IonIcon\n                      name={keyword ? 'close-outline' : 'search-outline'}\n                    />\n                  }\n                  onClick={keyword ? () => setKeyword('') : () => {}}\n                  loading={loading}\n                />\n              }\n              value={keyword}\n              onChange={(e) => setKeyword(e.target.value || '')}\n            />\n          </Col>\n          <Col span={24}>\n            <Row gutter={[8, 8]}>\n              {account.isAddress(value) ? (\n                <Col>\n                  <MintTag mintAddress={value} active />\n                </Col>\n              ) : null}\n              {recommendedMintAddresses\n                .filter((mintAddress) => mintAddress !== value)\n                .map((mintAddress) => (\n                  <Col key={mintAddress}>\n                    <MintTag mintAddress={mintAddress} onClick={onSelect} />\n                  </Col>\n                ))}\n            </Row>\n          </Col>\n          <Col span={24}>\n            <Row\n              gutter={[8, 8]}\n              style={{ maxHeight: 360 }}\n              className=\"scrollbar\"\n              id=\"sentre-token-selection-list\"\n            >\n              {(searchedMintAddresses || randomHundredAddresses).map(\n                (mintAddress) => (\n                  <Col span={24} key={mintAddress}>\n                    <LazyLoad height={60} overflow>\n                      <MintCard mintAddress={mintAddress} onClick={onSelect} />\n                    </LazyLoad>\n                  </Col>\n                ),\n              )}\n              {!searchedMintAddresses ? (\n                <Fragment>\n                  <Col span={24}>\n                    <Divider style={{ marginBottom: 0 }} />\n                  </Col>\n                  <Col span={24}>\n                    <Typography.Text type=\"secondary\" className=\"caption\">\n                      <IonIcon\n                        name=\"chatbox-ellipses-outline\"\n                        style={{ marginRight: 6 }}\n                      />\n                      This is the list of {LIMIT} random tokens while the full\n                      list is pretty longer. You can find your tokens by the\n                      search bar. Or{' '}\n                      <Typography.Link onClick={onRefresh}>\n                        Click here\n                      </Typography.Link>{' '}\n                      to refresh the current list.\n                    </Typography.Text>\n                  </Col>\n                </Fragment>\n              ) : null}\n            </Row>\n          </Col>\n        </Row>\n      </Modal>\n    </Fragment>\n  )\n}\n\nexport default MintSelection\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useAccount } from '@senhub/providers'\n\nimport { useAllMintAddresses } from './useAllMintAddresses'\n\nexport const useRecommendedMintAddresses = () => {\n  const [recommendedMintAddresses, setRecommendedMintAddresses] = useState<\n    string[]\n  >([])\n  const { accounts } = useAccount()\n  const allMintAddresses = useAllMintAddresses()\n\n  const myMintAddresses = useMemo(() => {\n    return Object.values(accounts)\n      .map(({ mint }) => mint)\n      .filter((mintAddress, index, self) => self.indexOf(mintAddress) === index)\n  }, [accounts])\n\n  const getRecommendedMintAddresses = useCallback(async () => {\n    const addresses = myMintAddresses.filter((mintAddress) =>\n      allMintAddresses.includes(mintAddress),\n    )\n    return setRecommendedMintAddresses(addresses)\n  }, [myMintAddresses, allMintAddresses])\n\n  useEffect(() => {\n    getRecommendedMintAddresses()\n  }, [getRecommendedMintAddresses])\n\n  return recommendedMintAddresses\n}\n","import { useCallback, useMemo, useState } from 'react'\n\nimport { useAllMintAddresses } from './useAllMintAddresses'\nimport { randElements } from 'shared/util'\n\nexport const useRandomMintAddresses = (limit: number = 0) => {\n  const [shuffle, setShuffle] = useState(0)\n  const allMintAddresses = useAllMintAddresses()\n\n  // A random limited list of tokens is to secure component performance\n  const randomHundredAddresses = useMemo(() => {\n    return randElements(allMintAddresses, limit + (shuffle - shuffle))\n  }, [allMintAddresses, shuffle, limit])\n\n  const refresh = useCallback(() => {\n    return setShuffle(shuffle + 1)\n  }, [shuffle])\n\n  return { randomHundredAddresses, refresh }\n}\n","import BN from 'bn.js'\n\nimport { Avatar, AvatarProps } from 'antd'\n\nimport gradients from './gradients.json'\n\nconst string2Number = (seed: string, limit: number) => {\n  const buf = Buffer.from(seed)\n  const index = new BN(buf).mod(new BN(limit))\n  return Number(index)\n}\n\nexport type GradientAvatarProps = { seed?: string; avatarProps?: AvatarProps }\n\nconst GradientAvatar = ({\n  seed = Math.random().toString(),\n  avatarProps = {},\n}: GradientAvatarProps) => {\n  const direction = string2Number(seed, 360)\n  const { name, colors } = gradients[string2Number(seed, gradients.length)]\n  return (\n    <Avatar\n      style={{\n        background: `linear-gradient(${direction}deg, ${colors.join(', ')})`,\n      }}\n      alt={name}\n      {...avatarProps}\n    />\n  )\n}\n\nexport default GradientAvatar\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\nimport { utils } from '@project-serum/anchor'\nimport { ConsensusQuorum, ConsensusQuorums } from '@interdao/core'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport const SOCIAL_MEDIA = ['twitter', 'discord']\n\nconst getDefaultSocial = () => {\n  return SOCIAL_MEDIA.map(() => '')\n}\n\nexport type DAOMember = {\n  name: string\n  walletAddress: string\n}\n\nexport const DEFAULT_META_DATA = {\n  address: '',\n  daoName: '',\n  description: '',\n  image: '',\n  optionals: getDefaultSocial(),\n  daoRegime: '',\n  daoType: '',\n  members: [],\n  quorum: ConsensusQuorums.Haft,\n}\n\nexport type MetaData = {\n  daoName: string\n  description: string\n  image: string | ArrayBuffer | null\n  optionals: string[]\n  address: string\n  daoRegime: string\n  daoType: string\n  members: DAOMember[]\n  quorum: ConsensusQuorum\n}\nexport type MetaDataMember = { members: number }\nexport type DaoMetaDataState = Record<string, MetaDataMember>\nexport type MetaDataState = {\n  daoMetaData: DaoMetaDataState\n  createMetaData: MetaData\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'metadata'\nconst initialState: MetaDataState = {\n  daoMetaData: {},\n  createMetaData: DEFAULT_META_DATA,\n}\n\n/**\n * Actions\n */\n\nexport const getMember = createAsyncThunk<\n  Partial<MetaDataState>,\n  { daoAddress: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getMember`, async ({ daoAddress, force }, { getState }) => {\n  if (!account.isAddress(daoAddress)) throw new Error('Invalid address')\n  const {\n    dao: {\n      daoData: {\n        [daoAddress]: { mint },\n      },\n    },\n    metadata: {\n      daoMetaData: { [daoAddress]: data },\n    },\n  } = getState()\n  const mintAddress = mint.toBase58()\n  if (!account.isAddress(mintAddress)) return {}\n  if (data && !force) return { [daoAddress]: data }\n  const {\n    provider: { connection },\n  } = interDao.program\n  const accounts = await connection.getProgramAccounts(\n    utils.token.TOKEN_PROGRAM_ID,\n    {\n      filters: [\n        { dataSize: 165 },\n        { memcmp: { bytes: mintAddress, offset: 0 } },\n      ],\n    },\n  )\n  return { [daoAddress]: { members: accounts.length } }\n})\n\nexport const setCreateDaoMetaData = createAsyncThunk(\n  `${NAME}/setCreateDaoMetaData`,\n  async (metaData?: Partial<MetaData>) => {\n    if (!metaData) return DEFAULT_META_DATA\n    return metaData\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getMember.fulfilled,\n        (state, { payload }) => void Object.assign(state.daoMetaData, payload),\n      )\n      .addCase(\n        setCreateDaoMetaData.fulfilled,\n        (state, { payload }) =>\n          void Object.assign(state.createMetaData, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { getMember, MetaData } from 'app/model/metadata.controller'\n\nconst useMembers = (daoAddress: string) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const {\n    metadata: { daoMetaData },\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n\n  const { members } = useMemo(\n    () => daoMetaData[daoAddress] || ({} as MetaData),\n    [daoAddress, daoMetaData],\n  )\n  const isExistDao = useMemo(() => {\n    return !!Object.keys(daoData).length\n  }, [daoData])\n\n  useEffect(() => {\n    if (isExistDao && account.isAddress(daoAddress))\n      dispatch(getMember({ daoAddress }))\n  }, [dispatch, daoAddress, isExistDao])\n\n  return members || 0\n}\n\nexport default useMembers\n","import { CID } from 'ipfs-core'\nimport { DaoData } from '@interdao/core'\nimport IPFS from 'shared/pdb/ipfs'\n\nimport { DaoDataState } from 'app/model/dao.controller'\nimport { MetaData } from 'app/model/metadata.controller'\nimport PDB from 'shared/pdb'\nimport configs from 'app/configs'\nimport isEqual from 'react-fast-compare'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const fileToBase64 = (\n  file: File,\n  callBack: (result: string | ArrayBuffer | null) => void,\n) => {\n  const reader = new FileReader()\n  reader.readAsDataURL(file)\n  reader.onload = async () => {\n    if (reader.result) callBack(reader.result)\n  }\n}\n\nexport const getCID = (digest: number[]) => {\n  const v0Prefix = new Uint8Array([18, 32])\n  const v0Digest = new Uint8Array(v0Prefix.length + digest?.length)\n  v0Digest.set(v0Prefix) // multicodec + length\n  v0Digest.set(digest, v0Prefix.length)\n  const cid = CID.decode(v0Digest)\n  return cid.toString()\n}\n\nexport const parseDaoData = async (\n  daoData: DaoDataState,\n): Promise<Record<string, DaoData & MetaData> | undefined> => {\n  try {\n    if (!daoData) throw new Error('Invalid Dao data!')\n    const results = await Promise.all(\n      Object.keys(daoData).map(async (daoAddr) => {\n        const data = await cacheDaoData(daoAddr, daoData[daoAddr])\n        return { [daoAddr]: data }\n      }),\n    )\n    const nextDaoData: Record<string, DaoData & MetaData> = {}\n    for (const rs of results) {\n      const daoAddr = Object.keys(rs)[0]\n      nextDaoData[daoAddr] = rs[daoAddr]\n    }\n    if (!nextDaoData) return\n    return nextDaoData\n  } catch (err) {\n    return\n  }\n}\n\nexport const cacheDaoData = async (daoAddress: string, daoData: DaoData) => {\n  const wallet = window.sentre.wallet\n  if (!wallet) throw new Error('Please connect wallet!')\n\n  const ipfs = new IPFS()\n  const { metadata, regime } = daoData || ({} as DaoData)\n  const walletAddress = await wallet.getAddress()\n  const db = new PDB(walletAddress).createInstance(appId)\n  const dbDaoData = (await db.getItem(`interdao:${daoAddress}`)) as DaoData\n  const { metadata: digest } = dbDaoData || ({} as DaoData)\n\n  if (!dbDaoData || (!!metadata && !isEqual(metadata, digest))) {\n    const cid = getCID(metadata)\n    const data = await ipfs.get(cid)\n    const daoRegime = Object.keys(regime)[0]\n    const dbData = { ...daoData, ...data, daoRegime, address: daoAddress }\n    await db.setItem(`interdao:${daoAddress}`, dbData)\n    return dbData\n  }\n  return dbDaoData\n}\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { MetaData } from 'app/model/metadata.controller'\nimport { AppState } from 'app/model'\nimport { cacheDaoData } from 'app/helpers'\nimport { DaoData } from '@interdao/core'\n\nconst useMetaData = (daoAddress: string) => {\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const [metaData, setMetaData] = useState<MetaData>()\n\n  const getMetaData = useCallback(async () => {\n    const data: DaoData & MetaData = await cacheDaoData(\n      daoAddress,\n      daoData[daoAddress],\n    )\n    setMetaData(data)\n  }, [daoAddress, daoData])\n\n  useEffect(() => {\n    getMetaData()\n  }, [getMetaData])\n\n  return metaData\n}\n\nexport default useMetaData\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { DaoData } from '@interdao/core'\nimport { useUI } from '@senhub/providers'\n\nimport {\n  Avatar,\n  Button,\n  Card,\n  Col,\n  Image,\n  Row,\n  Space,\n  Tooltip,\n  Typography,\n} from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport StatisticCard from 'app/components/statisticCard'\nimport RegimeTag from 'app/components/regimeTag'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport GradientAvatar from 'app/components/gradientAvatar'\n\nimport { AppState } from 'app/model'\nimport { numeric, shortenAddress } from 'shared/util'\nimport useMembers from 'app/hooks/useMembers'\nimport useMetaData from 'app/hooks/useMetaData'\n\nimport autonomous from 'app/static/images/system/bg-autonomous.png'\nimport democratic from 'app/static/images/system/bg-democratic.png'\nimport dictatorial from 'app/static/images/system/bg-dictatorial.png'\nimport { SOCIAL_MEDIA } from 'app/model/metadata.controller'\n\nexport type DaoCardProps = { daoAddress: string; special?: boolean }\nexport type DaoCardBackground = 'autonomous' | 'democratic' | 'dictatorial'\nconst DAO_CARD_BG = {\n  autonomous,\n  democratic,\n  dictatorial,\n}\nconst PAGE_PADDING = 24\nconst HEIGHT_RATIO = 1.777777\nconst MAX_WIDTH_RATE = 24 / 18 // full screen is 24 col, max width is 18 col\n\nconst DaoCard = ({ daoAddress, special }: DaoCardProps) => {\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const history = useHistory()\n  const {\n    ui: { width },\n  } = useUI()\n\n  const heightRatio = useMemo(() => {\n    if (width < 768) return HEIGHT_RATIO\n    if (width < 1200) return HEIGHT_RATIO * 2\n    return HEIGHT_RATIO * 3\n  }, [width])\n\n  const { regime, nonce, mint } = daoData?.[daoAddress] || ({} as DaoData)\n  const members = useMembers(daoAddress)\n  const metaData = useMetaData(daoAddress)\n  const parseRegime = Object.keys(regime)?.[0]\n  const isMobile = width < 768\n  const desktopWidth = width > 992 ? width / MAX_WIDTH_RATE : width\n\n  return (\n    <Row\n      gutter={[0, 0]}\n      className=\"dao-card-wrapper\"\n      onClick={() => history.push(`dao/${daoAddress}`)}\n    >\n      <Col\n        span={24}\n        className=\"dao-card-img\"\n        style={{\n          height: !isMobile\n            ? (desktopWidth - PAGE_PADDING * 2) / heightRatio\n            : (width - PAGE_PADDING) / heightRatio,\n        }}\n      >\n        <Image\n          preview={false}\n          src={DAO_CARD_BG[parseRegime as DaoCardBackground]}\n        />\n      </Col>\n      <Col className=\"regime-tag-wrapper\">\n        <RegimeTag regime={regime} special />\n      </Col>\n      <Col span={24}>\n        <Card bordered={false}>\n          <Row gutter={[20, 20]}>\n            <Col span={24} style={{ minHeight: 88 }}>\n              <Row gutter={[16, 16]} wrap={false} align=\"top\">\n                <Col>\n                  {!metaData?.image ? (\n                    <GradientAvatar\n                      seed={daoAddress}\n                      avatarProps={{ shape: 'square', size: 68 }}\n                    />\n                  ) : (\n                    <Avatar shape=\"square\" size={68} src={metaData?.image} />\n                  )}\n                </Col>\n                <Col flex=\"auto\">\n                  <Space direction=\"vertical\" size={0}>\n                    <Tooltip\n                      title={metaData?.daoName ? metaData.daoName : daoAddress}\n                    >\n                      <Typography.Title\n                        style={{ marginTop: -6 }}\n                        level={4}\n                        ellipsis={{ rows: 2 }}\n                      >\n                        {metaData?.daoName\n                          ? metaData.daoName\n                          : shortenAddress(daoAddress)}\n                      </Typography.Title>\n                    </Tooltip>\n                    <Space size={2} style={{ marginLeft: -8 }}>\n                      {metaData?.optionals?.map(\n                        (url, idx) =>\n                          url && (\n                            <Button\n                              size=\"small\"\n                              type=\"text\"\n                              onClick={() => window.open(url, '_blank')}\n                              icon={\n                                <IonIcon name={`logo-${SOCIAL_MEDIA[idx]}`} />\n                              }\n                              key={idx}\n                            />\n                          ),\n                      )}\n                    </Space>\n                  </Space>\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24}>\n              <Row gutter={[16, 16]}>\n                <Col span={8}>\n                  <StatisticCard\n                    title=\"Token\"\n                    value={\n                      <Space>\n                        <MintAvatar mintAddress={mint.toBase58()} />\n                        <MintSymbol mintAddress={mint.toBase58()} />\n                      </Space>\n                    }\n                  />\n                </Col>\n                <Col span={8}>\n                  <StatisticCard\n                    title=\"Proposals\"\n                    value={numeric(Number(nonce)).format('0,0')}\n                  />\n                </Col>\n                <Col span={8}>\n                  <StatisticCard\n                    title=\"Members\"\n                    value={numeric(members).format('0,0')}\n                  />\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24} style={{ minHeight: 44 }}>\n              <Typography.Paragraph\n                style={{ margin: 0 }}\n                type=\"secondary\"\n                ellipsis={{ rows: 2 }}\n              >\n                {metaData?.description}\n              </Typography.Paragraph>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoCard\n","import { Button, Input, Spin } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport { LoadingOutlined } from '@ant-design/icons'\n\ntype SearchDaoProps = {\n  onSearch: (keyword: string) => void\n  loading?: boolean\n}\n\nconst SearchDao = ({ onSearch, loading = false }: SearchDaoProps) => {\n  return (\n    <Input\n      prefix={\n        <Button\n          type=\"text\"\n          size=\"small\"\n          icon={\n            loading ? (\n              <Spin indicator={<LoadingOutlined style={{ fontSize: 14 }} />} />\n            ) : (\n              <IonIcon name=\"search-outline\" />\n            )\n          }\n        />\n      }\n      placeholder=\"Search by name, address\"\n      style={{ width: '100%' }}\n      onChange={(e) => onSearch(e.target.value)}\n    />\n  )\n}\nexport default SearchDao\n","import isEqual from 'react-fast-compare'\nimport { DaoRegime } from '@interdao/core'\n\nimport { Card, Image, Typography } from 'antd'\n\nimport autonomous from 'app/static/images/system/bg-autonomous.png'\nimport democratic from 'app/static/images/system/bg-democratic.png'\nimport dictatorial from 'app/static/images/system/bg-dictatorial.png'\nimport { DaoCardBackground } from '../../daoList/daoCard'\n\nconst DAO_CARD_BG = {\n  autonomous,\n  democratic,\n  dictatorial,\n}\n\nconst CardRegime = ({\n  value,\n  regime,\n  onChange = () => {},\n}: {\n  value?: DaoRegime\n  regime: DaoRegime\n  onChange?: (regime: DaoRegime) => void\n}) => {\n  return (\n    <Card\n      bordered={false}\n      style={{ overflow: 'hidden', cursor: 'pointer' }}\n      bodyStyle={{ padding: 0 }}\n      onClick={() => onChange(regime)}\n      className={`card-regime ${isEqual(value, regime) ? 'active' : ''}`}\n    >\n      <Image\n        src={DAO_CARD_BG[Object.keys(regime)[0] as DaoCardBackground]}\n        preview={false}\n      />\n      <Typography.Text\n        style={{\n          position: 'absolute',\n          bottom: 0,\n          left: 0,\n          textAlign: 'center',\n          width: '100%',\n          padding: 4,\n          backdropFilter: 'blur(4px)',\n          color: '#fff',\n          textTransform: 'capitalize',\n          fontWeight: 400,\n        }}\n      >\n        {Object.keys(regime)[0]}\n      </Typography.Text>\n    </Card>\n  )\n}\n\nexport default CardRegime\n","import { DaoRegime, DaoRegimes } from '@interdao/core'\n\nimport { Button, Row, Col, Space, Typography, Popover } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport CardRegime from '../../components/cardRegime'\n\nexport type RegimeInputProps = {\n  value: DaoRegime\n  onChange: (value: DaoRegime) => void\n}\n\nexport const REGIME_LIST = [\n  DaoRegimes.Dictatorial,\n  DaoRegimes.Democratic,\n  DaoRegimes.Autonomous,\n]\n\nconst RegimeInput = ({\n  value = DaoRegimes.Dictatorial,\n  onChange = () => {},\n}: RegimeInputProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space>\n          <Typography.Text>DAO Regime</Typography.Text>\n          <Popover\n            overlayStyle={{ maxWidth: 300 }}\n            trigger=\"click\"\n            content={\n              <Row gutter={[16, 16]}>\n                <Col span={24}>\n                  <Typography.Title level={5}>\n                    What is DAO Regime?\n                  </Typography.Title>\n                </Col>\n                <Col span={24}>\n                  <Space direction=\"vertical\">\n                    <Typography.Text>\n                      <strong>Dictatorial.</strong> Only DAO owner can create\n                      and execute proposals.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Democratic.</strong> Community can create\n                      proposals, DAO owner execute proposals.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Autonomous.</strong> Community can create and\n                      execute proposals.\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            }\n          >\n            <Button\n              type=\"text\"\n              size=\"small\"\n              icon={<IonIcon name=\"information-circle-outline\" />}\n            />\n          </Popover>\n        </Space>\n      </Col>\n      {REGIME_LIST.map((regime, idx) => (\n        <Col xs={24} md={8} key={idx}>\n          <CardRegime value={value} regime={regime} onChange={onChange} />\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default RegimeInput\n","import { Select } from 'antd'\nimport { REGIME_LIST } from '../daoInitialization/flexibleDAO/daoRule/regimeInput'\n\ntype SortDaoProps = { value: string; onSort: (value: string) => void }\n\nconst SortDao = ({ onSort, value }: SortDaoProps) => {\n  return (\n    <Select\n      value={value}\n      style={{ textTransform: 'capitalize', width: '100%' }}\n      onChange={onSort}\n    >\n      <Select.Option value=\"all-regime\">All mechanisms</Select.Option>\n      {REGIME_LIST.map((regime, idx) => {\n        const value = Object.keys(regime)[0]\n        return (\n          <Select.Option\n            key={idx}\n            value={value}\n            style={{ textTransform: 'capitalize' }}\n          >\n            {value}\n          </Select.Option>\n        )\n      })}\n    </Select>\n  )\n}\n\nexport default SortDao\n","import { Select } from 'antd'\n\nconst TypeOfDAO = () => {\n  return (\n    <Select\n      value=\"all-type\"\n      style={{ textTransform: 'capitalize', width: '100%' }}\n    >\n      <Select.Option value=\"all-type\">All type of DAO</Select.Option>\n      <Select.Option\n        value=\"flexible-dao\"\n        style={{ textTransform: 'capitalize' }}\n      >\n        Flexible DAO\n      </Select.Option>\n      <Select.Option\n        value=\"multisig-dao\"\n        style={{ textTransform: 'capitalize' }}\n      >\n        Multisig DAO\n      </Select.Option>\n    </Select>\n  )\n}\n\nexport default TypeOfDAO\n","import lunr, { Index } from 'lunr'\n\nimport { DaoData } from '@interdao/core'\nimport { MetaData } from 'app/model/metadata.controller'\n\ntype SearchDataType = DaoData & MetaData\ntype RegisterDaoData = Record<string, SearchDataType>\nclass DaoProvider {\n  private daoMap: Map<string, SearchDataType>\n  private engine: Index | undefined\n  register: RegisterDaoData\n\n  constructor(register: RegisterDaoData) {\n    this.register = register\n    this.daoMap = new Map<string, SearchDataType>()\n    this.engine = lunr(function () {\n      this.ref('address')\n      this.field('address')\n      this.field('daoName')\n      this.field('description')\n      this.field('daoRegime')\n      Object.keys(register).forEach((address: string) => {\n        const doc = register[address]\n        if (doc) this.add(doc)\n      })\n    })\n    // build dao map\n    this._setDaoMap()\n  }\n\n  private _setDaoMap = async (): Promise<[Map<string, SearchDataType>]> => {\n    Object.keys(this.register).forEach((daoAddress) =>\n      this.daoMap.set(daoAddress, this.register[daoAddress]),\n    )\n    return [this.daoMap]\n  }\n\n  all = async (): Promise<SearchDataType[]> => {\n    const [daoMap] = await this._setDaoMap()\n    return Array.from(daoMap.values())\n  }\n\n  findByAddress = async (addr: string): Promise<string[] | undefined> => {\n    const [daoMap] = await this._setDaoMap()\n    if (daoMap.has(addr)) return [addr]\n    return\n  }\n\n  find = async (keyword: string, limit = 10): Promise<string[] | undefined> => {\n    const [daoMap] = await this._setDaoMap()\n    const engine = this.engine\n    if (!engine) return\n\n    let daos: SearchDataType[] = []\n    if (!keyword) return\n\n    const fuzzy = keyword + '~1'\n    engine.search(fuzzy).forEach(({ ref }) => {\n      if (daos.findIndex(({ mint }) => mint.toString() === ref) < 0) {\n        const dao = daoMap.get(ref)\n        if (dao) daos.push(dao)\n      }\n    })\n    const nextDaos: string[] = []\n    daos.slice(0, limit).forEach((dao) => {\n      if (dao.address) nextDaos.push(dao.address)\n    })\n    return nextDaos\n  }\n}\n\nexport default DaoProvider\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { DaoData } from '@interdao/core'\n\nimport { parseDaoData } from 'app/helpers'\nimport { AppState } from 'app/model'\nimport { MetaData } from 'app/model/metadata.controller'\nimport DaoProvider from 'app/view/dao/daoList/search/daoProvider'\nimport { DaoDataState } from 'app/model/dao.controller'\n\nconst useSearchDao = (keyword?: string, data?: DaoDataState) => {\n  const [parseData, setParseData] = useState<\n    Record<string, DaoData & MetaData> | undefined\n  >()\n  const [searchData, setSearchData] = useState<string[]>()\n  const [loading, setLoading] = useState(false)\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n\n  const daoProvider = useMemo(() => {\n    if (!parseData) return\n    return new DaoProvider(parseData)\n  }, [parseData])\n\n  const onParseDaoData = useCallback(async () => {\n    let parseData: Record<string, DaoData & MetaData> | undefined = undefined\n    if (data) parseData = await parseDaoData(data)\n    else parseData = await parseDaoData(daoData)\n    setParseData(parseData)\n  }, [daoData, data])\n\n  const onSearch = useCallback(async () => {\n    if (\n      !keyword ||\n      keyword.length < 3 ||\n      !daoProvider ||\n      keyword === 'all-regime'\n    )\n      return setSearchData(undefined)\n    try {\n      if (account.isAddress(keyword)) {\n        const data = await daoProvider.findByAddress(keyword)\n        return setSearchData(data)\n      }\n      const data = await daoProvider.find(keyword)\n      return setSearchData(data)\n    } catch (err) {\n      setSearchData(undefined)\n    }\n  }, [daoProvider, keyword])\n\n  useEffect(() => {\n    onParseDaoData()\n  }, [onParseDaoData])\n\n  useEffect(() => {\n    if (keyword && keyword.length >= 3) setLoading(true)\n    const delayToSearch = setTimeout(async () => {\n      //  delay to waiting keyboard typing\n      await onSearch()\n      setLoading(false)\n    }, 500)\n    return () => clearTimeout(delayToSearch)\n  }, [keyword, onSearch])\n\n  return { searchData, loading }\n}\n\nexport default useSearchDao\n","import { useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport LazyLoad from '@senswap/react-lazyload'\nimport { DaoData } from '@interdao/core'\n\nimport { Col, Empty, Row } from 'antd'\nimport DaoCard from './daoCard'\nimport SearchDao from './search'\nimport SortDao from './sortDao'\nimport TypeOfDAO from './typeOfDao'\n\nimport { AppState } from 'app/model'\nimport useSearchDao from 'app/hooks/useSearchDao'\n\nimport './index.less'\n\nconst DaoList = () => {\n  const [sortKey, setSortKey] = useState('all-regime')\n  const [searchKey, setSearchKey] = useState('')\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n\n  const { searchData: sortDaoRegime } = useSearchDao(sortKey)\n  const filterDaoData = useMemo(() => {\n    if (!sortDaoRegime) return\n    const data: Record<string, DaoData> = {}\n    sortDaoRegime.forEach((daoAddr) => (data[daoAddr] = daoData[daoAddr]))\n    return data\n  }, [daoData, sortDaoRegime])\n  const { searchData: searchDao, loading } = useSearchDao(\n    searchKey,\n    filterDaoData,\n  )\n\n  const searchData =\n    !searchKey || searchKey.length < 3 ? sortDaoRegime : searchDao\n\n  return (\n    <Row gutter={[24, 16]}>\n      <Col xs={24} md={16}>\n        <Row gutter={[12, 12]}>\n          <Col xs={12} md={6}>\n            <TypeOfDAO />\n          </Col>\n          <Col xs={12} md={6}>\n            <SortDao onSort={setSortKey} value={sortKey} />\n          </Col>\n          <Col xs={24} md={12}>\n            <SearchDao onSearch={setSearchKey} loading={loading} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24} />\n      {searchKey.length >= 3 && (!searchDao || !searchDao.length) ? (\n        <Col span={24} style={{ textAlign: 'center' }}>\n          <Empty />\n        </Col>\n      ) : (\n        (searchData || Object.keys(daoData)).map((daoAddress) => (\n          <Col key={daoAddress} xs={24} md={12} xl={8}>\n            <LazyLoad height={479.75}>\n              <DaoCard daoAddress={daoAddress} special />\n            </LazyLoad>\n          </Col>\n        ))\n      )}\n    </Row>\n  )\n}\n\nexport default DaoList\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport LazyLoad from '@senswap/react-lazyload'\nimport { useWallet } from '@senhub/providers'\nimport { account } from '@senswap/sen-js'\nimport { DaoData } from '@interdao/core'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport DaoCard from './daoCard'\n\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst YourDaos = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const history = useHistory()\n\n  const filteredDaos = useMemo(\n    () =>\n      Object.keys(daoData).filter((daoAddr) => {\n        const { authority } = daoData[daoAddr] || ({} as DaoData)\n        const authAddress = authority.toBase58()\n        return account.isAddress(authAddress) && authAddress === walletAddress\n      }),\n    [daoData, walletAddress],\n  )\n\n  if (!!filteredDaos.length)\n    return (\n      <Row gutter={[24, 24]}>\n        {filteredDaos.map((daoAddress) => (\n          <Col xs={24} md={12} xl={8} key={daoAddress}>\n            <LazyLoad height={191.5}>\n              <DaoCard daoAddress={daoAddress} />\n            </LazyLoad>\n          </Col>\n        ))}\n      </Row>\n    )\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Card bordered={false} bodyStyle={{ padding: 45, textAlign: 'center' }}>\n          <Space direction=\"vertical\" align=\"center\">\n            <Typography.Text type=\"secondary\">\n              You have no DAO yet!\n            </Typography.Text>\n            <Button onClick={() => history.push(`/app/${appId}/dao/new-dao`)}>\n              Build your DAO\n            </Button>\n          </Space>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default YourDaos\n","import { useHistory } from 'react-router-dom'\n\nimport { Row, Col, Button, Tabs } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport Hero from './hero'\nimport DaoList from './daoList'\nimport YourDaos from './daoList/yourDao'\n\nimport configs from 'app/configs'\n\nimport './index.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst Dao = () => {\n  const history = useHistory()\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Hero />\n      </Col>\n      <Col span={24}>\n        <Row justify=\"center\">\n          <Col xs={24} lg={18}>\n            <Tabs\n              style={{ overflow: 'visible' }}\n              className=\"dao-tabs\"\n              tabBarExtraContent={\n                <Button\n                  type=\"primary\"\n                  onClick={() => history.push(`/app/${appId}/dao/new-dao`)}\n                  icon={<IonIcon name=\"add-outline\" />}\n                >\n                  Create a DAO\n                </Button>\n              }\n            >\n              <Tabs.TabPane tab=\"Community DAOs\" key=\"community-daos\">\n                <DaoList />\n              </Tabs.TabPane>\n              <Tabs.TabPane tab=\"Your DAOs\" key=\"your-daos\">\n                <YourDaos />\n              </Tabs.TabPane>\n            </Tabs>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Dao\n","import { Tag } from 'antd'\n\nexport type ProposalStatusType =\n  | 'Failed'\n  | 'Voting'\n  | 'Preparing'\n  | 'Succeeded'\n  | 'Executed'\n\nexport type ProposalStatusProps = {\n  status: ProposalStatusType\n}\n\nconst STATUS_COLOR: Record<string, string> = {\n  Succeeded: '#0CA1BF',\n  Failed: '#F9575E',\n  Preparing: '#D4B106',\n  Executed: '#03A326',\n  Voting: '#40A9FF',\n}\n\nconst ProposalStatus = ({ status }: ProposalStatusProps) => {\n  return (\n    <Tag\n      style={{ color: STATUS_COLOR[status], border: 'solid', margin: 0 }}\n      color={'transparent'}\n    >\n      {status}\n    </Tag>\n  )\n}\n\nexport default ProposalStatus\n","import { ReactNode } from 'react'\n\nimport { Col, Row, Typography } from 'antd'\n\ntype RowSpaceBetweenProps = {\n  label?: string\n  value?: string | ReactNode\n}\nconst RowSpaceBetween = ({ label = '', value = '' }: RowSpaceBetweenProps) => {\n  return (\n    <Row gutter={[24, 24]}>\n      <Col flex=\"auto\">\n        <Typography.Text type=\"secondary\">{label}</Typography.Text>\n      </Col>\n      <Col>{value}</Col>\n    </Row>\n  )\n}\n\nexport default RowSpaceBetween\n","import { ReactNode } from 'react'\n\nimport { Space, SpaceProps, Typography } from 'antd'\n\nconst RowSpaceVertical = ({\n  label = '',\n  value,\n  ...rest\n}: {\n  label?: string\n  value: ReactNode\n} & SpaceProps) => {\n  return (\n    <Space {...rest} direction=\"vertical\">\n      <Typography.Text type=\"secondary\">{label}</Typography.Text>\n      {value}\n    </Space>\n  )\n}\n\nexport default RowSpaceVertical\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\n\n/**\n * Get token decimals from multiple resources. This hook needs MintProvider for working.\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * @param mintAddress Mint address\n * @returns Decimals\n */\nconst useMintDecimals = (mintAddress: string) => {\n  const [decimals, setDecimals] = useState<number | undefined>(undefined)\n  const { getDecimals } = useMint()\n\n  const fetchDecimals = useCallback(async () => {\n    try {\n      const decimals = await getDecimals(mintAddress)\n      return setDecimals(decimals)\n    } catch (er: any) {\n      return setDecimals(undefined)\n    }\n  }, [mintAddress, getDecimals])\n\n  useEffect(() => {\n    fetchDecimals()\n  }, [fetchDecimals])\n\n  return decimals\n}\n\nexport default useMintDecimals\n","import { useState } from 'react'\nimport { utils } from '@senswap/sen-js'\nimport CopyToClipboard from 'react-copy-to-clipboard'\nimport moment from 'moment'\n\nimport { Col, Row, Space, Tooltip, Typography } from 'antd'\nimport RowSpaceBetween from 'app/components/rowSpaceBetween'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport IonIcon from 'shared/antd/ionicon'\nimport RowSpaceVertical from 'app/components/rowSpaceVertical'\n\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { asyncWait, explorer, shortenAddress } from 'shared/util'\n\nexport type TransferType = {\n  mint?: string\n  amount: number\n  source: string\n  destination: string\n}\n\nconst InfoTransferInProposal = ({\n  transferInfo,\n}: {\n  transferInfo?: TransferType\n}) => {\n  const [copied, setCopied] = useState('address')\n  const {\n    mint = '',\n    source = '',\n    destination = '',\n    amount = 0,\n  } = transferInfo || {}\n  const decimals = useMintDecimals(mint) || 0\n\n  const onCopy = async (address: string) => {\n    setCopied(address)\n    await asyncWait(1500)\n    setCopied('address')\n  }\n\n  return (\n    <Row gutter={[12, 12]}>\n      <Col span={24}>\n        <RowSpaceBetween label=\"Template\" value=\"SPL/Transfer\" />\n      </Col>\n      <Col span={24}>\n        <RowSpaceBetween\n          label=\"Token to be transferred\"\n          value={\n            <Space>\n              <MintAvatar mintAddress={mint} />\n              <MintSymbol mintAddress={mint} />\n            </Space>\n          }\n        />\n      </Col>\n      <Col span={24}>\n        <RowSpaceBetween\n          label=\"Transfer amount\"\n          value={!mint ? '--' : utils.undecimalize(BigInt(amount), decimals)}\n        />\n      </Col>\n      <Col span={24}>\n        <RowSpaceBetween\n          label=\"Sender's Wallet Address\"\n          value={\n            <Space size={10}>\n              <Typography.Text\n                style={{ cursor: 'pointer', textDecoration: 'underline' }}\n                onClick={() => window.open(explorer(source), '_blank')}\n              >\n                {shortenAddress(source)}\n              </Typography.Text>\n              <Tooltip title=\"Copied\" visible={copied === source}>\n                <CopyToClipboard text={source}>\n                  <IonIcon\n                    style={{ cursor: 'pointer' }}\n                    name=\"copy-outline\"\n                    onClick={() => onCopy(source)}\n                  />\n                </CopyToClipboard>\n              </Tooltip>\n            </Space>\n          }\n        />\n      </Col>\n      <Col span={24}>\n        <RowSpaceBetween\n          label=\"Receiver's Wallet Address\"\n          value={\n            <Space size={10}>\n              <Typography.Text\n                style={{ cursor: 'pointer', textDecoration: 'underline' }}\n                onClick={() => window.open(explorer(destination), '_blank')}\n              >\n                {shortenAddress(destination)}\n              </Typography.Text>\n              <Tooltip title=\"Copied\" visible={copied === destination}>\n                <CopyToClipboard text={destination}>\n                  <IonIcon\n                    style={{ cursor: 'pointer' }}\n                    name=\"copy-outline\"\n                    onClick={() => onCopy(destination)}\n                  />\n                </CopyToClipboard>\n              </Tooltip>\n            </Space>\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\nconst InfoTransferInDaoDetail = ({\n  transferInfo,\n  endTime,\n}: {\n  transferInfo?: TransferType\n  endTime?: number\n}) => {\n  const { mint = '', amount = 0 } = transferInfo || {}\n  const decimals = useMintDecimals(mint) || 0\n\n  return (\n    <Row gutter={[12, 12]}>\n      <Col xs={12} md={6}>\n        <RowSpaceVertical\n          label=\"Template\"\n          value={\n            <Typography.Text className=\"t-16\">SPL/Transfer</Typography.Text>\n          }\n        />\n      </Col>\n      <Col xs={12} md={6}>\n        <RowSpaceVertical\n          label=\"Token to be transferred\"\n          value={\n            <Typography.Text className=\"t-16\">\n              <Space>\n                <MintAvatar mintAddress={mint} />\n                <MintSymbol mintAddress={mint} />\n              </Space>\n            </Typography.Text>\n          }\n        />\n      </Col>\n      <Col xs={12} md={6}>\n        <RowSpaceVertical\n          className=\"t-16\"\n          label=\"Transfer amount\"\n          value={!mint ? '--' : utils.undecimalize(BigInt(amount), decimals)}\n        />\n      </Col>\n      <Col xs={12} md={6}>\n        <RowSpaceVertical\n          label=\"End time\"\n          value={\n            endTime && (\n              <Typography.Text className=\"t-16\">\n                {moment(endTime).format('hh:mm A, MMM Do, YYYY')}\n              </Typography.Text>\n            )\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n\nconst TemplateTransfer = ({\n  isProposalDetail,\n  transferInfo,\n  endTime,\n}: {\n  transferInfo?: TransferType\n  isProposalDetail?: boolean\n  endTime?: number\n}) => {\n  if (isProposalDetail)\n    return <InfoTransferInProposal transferInfo={transferInfo} />\n  return (\n    <InfoTransferInDaoDetail endTime={endTime} transferInfo={transferInfo} />\n  )\n}\n\nexport default TemplateTransfer\n","import { useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account } from '@senswap/sen-js'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { ProposalData } from '@interdao/core'\nimport { getProposal, getProposals } from 'app/model/proposal.controller'\n\nconst useProposal = (proposalAddress: string, daoAddress: string) => {\n  const dispatch = useDispatch<AppDispatch>()\n  const { proposal } = useSelector((state: AppState) => state)\n\n  const data = useMemo(\n    () => proposal[proposalAddress] || ({} as ProposalData),\n    [proposal, proposalAddress],\n  )\n  const isExistProposal = useMemo(() => {\n    return !!Object.keys(proposal).length\n  }, [proposal])\n\n  useEffect(() => {\n    if (isExistProposal && account.isAddress(proposalAddress)) {\n      dispatch(getProposal({ address: proposalAddress }))\n    } else {\n      dispatch(getProposals({ daoAddress }))\n    }\n  }, [daoAddress, dispatch, isExistProposal, proposalAddress])\n\n  return { ...data }\n}\n\nexport default useProposal\n","import { Fragment, useCallback, useEffect, useState } from 'react'\nimport { AccountMeta } from '@solana/web3.js'\nimport { decodeSplInstruction } from 'sen-idl-parser'\nimport BN from 'bn.js'\n\nimport TemplateTransfer, { TransferType } from '../transferInfo'\n\nimport useProposal from 'app/hooks/useProposal'\nimport { ProposalChildCardProps } from '../../proposalDetails/index'\n\ntype TemplateInfoProps = {\n  isProposalDetail?: boolean\n  endTime?: number\n} & ProposalChildCardProps\n\nconst TemplateInfo = ({\n  proposalAddress,\n  daoAddress,\n  isProposalDetail = true,\n  endTime,\n}: TemplateInfoProps) => {\n  const [transferInfo, setTransferInfo] = useState<TransferType>()\n  const [templateName, setTemplateName] = useState('')\n\n  const { accounts, data } = useProposal(proposalAddress, daoAddress)\n  const fetchProposalInfo = useCallback(async () => {\n    if (!accounts || !data) return\n    const info = decodeSplInstruction<{ amount: BN }>(\n      accounts as AccountMeta[],\n      data as Buffer,\n    )\n    if (!info) return\n    setTemplateName(info.name)\n    if (info.name === 'transfer') {\n      const { splt } = window.sentre\n      const sourceAssociated =\n        info.accounts.get('source')?.pubkey.toBase58() || ''\n      const sourceAddress =\n        info.accounts.get('authority')?.pubkey.toBase58() || ''\n      const destination =\n        info.accounts.get('destination')?.pubkey.toBase58() || ''\n      const { amount } = info.data\n      let mintAddress = ''\n\n      try {\n        const { mint } = await splt.getAccountData(sourceAssociated)\n        mintAddress = mint\n      } catch (error) {\n        mintAddress = ''\n      }\n      return setTransferInfo({\n        source: sourceAddress,\n        destination,\n        amount: amount.toNumber(),\n        mint: mintAddress,\n      })\n    }\n  }, [accounts, data])\n\n  useEffect(() => {\n    fetchProposalInfo()\n  }, [fetchProposalInfo])\n\n  if (templateName === 'transfer')\n    return (\n      <TemplateTransfer\n        isProposalDetail={isProposalDetail}\n        transferInfo={transferInfo}\n        endTime={endTime}\n      />\n    )\n  return <Fragment />\n}\n\nexport default TemplateInfo\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\nimport { ProposalData } from '@interdao/core'\nimport BN from 'bn.js'\n\nimport { ProposalStatusType } from 'app/components/proposalStatus'\n\nimport { AppState } from 'app/model'\n\nconst currentDate = Math.floor(Number(new Date()) / 1000)\n\nconst useProposalStatus = (proposalAddress: string) => {\n  const { proposal } = useSelector((state: AppState) => state)\n  const {\n    startDate,\n    endDate,\n    executed,\n    supply,\n    votingAgainstPower,\n    votingForPower,\n    consensusQuorum,\n    consensusMechanism,\n  } = proposal[proposalAddress] || ({} as ProposalData)\n\n  const actualSupply = useMemo(() => {\n    if (!supply) return new BN(0)\n    const mechanism = consensusMechanism\n      ? Object.keys(consensusMechanism)[0]\n      : ''\n    if (mechanism === 'stakedTokenCounter') return supply\n    return supply.mul(endDate.sub(startDate))\n  }, [consensusMechanism, endDate, startDate, supply])\n\n  const isSuccess = useMemo(() => {\n    const quorum = consensusQuorum ? Object.keys(consensusQuorum)[0] : ''\n    if (!votingAgainstPower || !votingAgainstPower) return false\n    const votingPower = votingForPower.sub(votingAgainstPower)\n\n    if (votingPower.lte(new BN(0))) return false\n    if (quorum === 'half' && votingPower.cmp(actualSupply.div(new BN(2))) === 1)\n      return true\n    if (\n      quorum === 'oneThird' &&\n      votingPower.cmp(actualSupply.div(new BN(3))) === 1\n    )\n      return true\n    if (\n      quorum === 'twoThird' &&\n      votingPower.cmp(actualSupply.mul(new BN(2)).div(new BN(3))) === 1\n    )\n      return true\n    return false\n  }, [actualSupply, consensusQuorum, votingAgainstPower, votingForPower])\n\n  const status: ProposalStatusType = useMemo(() => {\n    if (currentDate < Number(startDate)) return 'Preparing'\n    if (currentDate < Number(endDate)) return 'Voting'\n    if (executed) return 'Executed'\n    if (isSuccess) return 'Succeeded'\n    return 'Failed'\n  }, [endDate, executed, isSuccess, startDate])\n\n  return { status, isSuccess, actualSupply }\n}\n\nexport default useProposalStatus\n","import { useCallback, useEffect, useState } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport { AppState } from 'app/model'\nimport { getCID } from 'app/helpers'\nimport { ProposalMetaData } from 'app/view/proposal/proposalInitialization'\nimport IPFS from 'shared/pdb/ipfs'\n\nconst useProposalMetaData = (proposalAddress: string) => {\n  const [metaData, setMetaData] = useState<ProposalMetaData>()\n  const { proposal } = useSelector((state: AppState) => state)\n  const { metadata: digest } = proposal[proposalAddress] || {}\n\n  const getMetaData = useCallback(async () => {\n    if (!digest) return setMetaData(undefined)\n    const cid = getCID(digest)\n    const ipfs = new IPFS()\n    try {\n      const data = await ipfs.get(cid)\n      return setMetaData(data)\n    } catch (er: any) {\n      return window.notify({ type: 'error', description: er.message })\n    }\n  }, [digest])\n\n  useEffect(() => {\n    getMetaData()\n  }, [getMetaData])\n\n  return metaData\n}\n\nexport default useProposalMetaData\n","import { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { SystemProgram } from '@solana/web3.js'\nimport BN from 'bn.js'\n\nimport { Card, Col, Row, Typography } from 'antd'\nimport ProposalStatus from 'app/components/proposalStatus'\nimport TemplateInfo from '../modalTemplateInfo/component/templateInfo'\n\nimport { shortenAddress } from 'shared/util'\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\nimport useProposalStatus from 'app/hooks/useProposalStatus'\nimport useProposalMetaData from 'app/hooks/useProposalMetaData'\nimport { ProposalChildCardProps } from '../proposalDetails'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport type ProposalCardProps = { proposalAddress: string }\n\nconst currentDate = Math.floor(Number(new Date()) / 1000)\n\nconst ProposalCard = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const { proposal } = useSelector((state: AppState) => state)\n  const { dao, endDate } = proposal[proposalAddress] || {\n    dao: SystemProgram.programId,\n    endDate: new BN(currentDate),\n  }\n  const { status } = useProposalStatus(proposalAddress)\n  const history = useHistory()\n  const metaData = useProposalMetaData(proposalAddress)\n  const endTime = Number(endDate) * 1000\n  return (\n    <Card\n      bordered={false}\n      onClick={() =>\n        history.push(\n          `/app/${appId}/dao/${dao.toBase58()}/proposal/${proposalAddress}`,\n        )\n      }\n      className=\"proposal-card\"\n      style={{ background: `url(${metaData?.imageBackground})` }}\n      bodyStyle={{ padding: '24px 0' }}\n      hoverable\n    >\n      <Row gutter={[8, 8]}>\n        <Col span={24}>\n          <Row>\n            <Col flex=\"auto\">\n              <Typography.Title level={4}>\n                {metaData?.title\n                  ? metaData.title\n                  : shortenAddress(proposalAddress)}\n              </Typography.Title>\n            </Col>\n            <Col>\n              <ProposalStatus status={status} />\n            </Col>\n          </Row>\n        </Col>\n        <Col xs={24} md={20}>\n          <TemplateInfo\n            isProposalDetail={false}\n            proposalAddress={proposalAddress}\n            daoAddress={daoAddress}\n            endTime={endTime}\n          />\n        </Col>\n\n        <Col span={24}>\n          <Typography.Paragraph\n            style={{ margin: 0 }}\n            type=\"secondary\"\n            ellipsis={{ rows: 2 }}\n          >\n            {metaData?.description}\n          </Typography.Paragraph>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default ProposalCard\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\nimport { ProposalReturnType } from 'app/view/templates/types'\n\n/**\n * Interface & Utility\n */\n\nexport type TemplateState = {\n  visible: boolean\n  tx?: ProposalReturnType\n  imageBackground: string\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'template'\nconst initialState: TemplateState = {\n  visible: false,\n  tx: undefined,\n  imageBackground: '',\n}\n\n/**\n * Actions\n */\n\nexport const setVisible = createAsyncThunk(\n  `${NAME}/setVisible`,\n  async (visible: boolean) => {\n    return { visible }\n  },\n)\n\nexport const setTx = createAsyncThunk(\n  `${NAME}/setTx`,\n  async (tx?: ProposalReturnType) => {\n    return { tx }\n  },\n)\n\nexport const clearTx = createAsyncThunk(`${NAME}/clearTx`, async () => {\n  return { tx: undefined }\n})\n\nexport const setImgBackground = createAsyncThunk(\n  `${NAME}/setImgBackground`,\n  async (image: string) => {\n    return { imageBackground: image }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        setVisible.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setTx.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setImgBackground.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        clearTx.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { ChangeEvent, useState, forwardRef, useCallback, useRef } from 'react'\n\nimport { Input, Tooltip, Space, InputProps } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nlet timeoutId: ReturnType<typeof setTimeout> | undefined\n\n/**\n * Numeric Input\n * - Check balance based on the max\n * - Only accept numeric characters\n * @remarks The props of input follows the same as https://ant.design/components/input/#API. Extra & Overrided props\n * @param max - Maximum\n * @param onValue - A triggerred function if a valid number\n */\nconst NumericInput = forwardRef(\n  (\n    {\n      max,\n      onValue = () => {},\n      onChange = () => {},\n      ...props\n    }: InputProps & {\n      onValue?: (val: string) => void\n      max?: string | number\n    },\n    ref: any,\n  ) => {\n    const [error, setError] = useState('')\n    const [cursor, setCursor] = useState<number | null>(null)\n    const innerRef = useRef(ref)\n\n    // Handle amount\n    const onAmount = useCallback(\n      (val: string) => {\n        const onError = (er: string) => {\n          if (timeoutId) {\n            clearTimeout(timeoutId)\n            timeoutId = undefined\n          }\n          setError(er)\n          timeoutId = setTimeout(() => setError(''), 500)\n        }\n        const reg = /^\\d*(\\.\\d*)?$/\n        if (!reg.test(val)) return onError('Invalid character')\n        if (max && parseFloat(val) > parseFloat(max.toString()))\n          return onError('Not enough balance')\n        return onValue(val)\n      },\n      [max, onValue],\n    )\n\n    // Handle cursor jumping\n    // To prevent autofocus on mobile, we must strictly check cursor different from null\n    if (cursor !== null) innerRef?.current?.setSelectionRange(cursor, cursor)\n\n    return (\n      <Tooltip\n        title={\n          <Space>\n            <IonIcon name=\"warning\" />\n            {error}\n          </Space>\n        }\n        visible={!!error}\n      >\n        <Input\n          {...props}\n          onChange={(e: ChangeEvent<HTMLInputElement>) => {\n            onChange(e)\n            setCursor(e.target.selectionStart)\n            onAmount(e.target.value || '')\n          }}\n          ref={innerRef}\n        />\n      </Tooltip>\n    )\n  },\n)\n\nexport default NumericInput\n","import { useCallback, useState, useEffect, useMemo } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { PublicKey } from '@solana/web3.js'\nimport { utils } from '@project-serum/anchor'\nimport BN from 'bn.js'\n// @ts-ignore\nimport * as soproxABI from 'soprox-abi'\nimport { account } from '@senswap/sen-js'\n\nimport { Button, Col, Input, Row, Space, Typography } from 'antd'\nimport { MintSelection } from 'shared/antd/mint'\n\nimport { ProposalReturnType } from 'app/view/templates/types'\nimport { AppDispatch, AppState } from 'app/model'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport {\n  setImgBackground,\n  setTx,\n  setVisible,\n} from 'app/model/template.controller'\nimport configs from 'app/configs'\nimport BG_SOLANA from 'app/static/images/templates/bg-spl.png'\nimport NumericInput from 'shared/antd/numericInput'\nimport useMetaData from 'app/hooks/useMetaData'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const NAME = 'spl/transfer'\n\nexport const toData = (amount = new BN(0)) => {\n  const schema = [\n    { key: 'code', type: 'u8' },\n    { key: 'amount', type: 'u64' },\n  ]\n  const buf = new soproxABI.struct(schema, {\n    code: 3,\n    amount: BigInt(amount.toString()),\n  }).toBuffer()\n  return buf\n}\n\nexport const buildTransferSplvalue = (\n  amount: string | number | BN,\n  src: string,\n  dst: string,\n  payer: string,\n) => {\n  const value: ProposalReturnType = {\n    name: NAME,\n    data: toData(new BN(amount)),\n    accounts: {\n      src: {\n        pubkey: new PublicKey(src),\n        isWritable: true,\n        isSigner: false,\n        isMaster: false,\n      },\n      dst: {\n        pubkey: new PublicKey(dst),\n        isWritable: true,\n        isSigner: false,\n        isMaster: false,\n      },\n      payer: {\n        pubkey: new PublicKey(payer),\n        isWritable: true,\n        isSigner: true,\n        isMaster: true,\n      },\n    },\n    programId: utils.token.TOKEN_PROGRAM_ID,\n  }\n  return value\n}\n\ntype TransferSplPluginProps = {\n  daoAddress: string\n}\n\nconst TransferSplPlugin = ({ daoAddress = '' }: TransferSplPluginProps) => {\n  const [value, setValue] = useState('')\n  const [mintAddress, setMintAddress] = useState('')\n  const [receiverAddress, setReceiverAddress] = useState('')\n  const [srcAddress, setSrcAddress] = useState('')\n  const [dstAddress, setDstAddress] = useState('')\n\n  const [amount, setAmount] = useState('')\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const decimals = useMintDecimals(mintAddress)\n  const dispatch = useDispatch<AppDispatch>()\n  const history = useHistory()\n  const daoMetaData = useMetaData(daoAddress)\n\n  const senderAddress = useMemo(() => {\n    const { master } = daoData[daoAddress] || {}\n    return master?.toBase58() || ''\n  }, [daoData, daoAddress])\n\n  const valid = useMemo(() => {\n    return Boolean(\n      amount && account.isAddress(srcAddress) && account.isAddress(dstAddress),\n    )\n  }, [amount, srcAddress, dstAddress])\n\n  const confirm = useCallback(async () => {\n    if (!valid) return dispatch(setTx(undefined))\n    const re = buildTransferSplvalue(\n      amount,\n      srcAddress,\n      dstAddress,\n      senderAddress,\n    )\n\n    await dispatch(setTx(re))\n    await dispatch(setImgBackground(BG_SOLANA))\n    await dispatch(setVisible(false))\n    return history.push(`/app/${appId}/dao/${daoAddress}/new-proposal`)\n  }, [\n    valid,\n    dispatch,\n    amount,\n    srcAddress,\n    dstAddress,\n    senderAddress,\n    history,\n    daoAddress,\n  ])\n\n  const close = useCallback(async () => {\n    setValue('')\n    setMintAddress('')\n    setReceiverAddress('')\n    await dispatch(setTx(undefined))\n    return dispatch(setVisible(false))\n  }, [dispatch])\n\n  const setSourceAddress = useCallback(async () => {\n    if (account.isAddress(senderAddress) && account.isAddress(mintAddress)) {\n      const pubkey = await utils.token.associatedAddress({\n        owner: new PublicKey(senderAddress),\n        mint: new PublicKey(mintAddress),\n      })\n      setSrcAddress(pubkey.toBase58())\n    } else setSrcAddress('')\n  }, [mintAddress, senderAddress])\n\n  const setDestinationAddress = useCallback(async () => {\n    if (account.isAddress(receiverAddress) && account.isAddress(mintAddress)) {\n      const pubkey = await utils.token.associatedAddress({\n        owner: new PublicKey(receiverAddress),\n        mint: new PublicKey(mintAddress),\n      })\n      setDstAddress(pubkey.toBase58())\n    } else setDstAddress('')\n  }, [mintAddress, receiverAddress])\n\n  const getAmount = useCallback(() => {\n    if (Number(value) && decimals)\n      setAmount(String(Number(value) * 10 ** decimals))\n    else setAmount('')\n  }, [decimals, value])\n\n  useEffect(() => {\n    setSourceAddress()\n  }, [setSourceAddress])\n\n  useEffect(() => {\n    setDestinationAddress()\n  }, [setDestinationAddress])\n\n  useEffect(() => {\n    getAmount()\n  }, [getAmount])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Space direction=\"vertical\" size={4} style={{ width: '100%' }}>\n          <Typography.Text type=\"secondary\">Transfer</Typography.Text>\n          <NumericInput\n            className=\"border-less\"\n            placeholder=\"Input Amount\"\n            value={value}\n            onValue={(value) => setValue(value || '')}\n            prefix={\n              <MintSelection\n                value={mintAddress}\n                onChange={setMintAddress}\n                style={{ marginLeft: -7 }}\n              />\n            }\n          />\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\" size={4} style={{ width: '100%' }}>\n          <Typography.Text type=\"secondary\">\n            Sender's Wallet Address\n          </Typography.Text>\n          <Input\n            className=\"border-less\"\n            placeholder=\"Input Sender's Wallet Address\"\n            value={senderAddress}\n            disabled={daoMetaData?.daoType === 'multisig-dao'}\n          />\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\" size={4} style={{ width: '100%' }}>\n          <Typography.Text type=\"secondary\">\n            Receiver's Wallet Address\n          </Typography.Text>\n          <Input\n            className=\"border-less\"\n            placeholder=\"Input Receiver's Wallet Address\"\n            value={receiverAddress}\n            onChange={(e) => setReceiverAddress(e.target.value || '')}\n          />\n        </Space>\n      </Col>\n      <Col span={24} />\n      <Col span={24} style={{ textAlign: 'right' }}>\n        <Space>\n          <Button type=\"text\" onClick={close}>\n            Close\n          </Button>\n          <Button type=\"primary\" onClick={confirm} disabled={!valid}>\n            Continue\n          </Button>\n        </Space>\n      </Col>\n      {/* <TemplateInfo content=\"\" /> */}\n    </Row>\n  )\n}\n\nexport default TransferSplPlugin\n","var _path, _path2, _path3, _defs;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgSolana(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 56,\n    height: 56,\n    viewBox: \"0 0 56 56\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.09822 38.7451C9.43613 38.4072 9.90075 38.2101 10.3935 38.2101H55.082C55.8986 38.2101 56.3069 39.1956 55.7297 39.7729L46.9018 48.6008C46.5639 48.9387 46.0993 49.1358 45.6065 49.1358H0.918008C0.101395 49.1358 -0.306912 48.1502 0.270349 47.573L9.09822 38.7451Z\",\n    fill: \"url(#paint0_linear_514_9086)\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9.09822 5.78502C9.45021 5.44711 9.91483 5.25 10.3935 5.25L55.082 5.25C55.8986 5.25 56.3069 6.23557 55.7297 6.81283L46.9018 15.6407C46.5639 15.9786 46.0993 16.1757 45.6065 16.1757H0.918008C0.101395 16.1757 -0.306912 15.1902 0.270349 14.6129L9.09822 5.78502Z\",\n    fill: \"url(#paint1_linear_514_9086)\"\n  })), _path3 || (_path3 = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.9018 22.1596C46.5639 21.8217 46.0993 21.6246 45.6065 21.6246H0.918008C0.101395 21.6246 -0.306912 22.6101 0.270349 23.1874L9.09822 32.0153C9.43613 32.3532 9.90075 32.5503 10.3935 32.5503H55.082C55.8986 32.5503 56.3069 31.5647 55.7297 30.9875L46.9018 22.1596Z\",\n    fill: \"url(#paint2_linear_514_9086)\"\n  })), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint0_linear_514_9086\",\n    x1: 50.8129,\n    y1: -0.023655,\n    x2: 19.885,\n    y2: 59.2159,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#00FFA3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DC1FFF\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint1_linear_514_9086\",\n    x1: 37.2896,\n    y1: -7.08387,\n    x2: 6.36157,\n    y2: 52.1556,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#00FFA3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DC1FFF\"\n  })), /*#__PURE__*/React.createElement(\"linearGradient\", {\n    id: \"paint2_linear_514_9086\",\n    x1: 44.0082,\n    y1: -3.57611,\n    x2: 13.0802,\n    y2: 55.6634,\n    gradientUnits: \"userSpaceOnUse\"\n  }, /*#__PURE__*/React.createElement(\"stop\", {\n    stopColor: \"#00FFA3\"\n  }), /*#__PURE__*/React.createElement(\"stop\", {\n    offset: 1,\n    stopColor: \"#DC1FFF\"\n  })))));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgSolana);\nexport default __webpack_public_path__ + \"static/media/solana.6db9bd9600699ad1fc2b302acd0731be.svg\";\nexport { ForwardRef as ReactComponent };","import { Button, Col, Image, Radio, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport TransferSplPlugin from './transfer'\n\nimport SOLANA_LOGO from 'app/static/images/templates/solana.svg'\n\ntype CardOptionProps = {\n  label: string\n  description: string\n  icon: string\n}\n\nconst CardOption = ({ label, description, icon }: CardOptionProps) => {\n  return (\n    <Row>\n      <Col span={24}>\n        <Row>\n          <Col flex=\"auto\">\n            <Typography.Title level={5}>{label}</Typography.Title>\n          </Col>\n          <Col>\n            <IonIcon style={{ fontSize: 24 }} name={icon} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Typography.Text type=\"secondary\">{description}</Typography.Text>\n      </Col>\n    </Row>\n  )\n}\n\nconst SPL = ({ daoAddress }: { daoAddress: string }) => {\n  return (\n    <Row>\n      <Col xs={24} md={16} className=\"wrap-spl-info\">\n        <Row gutter={[16, 16]} className=\"spl-info\">\n          <Col span={24}>\n            <Space size={24}>\n              <Image preview={false} src={SOLANA_LOGO} />\n              <Space size={0} direction=\"vertical\">\n                <Typography.Text>Solana Program Library</Typography.Text>\n                <Space size={2} style={{ marginLeft: -8 }}>\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-discord\" />} />\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-twitter\" />} />\n                  <Button type=\"text\" icon={<IonIcon name=\"logo-telegram\" />} />\n                </Space>\n              </Space>\n            </Space>\n          </Col>\n          <Col span={24}>\n            <Typography.Paragraph\n              type=\"secondary\"\n              ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n            >\n              The Solana Program Library (SPL) is a collection of on-chain\n              programs targeting the Sealevel parallel runtime. These programs\n              are tested against Solana's implementation of Sealevel,\n              solana-runtime, and deployed to its mainnet. As others implement\n              Sealevel, we will graciously accept patches to ensure the programs\n              here are portable across all implementations.\n            </Typography.Paragraph>\n          </Col>\n          <Col span={24}>\n            <Space direction=\"vertical\" style={{ width: '100%' }}>\n              <Typography.Text>Templates</Typography.Text>\n              <Radio.Group\n                value=\"transfer\"\n                style={{ width: '100%' }}\n                className=\"select-spl-option\"\n              >\n                <Row gutter={[24, 24]}>\n                  <Col xs={24} sm={12} md={12} lg={12}>\n                    <Radio.Button value=\"transfer\">\n                      <CardOption\n                        label=\"Transfer\"\n                        description=\"Transfer token to another wallet address\"\n                        icon=\"paper-plane-outline\"\n                      />\n                    </Radio.Button>\n                  </Col>\n                  <Col xs={24} sm={12} md={12} lg={12}>\n                    <Radio.Button value=\"approve\" disabled>\n                      <CardOption\n                        label=\"Approve\"\n                        description=\"Coming soon\"\n                        icon=\"thumbs-up-outline\"\n                      />\n                    </Radio.Button>\n                  </Col>\n                </Row>\n              </Radio.Group>\n            </Space>\n          </Col>\n        </Row>\n      </Col>\n      <Col xs={24} md={8} className=\"spl-option-transfer\">\n        <TransferSplPlugin daoAddress={daoAddress} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default SPL\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { Col, Modal, Row, Tabs, Typography } from 'antd'\nimport SPL from './spl'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setVisible } from 'app/model/template.controller'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport './index.less'\n\nconst Template = ({ daoAddress }: { daoAddress: string }) => {\n  const {\n    template: { visible },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n\n  return (\n    <Modal\n      visible={visible}\n      footer={false}\n      closeIcon={<IonIcon name=\"close-outline\" />}\n      className=\"template-card template-modal\"\n      onCancel={() => dispatch(setVisible(false))}\n    >\n      <Row>\n        <Col span={24} className=\"template-header\">\n          <Typography.Title level={4}>Choose a template</Typography.Title>\n        </Col>\n        <Col className=\"template-body\" span={24}>\n          <Tabs>\n            <Tabs.TabPane tab=\"SPL\" key=\"spl\">\n              <SPL daoAddress={daoAddress} />\n            </Tabs.TabPane>\n            <Tabs.TabPane tab=\"Atrix\" key=\"atrix\" disabled />\n\n            <Tabs.TabPane tab=\"Quarry\" key=\"quarry\" disabled />\n\n            <Tabs.TabPane tab=\"Advanced\" key=\"advanced\" disabled />\n          </Tabs>\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default Template\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport LazyLoad from '@senswap/react-lazyload'\nimport { useUI, useWallet } from '@senhub/providers'\nimport { DaoRegimes } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\nimport { SystemProgram } from '@solana/web3.js'\n\nimport { Button, Col, Empty, Row, Select, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ProposalCard from './proposalCard'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { getProposals } from 'app/model/proposal.controller'\nimport Template from 'app/view/templates'\nimport { setVisible } from 'app/model/template.controller'\n\nexport type ProposalListProps = { daoAddress: string }\n\nconst currentDate = Math.floor(Number(new Date()) / 1000)\n\nconst ProposalList = ({ daoAddress }: ProposalListProps) => {\n  const [status, setStatus] = useState('all-status')\n  const {\n    proposal,\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const {\n    ui: { width },\n  } = useUI()\n\n  const { regime, authority } = daoData[daoAddress] || {\n    regime: DaoRegimes.Dictatorial,\n    authority: SystemProgram.programId,\n  }\n  const mobileScreen = width < 768\n\n  const isSuccess = useCallback(\n    (quorum: string, votingPower: number, numSupply: number) => {\n      if (votingPower <= 0) return false\n      if (quorum === 'half' && votingPower >= numSupply / 2) return true\n      if (quorum === 'oneThird' && votingPower >= numSupply / 3) return true\n      if (quorum === 'twoThird' && votingPower >= (numSupply * 2) / 3)\n        return true\n      return false\n    },\n    [],\n  )\n\n  const authorized = useMemo(() => {\n    if (isEqual(regime, DaoRegimes.Autonomous)) return true\n    if (isEqual(regime, DaoRegimes.Democratic)) return true\n    if (authority.toBase58() === walletAddress) return true\n    return false\n  }, [regime, authority, walletAddress])\n\n  const proposalAddresses = useMemo(() => {\n    const expandedProposal = Object.keys(proposal).map((address) => ({\n      address,\n      ...proposal[address],\n    }))\n    return expandedProposal\n      .filter(({ dao }) => dao.toBase58() === daoAddress)\n      .map(({ address }) => address)\n  }, [proposal, daoAddress])\n\n  const filterProposalAddresses = useMemo(() => {\n    if (!proposalAddresses.length) return []\n    const filteredAddress = []\n\n    for (const address of proposalAddresses) {\n      let valid = false\n      const {\n        endDate,\n        startDate,\n        executed,\n        supply,\n        votingForPower,\n        consensusQuorum,\n        consensusMechanism,\n        votingAgainstPower,\n      } = proposal[address] || {}\n\n      const quorum = consensusQuorum ? Object.keys(consensusQuorum)[0] : ''\n      const votingPower = Number(votingForPower) - Number(votingAgainstPower)\n      const stakeSupply = Number(supply) || 0\n      const lockSupply = Number(supply) * (Number(endDate) - Number(startDate))\n      const mechanism = consensusMechanism\n        ? Object.keys(consensusMechanism)[0]\n        : ''\n      const actualSupply =\n        mechanism === 'StakedTokenCounter' ? stakeSupply : lockSupply\n\n      switch (status) {\n        case 'preparing':\n          valid = currentDate < Number(startDate)\n          break\n        case 'voting':\n          valid =\n            currentDate <= Number(endDate) && currentDate >= Number(startDate)\n          break\n        case 'executed':\n          valid = executed\n          break\n        case 'succeeded':\n          valid =\n            isSuccess(quorum, votingPower, actualSupply) &&\n            !executed &&\n            currentDate > Number(endDate)\n          break\n        case 'failed':\n          valid =\n            !isSuccess(quorum, votingPower, actualSupply) &&\n            currentDate > Number(endDate)\n          break\n        default:\n          valid = true\n          break\n      }\n      if (valid) filteredAddress.push(address)\n    }\n    return filteredAddress\n  }, [isSuccess, proposal, proposalAddresses, status])\n\n  useEffect(() => {\n    dispatch(getProposals({ daoAddress }))\n  }, [dispatch, daoAddress])\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row gutter={[16, 16]} align=\"bottom\">\n          <Col\n            span={mobileScreen ? 24 : undefined}\n            flex={mobileScreen ? undefined : 'auto'}\n          >\n            <Typography.Title level={4}>Proposals</Typography.Title>\n          </Col>\n          <Col span={mobileScreen ? 12 : undefined}>\n            <Select\n              className=\"select-filter-proposal\"\n              defaultValue=\"all-status\"\n              onChange={setStatus}\n              style={{ width: '100%', minWidth: 150 }}\n            >\n              <Select.Option value=\"all-status\">All status</Select.Option>\n              <Select.Option value=\"preparing\">Preparing</Select.Option>\n              <Select.Option value=\"voting\">Voting</Select.Option>\n              <Select.Option value=\"succeeded\">Succeeded</Select.Option>\n              <Select.Option value=\"executed\">Executed</Select.Option>\n              <Select.Option value=\"failed\">Failed</Select.Option>\n            </Select>\n          </Col>\n          <Col span={mobileScreen ? 12 : undefined}>\n            <Button\n              type=\"primary\"\n              icon={<IonIcon name=\"add-outline\" />}\n              onClick={() => dispatch(setVisible(true))}\n              disabled={!authorized}\n              block\n            >\n              New Proposal\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row>\n          {filterProposalAddresses.length ? (\n            filterProposalAddresses.map((proposalAddress) => (\n              <Col key={proposalAddress} span={24}>\n                <LazyLoad height={176}>\n                  <ProposalCard\n                    daoAddress={daoAddress}\n                    proposalAddress={proposalAddress}\n                  />\n                </LazyLoad>\n              </Col>\n            ))\n          ) : (\n            <Col span={24} style={{ textAlign: 'center' }}>\n              <Empty />\n            </Col>\n          )}\n        </Row>\n      </Col>\n      <Template daoAddress={daoAddress} />\n    </Row>\n  )\n}\n\nexport default ProposalList\n","import { useCallback, useEffect, useState } from 'react'\nimport { AccountData, utils } from '@senswap/sen-js'\nimport { useMint } from '@senhub/providers'\n\nimport { fetchCGK } from 'shared/util'\nimport TokenProvider from 'shared/tokenProvider'\n\nconst DEFAULT_DATA = {\n  address: '',\n  icon: '',\n  name: 'TOKEN',\n  price: 0,\n  priceChange: 0,\n  rank: 0,\n  symbol: 'TOKEN',\n  totalVolume: 0,\n}\n\nexport const fetchCgkData = async (\n  tokenProvider: TokenProvider,\n  mintAddress: string,\n) => {\n  try {\n    const token = await tokenProvider.findByAddress(mintAddress)\n    const ticket = token?.extensions?.coingeckoId\n    const cgkData = await fetchCGK(ticket)\n    return cgkData\n  } catch (error) {\n    return DEFAULT_DATA\n  }\n}\n\nexport const getBalance = async (\n  inUSD: boolean,\n  tokenProvider: TokenProvider,\n  mintAddress: string,\n  decimals: number,\n  amount: bigint,\n) => {\n  const cgkData = await fetchCgkData(tokenProvider, mintAddress)\n  let balance = Number(utils.undecimalize(amount, decimals))\n  if (inUSD) balance = Number(balance) * cgkData.price\n\n  return balance\n}\n\nconst useTotalUSD = ({\n  inUSD = true,\n  accounts,\n}: {\n  inUSD?: boolean\n  accounts: AccountData[]\n}) => {\n  const { tokenProvider, getDecimals } = useMint()\n  const [totalUSD, setTotalUSD] = useState(0)\n\n  const clcTotalUSD = useCallback(async () => {\n    if (!accounts) return setTotalUSD(0)\n    let totalUSD = 0\n    for (const account of accounts) {\n      const { mint, amount } = account\n      const decimals = await getDecimals(mint)\n      const balance = await getBalance(\n        inUSD,\n        tokenProvider,\n        mint,\n        decimals,\n        amount,\n      )\n      totalUSD += balance\n    }\n    return setTotalUSD(totalUSD)\n  }, [accounts, getDecimals, tokenProvider, inUSD])\n\n  useEffect(() => {\n    clcTotalUSD()\n  }, [clcTotalUSD])\n\n  return totalUSD\n}\n\nexport default useTotalUSD\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\nimport { AccountData } from '@senswap/sen-js'\n\nimport { Col, Row, Space, Typography } from 'antd'\n\nimport { getBalance } from 'app/hooks/useBalance'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\n\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { numeric } from 'shared/util'\n\nconst MintBalance = ({ account }: { account: AccountData }) => {\n  const [usdBalance, setUSDBalance] = useState(0)\n  const [mintBalance, setMintBalance] = useState(0)\n\n  const { mint, amount } = account\n  const { tokenProvider } = useMint()\n  const decimals = useMintDecimals(mint) || 0\n\n  const fetchBalance = useCallback(async () => {\n    const mintBalance = await getBalance(\n      false,\n      tokenProvider,\n      mint,\n      decimals,\n      amount,\n    )\n    const usdBalance = await getBalance(\n      true,\n      tokenProvider,\n      mint,\n      decimals,\n      amount,\n    )\n    setMintBalance(mintBalance)\n    setUSDBalance(usdBalance)\n  }, [amount, decimals, mint, tokenProvider])\n\n  useEffect(() => {\n    fetchBalance()\n  }, [fetchBalance])\n\n  return (\n    <Row align=\"middle\">\n      <Col flex=\"auto\">\n        <Space>\n          <MintAvatar mintAddress={mint} />\n          <Space size={4}>\n            {numeric(mintBalance).format('0,0.[000]')}\n            <Typography.Text type=\"secondary\">\n              <MintSymbol mintAddress={mint} />\n            </Typography.Text>\n          </Space>\n        </Space>\n      </Col>\n      <Col>\n        <Typography.Text type=\"secondary\">\n          ${numeric(usdBalance).format('0,0.[000]')}\n        </Typography.Text>\n      </Col>\n    </Row>\n  )\n}\n\nexport default MintBalance\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { account, AccountData } from '@senswap/sen-js'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\nimport { Col, Row, Space, Tooltip, Typography } from 'antd'\nimport MintBalance from './mintBalance'\nimport RowSpaceBetween from 'app/components/rowSpaceBetween'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { AppState } from 'app/model'\nimport useTotalUSD from 'app/hooks/useBalance'\nimport { asyncWait, numeric, shortenAddress } from 'shared/util'\n\nconst InfoDAOMaster = ({ daoAddress }: { daoAddress: string }) => {\n  const [copied, setCopied] = useState(false)\n\n  const onCopy = async () => {\n    setCopied(true)\n    await asyncWait(1500)\n    setCopied(false)\n  }\n\n  return (\n    <RowSpaceBetween\n      label=\"Treasury Address\"\n      value={\n        <Space>\n          <Typography.Text className=\"t-16\">\n            {shortenAddress(daoAddress)}\n          </Typography.Text>\n          <Tooltip title=\"Copied\" visible={copied}>\n            <CopyToClipboard text={daoAddress} onCopy={onCopy}>\n              <Typography.Text style={{ cursor: 'pointer' }} className=\"t-16\">\n                <IonIcon name=\"copy-outline\" />\n              </Typography.Text>\n            </CopyToClipboard>\n          </Tooltip>\n        </Space>\n      }\n    />\n  )\n}\n\nconst Treasury = ({ daoAddress }: { daoAddress: string }) => {\n  const [listAccount, setListAccount] = useState<AccountData[]>([])\n  const totalUSD = useTotalUSD({ accounts: listAccount })\n\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n\n  const daoMasterAddress = useMemo(() => {\n    const { master } = daoData[daoAddress] || {}\n    return master?.toBase58() || ''\n  }, [daoData, daoAddress])\n\n  const fetchAccount = useCallback(async () => {\n    if (!daoMasterAddress) return\n\n    const { splt } = window.sentre\n    const ownerPublicKey = account.fromAddress(daoMasterAddress)\n    const { value } = await splt.connection.getTokenAccountsByOwner(\n      ownerPublicKey,\n      { programId: splt.spltProgramId },\n    )\n    let bulk: AccountData[] = []\n\n    value.forEach(({ account: { data: buf } }) => {\n      const data = splt.parseAccountData(buf)\n      return bulk.push(data)\n    })\n\n    return setListAccount(bulk)\n  }, [daoMasterAddress])\n\n  useEffect(() => {\n    fetchAccount()\n  }, [fetchAccount])\n\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Row align=\"middle\">\n          <Col flex=\"auto\">\n            <Space align=\"baseline\">\n              <Typography.Text type=\"secondary\">\n                Treasury Balance\n              </Typography.Text>\n              <Tooltip\n                placement=\"bottomLeft\"\n                overlayClassName=\"info-member treasury-addr\"\n                title={<InfoDAOMaster daoAddress={daoMasterAddress} />}\n              >\n                <IonIcon\n                  style={{ cursor: 'pointer' }}\n                  name=\"information-circle-outline\"\n                />\n              </Tooltip>\n            </Space>\n          </Col>\n          <Col>\n            <Typography.Title level={4}>\n              ${numeric(totalUSD).format('0,0.[000]')}\n            </Typography.Title>\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[24, 24]} className=\"scrollbar\" style={{ height: 124 }}>\n          {listAccount &&\n            listAccount.map((account) => (\n              <Col span={24} key={account.mint}>\n                <MintBalance account={account} />\n              </Col>\n            ))}\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default Treasury\n","import { Card, Tabs } from 'antd'\nimport Treasury from './treasury'\n\nconst DaoOwnerAssets = ({ daoAddress }: { daoAddress: string }) => {\n  return (\n    <Card bordered={false}>\n      <Tabs className=\"dao-assets\">\n        <Tabs.TabPane tab=\"Treasury\" key=\"treasury\">\n          <Treasury daoAddress={daoAddress} />\n        </Tabs.TabPane>\n        <Tabs.TabPane tab=\"NFTs\" key=\"nft\" disabled />\n      </Tabs>\n    </Card>\n  )\n}\n\nexport default DaoOwnerAssets\n","import { useState } from 'react'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\nimport { Col, Row, Space, Tooltip, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport useMembers from 'app/hooks/useMembers'\nimport useMetaData from 'app/hooks/useMetaData'\nimport { asyncWait, numeric, shortenAddress } from 'shared/util'\n\nconst InfoMember = ({ daoAddress }: { daoAddress: string }) => {\n  const [copied, setCopied] = useState('address')\n  const metaData = useMetaData(daoAddress)\n\n  const onCopy = async (address: string) => {\n    setCopied(address)\n    await asyncWait(1500)\n    setCopied('address')\n  }\n\n  return (\n    <Row gutter={[8, 8]}>\n      {metaData?.members.map(({ name, walletAddress }, index) => (\n        <Col span={24} key={walletAddress + index}>\n          <Row>\n            <Col flex=\"auto\">\n              <Typography.Text key={index} className=\"t-16\">\n                {name}\n              </Typography.Text>\n            </Col>\n            <Col>\n              <Space>\n                <Typography.Text type=\"secondary\">\n                  {shortenAddress(walletAddress)}\n                </Typography.Text>\n                <Tooltip title=\"Copied\" visible={copied === walletAddress}>\n                  <CopyToClipboard\n                    text={walletAddress}\n                    onCopy={() => onCopy(walletAddress)}\n                  >\n                    <Typography.Text\n                      style={{ cursor: 'pointer' }}\n                      type=\"secondary\"\n                    >\n                      <IonIcon name=\"copy-outline\" />\n                    </Typography.Text>\n                  </CopyToClipboard>\n                </Tooltip>\n              </Space>\n            </Col>\n          </Row>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nconst AmountMembers = ({ daoAddress }: { daoAddress: string }) => {\n  const members = useMembers(daoAddress)\n  const metaData = useMetaData(daoAddress)\n\n  const isMultisigDAO = metaData?.daoType === 'multisig-dao'\n\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space align=\"baseline\">\n          <Typography.Text className=\"caption\" type=\"secondary\">\n            Members\n          </Typography.Text>\n          {isMultisigDAO && (\n            <Tooltip\n              placement=\"bottomLeft\"\n              overlayClassName=\"info-member\"\n              title={<InfoMember daoAddress={daoAddress} />}\n            >\n              <IonIcon\n                style={{ cursor: 'pointer' }}\n                name=\"information-circle-outline\"\n              />\n            </Tooltip>\n          )}\n        </Space>\n      </Col>\n      <Col span={24}> {numeric(members).format('0,0')}</Col>\n    </Row>\n  )\n}\nexport default AmountMembers\n","import { useMemo } from 'react'\nimport { ConsensusQuorum } from '@interdao/core'\n\nconst useParseQuorumText = (quorum?: ConsensusQuorum) => {\n  const quorumText = useMemo(() => {\n    if (!quorum) return '-'\n    const mechanismQuorum = Object.keys(quorum)[0]\n    if (mechanismQuorum === 'half') return '1/2'\n    if (mechanismQuorum === 'oneThird') return '1/3'\n    if (mechanismQuorum === 'twoThird') return '2/3'\n  }, [quorum])\n\n  return quorumText\n}\nexport default useParseQuorumText\n","import { useSelector } from 'react-redux'\nimport { SystemProgram } from '@solana/web3.js'\nimport BN from 'bn.js'\nimport { useUI } from '@senhub/providers'\n\nimport { Avatar, Button, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport StatisticCard from 'app/components/statisticCard'\nimport RegimeTag from 'app/components/regimeTag'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport GradientAvatar from 'app/components/gradientAvatar'\nimport DaoOwnerAssets from './daoOwnerAssets'\nimport AmountMembers from './members'\n\nimport { AppState } from 'app/model'\nimport { numeric, shortenAddress } from 'shared/util'\nimport useMetaData from 'app/hooks/useMetaData'\nimport useParseQuorumText from 'app/hooks/useParseQuorumText'\nimport { SOCIAL_MEDIA } from 'app/model/metadata.controller'\n\nimport './index.less'\n\nexport type DaoDetailsProps = { daoAddress: string }\n\nconst DaoDetails = ({ daoAddress }: DaoDetailsProps) => {\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const {\n    ui: { width },\n  } = useUI()\n  const { regime, nonce, mint } = daoData?.[daoAddress] || {\n    regime: {},\n    nonce: new BN(0),\n    mint: SystemProgram.programId,\n  }\n  const metaData = useMetaData(daoAddress)\n  const quorum = useParseQuorumText(metaData?.quorum)\n  const mobileScreen = width < 768\n  const isMultisigDAO = metaData?.daoType === 'multisig-dao'\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col xs={24} md={16}>\n        <Card bordered={false}>\n          <Row gutter={[16, 16]}>\n            <Col span={24}>\n              <Row gutter={[16, 16]}>\n                <Col>\n                  {!metaData?.image ? (\n                    <GradientAvatar\n                      seed={daoAddress}\n                      avatarProps={{ shape: 'square', size: 56 }}\n                    />\n                  ) : (\n                    <Avatar shape=\"square\" size={56} src={metaData?.image} />\n                  )}\n                </Col>\n                <Col flex={mobileScreen ? 'auto' : undefined}>\n                  <Space direction=\"vertical\" size={0}>\n                    <Typography.Title level={4}>\n                      {metaData?.daoName\n                        ? metaData.daoName\n                        : shortenAddress(daoAddress)}\n                    </Typography.Title>\n                    <Space size={0} style={{ marginLeft: -8 }}>\n                      {(metaData?.optionals || []).map(\n                        (url, idx) =>\n                          url && (\n                            <Button\n                              size=\"small\"\n                              type=\"text\"\n                              onClick={() => window.open(url, '_blank')}\n                              icon={\n                                <IonIcon name={`logo-${SOCIAL_MEDIA[idx]}`} />\n                              }\n                              key={idx}\n                            />\n                          ),\n                      )}\n                    </Space>\n                  </Space>\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24}>\n              <Row gutter={[36, 16]}>\n                <Col xs={12} sm={6}>\n                  <StatisticCard\n                    title=\"Proposals\"\n                    value={numeric(Number(nonce)).format('0,0')}\n                  />\n                </Col>\n                <Col xs={12} sm={6}>\n                  <AmountMembers daoAddress={daoAddress} />\n                </Col>\n                <Col xs={12} sm={6}>\n                  {isMultisigDAO ? (\n                    <StatisticCard title=\"Consensus Quorum\" value={quorum} />\n                  ) : (\n                    <StatisticCard\n                      title=\"Vote by\"\n                      value={\n                        <Space>\n                          <MintAvatar mintAddress={mint.toBase58()} />\n                          <MintSymbol mintAddress={mint.toBase58()} />\n                        </Space>\n                      }\n                    />\n                  )}\n                </Col>\n                <Col xs={12} sm={6}>\n                  <StatisticCard\n                    title=\"Regime\"\n                    value={<RegimeTag regime={regime} />}\n                  />\n                </Col>\n              </Row>\n            </Col>\n            <Col span={24} className=\"scrollbar\" style={{ height: 66 }}>\n              <Typography.Paragraph\n                type=\"secondary\"\n                ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n                style={{ margin: 0 }}\n              >\n                {metaData?.description}\n              </Typography.Paragraph>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n      <Col xs={24} md={8}>\n        <DaoOwnerAssets daoAddress={daoAddress} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoDetails\n","import { useHistory, useParams } from 'react-router-dom'\n\nimport { Button, Col, Row } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ProposalList from './proposalList'\nimport DaoDetails from '../dao/daoDetails'\n\nimport configs from 'app/configs'\nimport './index.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst Proposal = () => {\n  const history = useHistory()\n  const { daoAddress } = useParams<{ daoAddress: string }>()\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\" align=\"middle\">\n      <Col xs={24} lg={18}>\n        <Row gutter={[16, 16]}>\n          <Col span={24}>\n            <Button\n              icon={<IonIcon name=\"arrow-back-outline\" />}\n              type=\"text\"\n              onClick={() => history.push(`/app/${appId}/dao`)}\n              style={{ marginLeft: -8 }}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col span={24}>\n            <DaoDetails daoAddress={daoAddress} />\n          </Col>\n        </Row>\n      </Col>\n      <Col xs={24} lg={18}>\n        <ProposalList daoAddress={daoAddress} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Proposal\n","import { ConsensusMechanism, ConsensusMechanisms } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\nimport { useUI } from '@senhub/providers'\n\nimport { Button, Row, Col, Space, Typography, Popover } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nexport type ConsensusMechanismInputProps = {\n  value: ConsensusMechanism\n  onChange: (value: ConsensusMechanism) => void\n}\n\nconst ConsensusMechanismInput = ({\n  value = ConsensusMechanisms.StakedTokenCounter,\n  onChange = () => {},\n}: ConsensusMechanismInputProps) => {\n  const {\n    ui: { infix },\n  } = useUI()\n  const mobileScreen = infix === 'xs'\n  const mobileSpan = mobileScreen ? 12 : undefined\n\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Space>\n          <Typography.Text>Consensus Mechanism</Typography.Text>\n          <Popover\n            overlayStyle={{ maxWidth: 300 }}\n            trigger=\"click\"\n            content={\n              <Row gutter={[16, 16]}>\n                <Col span={24}>\n                  <Typography.Title level={5}>\n                    What are Consensus Mechanisms?\n                  </Typography.Title>\n                </Col>\n                <Col span={24}>\n                  <Space direction=\"vertical\">\n                    <Typography.Text>\n                      <strong>Staked (Token) Counter.</strong> The power of a\n                      vote is only counted based on the number of staked tokens.\n                    </Typography.Text>\n                    <Typography.Text>\n                      <strong>Locked (Token) Counter.</strong> The power of a\n                      vote is the product of the number of staked tokens and the\n                      lock time in seconds.\n                    </Typography.Text>\n                  </Space>\n                </Col>\n              </Row>\n            }\n          >\n            <Button\n              type=\"text\"\n              size=\"small\"\n              icon={<IonIcon name=\"information-circle-outline\" />}\n            />\n          </Popover>\n        </Space>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusMechanisms.StakedTokenCounter)\n              ? ''\n              : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusMechanisms.StakedTokenCounter)}\n          block\n        >\n          Staked Counter\n        </Button>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusMechanisms.LockedTokenCounter)\n              ? ''\n              : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusMechanisms.LockedTokenCounter)}\n          block\n        >\n          Locked Counter\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ConsensusMechanismInput\n","import { ConsensusQuorum, ConsensusQuorums } from '@interdao/core'\nimport isEqual from 'react-fast-compare'\nimport { useUI } from '@senhub/providers'\n\nimport { Button, Row, Col, Typography } from 'antd'\n\nexport type ConsensusQuorumInputProps = {\n  value: ConsensusQuorum\n  onChange: (value: ConsensusQuorum) => void\n}\n\nconst ConsensusQuorumInput = ({\n  value = ConsensusQuorums.Half,\n  onChange = () => {},\n}: ConsensusQuorumInputProps) => {\n  const {\n    ui: { infix },\n  } = useUI()\n  const mobileScreen = infix === 'xs'\n  const mobileSpan = mobileScreen ? 8 : undefined\n\n  return (\n    <Row gutter={[12, 12]}>\n      <Col span={24}>\n        <Typography.Text>Consensus Quorum</Typography.Text>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusQuorums.OneThird) ? '' : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusQuorums.OneThird)}\n          block\n        >\n          1/3\n        </Button>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusQuorums.Half) ? '' : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusQuorums.Half)}\n          block\n        >\n          1/2\n        </Button>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={\n            isEqual(value, ConsensusQuorums.TwoThird) ? '' : 'btn-unselect'\n          }\n          onClick={() => onChange(ConsensusQuorums.TwoThird)}\n          block\n        >\n          2/3\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ConsensusQuorumInput\n","import moment from 'moment'\n\nimport { Col, DatePicker, Row, Typography } from 'antd'\n\nexport type DurationInputType = {\n  value: Array<number>\n  onChange: (value: Array<number>) => void\n}\n\nconst DurationInput = ({ value, onChange }: DurationInputType) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Typography.Text>Proposal Duration</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[12, 12]}>\n          <Col span={12}>\n            <DatePicker\n              placeholder=\"Start Date\"\n              value={moment(value[0])}\n              onChange={(e) => onChange([e?.valueOf() || value[0], value[1]])}\n              showTime\n              style={{ width: '100%' }}\n            />\n          </Col>\n          <Col span={12}>\n            <DatePicker\n              placeholder=\"End Date\"\n              value={moment(value[1])}\n              onChange={(e) => onChange([value[0], e?.valueOf() || value[1]])}\n              showTime\n              style={{ width: '100%' }}\n            />\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DurationInput\n","import { useSelector } from 'react-redux'\nimport { DaoData } from '@interdao/core'\nimport { SystemProgram } from '@solana/web3.js'\n\nimport { Col, Row, Space } from 'antd'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport StatisticCard from 'app/components/statisticCard'\nimport RegimeTag from 'app/components/regimeTag'\n\nimport { AppState } from 'app/model'\nimport { numeric, shortenAddress } from 'shared/util'\nimport useMembers from 'app/hooks/useMembers'\n\nexport type ProposalPreviewProps = {\n  daoAddress: string\n}\n\nconst ProposalPreview = ({ daoAddress }: ProposalPreviewProps) => {\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n\n  const { regime, mint } =\n    daoData[daoAddress] ||\n    ({\n      regime: {},\n      mint: SystemProgram.programId,\n    } as DaoData)\n  const members = useMembers(daoAddress)\n\n  return (\n    <Row gutter={[36, 16]}>\n      <Col xs={12} md={5}>\n        <StatisticCard title=\"DAO Address\" value={shortenAddress(daoAddress)} />\n      </Col>\n      <Col xs={12} md={5}>\n        <StatisticCard\n          title=\"Token\"\n          value={\n            <Space>\n              <MintAvatar mintAddress={mint.toBase58()} />\n              <MintSymbol mintAddress={mint.toBase58()} />\n            </Space>\n          }\n        />\n      </Col>\n      <Col xs={12} md={5}>\n        <StatisticCard title=\"Members\" value={numeric(members).format('0,0')} />\n      </Col>\n      <Col xs={12} md={5}>\n        <StatisticCard title=\"Regime\" value={<RegimeTag regime={regime} />} />\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProposalPreview\n","import { useCallback, useEffect, useMemo, useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom'\nimport { useDispatch, useSelector } from 'react-redux'\nimport {\n  ConsensusMechanisms,\n  ConsensusQuorums,\n  FeeOptions,\n} from '@interdao/core'\nimport BN from 'bn.js'\nimport { CID } from 'ipfs-core'\n\nimport { Button, Card, Col, Divider, Input, Row, Space, Typography } from 'antd'\nimport ConsensusMechanismInput from './consensusMechanismInput'\nimport ConsensusQuorumInput from '../../../components/consensusQuorumInput'\nimport DurationInput from './durationInput'\nimport ProposalPreview from './proposalPreview'\n\nimport configs from 'app/configs'\nimport { explorer } from 'shared/util'\nimport IPFS from 'shared/pdb/ipfs'\nimport { AppState } from 'app/model'\nimport { clearTx } from 'app/model/template.controller'\nimport useMetaData from 'app/hooks/useMetaData'\n\nconst {\n  sol: { interDao, taxman, fee },\n  manifest: { appId },\n} = configs\n\nexport type ProposalMetaData = {\n  title: string\n  description: string\n  imageBackground: string\n}\n\nconst CURRENT_TIME = Number(new Date())\nconst ONE_DAY = 24 * 60 * 60 * 1000\n\nconst ProposalInitialization = () => {\n  const [consensusMechanism, setConsensusMechanism] = useState(\n    ConsensusMechanisms.StakedTokenCounter,\n  )\n  const [consensusQuorum, setConsensusQuorum] = useState(ConsensusQuorums.Half)\n  const [duration, setDuration] = useState([\n    CURRENT_TIME + ONE_DAY,\n    CURRENT_TIME + 15 * ONE_DAY,\n  ])\n  const [loading, setLoading] = useState(false)\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const { daoAddress } = useParams<{ daoAddress: string }>()\n  const {\n    template: { tx, imageBackground },\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const history = useHistory()\n  const dispatch = useDispatch()\n  const daoMetaData = useMetaData(daoAddress)\n\n  const disabled = !title || !description\n  const isMultisigDAO = daoMetaData?.daoType === 'multisig-dao'\n\n  const proposalMetaData: ProposalMetaData = useMemo(() => {\n    return {\n      title,\n      description,\n      imageBackground,\n    }\n  }, [description, imageBackground, title])\n\n  const setDefaultQuorum = useCallback(() => {\n    if (!isMultisigDAO) return\n    return setConsensusQuorum(daoMetaData.quorum)\n  }, [daoMetaData, isMultisigDAO])\n\n  const newProposal = useCallback(async () => {\n    const { authority } = daoData[daoAddress]\n    if (!tx) return\n\n    try {\n      setLoading(true)\n\n      const ipfs = new IPFS()\n      const cid = await ipfs.set(proposalMetaData)\n      const {\n        multihash: { digest },\n      } = CID.parse(cid)\n\n      const feeOption: Partial<FeeOptions> = {\n        revenue: new BN(fee),\n        revenuemanAddress: authority.toBase58(),\n        tax: new BN(fee),\n        taxmanAddress: taxman,\n      }\n\n      const { programId, data, accounts } = tx\n\n      const metadata = Buffer.from(digest)\n      const valueAccounts = Object.values(accounts)\n      const { txId, proposalAddress } = await interDao.initializeProposal(\n        daoAddress,\n        programId.toBase58(),\n        data,\n        valueAccounts.map(({ pubkey }) => pubkey),\n        valueAccounts.map(({ isSigner }) => isSigner),\n        valueAccounts.map(({ isWritable }) => isWritable),\n        valueAccounts.map(({ isMaster }) => isMaster),\n        Math.floor(duration[0] / 1000),\n        Math.floor(duration[1] / 1000),\n        metadata,\n        consensusMechanism,\n        consensusQuorum,\n        feeOption,\n      )\n      window.notify({\n        type: 'success',\n        description:\n          'Create a new proposal successfully. Click here to view details.',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n\n      //Clear tx in redux\n      dispatch(clearTx())\n\n      return history.push(\n        `/app/${appId}/dao/${daoAddress}/proposal/${proposalAddress}`,\n      )\n    } catch (er: any) {\n      return window.notify({\n        type: 'error',\n        description: er.message,\n      })\n    } finally {\n      return setLoading(false)\n    }\n  }, [\n    daoData,\n    daoAddress,\n    proposalMetaData,\n    tx,\n    duration,\n    consensusMechanism,\n    consensusQuorum,\n    dispatch,\n    history,\n  ])\n\n  useEffect(() => {\n    if (!tx) return history.push(`/app/${appId}/dao/${daoAddress}`)\n  }, [daoAddress, history, tx])\n\n  useEffect(() => {\n    setDefaultQuorum()\n  }, [setDefaultQuorum])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col xs={24} md={14}>\n        <Card bordered={false}>\n          <Row gutter={[24, 24]}>\n            <Col span={24}>\n              <Typography.Title level={1}>\n                Input proposal information\n              </Typography.Title>\n            </Col>\n            <Col span={24} />\n            <Col span={24}>\n              <ProposalPreview daoAddress={daoAddress} />\n            </Col>\n            <Col span={24}>\n              <Divider className=\"proposal-initialize\" />\n            </Col>\n            <Col span={24}>\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <Typography.Text>Title</Typography.Text>\n                <Input\n                  value={title}\n                  placeholder=\"A short summary of your proposal.\"\n                  className=\"border-less\"\n                  onChange={(e) => setTitle(e.target.value)}\n                />\n              </Space>\n            </Col>\n            <Col span={24}>\n              <Space direction=\"vertical\" style={{ width: '100%' }}>\n                <Typography.Text>Description</Typography.Text>\n                <Input.TextArea\n                  placeholder=\"More detail about your proposal...\"\n                  name=\"description\"\n                  className=\"border-less\"\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </Space>\n            </Col>\n            <Col span={24}>\n              <DurationInput value={duration} onChange={setDuration} />\n            </Col>\n            {!isMultisigDAO && (\n              <Col span={24}>\n                <ConsensusMechanismInput\n                  value={consensusMechanism}\n                  onChange={setConsensusMechanism}\n                />\n              </Col>\n            )}\n            {!isMultisigDAO && (\n              <Col span={24}>\n                <ConsensusQuorumInput\n                  value={consensusQuorum}\n                  onChange={setConsensusQuorum}\n                />\n              </Col>\n            )}\n\n            <Col span={24} />\n            <Col flex=\"auto\">\n              <Button\n                type=\"text\"\n                onClick={() => history.push(`/app/${appId}/dao/${daoAddress}`)}\n                size=\"large\"\n              >\n                Cancel\n              </Button>\n            </Col>\n            <Col>\n              <Button\n                onClick={newProposal}\n                loading={loading}\n                type=\"primary\"\n                size=\"large\"\n                disabled={disabled}\n              >\n                Add a new Proposal\n              </Button>\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ProposalInitialization\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { account } from '@senswap/sen-js'\nimport {\n  DaoData,\n  DAO_DISCRIMINATOR,\n  DaoRegime,\n  DaoRegimes,\n} from '@interdao/core'\nimport { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { web3 } from '@project-serum/anchor'\nimport BN from 'bn.js'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport const DEFAULT_CREATE_DAO_DATA = {\n  mintAddress: '',\n  supply: new BN(0),\n  metadata: undefined,\n  dao: undefined,\n  regime: DaoRegimes.Dictatorial,\n}\n\nexport type DaoType = 'flexible-dao' | 'multisig-dao'\n\nexport type CreateDaoData = {\n  mintAddress: string\n  supply: BN\n  metadata?: Buffer\n  dao?: web3.Keypair\n  regime: DaoRegime\n}\n\nexport type DaoDataState = Record<string, DaoData>\nexport type DaoState = {\n  daoData: DaoDataState\n  createDaoData: CreateDaoData\n  daoType: DaoType\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'dao'\nconst initialState: DaoState = {\n  daoData: {},\n  createDaoData: DEFAULT_CREATE_DAO_DATA,\n  daoType: 'flexible-dao',\n}\n\n/**\n * Actions\n */\n\nexport const getDaos = createAsyncThunk(`${NAME}/getDaos`, async () => {\n  const {\n    provider: { connection },\n    programId,\n    account: { dao },\n  } = interDao.program\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await connection.getProgramAccounts(programId, {\n      filters: [\n        { dataSize: dao.size },\n        {\n          memcmp: {\n            offset: 0,\n            bytes: DAO_DISCRIMINATOR,\n          },\n        },\n      ],\n    })\n  let bulk: DaoDataState = {}\n  value.forEach(({ pubkey, account: { data: buf } }) => {\n    const address = pubkey.toBase58()\n    const data = interDao.parseDaoData(buf)\n    bulk[address] = { ...data }\n  })\n  return { daoData: bulk }\n})\n\nexport const getDao = createAsyncThunk<\n  Partial<DaoState>,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getDao`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    dao: {\n      daoData: { [address]: data },\n    },\n  } = getState()\n  if (data && !force) return { [address]: data }\n  const raw = await interDao.getDaoData(address)\n  return {\n    [address]: {\n      ...raw,\n    },\n  }\n})\n\nexport const upsetDao = createAsyncThunk<\n  Partial<DaoState>,\n  { address: string; data: DaoData },\n  { state: any }\n>(`${NAME}/upsetDao`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return {\n    [address]: { ...data },\n  }\n})\n\nexport const setCreateDaoData = createAsyncThunk(\n  `${NAME}/setCreateDaoData`,\n  async (createDaoData?: CreateDaoData) => {\n    if (!createDaoData) return { createDaoData: DEFAULT_CREATE_DAO_DATA }\n    return { createDaoData }\n  },\n)\nexport const setCreateDaoType = createAsyncThunk(\n  `${NAME}/setCreateDaoType`,\n  async (type: string) => {\n    return { daoType: type }\n  },\n)\n\nexport const deleteDao = createAsyncThunk(\n  `${NAME}/deleteDao`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getDaos.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getDao.fulfilled,\n        (state, { payload }) => void Object.assign(state.daoData, payload),\n      )\n      .addCase(\n        upsetDao.fulfilled,\n        (state, { payload }) => void Object.assign(state.daoData, payload),\n      )\n      .addCase(\n        setCreateDaoData.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        setCreateDaoType.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteDao.fulfilled,\n        (state, { payload }) => void Object.assign(state.daoData, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { useDispatch, useSelector } from 'react-redux'\n\nimport { Card, Col, Radio, RadioChangeEvent, Row, Typography } from 'antd'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setCreateDaoType } from 'app/model/dao.controller'\nimport { setCreateDaoMetaData } from 'app/model/metadata.controller'\n\nconst DAO_TYPE = [\n  {\n    key: 'flexible-dao',\n    label: 'Flexible DAO',\n    description:\n      'The Flexible DAO has 3 regimes that allow you to create a DAO customized for your individual requirements, community structure, and governance token setup.',\n    state: 1,\n  },\n  {\n    key: 'multisig-dao',\n    label: 'MultiSig DAO',\n    description:\n      'The Multisig DAO allows you to create an organization for your team members with Autonomous regime and jointly own, manage shared assets such as treasury accounts, NFTs or mints.',\n    state: 0,\n  },\n]\n\nconst ChooseDaoType = () => {\n  const dispatch = useDispatch<AppDispatch>()\n  const {\n    dao: { daoType },\n  } = useSelector((state: AppState) => state)\n\n  const cardBorder = (key: string) =>\n    daoType !== key ? { borderColor: 'transparent' } : {}\n\n  const selectDaoType = async (e: RadioChangeEvent) => {\n    const daoType = e.target.value\n    await dispatch(setCreateDaoType(daoType))\n    dispatch(setCreateDaoMetaData({ daoType }))\n  }\n\n  return (\n    <Row>\n      <Col span={24}>\n        <Radio.Group\n          defaultValue={daoType}\n          onChange={selectDaoType}\n          className=\"btn-radio-card\"\n        >\n          <Row gutter={[24, 24]}>\n            {DAO_TYPE.map(({ key, label, description, state }) => (\n              <Col xs={24} md={12} key={key}>\n                <Radio.Button value={key} style={{ border: 'none' }}>\n                  <Card\n                    style={{ ...cardBorder(key) }}\n                    className={`group-btn-card ${key} ${\n                      daoType === key ? 'active' : ''\n                    }`}\n                    bordered={false}\n                  >\n                    <Row gutter={[12, 12]}>\n                      <Col span={24}>\n                        <Row>\n                          <Col flex=\"auto\">\n                            <Typography.Title level={4}>\n                              {label}\n                            </Typography.Title>\n                          </Col>\n                        </Row>\n                      </Col>\n                      <Col span={24}>\n                        <Typography.Text type=\"secondary\">\n                          {description}\n                        </Typography.Text>\n                      </Col>\n                    </Row>\n                  </Card>\n                </Radio.Button>\n              </Col>\n            ))}\n          </Row>\n        </Radio.Group>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ChooseDaoType\n","import { useSelector } from 'react-redux'\nimport { useUI } from '@senhub/providers'\n\nimport { Col, Image, Row, Space, Typography } from 'antd'\nimport CardRegime from '../components/cardRegime'\n\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport { AppState } from 'app/model'\nimport { numeric } from 'shared/util'\n\nconst MAX_WIDTH_RATIO = 24 / 16\nconst PAGE_SPACING = 24\nconst HEIGHT_RATIO = 1.777777\n\nconst ReviewAndCreate = () => {\n  const {\n    dao: { createDaoData },\n    metadata: { createMetaData },\n  } = useSelector((state: AppState) => state)\n  const {\n    ui: { width },\n  } = useUI()\n\n  const { regime, mintAddress, supply } = createDaoData\n  const { daoName, description, image } = createMetaData\n  const isMobile = width < 768\n  const desktopWidth = width > 992 ? width / MAX_WIDTH_RATIO : width\n  const logoSize = isMobile\n    ? '100%'\n    : (desktopWidth - 6 - PAGE_SPACING * 4) / HEIGHT_RATIO / 2 + 3\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col xs={24} md={12}>\n        <Space direction=\"vertical\" size={24} style={{ width: '100%' }}>\n          <Space direction=\"vertical\">\n            <Typography.Text type=\"secondary\">Name of DAO</Typography.Text>\n            <Typography.Title level={1}>{daoName}</Typography.Title>\n          </Space>\n          <Space direction=\"vertical\" style={{ width: '100%' }}>\n            <Typography.Text>DAO Regime</Typography.Text>\n            <CardRegime regime={regime} />\n          </Space>\n        </Space>\n      </Col>\n      <Col xs={24} md={12}>\n        <Space direction=\"vertical\" size={24}>\n          <Space direction=\"vertical\">\n            <Typography.Text type=\"secondary\">Token to vote</Typography.Text>\n            <Space>\n              <MintAvatar mintAddress={mintAddress} size={48} />\n              <Typography.Title level={1}>\n                <MintSymbol mintAddress={mintAddress} />\n              </Typography.Title>\n            </Space>\n          </Space>\n          <Space direction=\"vertical\" className=\"dao-logo-img\">\n            <Typography.Text>DAO Logo</Typography.Text>\n            <Image\n              style={{ width: logoSize, height: logoSize }}\n              src={image?.toString()}\n              preview={false}\n            />\n          </Space>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Text type=\"secondary\">Total power</Typography.Text>\n          <Typography.Title level={1}>\n            {numeric(supply?.toNumber()).format('0,0.[00]')}\n          </Typography.Title>\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Text type=\"secondary\">Description</Typography.Text>\n          <Typography.Text>{description}</Typography.Text>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default ReviewAndCreate\n","import { useSelector } from 'react-redux'\n\nimport { Col, Image, Row, Space, Typography } from 'antd'\nimport RowSpaceVertical from 'app/components/rowSpaceVertical'\nimport CardRegime from '../components/cardRegime'\n\nimport { AppState } from 'app/model'\nimport { useUI } from '@senhub/providers'\n\nconst PAGE_SPACING = 24\nconst HEIGHT_RATIO = 1.777777\nconst MAX_WIDTH_RATIO = 24 / 16\n\nconst ReviewAndCreate = () => {\n  const {\n    dao: { createDaoData },\n    metadata: { createMetaData },\n  } = useSelector((state: AppState) => state)\n  const { regime } = createDaoData\n  const { image, description, daoName, members, quorum } = createMetaData\n  const parseQuorum = Object.keys(quorum)[0] || ''\n\n  const {\n    ui: { width },\n  } = useUI()\n\n  const isMobile = width < 768\n  const desktopWidth = width > 992 ? width / MAX_WIDTH_RATIO : width\n  const logoSize = isMobile\n    ? '100%'\n    : (desktopWidth - 6 - PAGE_SPACING * 4) / HEIGHT_RATIO / 2 + 3\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <Row justify=\"space-between\">\n          <Col>\n            <RowSpaceVertical\n              label=\"Name of DAO\"\n              value={<Typography.Title level={1}>{daoName}</Typography.Title>}\n            />\n          </Col>\n          <Col>\n            <RowSpaceVertical\n              label=\"Consensus Quorum\"\n              value={\n                <Typography.Title level={1}>{parseQuorum}</Typography.Title>\n              }\n            />\n          </Col>\n          <Col>\n            <RowSpaceVertical\n              label=\"DAO privacy\"\n              value={<Typography.Title level={1}>Public</Typography.Title>}\n            />\n          </Col>\n        </Row>\n      </Col>\n      <Col xs={24} md={12}>\n        <RowSpaceVertical\n          label=\"DAO Regime\"\n          value={<CardRegime regime={regime} />}\n        />\n      </Col>\n      <Col xs={24} md={12}>\n        <RowSpaceVertical\n          label=\"DAO Regime\"\n          value={\n            <Image\n              style={{ width: logoSize, height: logoSize }}\n              src={image?.toString()}\n              preview={false}\n            />\n          }\n        />\n      </Col>\n      <Col span={24}>\n        <Row gutter={[8, 8]}>\n          <Col span={24}>\n            <Typography.Text type=\"secondary\">\n              {members.length} members\n            </Typography.Text>\n          </Col>\n          {members.map(({ walletAddress, name }) => (\n            <Col span={24} key={walletAddress}>\n              <Space>\n                <Typography.Title level={4}>{name}</Typography.Title>\n                <Typography.Title level={4} type=\"secondary\">\n                  {walletAddress}\n                </Typography.Title>\n              </Space>\n            </Col>\n          ))}\n        </Row>\n      </Col>\n      <Col span={24}>\n        <RowSpaceVertical\n          label=\"Description\"\n          value={\n            <Typography.Paragraph style={{ margin: 0 }}>\n              {description}\n            </Typography.Paragraph>\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default ReviewAndCreate\n","import { useCallback, useEffect, useState } from 'react'\nimport { useMint } from '@senhub/providers'\nimport BN from 'bn.js'\n\n/**\n * Get token's total supply. This hook needs MintProvider for working.\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * @param mintAddress Mint address\n * @returns Decimals\n */\nconst useMintSupply = (mintAddress: string) => {\n  const [supply, setSupply] = useState<BN | undefined>(undefined)\n  const { getMint } = useMint()\n\n  const fetchSupply = useCallback(async () => {\n    try {\n      const {\n        [mintAddress]: { supply },\n      } = await getMint({ address: mintAddress })\n      return setSupply(new BN(supply.toString()))\n    } catch (er: any) {\n      return setSupply(undefined)\n    }\n  }, [mintAddress, getMint])\n\n  useEffect(() => {\n    fetchSupply()\n  }, [fetchSupply])\n\n  return supply\n}\n\nexport default useMintSupply\n","import BN from 'bn.js'\n\nimport { Button, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport NumericInput from 'shared/antd/numericInput'\n\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport useMintSupply from 'shared/hooks/useMintSupply'\nimport { numeric } from 'shared/util'\n\nexport type CirculatingSupplyInputProps = {\n  mintAddress?: string\n  value: string\n  onChange: (value: string) => void\n}\n\nconst CirculatingSupplyInput = ({\n  mintAddress = '',\n  value,\n  onChange,\n}: CirculatingSupplyInputProps) => {\n  const decimals = useMintDecimals(mintAddress) || 0\n  const supply = useMintSupply(mintAddress)\n  const suggestion = String(supply?.div(new BN(10 ** decimals)) || new BN(0))\n\n  return (\n    <Row gutter={[8, 8]} justify=\"end\">\n      <Col span={24}>\n        <Typography.Text>Total DAO Power</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <NumericInput\n          value={value}\n          onValue={onChange}\n          className=\"border-less\"\n          size=\"large\"\n          placeholder=\"Input Total DAO Power\"\n          suffix={\n            <Button\n              type=\"text\"\n              onClick={() => onChange(suggestion)}\n              icon={<IonIcon name=\"copy-outline\" />}\n              style={{ marginRight: -7 }}\n            >\n              By Suggestion\n            </Button>\n          }\n        />\n      </Col>\n      <Col>\n        <Space>\n          <Typography.Text type=\"secondary\">\n            Suggestion (Token Supply):\n          </Typography.Text>\n          <Typography.Text>{numeric(suggestion).format('0,0')}</Typography.Text>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nexport default CirculatingSupplyInput\n","import { Col, Input, Row, Typography } from 'antd'\nimport { MintSelection } from 'shared/antd/mint'\n\nexport type TokenAddressInputProps = {\n  value: string\n  onChange: (value: string) => void\n}\n\nconst TokenAddressInput = ({ value, onChange }: TokenAddressInputProps) => {\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Typography.Text>Token to Vote</Typography.Text>\n      </Col>\n      <Col span={24}>\n        <Input\n          size=\"large\"\n          placeholder=\"Input Token Address\"\n          value={value}\n          className=\"border-less\"\n          onChange={(e) => onChange(e.target.value || '')}\n          suffix={\n            <MintSelection\n              value={value}\n              onChange={onChange}\n              style={{ marginRight: -7 }}\n            />\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default TokenAddressInput\n","import { useDispatch, useSelector } from 'react-redux'\nimport BN from 'bn.js'\n\nimport { Col, Row } from 'antd'\nimport RegimeInput from './regimeInput'\nimport CirculatingSupplyInput from './circulatingSupplyInput'\nimport TokenAddressInput from './tokenAddressInput'\nimport { AppDispatch, AppState } from 'app/model'\nimport { setCreateDaoData } from 'app/model/dao.controller'\n\nimport './index.less'\n\nconst DaoRule = () => {\n  const {\n    dao: { createDaoData },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const { mintAddress, supply, regime } = createDaoData\n\n  return (\n    <Row gutter={[24, 24]}>\n      <Col span={24}>\n        <RegimeInput\n          value={regime}\n          onChange={(regime) =>\n            dispatch(setCreateDaoData({ ...createDaoData, regime }))\n          }\n        />\n      </Col>\n      <Col span={24}>\n        <TokenAddressInput\n          value={mintAddress}\n          onChange={(mintAddress) =>\n            dispatch(setCreateDaoData({ ...createDaoData, mintAddress }))\n          }\n        />\n      </Col>\n      <Col span={24}>\n        <CirculatingSupplyInput\n          mintAddress={mintAddress}\n          value={supply?.toString()}\n          onChange={(supply) =>\n            dispatch(\n              setCreateDaoData({ ...createDaoData, supply: new BN(supply) }),\n            )\n          }\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoRule\n","import { useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { DaoRegimes } from '@interdao/core'\n\nimport { Col, Row, Typography } from 'antd'\nimport CardRegime from '../../components/cardRegime'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setCreateDaoData } from 'app/model/dao.controller'\n\nconst Regime = () => {\n  const {\n    dao: { createDaoData },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n  const { regime } = createDaoData\n\n  useEffect(() => {\n    if (regime === DaoRegimes.Autonomous) return\n    dispatch(\n      setCreateDaoData({ ...createDaoData, regime: DaoRegimes.Autonomous }),\n    )\n  }, [createDaoData, dispatch, regime])\n\n  return (\n    <Row gutter={[8, 8]}>\n      <Col span={24}>\n        <Typography.Text>DAO Regime</Typography.Text>\n      </Col>\n      <Col xs={24} md={8}>\n        <CardRegime\n          value={DaoRegimes.Autonomous}\n          regime={DaoRegimes.Autonomous}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default Regime\n","import { useUI } from '@senhub/providers'\nimport isEqual from 'react-fast-compare'\n\nimport { Button, Col, Row } from 'antd'\n\nexport enum DAOPrivacy {\n  Member = 'member',\n  Public = 'public',\n}\n\ntype PrivacyDAOProps = {\n  value: DAOPrivacy\n  onChange: (value: DAOPrivacy) => void\n}\n\nconst PrivacyDAO = ({\n  value = DAOPrivacy.Member,\n  onChange = () => {},\n}: PrivacyDAOProps) => {\n  const {\n    ui: { infix },\n  } = useUI()\n  const mobileScreen = infix === 'xs'\n  const mobileSpan = mobileScreen ? 8 : undefined\n\n  return (\n    <Row gutter={[12, 12]}>\n      <Col span={24}>DAO privacy</Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={isEqual(value, DAOPrivacy.Member) ? '' : 'btn-unselect'}\n          onClick={() => onChange(DAOPrivacy.Member)}\n          block\n        >\n          Member\n        </Button>\n      </Col>\n      <Col span={mobileSpan}>\n        <Button\n          className={isEqual(value, DAOPrivacy.Public) ? '' : 'btn-unselect'}\n          onClick={() => onChange(DAOPrivacy.Public)}\n          block\n        >\n          Public\n        </Button>\n      </Col>\n    </Row>\n  )\n}\n\nexport default PrivacyDAO\n","import { ChangeEvent } from 'react'\n\nimport { Button, Col, Input, Row } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { DAOMember } from 'app/model/metadata.controller'\n\ntype MemberInputProps = {\n  onChange: (e: ChangeEvent<HTMLInputElement>) => void\n  disabledBtn?: boolean\n  disabledWalletInput?: boolean\n  remove?: () => void\n} & DAOMember\n\nconst MemberInput = ({\n  name = '',\n  walletAddress = '',\n  onChange,\n  disabledBtn = false,\n  disabledWalletInput = false,\n  remove = () => {},\n}: MemberInputProps) => {\n  return (\n    <Row gutter={[12, 12]}>\n      <Col span={4}>\n        <Input\n          className=\"border-less\"\n          onChange={onChange}\n          value={name}\n          placeholder=\"Name\"\n          name=\"name\"\n        />\n      </Col>\n      <Col span={18}>\n        <Input\n          className=\"border-less\"\n          value={walletAddress}\n          placeholder=\"Input wallet address\"\n          disabled={disabledWalletInput}\n          name=\"walletAddress\"\n          onChange={onChange}\n        />\n      </Col>\n      <Col span={2}>\n        <Button\n          disabled={disabledBtn}\n          type=\"text\"\n          icon={<IonIcon name=\"trash-outline\" />}\n          onClick={remove}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default MemberInput\n","import { ChangeEvent, useCallback, useEffect } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useWallet } from '@senhub/providers'\n\nimport { Button, Col, Row, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport MemberInput from './memberInput'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setCreateDaoMetaData } from 'app/model/metadata.controller'\n\nconst MY_INDEX = 0\nconst DAOMembers = () => {\n  const {\n    wallet: { address: myAddress },\n  } = useWallet()\n  const {\n    metadata: { createMetaData },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n  const { members } = createMetaData\n\n  const setDefaultValue = useCallback(() => {\n    if (members.length) return\n    const DEFAULT_MEMBER = [{ name: '', walletAddress: myAddress }]\n    return dispatch(setCreateDaoMetaData({ members: DEFAULT_MEMBER }))\n  }, [dispatch, members.length, myAddress])\n\n  const addMember = () => {\n    const nextMembers = [...members]\n    nextMembers.push({ name: '', walletAddress: '' })\n    return dispatch(setCreateDaoMetaData({ members: nextMembers }))\n  }\n\n  const onChangeMember = (e: ChangeEvent<HTMLInputElement>, index: number) => {\n    const nextMembers = [...members]\n    nextMembers[index] = {\n      ...nextMembers[index],\n      [e.target.name]: e.target.value,\n    }\n    return dispatch(setCreateDaoMetaData({ members: nextMembers }))\n  }\n\n  const onChangeMyName = (e: ChangeEvent<HTMLInputElement>) => {\n    const nextMembers = [...members]\n    nextMembers[MY_INDEX] = { ...nextMembers[MY_INDEX], name: e.target.value }\n    return dispatch(setCreateDaoMetaData({ members: nextMembers }))\n  }\n\n  const remove = (index: number) => {\n    const nextMembers = [...members]\n    nextMembers.splice(index, 1)\n    return dispatch(setCreateDaoMetaData({ members: nextMembers }))\n  }\n\n  useEffect(() => {\n    setDefaultValue()\n  }, [setDefaultValue])\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Typography.Title level={4}>\n          People who'll be part of your team.\n        </Typography.Title>\n      </Col>\n      <Col span={24}>\n        <Row gutter={[12, 12]}>\n          <Col span={24} key={myAddress}>\n            {members.length && (\n              <MemberInput\n                name={members[MY_INDEX].name}\n                walletAddress={myAddress}\n                onChange={onChangeMyName}\n                disabledBtn={true}\n                disabledWalletInput={true}\n              />\n            )}\n          </Col>\n          {members.length &&\n            members.map(({ name, walletAddress }, idx) => {\n              if (walletAddress === myAddress) return null\n              return (\n                <Col span={24} key={idx}>\n                  <MemberInput\n                    name={name}\n                    walletAddress={walletAddress}\n                    onChange={(e: ChangeEvent<HTMLInputElement>) =>\n                      onChangeMember(e, idx)\n                    }\n                    remove={() => remove(idx)}\n                  />\n                </Col>\n              )\n            })}\n          <Col span={4}>\n            <Button\n              style={{ width: '100%' }}\n              type=\"dashed\"\n              icon={<IonIcon name=\"add-outline\" />}\n              onClick={addMember}\n            >\n              Add\n            </Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DAOMembers\n","import { useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { ConsensusQuorum } from '@interdao/core'\n\nimport { Col, Row } from 'antd'\nimport ConsensusQuorumInput from 'app/components/consensusQuorumInput'\nimport Regime from './regime'\nimport PrivacyDAO, { DAOPrivacy } from '../../components/privacyDAO'\nimport DAOMembers from './daoMembers'\n\nimport { AppDispatch, AppState } from 'app/model'\nimport { setCreateDaoMetaData } from 'app/model/metadata.controller'\n\nconst MultiSigDAORule = () => {\n  const [privacy, setPrivacy] = useState(DAOPrivacy.Member)\n  const {\n    metadata: { createMetaData },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const onChange = (quorum: ConsensusQuorum) => {\n    return dispatch(setCreateDaoMetaData({ quorum }))\n  }\n\n  return (\n    <Row gutter={[32, 32]}>\n      <Col span={24}>\n        <Regime />\n      </Col>\n      <Col span={24}>\n        <Row gutter={[12, 12]}>\n          <Col xs={24} md={12}>\n            <ConsensusQuorumInput\n              value={createMetaData.quorum}\n              onChange={onChange}\n            />\n          </Col>\n          <Col>\n            <PrivacyDAO value={privacy} onChange={setPrivacy} />\n          </Col>\n        </Row>\n      </Col>\n      <Col span={24}>\n        <DAOMembers />\n      </Col>\n    </Row>\n  )\n}\n\nexport default MultiSigDAORule\n","import React, { ChangeEvent } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\n\nimport { Card, Col, Image, Input, Row, Space, Typography, Upload } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { UploadChangeParam } from 'antd/lib/upload'\nimport { fileToBase64 } from 'app/helpers'\nimport {\n  MetaData,\n  setCreateDaoMetaData,\n  SOCIAL_MEDIA,\n} from 'app/model/metadata.controller'\nimport { AppDispatch, AppState } from 'app/model'\n\nconst MetaDataForm = () => {\n  const {\n    metadata: { createMetaData },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch<AppDispatch>()\n\n  const formatMetaData = async (imgBase64: string | ArrayBuffer | null) => {\n    const nextMetaData: MetaData = {\n      ...createMetaData,\n      image: imgBase64,\n    }\n    return dispatch(setCreateDaoMetaData(nextMetaData))\n  }\n\n  const onFileChange = (file: UploadChangeParam) => {\n    const { fileList } = file\n    const originFile = fileList[0].originFileObj as File\n    fileToBase64(originFile, formatMetaData)\n  }\n\n  const onChange = (e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) =>\n    dispatch(setCreateDaoMetaData({ [e.target.name]: e.target.value }))\n  const onOptionalChange = (\n    e: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>,\n    idx: number,\n  ) => {\n    const nextMetaData: MetaData = JSON.parse(JSON.stringify(createMetaData))\n    nextMetaData.optionals.splice(idx, 1, e.target.value)\n    dispatch(setCreateDaoMetaData(nextMetaData))\n  }\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col span={24}>\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          <Typography.Text>DAO name</Typography.Text>\n          <Input\n            value={createMetaData.daoName}\n            placeholder=\"Input DAO name\"\n            onChange={onChange}\n            name=\"daoName\"\n            className=\"border-less\"\n          />\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\" style={{ width: '100%' }}>\n          <Typography.Text>DAO description</Typography.Text>\n          <Input.TextArea\n            value={createMetaData.description}\n            placeholder=\"Input DAO description\"\n            name=\"description\"\n            onChange={onChange}\n            className=\"border-less\"\n          />\n        </Space>\n      </Col>\n      <Col span={24}>\n        <Space direction=\"vertical\">\n          <Typography.Text>Avatar</Typography.Text>\n          <Upload\n            className={`interdao-upload-metadata ${\n              !!createMetaData.image ? 'uploaded' : ''\n            }`}\n            accept=\"image/png,image/jpg,image/webp\"\n            name=\"avatar\"\n            listType=\"picture-card\"\n            maxCount={1}\n            onChange={onFileChange}\n            itemRender={(eml, uploadFile, uploadFiles, { remove }) => {\n              return (\n                <Card\n                  className=\"img-card-preview-upload\"\n                  bodyStyle={{ padding: 0, position: 'relative' }}\n                >\n                  <Image src={uploadFile.thumbUrl} preview={false} />\n                  <IonIcon\n                    className=\"ico-action-upload\"\n                    name=\"trash-outline\"\n                    onClick={remove}\n                  />\n                </Card>\n              )\n            }}\n            onRemove={() => {\n              dispatch(setCreateDaoMetaData({ image: '' }))\n              return true\n            }}\n          >\n            <Space direction=\"vertical\" size={0}>\n              <Typography.Text style={{ fontSize: 24 }}>\n                <IonIcon name=\"cloud-upload-outline\" />\n              </Typography.Text>\n              <Typography.Text type=\"secondary\" style={{ fontSize: 10 }}>\n                Support JPG, PNG\n              </Typography.Text>\n            </Space>\n          </Upload>\n        </Space>\n      </Col>\n      {SOCIAL_MEDIA.map((social, idx) => (\n        <Col xs={24} md={12} key={idx}>\n          <Space direction=\"vertical\" style={{ width: '100%' }}>\n            <Typography.Text style={{ textTransform: 'capitalize' }}>\n              {social} (Optional)\n            </Typography.Text>\n            <Input\n              value={createMetaData.optionals[idx]}\n              onChange={(e) => onOptionalChange(e, idx)}\n              name=\"optionals\"\n              className=\"border-less\"\n            />\n          </Space>\n        </Col>\n      ))}\n    </Row>\n  )\n}\n\nexport default MetaDataForm\n","import { AppState } from 'app/model'\nimport { useSelector } from 'react-redux'\n\nimport ChooseDaoType from './chooseDaoType'\nimport ReviewAndCreateFlexibleDAO from './flexibleDAO/reviewAndCreate'\nimport ReviewAndCreateMultisigDAO from './multisigDAO/reviewAndCreate'\nimport FlexibleDAORule from './flexibleDAO/daoRule'\nimport MultiSigDAORule from './multisigDAO/daoRule'\nimport MetaDataForm from './metaDataForm'\n\nexport enum CreateSteps {\n  stepOne = 1,\n  stepTwo = 2,\n  stepThree = 3,\n}\n\nconst InitDAOContainer = ({ step }: { step: number }) => {\n  const {\n    dao: { daoType },\n  } = useSelector((state: AppState) => state)\n  if (step === CreateSteps.stepOne) return <MetaDataForm />\n\n  if (step === CreateSteps.stepTwo && daoType === 'flexible-dao')\n    return <FlexibleDAORule />\n  if (step === CreateSteps.stepTwo && daoType === 'multisig-dao')\n    return <MultiSigDAORule />\n\n  if (step === CreateSteps.stepThree && daoType === 'flexible-dao')\n    return <ReviewAndCreateFlexibleDAO />\n  if (step === CreateSteps.stepThree && daoType === 'multisig-dao')\n    return <ReviewAndCreateMultisigDAO />\n\n  return <ChooseDaoType />\n}\n\nexport default InitDAOContainer\n","import { Progress, Space, Typography } from 'antd'\n\nexport type CreateDaoTitleProps = {\n  step: number\n  onHandleStep?: () => void\n  onConfirm?: () => void\n  loading?: boolean\n  disabled?: boolean\n}\n\nconst DEFAULT_PERCENT = 25\nconst DAO_PROGRESS_TITLE = [\n  'Choose type of DAO',\n  'Input DAO infomation',\n  'Set the rule',\n  'Review',\n]\n\nconst InitDAOHeader = ({ step }: CreateDaoTitleProps) => {\n  return (\n    <Space direction=\"vertical\" size={12}>\n      <Typography.Title level={1}>{DAO_PROGRESS_TITLE[step]}</Typography.Title>\n      <Progress\n        className=\"create-progress\"\n        percent={step * DEFAULT_PERCENT + DEFAULT_PERCENT}\n        steps={4}\n        showInfo={false}\n      />\n    </Space>\n  )\n}\n\nexport default InitDAOHeader\n","import { useHistory } from 'react-router-dom'\n\nimport { Button } from 'antd'\nimport { CreateDaoTitleProps } from '../initDAOHeader'\n\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst BackAction = ({ step, onHandleStep = () => {} }: CreateDaoTitleProps) => {\n  const history = useHistory()\n\n  if (step > 0)\n    return (\n      <Button type=\"text\" onClick={onHandleStep} size=\"large\">\n        Back\n      </Button>\n    )\n  return (\n    <Button\n      type=\"text\"\n      onClick={() => history.push(`/app/${appId}/dao`)}\n      size=\"large\"\n    >\n      Cancel\n    </Button>\n  )\n}\n\nexport default BackAction\n","import { Button } from 'antd'\nimport { CreateDaoTitleProps } from '../initDAOHeader'\nimport { CreateSteps } from '../initDAOContainer'\n\nconst ContinuesAction = ({\n  step,\n  onHandleStep,\n  onConfirm,\n  disabled = false,\n  loading = false,\n}: CreateDaoTitleProps) => {\n  if (step === CreateSteps.stepThree)\n    return (\n      <Button onClick={onConfirm} type=\"primary\" size=\"large\" loading={loading}>\n        Confirm\n      </Button>\n    )\n  return (\n    <Button\n      onClick={onHandleStep}\n      type=\"primary\"\n      size=\"large\"\n      disabled={disabled}\n    >\n      Continues\n    </Button>\n  )\n}\n\nexport default ContinuesAction\n","import { Col, Row } from 'antd'\nimport React from 'react'\nimport { CreateDaoTitleProps } from '../initDAOHeader'\nimport BackAction from './backAction'\nimport ContinuesAction from './continuesAction'\n\ntype ActionButtonProps = {\n  setStep: () => void\n} & CreateDaoTitleProps\n\nconst ActionButton = ({\n  step,\n  onHandleStep,\n  onConfirm,\n  loading,\n  disabled,\n  setStep,\n}: ActionButtonProps) => {\n  return (\n    <Row>\n      <Col flex=\"auto\">\n        <BackAction step={step} onHandleStep={setStep} />\n      </Col>\n      <Col>\n        <ContinuesAction\n          step={step}\n          onHandleStep={onHandleStep}\n          onConfirm={onConfirm}\n          loading={loading}\n          disabled={disabled}\n        />\n      </Col>\n    </Row>\n  )\n}\n\nexport default ActionButton\n","import { DEFAULT_EMPTY_ADDRESS, WalletInterface } from '@senswap/sen-js'\nimport {\n  Spl,\n  AnchorProvider,\n  web3,\n  setProvider,\n  BN,\n  utils,\n} from '@project-serum/anchor'\nimport { PublicKey } from '@solana/web3.js'\n\nclass MultisigWallet {\n  private _mint: PublicKey = new PublicKey(DEFAULT_EMPTY_ADDRESS)\n\n  getAnchorProvider = async (\n    node: string,\n    walletAddress: string,\n    wallet: WalletInterface,\n  ): Promise<AnchorProvider> => {\n    const connection = new web3.Connection(node, 'confirmed')\n\n    const signAllTransactions = async (transactions: web3.Transaction[]) => {\n      const signedTransactions = []\n      for (const transaction of transactions) {\n        const signedTransaction = await wallet.signTransaction(transaction)\n        signedTransactions.push(signedTransaction)\n      }\n      return signedTransactions\n    }\n\n    const publicKey = new web3.PublicKey(walletAddress)\n    const anchorProvider = new AnchorProvider(\n      connection,\n      {\n        publicKey: new web3.PublicKey(publicKey),\n        signTransaction: wallet.signTransaction,\n        signAllTransactions,\n      },\n      {\n        commitment: 'confirmed',\n        skipPreflight: true,\n      },\n    )\n    setProvider(anchorProvider)\n    return anchorProvider\n  }\n\n  initializeAccount = async (\n    associatedTokenAccount: web3.PublicKey,\n    token: web3.PublicKey,\n    authority: web3.PublicKey,\n    provider: AnchorProvider,\n  ) => {\n    const ix = new web3.TransactionInstruction({\n      keys: [\n        {\n          pubkey: provider.wallet.publicKey,\n          isSigner: true,\n          isWritable: true,\n        },\n        {\n          pubkey: associatedTokenAccount,\n          isSigner: false,\n          isWritable: true,\n        },\n        {\n          pubkey: authority,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: token,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: web3.SystemProgram.programId,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: utils.token.TOKEN_PROGRAM_ID,\n          isSigner: false,\n          isWritable: false,\n        },\n        {\n          pubkey: web3.SYSVAR_RENT_PUBKEY,\n          isSigner: false,\n          isWritable: false,\n        },\n      ],\n      programId: utils.token.ASSOCIATED_PROGRAM_ID,\n      data: Buffer.from([]),\n    })\n    const tx = new web3.Transaction().add(ix)\n    return await provider.sendAndConfirm(tx)\n  }\n\n  initializeMint = async (\n    decimals: number,\n    token: web3.Keypair,\n    provider: AnchorProvider,\n  ) => {\n    const spl = Spl.token()\n    const ix = await (spl.account as any).mint.createInstruction(token)\n    const tx = new web3.Transaction().add(ix)\n    await provider.sendAndConfirm(tx, [token])\n    return await spl.rpc.initializeMint(\n      decimals,\n      provider.wallet.publicKey,\n      provider.wallet.publicKey,\n      {\n        accounts: {\n          mint: token.publicKey,\n          rent: web3.SYSVAR_RENT_PUBKEY,\n        },\n        signers: [],\n      },\n    )\n  }\n\n  getProvider = async () => {\n    const { splt, wallet } = window.sentre\n    const walletAddress = await wallet.getAddress()\n    const provider = await this.getAnchorProvider(\n      splt.nodeUrl,\n      walletAddress,\n      wallet,\n    )\n    return provider\n  }\n\n  createNewToken = async () => {\n    const mint = new web3.Keypair()\n    const provider = await this.getProvider()\n    await this.initializeMint(0, mint, provider)\n    this._mint = mint.publicKey\n  }\n\n  isValidMint = (): boolean => {\n    return this._mint.toBase58() !== DEFAULT_EMPTY_ADDRESS\n  }\n\n  mintToAccount = async (pubkey: PublicKey) => {\n    if (!this.isValidMint()) throw new Error('Please create mint first!')\n\n    const provider = await this.getProvider()\n    const spl = Spl.token()\n    // Derive token account\n    const tokenAccount = await utils.token.associatedAddress({\n      mint: this._mint,\n      owner: pubkey,\n    })\n    await this.initializeAccount(tokenAccount, this._mint, pubkey, provider)\n\n    //mintTo\n    await spl.rpc.mintTo(new BN(1), {\n      accounts: {\n        mint: this._mint,\n        to: tokenAccount,\n        authority: provider.wallet.publicKey,\n      },\n    })\n  }\n\n  burnAccount = async (\n    authority: PublicKey,\n    mint: PublicKey,\n    source: PublicKey,\n  ) => {\n    await this.getProvider()\n    const spl = Spl.token()\n    const tokenAccount = await utils.token.associatedAddress({\n      mint: mint,\n      owner: source,\n    })\n\n    await spl.rpc.burn(new BN(1), {\n      accounts: {\n        source: tokenAccount,\n        mint,\n        authority,\n      },\n    })\n  }\n\n  getMintAddress = (): string => {\n    if (!this.isValidMint()) return ''\n    return this._mint.toBase58()\n  }\n}\n\nexport default MultisigWallet\n","import { useCallback, useMemo, useState } from 'react'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport IPFS from 'shared/pdb/ipfs'\nimport { CID } from 'ipfs-core'\nimport { BN } from 'bn.js'\nimport { account } from '@senswap/sen-js'\n\nimport { Row, Col, Card } from 'antd'\nimport InitDAOContainer, { CreateSteps } from './initDAOContainer'\nimport InitDAOHeader from './initDAOHeader'\nimport ActionButton from './actions'\n\nimport { AppState } from 'app/model'\nimport { explorer } from 'shared/util'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport MultisigWallet from 'app/helpers/mutisigWallet'\nimport configs from 'app/configs'\n\nimport './index.less'\n\nconst {\n  sol: { interDao },\n  manifest: { appId },\n} = configs\n\nconst DaoInitialization = () => {\n  const [step, setStep] = useState(0)\n  const [loading, setLoading] = useState(false)\n  const {\n    dao: { createDaoData, daoType },\n    metadata: { createMetaData },\n  } = useSelector((state: AppState) => state)\n  const history = useHistory()\n  const { mintAddress, supply, regime } = createDaoData\n  const { members } = createMetaData\n  const decimals = useMintDecimals(mintAddress) || 0\n\n  const onNextStep = useCallback(async () => {\n    try {\n      if (step === CreateSteps.stepOne && !createMetaData)\n        throw new Error('Invalid Metadata')\n      if (step === CreateSteps.stepTwo && !createDaoData)\n        throw new Error('Invalid DAO data')\n      return setStep(step + 1)\n    } catch (err: any) {\n      window.notify({ type: 'error', description: err.message })\n    }\n  }, [createDaoData, createMetaData, step])\n\n  const disabled = useMemo(() => {\n    if (step === CreateSteps.stepOne)\n      return (\n        !createMetaData.daoName ||\n        !createMetaData.image ||\n        !createMetaData.description\n      )\n\n    if (step === CreateSteps.stepTwo && daoType === 'flexible-dao')\n      return (\n        !createDaoData.mintAddress ||\n        !createDaoData.regime ||\n        !Number(createDaoData.supply)\n      )\n\n    if (step === CreateSteps.stepTwo && daoType === 'multisig-dao' && members) {\n      let valid = false\n      for (const member of members) {\n        const { name, walletAddress } = member\n        if (!name || !account.isAddress(walletAddress)) {\n          valid = true\n          break\n        }\n      }\n      return valid\n    }\n  }, [createDaoData, createMetaData, step, daoType, members])\n\n  const getMintAddr = useCallback(async () => {\n    if (mintAddress || !members) return mintAddress\n    try {\n      const multiSigWallet = new MultisigWallet()\n      await multiSigWallet.createNewToken()\n\n      for (const { walletAddress } of members) {\n        await multiSigWallet.mintToAccount(account.fromAddress(walletAddress))\n      }\n\n      return multiSigWallet.getMintAddress()\n    } catch (err: any) {\n      window.notify({ type: 'error', description: err.message })\n      return ''\n    }\n  }, [members, mintAddress])\n\n  const onCreateDao = useCallback(async () => {\n    try {\n      setLoading(true)\n      const ipfs = new IPFS()\n      const cid = await ipfs.set(createMetaData)\n      const {\n        multihash: { digest },\n      } = CID.parse(cid)\n      const metadata = Buffer.from(digest)\n\n      const totalSupply =\n        daoType === 'flexible-dao'\n          ? supply.mul(new BN(10).pow(new BN(decimals)))\n          : new BN(members.length)\n\n      const mintAddress = await getMintAddr()\n\n      const { txId, daoAddress } = await interDao.initializeDao(\n        mintAddress,\n        totalSupply,\n        metadata,\n        undefined, // Optional DAO's keypair\n        regime,\n      )\n      window.notify({\n        type: 'success',\n        description: 'A new DAO is created. Click here to view details.',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n      return history.push(`/app/${appId}/dao/${daoAddress}`)\n    } catch (err: any) {\n      window.notify({ type: 'error', description: err.message })\n    } finally {\n      setLoading(false)\n    }\n  }, [\n    createMetaData,\n    daoType,\n    supply,\n    decimals,\n    members,\n    getMintAddr,\n    regime,\n    history,\n  ])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col xs={24} lg={16}>\n        <Card bordered={false}>\n          <Row gutter={[24, 32]}>\n            <Col span={24}>\n              <InitDAOHeader step={step} />\n            </Col>\n            <Col span={24}>\n              <InitDAOContainer step={step} />\n            </Col>\n            <Col span={24}>\n              <ActionButton\n                step={step}\n                onHandleStep={onNextStep}\n                onConfirm={onCreateDao}\n                loading={loading}\n                disabled={disabled}\n                setStep={() => setStep(step - 1)}\n              />\n            </Col>\n          </Row>\n        </Card>\n      </Col>\n    </Row>\n  )\n}\n\nexport default DaoInitialization\n","import { useCallback, useEffect, useState } from 'react'\nimport { account } from '@senswap/sen-js'\nimport { AccountInfo, PublicKey } from '@solana/web3.js'\n\nimport configs from 'app/configs'\nimport { ReceiptData } from '@interdao/core'\n\nconst {\n  sol: { interDao },\n} = configs\n\nexport const getReceipts = async (\n  proposalAddress: string,\n): Promise<ReceiptData[]> => {\n  if (!account.isAddress(proposalAddress)) throw new Error('Invalid address')\n  const {\n    provider: { connection },\n    programId,\n    account: { receipt },\n  } = interDao.program\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await connection.getProgramAccounts(programId, {\n      filters: [\n        { dataSize: receipt.size },\n        {\n          memcmp: {\n            offset: 48,\n            bytes: proposalAddress,\n          },\n        },\n      ],\n    })\n  let bulk: ReceiptData[] = []\n\n  value.forEach(({ account: { data: buf } }) => {\n    const data = interDao.parseReceiptData(buf)\n    bulk.push(data)\n  })\n  return bulk\n}\n\nconst useReceipts = ({ proposalAddress }: { proposalAddress: string }) => {\n  const [receipts, setReceipts] = useState<ReceiptData[]>([])\n\n  const fetchReceipts = useCallback(async () => {\n    if (!account.isAddress(proposalAddress)) return setReceipts([])\n    const listReceipt = await getReceipts(proposalAddress)\n    return setReceipts(listReceipt)\n  }, [proposalAddress])\n\n  useEffect(() => {\n    fetchReceipts()\n  }, [fetchReceipts])\n\n  return { receipts }\n}\n\nexport default useReceipts\n","import { useCallback, useMemo, useState } from 'react'\n\nimport { Button, Card, Col, Row, Space, Typography } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ProposalStatus from 'app/components/proposalStatus'\n\nimport { ProposalChildCardProps } from './index'\nimport { explorer, shortenAddress } from 'shared/util'\nimport useProposalStatus from 'app/hooks/useProposalStatus'\nimport useProposalMetaData from 'app/hooks/useProposalMetaData'\nimport useReceipts from 'app/hooks/useReceipts'\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\nconst CardStatus = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const [loading, setLoading] = useState(false)\n\n  const { status } = useProposalStatus(proposalAddress)\n  const metaData = useProposalMetaData(proposalAddress)\n  const { receipts } = useReceipts({ proposalAddress })\n\n  const members = useMemo(() => {\n    if (!receipts.length) return 0\n    const authorities: string[] = []\n\n    for (const receipt of receipts) {\n      const { authority } = receipt\n      if (authorities.includes(authority.toBase58())) continue\n      authorities.push(authority.toBase58())\n    }\n\n    return authorities.length\n  }, [receipts])\n\n  const disabled = useMemo(() => {\n    if (status === 'Succeeded') return false\n    return true\n  }, [status])\n\n  const execute = useCallback(async () => {\n    setLoading(true)\n    try {\n      const { txId } = await interDao.executeProposal(proposalAddress)\n      return window.notify({\n        type: 'success',\n        description: 'Execute successfully',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (error: any) {\n      return window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setLoading(false)\n    }\n  }, [proposalAddress])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Row gutter={[24, 24]} wrap={false}>\n            <Col flex=\"auto\">\n              <Space direction=\"vertical\">\n                <Row gutter={[8, 8]} align=\"middle\">\n                  <Col>\n                    <Typography.Title\n                      level={3}\n                      style={{ wordBreak: 'break-all' }}\n                    >\n                      {metaData?.title\n                        ? metaData.title\n                        : shortenAddress(proposalAddress)}\n                    </Typography.Title>\n                  </Col>\n                  <Col>\n                    <ProposalStatus status={status} />\n                  </Col>\n                </Row>\n                <Space>\n                  <IonIcon name=\"people-outline\" />\n                  <Typography.Text>Member: {members}</Typography.Text>\n                </Space>\n              </Space>\n            </Col>\n            <Col>\n              <Button\n                size=\"large\"\n                type=\"primary\"\n                onClick={execute}\n                loading={loading}\n                disabled={disabled}\n              >\n                Execute\n              </Button>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph\n            type=\"secondary\"\n            ellipsis={{ rows: 3, expandable: true, symbol: 'View more' }}\n          >\n            {metaData?.description}\n          </Typography.Paragraph>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CardStatus\n","import { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\n\n/**\n * Interface & Utility\n */\n\nexport type VoteBidState = {\n  amount: string\n}\n\n/**\n * Store constructor\n */\n\nconst NAME = 'voteBid'\nconst initialState: VoteBidState = {\n  amount: '',\n}\n\n/**\n * Actions\n */\n\nexport const setVoteBidAmount = createAsyncThunk(\n  `${NAME}/setVoteBidAmount`,\n  async (amount: string) => {\n    if (!amount) return { amount: '' }\n    return { amount }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      setVoteBidAmount.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { useEffect, useState } from 'react'\nimport { account, DEFAULT_EMPTY_ADDRESS, utils } from '@senswap/sen-js'\nimport { useAccount, useWallet } from '@senhub/providers'\n\nimport useMintDecimals from './useMintDecimals'\n\nexport type AccountBalanceReturn = {\n  amount: bigint\n  decimals: number\n  balance: number\n  mintAddress: string\n}\n\nconst buildResult = (\n  mintAddress?: string,\n  amount?: bigint,\n  decimals?: number,\n) => {\n  if (\n    !account.isAddress(mintAddress) ||\n    amount === undefined ||\n    decimals === undefined\n  )\n    return { amount: BigInt(0), decimals: 0, balance: 0 }\n  return {\n    mintAddress,\n    amount,\n    decimals,\n    balance: Number(utils.undecimalize(amount, decimals)),\n  }\n}\n\n/**\n * Get account balance. This hook needs WalletProvider, MintProvider, and AccountProvider for working.\n * WalletProvider Ref: https://docs.sentre.io/senhub/development/providers/wallet-provider\n * MintProvider Ref: https://docs.sentre.io/senhub/development/providers/mint-provider\n * AccountProvider Ref: https://docs.sentre.io/senhub/development/providers/account-provider\n * @param accountAddress Associated account address\n * @returns AccountBalanceReturn\n * - AccountBalanceReturn.amount: The amount with decimals\n * - AccountBalanceReturn.decimals: The corresponding mint decimals\n * - AccountBalanceReturn.balance: The human-readable balance (undecimalized amount)\n * - AccountBalanceReturn.mintAddress: The corresponding mint\n */\nconst useAccountBalance = (accountAddress: string) => {\n  const {\n    wallet: { address: walletAddress, lamports },\n  } = useWallet()\n  const { accounts } = useAccount()\n  const { amount, mint: mintAddress } = accounts[accountAddress] || {}\n  const decimals = useMintDecimals(mintAddress) || 0\n\n  if (!account.isAddress(walletAddress) || !account.isAddress(accountAddress))\n    return buildResult()\n  if (accountAddress === walletAddress)\n    return buildResult(DEFAULT_EMPTY_ADDRESS, lamports, 9)\n\n  return buildResult(mintAddress, amount, decimals)\n}\n\nexport default useAccountBalance\n\n/**\n * The same as useAccountBalance but the input is mint address\n * @param mintAddress Mint address\n * @returns AccountBalanceReturn\n */\nexport const useAccountBalanceByMintAddress = (mintAddress: string) => {\n  const [accountAddress, setAccountAddress] = useState('')\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const data = useAccountBalance(accountAddress)\n\n  useEffect(() => {\n    ;(async () => {\n      if (!account.isAddress(walletAddress) || !account.isAddress(mintAddress))\n        return setAccountAddress('')\n      const {\n        sentre: { splt },\n      } = window\n      try {\n        const address = await splt.deriveAssociatedAddress(\n          walletAddress,\n          mintAddress,\n        )\n        return setAccountAddress(address)\n      } catch (er) {\n        return setAccountAddress('')\n      }\n    })()\n  })\n\n  return data\n}\n","import dayjs from 'dayjs'\n\nexport function getRemainingTime(timestampMs: number, finishTime?: number) {\n  const timestampDayjs = dayjs(timestampMs)\n  const nowDayjs = finishTime ? finishTime : dayjs()\n\n  // times of the past\n  if (timestampDayjs.isBefore(nowDayjs)) {\n    return {\n      minutes: '00',\n      hours: '00',\n      days: '00',\n      seconds: '00',\n    }\n  }\n\n  return {\n    minutes: getRemainingMinutes(nowDayjs, timestampDayjs),\n    hours: getRemainingHours(nowDayjs, timestampDayjs),\n    days: getRemainingDays(nowDayjs, timestampDayjs),\n    seconds: getRemainingSeconds(nowDayjs, timestampDayjs),\n  }\n}\n\n/** Get the difference function */\nfunction getRemainingSeconds(nowDayjs: any, timestampDayjs: any) {\n  const seconds = (timestampDayjs.diff(nowDayjs, 'seconds') % 60) % 60\n  return startWithZeros(seconds, 2)\n}\n\nfunction getRemainingMinutes(nowDayjs: any, timestampDayjs: any) {\n  const minutes = timestampDayjs.diff(nowDayjs, 'minutes') % 60\n  return startWithZeros(minutes, 2)\n}\n\nfunction getRemainingHours(nowDayjs: any, timestampDayjs: any) {\n  const hours = timestampDayjs.diff(nowDayjs, 'hours') % 24\n  return startWithZeros(hours, 2)\n}\n\nfunction getRemainingDays(nowDayjs: any, timestampDayjs: any) {\n  const days = timestampDayjs.diff(nowDayjs, 'days')\n  return days.toString()\n}\n\nfunction startWithZeros(number: number, minLength: number) {\n  const numberString = number.toString()\n  if (numberString.length >= minLength) return numberString\n  return '0'.repeat(minLength - numberString.length) + numberString\n}\n","import { Fragment, useCallback, useEffect, useMemo, useState } from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { account, utils } from '@senswap/sen-js'\nimport { DaoData, FeeOptions } from '@interdao/core'\nimport { BN } from 'bn.js'\n\nimport { Button, Card, Col, Row, Typography, Space, Tooltip } from 'antd'\nimport NumericInput from 'shared/antd/numericInput'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport useProposal from 'app/hooks/useProposal'\nimport { AppState } from 'app/model'\nimport { setVoteBidAmount } from 'app/model/voteBid.controller'\nimport { ProposalChildCardProps } from './index'\nimport { explorer, numeric } from 'shared/util'\nimport configs from 'app/configs'\nimport { useAccountBalanceByMintAddress } from 'shared/hooks/useAccountBalance'\nimport { MintSymbol } from 'shared/antd/mint'\nimport useProposalStatus from 'app/hooks/useProposalStatus'\nimport { getRemainingTime } from 'app/helpers/countDown'\nimport useMetaData from 'app/hooks/useMetaData'\n\nconst {\n  sol: { interDao, taxman, fee },\n} = configs\n\nconst defaultRemainingTime = {\n  minutes: '00',\n  hours: '00',\n  days: '00',\n  seconds: '00',\n}\n\ntype LockedVotingProps = {\n  proposalAddress: string\n  daoAddress: string\n}\nconst LockedVoting = ({ proposalAddress, daoAddress }: LockedVotingProps) => {\n  const [remainingTime, setRemainingTime] = useState(defaultRemainingTime)\n  const { status } = useProposalStatus(proposalAddress)\n  const {\n    voteBid: { amount: voteAmount },\n  } = useSelector((state: AppState) => state)\n  const { consensusMechanism, endDate, startDate } = useProposal(\n    proposalAddress,\n    daoAddress,\n  )\n\n  const voteNow = new Date().getTime()\n  const endTime = Number(endDate) * 1000\n  const startTime = Number(startDate) * 1000\n\n  const isLockedVote =\n    Object.keys(consensusMechanism || [])?.[0] === 'lockedTokenCounter'\n  const remaining = voteNow < endTime ? endTime - voteNow : 0\n  const votePower = (Number(voteAmount) * remaining) / 1000\n\n  const updateRemainingTime = useCallback(\n    (countdown: number, startTime?: number) => {\n      setRemainingTime(getRemainingTime(countdown, startTime))\n    },\n    [],\n  )\n\n  useEffect(() => {\n    if (status === 'Preparing') return updateRemainingTime(endTime, startTime)\n    const intervalId = setInterval(() => {\n      updateRemainingTime(endTime)\n    }, 1000)\n    return () => clearInterval(intervalId)\n  }, [endTime, startTime, status, updateRemainingTime])\n\n  if (!isLockedVote) return <Fragment />\n\n  return (\n    <Row gutter={[16, 16]}>\n      <Col flex=\"auto\">\n        <Space direction=\"vertical\">\n          <Typography.Text>Time remaining</Typography.Text>\n          <Typography.Title level={5}>\n            {remainingTime.days}d : {remainingTime.hours}h :{' '}\n            {remainingTime.minutes}m : {remainingTime.seconds}s\n          </Typography.Title>\n        </Space>\n      </Col>\n      <Col>\n        <Space direction=\"vertical\">\n          <Space>\n            <Tooltip title=\"Your power will be equal to the token amount multiplied by the remaining time (by seconds)\">\n              <IonIcon\n                style={{ cursor: 'pointer' }}\n                name=\"information-circle-outline\"\n              />\n            </Tooltip>\n            <Typography.Text>Power of your votes</Typography.Text>\n          </Space>\n\n          <Typography.Title level={5} style={{ textAlign: 'right' }}>\n            {numeric(votePower).format('0,0.[0000]')}\n          </Typography.Title>\n        </Space>\n      </Col>\n    </Row>\n  )\n}\n\nconst CardVote = ({ proposalAddress, daoAddress }: ProposalChildCardProps) => {\n  const [loadingFor, setLoadingFor] = useState(false)\n  const [loadingAgainst, setLoadingAgainst] = useState(false)\n  const {\n    dao: { daoData },\n    voteBid: { amount },\n  } = useSelector((state: AppState) => state)\n  const dispatch = useDispatch()\n  const { mint, regime, authority } = daoData[daoAddress] || ({} as DaoData)\n  const { balance, decimals } = useAccountBalanceByMintAddress(mint?.toBase58())\n  const { status } = useProposalStatus(proposalAddress)\n  const daoMetaData = useMetaData(daoAddress)\n\n  const isMultisigDAO = daoMetaData?.daoType === 'multisig-dao'\n\n  const disabled = useMemo(() => {\n    if (isMultisigDAO) {\n      return status !== 'Voting' || balance <= 0\n    }\n    return status !== 'Voting' || !amount || !account.isAddress(proposalAddress)\n  }, [amount, balance, isMultisigDAO, proposalAddress, status])\n\n  const parseRegime = useMemo(() => {\n    if (!regime) return ''\n    return Object.keys(regime)[0]\n  }, [regime])\n\n  const proposalFee = useMemo(() => {\n    if (!parseRegime || !authority) return\n\n    const feeOption: FeeOptions = {\n      tax: new BN(fee),\n      taxmanAddress: taxman,\n      revenue: new BN(fee),\n      revenuemanAddress: authority.toBase58(),\n    }\n\n    if (parseRegime === 'democratic')\n      return {\n        tax: new BN(0),\n        taxmanAddress: taxman,\n        revenue: new BN(0),\n        revenuemanAddress: authority.toBase58(),\n      }\n\n    return feeOption\n  }, [authority, parseRegime])\n\n  const onChange = useCallback(\n    (value: string) => {\n      dispatch(setVoteBidAmount(value))\n    },\n    [dispatch],\n  )\n\n  const onVoteFor = useCallback(async () => {\n    setLoadingFor(true)\n    try {\n      if ((!amount || !account.isAddress(proposalAddress)) && !isMultisigDAO)\n        return\n      const actualAmount = isMultisigDAO ? balance : amount\n      const voteAmount = utils.decimalize(actualAmount, decimals)\n      const nextAmount = new BN(voteAmount.toString())\n      const { txId } = await interDao.voteFor(\n        proposalAddress,\n        nextAmount,\n        proposalFee,\n      )\n      window.notify({\n        type: 'success',\n        description: 'Voted successfully. Click to view details!',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (error: any) {\n      window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setLoadingFor(false)\n    }\n  }, [amount, proposalAddress, isMultisigDAO, balance, decimals, proposalFee])\n\n  const onVoteAgainst = useCallback(async () => {\n    setLoadingAgainst(true)\n    try {\n      if ((!amount || !account.isAddress(proposalAddress)) && !isMultisigDAO)\n        return\n      const actualAmount = isMultisigDAO ? balance : amount\n      const voteAmount = utils.decimalize(actualAmount, decimals)\n      const nextAmount = new BN(voteAmount.toString())\n      const { txId } = await interDao.voteAgainst(\n        proposalAddress,\n        nextAmount,\n        proposalFee,\n      )\n      window.notify({\n        type: 'success',\n        description: 'Voted successfully. Click to view details!',\n        onClick: () => window.open(explorer(txId), '_blank'),\n      })\n    } catch (error: any) {\n      window.notify({\n        type: 'error',\n        description: error.message,\n      })\n    } finally {\n      setLoadingAgainst(false)\n    }\n  }, [amount, proposalAddress, isMultisigDAO, balance, decimals, proposalFee])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Cast your votes</Typography.Title>\n        </Col>\n        {!isMultisigDAO && (\n          <Col span={24}>\n            <Card\n              className=\"numric-ip-card\"\n              bodyStyle={{ padding: '8px 12px' }}\n              bordered={false}\n            >\n              <Row gutter={[8, 8]}>\n                <Col flex=\"auto\">\n                  <Typography.Text>Amount votes</Typography.Text>\n                </Col>\n                <Col>\n                  <Typography.Text>\n                    Available: {numeric(balance).format('0,0.[00]')}\n                  </Typography.Text>{' '}\n                  <MintSymbol mintAddress={mint?.toBase58()} />\n                </Col>\n                <Col span={24}>\n                  <NumericInput\n                    bordered={false}\n                    style={{ padding: 0 }}\n                    placeholder=\"0\"\n                    value={amount}\n                    onValue={onChange}\n                    suffix={\n                      <Typography.Text\n                        style={{ cursor: 'pointer' }}\n                        onClick={() => onChange(balance.toString())}\n                      >\n                        MAX\n                      </Typography.Text>\n                    }\n                  />\n                </Col>\n              </Row>\n            </Card>\n          </Col>\n        )}\n        {!isMultisigDAO && (\n          <Col span={24}>\n            <LockedVoting\n              proposalAddress={proposalAddress}\n              daoAddress={daoAddress}\n            />\n          </Col>\n        )}\n        <Col span={isMultisigDAO ? 24 : 12}>\n          <Button\n            onClick={onVoteFor}\n            type=\"primary\"\n            disabled={disabled}\n            loading={loadingFor}\n            block\n            size=\"large\"\n            icon={<IonIcon name=\"thumbs-up-outline\" />}\n          >\n            Agree\n          </Button>\n        </Col>\n        <Col span={isMultisigDAO ? 24 : 12}>\n          <Button\n            onClick={onVoteAgainst}\n            type=\"primary\"\n            disabled={disabled}\n            loading={loadingAgainst}\n            block\n            size=\"large\"\n            icon={<IonIcon name=\"thumbs-down-outline\" />}\n          >\n            Disagree\n          </Button>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\nexport default CardVote\n","import { Col, Modal, Row, Typography } from 'antd'\n\nimport { ProposalChildCardProps } from '../proposalDetails/index'\nimport TemplateInfo from './component/templateInfo'\n\ntype TemplateInfoProps = {\n  visible: boolean\n  setVisible: (visible: boolean) => void\n} & ProposalChildCardProps\n\nconst ModalTemplateInfo = ({\n  proposalAddress,\n  daoAddress,\n  visible,\n  setVisible,\n}: TemplateInfoProps) => {\n  return (\n    <Modal\n      className=\"template-card template-info\"\n      visible={visible}\n      footer={false}\n      onCancel={() => setVisible(false)}\n    >\n      <Row>\n        <Col\n          className=\"template-info-header\"\n          span={24}\n          style={{ textAlign: 'left' }}\n        >\n          <Typography.Title level={4}>Template information</Typography.Title>\n        </Col>\n        <Col span={24} className=\"template-info-body\">\n          <TemplateInfo\n            proposalAddress={proposalAddress}\n            daoAddress={daoAddress}\n          />\n        </Col>\n      </Row>\n    </Modal>\n  )\n}\n\nexport default ModalTemplateInfo\n","import { useMemo, useState } from 'react'\nimport moment from 'moment'\nimport CopyToClipboard from 'react-copy-to-clipboard'\n\nimport { Card, Col, Row, Space, Typography, Tooltip, Button } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport ModalTemplateInfo from '../modalTemplateInfo'\nimport RowSpaceBetween from 'app/components/rowSpaceBetween'\n\nimport useProposal from 'app/hooks/useProposal'\nimport { asyncWait, explorer, shortenAddress } from 'shared/util'\nimport { ProposalChildCardProps } from './index'\nimport useParseQuorumText from 'app/hooks/useParseQuorumText'\n\nconst CardInfo = ({ proposalAddress, daoAddress }: ProposalChildCardProps) => {\n  const [copied, setCopied] = useState(false)\n  const [visible, setVisible] = useState(false)\n  const { consensusQuorum, startDate, endDate, consensusMechanism, creator } =\n    useProposal(proposalAddress, daoAddress)\n  const authProposalAddress = creator?.toBase58() || ''\n  const quorum = useParseQuorumText(consensusQuorum)\n\n  const onCopy = async () => {\n    setCopied(true)\n    await asyncWait(1500)\n    setCopied(false)\n  }\n\n  const consensus = useMemo(() => {\n    if (!consensusMechanism) return '-'\n    const _consensusMechanism = Object.keys(consensusMechanism)[0]\n    if (_consensusMechanism === 'stakedTokenCounter') return 'Staked counter'\n    if (_consensusMechanism === 'lockedTokenCounter') return 'Locked counter'\n  }, [consensusMechanism])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Row align=\"middle\">\n            <Col flex=\"auto\">\n              <Typography.Title level={5}>Information</Typography.Title>\n            </Col>\n            <Col>\n              <Button\n                type=\"text\"\n                icon={<IonIcon name=\"information-circle-outline\" />}\n                style={{ marginRight: -10 }}\n                onClick={() => setVisible(true)}\n              />\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Space style={{ width: '100%' }} direction=\"vertical\">\n            <RowSpaceBetween\n              label=\"Proposal ID\"\n              value={shortenAddress(proposalAddress, 3)}\n            />\n            <RowSpaceBetween\n              label=\"Start time\"\n              value={moment(startDate?.toNumber() * 1000).format(\n                'MMM DD,yyyy HH:mm',\n              )}\n            />\n            <RowSpaceBetween\n              label=\"End time\"\n              value={moment(endDate?.toNumber() * 1000).format(\n                'MMM DD,yyyy HH:mm',\n              )}\n            />\n            <RowSpaceBetween\n              label=\"Author\"\n              value={\n                <Space size={10}>\n                  <Typography.Text\n                    style={{ cursor: 'pointer', textDecoration: 'underline' }}\n                    onClick={() =>\n                      window.open(explorer(authProposalAddress), '_blank')\n                    }\n                  >\n                    {shortenAddress(authProposalAddress, 3)}\n                  </Typography.Text>\n                  <Tooltip title=\"Copied\" visible={copied}>\n                    <CopyToClipboard text={authProposalAddress} onCopy={onCopy}>\n                      <IonIcon\n                        style={{ cursor: 'pointer' }}\n                        name=\"copy-outline\"\n                        onClick={onCopy}\n                      />\n                    </CopyToClipboard>\n                  </Tooltip>\n                </Space>\n              }\n            />\n            <RowSpaceBetween label=\"Quorum\" value={quorum} />\n            <RowSpaceBetween label=\"Vote method\" value={consensus} />\n          </Space>\n        </Col>\n      </Row>\n      <ModalTemplateInfo\n        setVisible={setVisible}\n        visible={visible}\n        proposalAddress={proposalAddress}\n        daoAddress={daoAddress}\n      />\n    </Card>\n  )\n}\n\nexport default CardInfo\n","import { useSelector } from 'react-redux'\nimport { useCallback, useEffect, useMemo, useState } from 'react'\nimport { DaoData } from '@interdao/core'\nimport { utils } from '@senswap/sen-js'\nimport { useUI } from '@senhub/providers'\nimport BN from 'bn.js'\n\nimport { Card, Col, Row, Space, Typography, Progress } from 'antd'\nimport RowSpaceVertical from 'app/components/rowSpaceVertical'\n\nimport { ProposalChildCardProps } from './index'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport useProposal from 'app/hooks/useProposal'\nimport { AppState } from 'app/model'\nimport { numeric } from 'shared/util'\nimport useProposalStatus from 'app/hooks/useProposalStatus'\n\nconst STROKE_COLOR = {\n  dark: { default: '#312B29', agree: '#698033', disagree: '#F9575E' },\n  light: { default: '#F2EFE9', agree: '#F9DEB0', disagree: '#F9575E' },\n}\n\nconst CardProgress = ({\n  proposalAddress,\n  daoAddress,\n}: ProposalChildCardProps) => {\n  const [backGroundColor, setBackGroundColor] = useState('')\n  const [successColor, setSuccessColor] = useState('')\n  const {\n    dao: { daoData },\n  } = useSelector((state: AppState) => state)\n  const { votingAgainstPower, votingForPower, consensusQuorum } = useProposal(\n    proposalAddress,\n    daoAddress,\n  )\n  const { mint } = daoData[daoAddress] || ({} as DaoData)\n  const mintDecimal = useMintDecimals(mint?.toBase58()) || 0\n  const { actualSupply } = useProposalStatus(proposalAddress)\n  const {\n    ui: { theme },\n  } = useUI()\n\n  const noVote = Number(votingAgainstPower) || 0\n  const yesVote = Number(votingForPower) || 0\n  const totalVote = yesVote + noVote\n  const percentYes = (yesVote / totalVote) * 100\n  const percentNo = (noVote / totalVote) * 100\n\n  const currentPower = useMemo(() => {\n    if (!consensusQuorum) return new BN(0)\n    const actualYesVote = votingForPower.sub(votingAgainstPower)\n\n    const mechanismQuorum = Object.keys(consensusQuorum)[0]\n\n    if (mechanismQuorum === 'half')\n      return actualYesVote.mul(new BN(200)).div(actualSupply)\n\n    if (mechanismQuorum === 'oneThird')\n      return actualYesVote.mul(new BN(300)).div(actualSupply)\n\n    if (mechanismQuorum === 'twoThird')\n      return actualYesVote.mul(new BN(300)).div(actualSupply.mul(new BN(2)))\n\n    return new BN(0)\n  }, [actualSupply, consensusQuorum, votingAgainstPower, votingForPower])\n\n  const powerRequire = useMemo(() => {\n    if (!consensusQuorum || !actualSupply || currentPower.gte(new BN(100)))\n      return new BN(0)\n    const actualYesVote = votingForPower.sub(votingAgainstPower)\n\n    const mechanismQuorum = Object.keys(consensusQuorum)[0]\n\n    if (mechanismQuorum === 'half')\n      return actualSupply.div(new BN(2)).sub(actualYesVote)\n\n    if (mechanismQuorum === 'oneThird')\n      return actualSupply.div(new BN(3)).sub(actualYesVote)\n\n    if (mechanismQuorum === 'twoThird')\n      return actualSupply.mul(new BN(2)).div(new BN(3)).sub(actualYesVote)\n    return new BN(0)\n  }, [\n    actualSupply,\n    consensusQuorum,\n    currentPower,\n    votingAgainstPower,\n    votingForPower,\n  ])\n\n  const percentSuccess = useMemo(() => {\n    if (percentYes) return percentYes\n    if (percentNo) return 100 - percentNo\n    return 0\n  }, [percentNo, percentYes])\n\n  const getColors = useCallback(() => {\n    if (!percentNo && !percentYes)\n      return setBackGroundColor(STROKE_COLOR[theme].default)\n    if (!percentNo && percentYes)\n      return setSuccessColor(STROKE_COLOR[theme].agree)\n    if (percentNo && !percentYes)\n      return setBackGroundColor(STROKE_COLOR[theme].disagree)\n\n    setBackGroundColor(STROKE_COLOR[theme].disagree)\n    return setSuccessColor(STROKE_COLOR[theme].agree)\n  }, [percentNo, percentYes, theme])\n\n  useEffect(() => {\n    getColors()\n  }, [getColors])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Typography.Title level={5}>Current results</Typography.Title>\n        </Col>\n        <Col span={24}>\n          <Space size={0} style={{ width: '100%' }} direction=\"vertical\">\n            <Typography.Text type=\"secondary\">Quorum</Typography.Text>\n            <Typography.Text>\n              {numeric(\n                utils.undecimalize(\n                  BigInt(powerRequire.toString()),\n                  mintDecimal,\n                ),\n              ).format('0,0.[0000]')}{' '}\n              more Yes votes required\n            </Typography.Text>\n            <Progress\n              percent={100}\n              strokeColor={STROKE_COLOR[theme].default}\n              success={{\n                percent: currentPower.toNumber(),\n                strokeColor: STROKE_COLOR[theme].agree,\n              }}\n              showInfo={false}\n            />\n          </Space>\n        </Col>\n        <Col span={24}>\n          <Row gutter={[4, 4]}>\n            <Col flex=\"auto\">\n              <RowSpaceVertical\n                label=\"Agree\"\n                size={0}\n                value={\n                  <Typography.Title level={4}>\n                    {numeric(\n                      utils.undecimalize(BigInt(yesVote), mintDecimal),\n                    ).format('0,0.[0000]')}\n                  </Typography.Title>\n                }\n              />\n            </Col>\n            <Col>\n              <RowSpaceVertical\n                label=\"Disagree\"\n                size={0}\n                align=\"end\"\n                value={\n                  <Typography.Title level={4}>\n                    {numeric(\n                      utils.undecimalize(BigInt(noVote), mintDecimal),\n                    ).format('0,0.[0000]')}\n                  </Typography.Title>\n                }\n              />\n            </Col>\n            <Col span={24}>\n              <Progress\n                style={{ width: '100%' }}\n                percent={100}\n                strokeColor={backGroundColor}\n                success={{\n                  percent: percentSuccess,\n                  strokeColor: successColor,\n                }}\n                showInfo={false}\n              />\n            </Col>\n            <Col span={24}>\n              <Row>\n                <Col flex=\"auto\">\n                  <Typography.Text type=\"secondary\">\n                    {numeric(percentYes).format('0,0.[00]')}%\n                  </Typography.Text>\n                </Col>\n                <Col>\n                  <Typography.Text type=\"secondary\">\n                    {numeric(percentNo).format('0,0.[00]')}%\n                  </Typography.Text>\n                </Col>\n              </Row>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default CardProgress\n","import { useMemo } from 'react'\nimport { ReceiptData } from '@interdao/core'\n\nimport { Typography } from 'antd'\n\nconst ColumnType = ({ record }: { record: ReceiptData }) => {\n  const type = useMemo(() => {\n    const action = Object.keys(record.action || {})[0]\n    if (action === 'voteAgainst') return 'DISAGREE'\n    return 'AGREE'\n  }, [record.action])\n\n  return <Typography.Text>{type}</Typography.Text>\n}\n\nexport default ColumnType\n","import { useSelector } from 'react-redux'\nimport { DaoData, ReceiptData } from '@interdao/core'\nimport { utils } from '@senswap/sen-js'\n\nimport { Typography } from 'antd'\n\nimport { AppState } from 'app/model'\nimport useMintDecimals from 'shared/hooks/useMintDecimals'\nimport { numeric } from 'shared/util'\n\nconst ColumnPower = ({ receipt }: { receipt: ReceiptData }) => {\n  const { power, proposal: proposalAddress } = receipt\n  const {\n    dao: { daoData },\n    proposal,\n  } = useSelector((state: AppState) => state)\n  const { dao: daoAddress } = proposal[proposalAddress.toBase58()] || {}\n  const { mint } = daoData[daoAddress?.toBase58() || ''] || ({} as DaoData)\n  const mintDecimal = useMintDecimals(mint?.toBase58()) || 0\n\n  return (\n    <Typography.Text>\n      {numeric(\n        utils.undecimalize(BigInt(power.toNumber()), mintDecimal),\n      ).format('0,0.[0000]a')}\n    </Typography.Text>\n  )\n}\n\nexport default ColumnPower\n","import { useMemo } from 'react'\nimport { useSelector } from 'react-redux'\n\nimport useMetaData from 'app/hooks/useMetaData'\nimport { AppState } from 'app/model'\nimport { Typography } from 'antd'\n\ntype ColumnNameProps = {\n  authority: string\n  proposalAddress: string\n}\n\nconst ColumnName = ({ authority, proposalAddress }: ColumnNameProps) => {\n  const { proposal } = useSelector((state: AppState) => state)\n  const { dao } = proposal[proposalAddress]\n  const metaData = useMetaData(dao.toBase58())\n\n  const name = useMemo(() => {\n    const members = metaData?.members || []\n    for (const { walletAddress, name } of members) {\n      if (walletAddress === authority) {\n        return name\n      }\n    }\n    return '--'\n  }, [authority, metaData])\n\n  return <Typography.Text className=\"t-16\">{name}</Typography.Text>\n}\n\nexport default ColumnName\n","import { PublicKey } from '@solana/web3.js'\nimport { ReceiptData } from '@interdao/core'\n\nimport { Typography } from 'antd'\nimport ColumnType from './columnType'\nimport ColumnPower from './columnPower'\n\nimport { shortenAddress } from 'shared/util'\nimport ColumnName from './columnName'\n\nexport const HISTORY_COLUMNS_FLEXIBLE = [\n  {\n    title: 'WALLET ADDRESS',\n    dataIndex: 'authority',\n    render: (walletAddress: PublicKey) => (\n      <Typography>{shortenAddress(walletAddress.toBase58())}</Typography>\n    ),\n  },\n  {\n    title: 'TYPE',\n    dataIndex: 'authority',\n    render: (_: any, receipt: ReceiptData) => <ColumnType record={receipt} />,\n  },\n  {\n    title: 'POWER',\n    dataIndex: 'power',\n    render: (_: any, receipt: ReceiptData) => <ColumnPower receipt={receipt} />,\n  },\n]\n\nexport const HISTORY_COLUMNS_MULTISIG = [\n  {\n    title: 'NAME',\n    dataIndex: 'authority',\n    render: (authority: PublicKey, receipt: ReceiptData) => (\n      <ColumnName\n        proposalAddress={receipt.proposal.toBase58()}\n        authority={authority.toBase58()}\n      />\n    ),\n  },\n  {\n    title: 'WALLET ADDRESS',\n    dataIndex: 'authority',\n    render: (walletAddress: PublicKey) => (\n      <Typography>{shortenAddress(walletAddress.toBase58())}</Typography>\n    ),\n  },\n  {\n    title: 'TYPE',\n    dataIndex: 'authority',\n    render: (_: any, receipt: ReceiptData) => <ColumnType record={receipt} />,\n  },\n]\n","import { useCallback, useEffect, useState } from 'react'\nimport { ReceiptData } from '@interdao/core'\n\nimport { Card, Col, Row, Typography, Table, Button } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport { HISTORY_COLUMNS_MULTISIG, HISTORY_COLUMNS_FLEXIBLE } from './column'\nimport { getReceipts } from 'app/hooks/useReceipts'\n\nimport './index.less'\nimport useMetaData from 'app/hooks/useMetaData'\n\nconst DEFAULT_AMOUNT_HISTORY = 5\n\nconst History = ({\n  proposalAddress,\n  daoAddress,\n}: {\n  proposalAddress: string\n  daoAddress: string\n}) => {\n  const [amount, setAmount] = useState(DEFAULT_AMOUNT_HISTORY)\n  const [loading, setLoading] = useState(false)\n  const [listReceipt, setListReceipt] = useState<ReceiptData[]>([])\n  const metaData = useMetaData(daoAddress)\n  const isMultisigDAO = metaData?.daoType === 'multisig-dao'\n  const historyColum = isMultisigDAO\n    ? HISTORY_COLUMNS_MULTISIG\n    : HISTORY_COLUMNS_FLEXIBLE\n\n  const fetchReceipts = useCallback(async () => {\n    setLoading(true)\n    const receipts = await getReceipts(proposalAddress)\n    const nextReceipts: ReceiptData[] = []\n    receipts.forEach((receipt) => {\n      const { authority, power, action } = receipt\n      const actionType = Object.keys(action || {})[0]\n      const owner = authority.toBase58()\n\n      const existReceipt = nextReceipts.find((_receipt) => {\n        const { action: _action, authority: _authority } = _receipt\n        const _actionType = Object.keys(_action || {})[0]\n        const _owner = _authority.toBase58()\n\n        return _owner === owner && actionType === _actionType\n      })\n      if (!existReceipt) return nextReceipts.push(receipt)\n\n      const { power: oldPower } = existReceipt\n      const index = nextReceipts.findIndex(\n        (_receipt) => _receipt === existReceipt,\n      )\n      if (index !== -1)\n        return (nextReceipts[index] = {\n          ...nextReceipts[index],\n          power: oldPower.add(power),\n        })\n    })\n    setLoading(false)\n    return setListReceipt(nextReceipts)\n  }, [proposalAddress])\n\n  useEffect(() => {\n    fetchReceipts()\n  }, [fetchReceipts])\n\n  return (\n    <Card bordered={false}>\n      <Row gutter={[16, 16]}>\n        <Col span={24}>\n          <Row>\n            <Col flex=\"auto\">\n              <Typography.Title level={5}> Votes</Typography.Title>\n            </Col>\n            <Col>\n              <Button onClick={fetchReceipts}>Refresh</Button>\n            </Col>\n          </Row>\n        </Col>\n        <Col span={24}>\n          <Table\n            columns={historyColum}\n            dataSource={listReceipt.slice(0, amount)}\n            pagination={false}\n            loading={loading}\n            rowKey={({ index, lockedDate }) =>\n              index.toNumber() + lockedDate.toNumber()\n            }\n          />\n        </Col>\n        <Col span={24} style={{ textAlign: 'center' }}>\n          <Button\n            disabled={listReceipt.length <= amount}\n            onClick={() => setAmount(amount + DEFAULT_AMOUNT_HISTORY)}\n            icon={<IonIcon name=\"chevron-down-outline\" />}\n          >\n            View more\n          </Button>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\nexport default History\n","import { useParams, useHistory } from 'react-router-dom'\n\nimport { Button, Col, Row } from 'antd'\nimport CardStatus from './cardStatus'\nimport CardVote from './cardVote'\nimport CardInfo from './cardInfo'\nimport CardProgress from './cardProgress'\nimport History from './history'\nimport IonIcon from 'shared/antd/ionicon'\n\nimport configs from 'app/configs'\nimport './index.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport type ProposalChildCardProps = {\n  proposalAddress: string\n  daoAddress: string\n}\n\nconst ProposalDetails = () => {\n  const history = useHistory()\n  const { proposalAddress, daoAddress } =\n    useParams<{ daoAddress: string; proposalAddress: string }>()\n\n  return (\n    <Row justify=\"center\">\n      <Col xs={24} lg={18}>\n        <Row gutter={[24, 24]}>\n          <Col span={24}>\n            <Button\n              type=\"text\"\n              icon={<IonIcon name=\"arrow-back-outline\" />}\n              onClick={() => history.push(`/app/${appId}/dao/${daoAddress}`)}\n            >\n              Back\n            </Button>\n          </Col>\n          <Col span={24}>\n            <Row gutter={[24, 24]}>\n              <Col xs={24} md={16}>\n                <Row gutter={[24, 24]}>\n                  <Col span={24}>\n                    <CardStatus\n                      proposalAddress={proposalAddress}\n                      daoAddress={daoAddress}\n                    />\n                  </Col>\n                  <Col span={24}>\n                    <CardVote\n                      proposalAddress={proposalAddress}\n                      daoAddress={daoAddress}\n                    />\n                  </Col>\n                  <Col span={24}>\n                    <History\n                      proposalAddress={proposalAddress}\n                      daoAddress={daoAddress}\n                    />\n                  </Col>\n                </Row>\n              </Col>\n              <Col xs={24} md={8}>\n                <Row gutter={[24, 24]}>\n                  <Col span={24}>\n                    <CardInfo\n                      proposalAddress={proposalAddress}\n                      daoAddress={daoAddress}\n                    />\n                  </Col>\n                  <Col span={24}>\n                    <CardProgress\n                      proposalAddress={proposalAddress}\n                      daoAddress={daoAddress}\n                    />\n                  </Col>\n                </Row>\n              </Col>\n            </Row>\n          </Col>\n          <Col span={24}>\n            <Button>Delete the Proposal</Button>\n          </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n}\nexport default ProposalDetails\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { useWallet } from '@senhub/providers'\nimport { PublicKey } from '@solana/web3.js'\n\nimport { AppDispatch } from 'app/model'\nimport configs from 'app/configs'\nimport { getDao, getDaos } from 'app/model/dao.controller'\n\nconst {\n  sol: { interDao },\n} = configs\n\n// Watch id\nlet initializeDAOEventId = 0\nlet updateDaoRegimeEventId = 0\nlet updateSupplyEventId = 0\nlet transferAuthorityEventId = 0\n\nconst DaoWatcher = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadDaoData = useCallback(\n    ({ dao: daoPublicKey }: { dao: PublicKey }) => {\n      const daoAddress = daoPublicKey.toBase58()\n      return dispatch(getDao({ address: daoAddress, force: true }))\n    },\n    [dispatch],\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getDaos()).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of DAOs',\n      })\n    }\n  }, [dispatch, walletAddress])\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    initializeDAOEventId = await interDao.addListener(\n      'InitializeDAOEvent',\n      reloadDaoData,\n    )\n    updateDaoRegimeEventId = await interDao.addListener(\n      'UpdateDaoRegimeEvent',\n      reloadDaoData,\n    )\n    updateSupplyEventId = await interDao.addListener(\n      'UpdateSupplyEvent',\n      reloadDaoData,\n    )\n    transferAuthorityEventId = await interDao.addListener(\n      'TransferAuthorityEvent',\n      reloadDaoData,\n    )\n  }, [reloadDaoData])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await interDao.removeListener(initializeDAOEventId)\n          await interDao.removeListener(updateDaoRegimeEventId)\n          await interDao.removeListener(updateSupplyEventId)\n          await interDao.removeListener(transferAuthorityEventId)\n        } catch (er: any) {\n          console.warn(er.message)\n        } finally {\n          initializeDAOEventId = 0\n          updateDaoRegimeEventId = 0\n          updateSupplyEventId = 0\n          transferAuthorityEventId = 0\n        }\n      })()\n    }\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default DaoWatcher\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { PublicKey } from '@solana/web3.js'\n\nimport { AppDispatch } from 'app/model'\nimport configs from 'app/configs'\nimport { getProposal } from 'app/model/proposal.controller'\n\nconst {\n  sol: { interDao },\n} = configs\n\n// Watch id\nlet initializeProposalEventId = 0\nlet voteForEventId = 0\nlet voteAgainstEventId = 0\nlet executeProposalEventId = 0\n\nconst ProposalWatcher = () => {\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadProposalData = useCallback(\n    ({ proposal: proposalPublicKey }: { proposal: PublicKey }) => {\n      const proposalAddress = proposalPublicKey.toBase58()\n      return dispatch(getProposal({ address: proposalAddress, force: true }))\n    },\n    [dispatch],\n  )\n\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    initializeProposalEventId = await interDao.addListener(\n      'InitializeProposalEvent',\n      reloadProposalData,\n    )\n    voteForEventId = await interDao.addListener(\n      'VoteForEvent',\n      reloadProposalData,\n    )\n    voteAgainstEventId = await interDao.addListener(\n      'VoteAgainstEvent',\n      reloadProposalData,\n    )\n    executeProposalEventId = await interDao.addListener(\n      'ExecuteProposalEvent',\n      reloadProposalData,\n    )\n  }, [reloadProposalData])\n\n  useEffect(() => {\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await interDao.removeListener(initializeProposalEventId)\n          await interDao.removeListener(voteForEventId)\n          await interDao.removeListener(voteAgainstEventId)\n          await interDao.removeListener(executeProposalEventId)\n        } catch (er: any) {\n          console.warn(er.message)\n        } finally {\n          initializeProposalEventId = 0\n          voteForEventId = 0\n          voteAgainstEventId = 0\n          executeProposalEventId = 0\n        }\n      })()\n    }\n  }, [watchData])\n\n  return <Fragment />\n}\n\nexport default ProposalWatcher\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport {\n  ProposalData,\n  ReceiptData,\n  RECEIPT_DISCRIMINATOR,\n} from '@interdao/core'\nimport { account } from '@senswap/sen-js'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type ReceiptState = Record<string, ReceiptData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'receipt'\nconst initialState: ReceiptState = {}\n\n/**\n * Actions\n */\n\nexport const getReceipts = createAsyncThunk(\n  `${NAME}/getReceipts`,\n  async ({ authorityAddress }: { authorityAddress: string }) => {\n    if (!account.isAddress(authorityAddress)) throw new Error('Invalid address')\n    const {\n      provider: { connection },\n      programId,\n      account: { receipt },\n    } = interDao.program\n    const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n      await connection.getProgramAccounts(programId, {\n        filters: [\n          { dataSize: receipt.size },\n          {\n            memcmp: {\n              offset: 0,\n              bytes: RECEIPT_DISCRIMINATOR,\n            },\n          },\n          {\n            memcmp: {\n              offset: 16,\n              bytes: authorityAddress,\n            },\n          },\n        ],\n      })\n    let bulk: ReceiptState = {}\n    value.forEach(({ pubkey, account: { data: buf } }) => {\n      const address = pubkey.toBase58()\n      const data = interDao.parseReceiptData(buf)\n      bulk[address] = data\n    })\n    return bulk\n  },\n)\n\nexport const getReceipt = createAsyncThunk<\n  ReceiptState,\n  { address: string; force?: boolean },\n  { state: any }\n>(`${NAME}/getReceipt`, async ({ address, force }, { getState }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  const {\n    dao: { [address]: data },\n  } = getState()\n  if (data && !force) return { [address]: data }\n  const raw = await interDao.getReceiptData(address)\n  return { [address]: raw }\n})\n\nexport const upsetReceipt = createAsyncThunk<\n  ReceiptState,\n  { address: string; data: ProposalData },\n  { state: any }\n>(`${NAME}/upsetReceipt`, async ({ address, data }) => {\n  if (!account.isAddress(address)) throw new Error('Invalid address')\n  if (!data) throw new Error('Data is empty')\n  return { [address]: data }\n})\n\nexport const deleteReceipt = createAsyncThunk(\n  `${NAME}/deleteReceipt`,\n  async ({ address }: { address: string }) => {\n    if (!account.isAddress(address)) throw new Error('Invalid address')\n    return { address }\n  },\n)\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder\n      .addCase(\n        getReceipts.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        getReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        upsetReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      )\n      .addCase(\n        deleteReceipt.fulfilled,\n        (state, { payload }) => void Object.assign(state, payload),\n      ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { PublicKey } from '@solana/web3.js'\nimport { useWallet } from '@senhub/providers'\nimport { account } from '@senswap/sen-js'\n\nimport { AppDispatch } from 'app/model'\nimport configs from 'app/configs'\nimport { getReceipt, getReceipts } from 'app/model/receipt.controller'\n\nconst {\n  sol: { interDao },\n} = configs\n\n// Watch id\nlet voteForEventId = 0\nlet voteAgainstEventId = 0\nlet closeEventId = 0\n\nconst ReceiptWatcher = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const dispatch = useDispatch<AppDispatch>()\n\n  const reloadReceiptData = useCallback(\n    ({ receipt: receiptPublicKey }: { receipt: PublicKey }) => {\n      const receiptAddress = receiptPublicKey.toBase58()\n      return dispatch(getReceipt({ address: receiptAddress, force: true }))\n    },\n    [dispatch],\n  )\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getReceipts({ authorityAddress: walletAddress })).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of receipts',\n      })\n    }\n  }, [dispatch, walletAddress])\n  // Watch dao events\n  const watchData = useCallback(async () => {\n    voteForEventId = await interDao.addListener(\n      'VoteForEvent',\n      reloadReceiptData,\n    )\n    voteAgainstEventId = await interDao.addListener(\n      'VoteAgainstEvent',\n      reloadReceiptData,\n    )\n    closeEventId = await interDao.addListener('CloseEvent', reloadReceiptData)\n  }, [reloadReceiptData])\n\n  useEffect(() => {\n    fetchData()\n    watchData()\n    // Unwatch (cancel socket)\n    return () => {\n      ;(async () => {\n        try {\n          await interDao.removeListener(voteForEventId)\n          await interDao.removeListener(voteAgainstEventId)\n          await interDao.removeListener(closeEventId)\n        } catch (er: any) {\n          console.warn(er.message)\n        } finally {\n          voteForEventId = 0\n          voteAgainstEventId = 0\n          closeEventId = 0\n        }\n      })()\n    }\n  }, [fetchData, watchData])\n\n  return <Fragment />\n}\n\nexport default ReceiptWatcher\n","import { useEffect } from 'react'\nimport { useUI } from '@senhub/providers'\nimport { Redirect, Route, Switch } from 'react-router-dom'\n\nimport { Row, Col } from 'antd'\nimport Dao from './dao'\nimport Proposal from './proposal'\nimport ProposalInitialization from './proposal/proposalInitialization'\nimport DaoInitialization from './dao/daoInitialization'\nimport ProposalDetails from './proposal/proposalDetails'\nimport DaoWatcher from './watcher/dao.watcher'\nimport ProposalWatcher from './watcher/proposal.watcher'\nimport ReceiptWatcher from './watcher/receipt.watcher'\n\nimport BG from 'app/static/images/system/bg-dark.png'\nimport BG_LIGHT from 'app/static/images/system/bg-light.png'\nimport configs from 'app/configs'\n\nimport 'app/static/styles/dark.less'\nimport 'app/static/styles/light.less'\n\nconst {\n  manifest: { appId },\n} = configs\n\nconst View = () => {\n  const { setBackground } = useUI()\n\n  useEffect(() => {\n    setBackground({ light: BG_LIGHT, dark: BG })\n  }, [setBackground])\n\n  return (\n    <Row gutter={[24, 24]} justify=\"center\">\n      <Col span={24}>\n        <Switch>\n          <Route exact path={`/app/${appId}/dao`} component={Dao} />\n          <Route\n            exact\n            path={`/app/${appId}/dao/new-dao`}\n            component={DaoInitialization}\n          />\n          <Route\n            exact\n            path={`/app/${appId}/dao/:daoAddress`}\n            component={Proposal}\n          />\n          <Route\n            exact\n            path={`/app/${appId}/dao/:daoAddress/new-proposal`}\n            component={ProposalInitialization}\n          />\n          <Route\n            exact\n            path={`/app/${appId}/dao/:daoAddress/proposal/:proposalAddress`}\n            component={ProposalDetails}\n          />\n          <Redirect from=\"*\" to={`/app/${appId}/dao`} />\n        </Switch>\n      </Col>\n      <Col span={24} />\n      <DaoWatcher />\n      <ProposalWatcher />\n      <ReceiptWatcher />\n    </Row>\n  )\n}\n\nexport default View\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport dao from 'app/model/dao.controller'\nimport metadata from 'app/model/metadata.controller'\nimport proposal from 'app/model/proposal.controller'\nimport receipt from 'app/model/receipt.controller'\nimport voteBid from 'app/model/voteBid.controller'\nimport template from 'app/model/template.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools(process.env.REACT_APP_ID as string),\n  reducer: {\n    dao,\n    metadata,\n    proposal,\n    receipt,\n    voteBid,\n    template,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { Provider } from 'react-redux'\nimport {\n  WalletProvider,\n  UIProvider,\n  AccountProvider,\n  PoolProvider,\n  MintProvider,\n} from '@senhub/providers'\n\nimport View from 'app/view'\nimport model from 'app/model'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <UIProvider appId={appId} antd={{ prefixCls: appId }}>\n      <WalletProvider>\n        <AccountProvider>\n          <PoolProvider>\n            <MintProvider>\n              <Provider store={model}>\n                <View />\n              </Provider>\n            </MintProvider>\n          </PoolProvider>\n        </AccountProvider>\n      </WalletProvider>\n    </UIProvider>\n  )\n}\n","export type LimitConfig = {\n  calls: number\n  time: number\n}\n\nexport type CacheConfig = {\n  ttl: number // millisecond\n}\n\nexport type SingleFlightConfig = {\n  limit?: LimitConfig\n  cache?: CacheConfig\n}\n\n// 10 request per 1 second\nexport const DEFAULT_LIMIT_CONFIG: LimitConfig = {\n  calls: 10,\n  time: 1000,\n}\n\n// 10 request per 1 second\nexport const DEFAULT_CACHE_CONFIG: CacheConfig = {\n  ttl: 30000,\n}\n\nexport const DEFAULT_SINGLE_FLIGHT_CONFIG: SingleFlightConfig = {\n  limit : DEFAULT_LIMIT_CONFIG,\n  cache: DEFAULT_CACHE_CONFIG\n}","export interface IRequestQueue {\n  key: string\n  add(resolve: any, reject: any): void\n  resolves(data: any): void\n  rejects(error: any): void\n}\n\nexport class RequestQueue implements IRequestQueue {\n  key = ''\n  private resolveQueue: any[] = []\n  private rejectQueue: any[] = []\n  constructor(key: string) {\n    this.key = key\n  }\n\n  add(resolve: any, reject: any) {\n    this.resolveQueue.push(resolve)\n    this.rejectQueue.push(reject)\n  }\n\n  resolves(data: any) {\n    while (this.resolveQueue.length > 0) {\n      const resolve = this.resolveQueue.shift()\n      resolve(data)\n    }\n  }\n\n  rejects(error: any) {\n    while (this.rejectQueue.length > 0) {\n      const reject = this.rejectQueue.shift()\n      reject(error)\n    }\n  }\n}\n","import { DEFAULT_CACHE_CONFIG } from './constant'\nimport { CacheConfig } from './constant'\n\nexport class SingleFlightCache {\n  private static mapCache = new Map<string, any>()\n\n  static set(\n    key: string,\n    value: any,\n    configs: CacheConfig = DEFAULT_CACHE_CONFIG,\n  ) {\n    this.mapCache.set(key, value)\n    setTimeout(() => {\n      this.mapCache.delete(key)\n    }, configs.ttl)\n  }\n\n  static get(key: string) {\n    return this.mapCache.get(key)\n  }\n}\n","import { DEFAULT_SINGLE_FLIGHT_CONFIG, SingleFlightConfig } from './constant'\n\nimport { IRequestQueue, RequestQueue } from './request'\nimport { SingleFlightCache } from './cache'\n\nexport class DataLoader {\n  static mapInstance = new Map<string, SingleFlight>()\n\n  private static getSingleFlight(configs: SingleFlightConfig): SingleFlight {\n    const instanceKey = JSON.stringify(configs)\n    if (this.mapInstance.has(instanceKey)) {\n      const instance = this.mapInstance.get(instanceKey)\n      if (instance) return instance\n    }\n\n    let newSingleFlight = new SingleFlight(configs)\n    this.mapInstance.set(instanceKey, newSingleFlight)\n    return newSingleFlight\n  }\n\n  static async load<T>(\n    requestKey: string | object,\n    callback: () => Promise<T>,\n    configs: SingleFlightConfig = {},\n  ): Promise<T> {\n    if (typeof requestKey === 'object') requestKey = JSON.stringify(requestKey)\n\n    let singleFlight = DataLoader.getSingleFlight(configs)\n    DataLoader.mapInstance.set(requestKey, singleFlight)\n    const newRequest = new RequestQueue(requestKey)\n    return singleFlight.load<T>(newRequest, callback)\n  }\n}\n\nclass SingleFlight {\n  private config: SingleFlightConfig\n  private intervalRequest: any\n  private timeLogs: number[] = []\n\n  private mapRequestCalling = new Map<string, IRequestQueue>()\n  private requestQueue: IRequestQueue[] = []\n\n  constructor(configs: SingleFlightConfig) {\n    this.config = Object.assign(DEFAULT_SINGLE_FLIGHT_CONFIG, configs)\n  }\n\n  async load<T>(newRequest: IRequestQueue, callback: () => Promise<T>) {\n    const cacheData = SingleFlightCache.get(newRequest.key)\n    if (cacheData) return Promise.resolve(cacheData)\n\n    let isFetch = false\n    let request = this.mapRequestCalling.get(newRequest.key)\n    if (!request) {\n      request = newRequest\n      isFetch = true\n      this.mapRequestCalling.set(request.key, request)\n    }\n\n    return new Promise((resolve, reject) => {\n      if (!request) return reject('Not found request!')\n      request.add(resolve, reject)\n      if (isFetch) {\n        this.fetch<T>(request, callback)\n      }\n    })\n  }\n\n  private fetch<T>(request: IRequestQueue, callback: () => Promise<T>) {\n    if (!this.validateLimit()) {\n      return this.addRequestQueue(request, callback)\n    }\n    this.createTimeLogs()\n\n    callback()\n      .then((response) => {\n        SingleFlightCache.set(request.key, response, this.config.cache)\n        request.resolves(response)\n      })\n      .catch((error) => {\n        request.rejects(error)\n      })\n      .finally(() => {\n        this.mapRequestCalling.delete(request.key)\n        this.fetchRequestQueue(callback)\n      })\n  }\n\n  private fetchRequestQueue(callback: () => Promise<any>) {\n    if (!this.validateLimit()) return\n    const request = this.requestQueue.shift()\n    if (request) this.load(request, callback)\n\n    if (this.requestQueue.length === 0 && this.intervalRequest) {\n      clearInterval(this.intervalRequest)\n    }\n  }\n\n  private addRequestQueue(\n    request: IRequestQueue,\n    callback: () => Promise<any>,\n  ) {\n    this.requestQueue.push(request)\n    this.intervalRequest = setInterval(() => {\n      this.fetchRequestQueue(callback)\n    }, this.config.limit?.time)\n  }\n\n  private validateLimit(): boolean {\n    return true\n  }\n\n  private createTimeLogs() {\n    if (!this.config.limit) return\n\n    const now = new Date().getTime()\n    this.timeLogs.push(now)\n    if (this.timeLogs.length > this.config.limit?.calls) {\n      this.timeLogs.shift()\n    }\n  }\n}\n","import { PublicKey } from '@solana/web3.js'\nimport BN from 'bn.js'\n\n// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint' ||\n    val instanceof PublicKey ||\n    val instanceof BN ||\n    val instanceof Buffer\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","import localForage from 'localforage'\nimport { account } from '@senswap/sen-js'\nimport IPFS from './ipfs'\n\n/**\n * Persistent Database\n */\nclass PDB {\n  readonly dbName: string\n  private driver: any\n  private ipfs: IPFS\n\n  constructor(walletAddress: string) {\n    if (!account.isAddress(walletAddress)) throw new Error('Invalid address')\n    this.dbName = walletAddress\n    this.driver = [localForage.WEBSQL, localForage.LOCALSTORAGE]\n    this.ipfs = new IPFS()\n  }\n\n  /**\n   * Local\n   */\n\n  createInstance = (appId: string): LocalForage => {\n    return localForage.createInstance({\n      driver: this.driver,\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  dropInstance = async (appId: string): Promise<void> => {\n    const instance = this.createInstance(appId)\n    await instance.clear()\n    return await localForage.dropInstance({\n      name: this.dbName,\n      storeName: appId,\n    })\n  }\n\n  all = async (): Promise<any> => {\n    let data: any = {}\n    const appIds = (\n      ((await this.createInstance('sentre').getItem('appIds')) as string[]) ||\n      []\n    )\n      .flat()\n      .concat(['sentre'])\n    for (const appId of appIds) {\n      data[appId] = {}\n      const instance = this.createInstance(appId)\n      await instance.iterate((value: string, key: string) => {\n        data[appId][key] = value\n      })\n    }\n    return data\n  }\n\n  /**\n   * Cloud\n   */\n\n  fetch = async (cid: string) => {\n    return await this.ipfs.get(cid)\n  }\n\n  backup = async () => {\n    const data = await this.all()\n    return await this.ipfs.set(data)\n  }\n\n  restore = async (cid: string) => {\n    // Download data\n    const data = await this.fetch(cid)\n    // Apply to storage\n    for (const appId in data) {\n      const instance = await this.createInstance(appId)\n      for (const key in data[appId]) {\n        const value = data[appId][key]\n        await instance.setItem(key, value)\n      }\n    }\n    return data\n  }\n}\n\nexport default PDB\n\n/**\n * High abtraction pdb for app\n */\nexport const createPDB = (walletArress: string, appId: string) => {\n  return account.isAddress(walletArress)\n    ? new PDB(walletArress).createInstance(appId)\n    : undefined\n}\n","import { create, isIPFS } from 'ipfs-core'\nimport { asyncWait } from 'shared/util'\n\nconst GET_CID_TIMEOUT = 15000\nclass IPFS {\n  private _ipfs: any = async () => {\n    try {\n      if (!window.ipfs) window.ipfs = await create()\n      return window.ipfs\n    } catch (er) {\n      await asyncWait(500)\n      return await this._ipfs()\n    }\n  }\n\n  static isCID = (cid: string | undefined | null): boolean => {\n    try {\n      if (!cid) return false\n      return isIPFS.multihash(cid)\n    } catch (er) {\n      return false\n    }\n  }\n\n  get = async (cid: string) => {\n    if (!IPFS.isCID(cid)) throw new Error('Invalid CID')\n    try {\n      const ipfs = await this._ipfs()\n      const stream = await ipfs.cat(cid, { timeout: GET_CID_TIMEOUT })\n      let raw = ''\n      for await (const chunk of stream) raw += Buffer.from(chunk).toString()\n      const data = JSON.parse(raw)\n      return data\n    } catch (err) {\n      // notthing\n    }\n  }\n\n  set = async (data: object): Promise<string> => {\n    if (!data) throw new Error('Empty data')\n    const raw = JSON.stringify(data)\n    const ipfs = await this._ipfs()\n    const { cid } = await ipfs.add(raw)\n    return cid.toString()\n  }\n}\n\nexport default IPFS\n","import storage from './storage'\n\n/**\n * Environment\n */\nconst getEnv = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'development':\n      return 'development'\n    case 'staging':\n      return 'staging'\n    case 'production':\n      return 'production'\n    default:\n      return 'development'\n  }\n}\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = getEnv()\n\n/**\n * Network\n */\nconst getNetwork = () => {\n  switch (storage.get('network')) {\n    case 'devnet':\n      return 'devnet'\n    case 'testnet':\n      return 'testnet'\n    case 'mainnet':\n      return 'mainnet'\n    default:\n      return 'mainnet'\n  }\n}\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = getNetwork()\n\nexport const onSwitchNetwork = (value: Net) => {\n  storage.set('network', value)\n  return window.location.reload()\n}\n\n/**\n * Chain ID\n */\nconst getChainId = () => {\n  switch (net) {\n    case 'devnet':\n      return 103\n    case 'testnet':\n      return 102\n    case 'mainnet':\n      return 101\n    default:\n      return 101\n  }\n}\nexport type ChainId = 101 | 102 | 103\nexport const chainId: ChainId = getChainId()\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  try {\n    if (!value) return null\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n","import { account, utils } from '@senswap/sen-js'\nimport numbro from 'numbro'\n\nimport { net } from 'shared/runtime'\nimport { DataLoader } from './dataloader'\n\n/**\n * Delay by async/await\n * @param ms - milisenconds\n * @returns\n */\nexport const asyncWait = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms))\n}\n\n/**\n * Shorten a long address\n * @param address - The long address\n * @param num - The number of the heading and trailing characters\n * @param delimiter - The delimiter\n * @returns Shortened address\n */\nexport const shortenAddress = (address: string, num = 4, delimiter = '...') => {\n  return (\n    address.substring(0, num) +\n    delimiter +\n    address.substring(address.length - num, address.length)\n  )\n}\n\n/**\n * Build a explorer url by context including addresses or transaction ids\n * @param addressOrTxId - Address or TxId\n * @returns\n */\nexport const explorer = (addressOrTxId: string): string => {\n  if (account.isAddress(addressOrTxId)) {\n    return `https://explorer.solana.com/address/${addressOrTxId}?cluster=${net}`\n  }\n  return `https://explorer.solana.com/tx/${addressOrTxId}?cluster=${net}`\n}\n\n/**\n * Wrapped Numbro - https://numbrojs.com/old-format.html\n * @param value - value\n * @returns\n */\nexport const numeric = (\n  value?: number | string | BigInt,\n): ReturnType<typeof numbro> => {\n  if (!value) return numbro('0')\n  return numbro(value)\n}\n\n/**\n * Generate a random color\n * @param seed - Seed\n * @param opacity - Opacity\n * @returns\n */\nexport const randomColor = (seed?: string, opacity?: string | number) => {\n  let hash = Math.floor(Math.random() * 16777215)\n  if (seed) {\n    hash = 0\n    for (let i = 0; i < seed.length; i++) {\n      hash = seed.charCodeAt(i) + ((hash << 5) - hash)\n    }\n  }\n  var rgb = [0, 0, 0]\n  for (let i = 0; i < 3; i++) {\n    var value = (hash >> (i * 8)) & 255\n    rgb[i] = value\n  }\n  return `rgba(${rgb[0]}, 100, ${rgb[1]},${opacity || 1})`\n}\n\n/**\n * Fetch coingecko data with cache\n * @param ticket - Token ticket\n * @returns\n */\nexport const fetchCGK = async (ticket = '') => {\n  return DataLoader.load('fetchCGK' + ticket, () => utils.parseCGK(ticket))\n}\n\n/**\n * Randomly choose an element in the input array\n * @param arr - Original array of elements\n * @returns\n */\nexport const randChoose = <T>(arr: T[]): T => {\n  const rand = Math.floor(Math.random() * arr.length)\n  return arr[rand]\n}\n\n/**\n * Randomize a subarray in the input array with a specific number of elements\n * @param arr - Original array of elements\n * @param num - Number of elements in randomized subarray\n * @returns\n */\nexport const randElements = <T>(arr: T[], num: number): T[] => {\n  if (arr.length < num) return [...arr]\n  const re: T[] = []\n  while (re.length < num) {\n    const el = randChoose(arr)\n    if (!re.includes(el)) re.push(el)\n  }\n  return re\n}\n"],"names":["CUSTOM_ICONS","forwardRef","ref","name","className","props","cln","src","Row","gutter","justify","Col","Space","direction","size","Typography","level","style","fontSize","textAlign","span","type","icon","title","value","Card","bordered","background","borderLeft","borderRadius","bodyStyle","padding","shared","appId","process","url","development","staging","production","constructor","_wallet","window","sentre","wallet","_publicKey","PublicKey","_init","async","address","this","getAddress","signTransaction","tx","signAllTransactions","signedTxs","txs","signedTx","push","publicKey","console","warn","devnet","interDao","InterDAO","SafeWallet","fee","taxman","testnet","mainnet","manifest","env","sol","net","configs","NAME","getProposals","createAsyncThunk","daoAddress","provider","connection","programId","program","getProgramAccounts","filters","memcmp","offset","bytes","bulk","forEach","pubkey","account","data","buf","toBase58","parseProposalData","getProposal","force","getState","Error","dao","getProposalData","upsetProposal","deleteProposal","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","payload","Object","assign","daoData","proposal","useSelector","dispatch","useDispatch","totalDao","useMemo","keys","length","totalProposal","executeProposal","total","proposalAddr","executed","useEffect","daoAddresses","xs","lg","sm","numeric","format","includes","regime","special","tag","isEqual","DaoRegimes","Tag","margin","DEFAULT_AVATARS","undefined","mintAddress","reversed","avatars","setAvatars","useState","tokenProvider","useMint","pools","usePool","deriveAvatar","useCallback","token","findByAddress","logoURI","deriveAvatars","poolData","values","find","mint_lpt","mint_a","mint_b","Promise","all","map","reverse","avatar","Avatar","backgroundColor","border","display","whiteSpace","i","DEFAULT_NAME","separator","setName","deriveName","deriveNames","names","join","DEFAULT_SYMBOL","symbol","setSymbol","deriveSymbol","substring","deriveSymbols","symbols","onClick","active","cursor","randomColor","Boolean","color","boxShadow","align","useAllMintAddresses","allMintAddresses","setAllMintAddresses","getRecommendedMintAddresses","addresses","filter","searching","onChange","visible","setVisible","keyword","setKeyword","recommendedMintAddresses","setRecommendedMintAddresses","accounts","useAccount","myMintAddresses","mint","index","self","indexOf","useRecommendedMintAddresses","searchedMintAddresses","loading","setLoading","setSearchedMintAddresses","clearTimeout","setTimeout","useSearchedMintAddresses","randomHundredAddresses","refresh","limit","shuffle","setShuffle","randElements","useRandomMintAddresses","onSelect","onRefresh","list","document","getElementById","scrollTop","forceCheck","Fragment","Button","Modal","onCancel","footer","closeIcon","centered","destroyOnClose","Input","placeholder","suffix","marginRight","e","target","maxHeight","id","height","overflow","Divider","marginBottom","string2Number","seed","Buffer","from","BN","mod","Number","Math","random","toString","avatarProps","colors","gradients","alt","SOCIAL_MEDIA","DEFAULT_META_DATA","daoName","description","image","optionals","daoRegime","daoType","members","quorum","ConsensusQuorums","daoMetaData","createMetaData","getMember","metadata","utils","dataSize","setCreateDaoMetaData","metaData","isExistDao","getCID","digest","v0Prefix","Uint8Array","v0Digest","set","CID","parseDaoData","results","daoAddr","cacheDaoData","nextDaoData","rs","err","ipfs","IPFS","walletAddress","db","PDB","createInstance","dbDaoData","getItem","cid","get","dbData","setItem","setMetaData","getMetaData","DAO_CARD_BG","autonomous","democratic","dictatorial","HEIGHT_RATIO","history","useHistory","ui","width","useUI","heightRatio","nonce","useMembers","useMetaData","parseRegime","isMobile","desktopWidth","PAGE_PADDING","Image","preview","minHeight","wrap","shape","flex","Tooltip","marginTop","ellipsis","rows","shortenAddress","marginLeft","idx","open","onSearch","prefix","Spin","indicator","LoadingOutlined","position","bottom","left","backdropFilter","textTransform","fontWeight","REGIME_LIST","Popover","overlayStyle","maxWidth","trigger","content","md","onSort","Select","register","daoMap","engine","_setDaoMap","Array","has","addr","daos","fuzzy","search","findIndex","nextDaos","slice","Map","lunr","field","doc","add","parseData","setParseData","searchData","setSearchData","daoProvider","DaoProvider","onParseDaoData","delayToSearch","sortKey","setSortKey","searchKey","setSearchKey","sortDaoRegime","useSearchDao","filterDaoData","searchDao","xl","Empty","useWallet","filteredDaos","authority","authAddress","Tabs","tabBarExtraContent","tab","STATUS_COLOR","Succeeded","Failed","Preparing","Executed","Voting","status","label","rest","decimals","setDecimals","getDecimals","fetchDecimals","er","InfoTransferInProposal","transferInfo","copied","setCopied","source","destination","amount","useMintDecimals","onCopy","asyncWait","BigInt","textDecoration","explorer","text","InfoTransferInDaoDetail","endTime","moment","isProposalDetail","proposalAddress","isExistProposal","setTransferInfo","templateName","setTemplateName","useProposal","fetchProposalInfo","info","decodeSplInstruction","splt","sourceAssociated","sourceAddress","getAccountData","error","toNumber","currentDate","floor","Date","startDate","endDate","supply","votingAgainstPower","votingForPower","consensusQuorum","consensusMechanism","actualSupply","mul","sub","isSuccess","votingPower","lte","cmp","div","notify","message","SystemProgram","useProposalStatus","useProposalMetaData","imageBackground","hoverable","setTx","clearTx","setImgBackground","timeoutId","max","onValue","setError","setCursor","innerRef","useRef","onAmount","val","onError","test","parseFloat","current","setSelectionRange","selectionStart","toData","schema","key","soproxABI","code","toBuffer","setValue","setMintAddress","receiverAddress","setReceiverAddress","srcAddress","setSrcAddress","dstAddress","setDstAddress","setAmount","senderAddress","master","valid","confirm","re","dst","payer","isWritable","isSigner","isMaster","buildTransferSplvalue","close","setSourceAddress","owner","setDestinationAddress","getAmount","String","disabled","CardOption","SOLANA_LOGO","expandable","Radio","template","setStatus","mobileScreen","numSupply","authorized","proposalAddresses","filterProposalAddresses","filteredAddress","stakeSupply","lockSupply","defaultValue","minWidth","block","DEFAULT_DATA","price","priceChange","rank","totalVolume","getBalance","inUSD","cgkData","ticket","extensions","coingeckoId","fetchCGK","fetchCgkData","balance","totalUSD","setTotalUSD","clcTotalUSD","usdBalance","setUSDBalance","mintBalance","setMintBalance","fetchBalance","InfoDAOMaster","listAccount","setListAccount","useTotalUSD","daoMasterAddress","fetchAccount","ownerPublicKey","getTokenAccountsByOwner","spltProgramId","parseAccountData","placement","overlayClassName","InfoMember","isMultisigDAO","mechanismQuorum","useParseQuorumText","useParams","ConsensusMechanisms","infix","mobileSpan","DatePicker","valueOf","showTime","CURRENT_TIME","ONE_DAY","setConsensusMechanism","setConsensusQuorum","duration","setDuration","setTitle","setDescription","proposalMetaData","setDefaultQuorum","newProposal","multihash","feeOption","revenue","revenuemanAddress","tax","taxmanAddress","valueAccounts","txId","initializeProposal","DEFAULT_CREATE_DAO_DATA","createDaoData","getDaos","DAO_DISCRIMINATOR","getDao","getDaoData","upsetDao","setCreateDaoData","setCreateDaoType","deleteDao","DAO_TYPE","cardBorder","borderColor","logoSize","PAGE_SPACING","parseQuorum","setSupply","getMint","fetchSupply","useMintSupply","suggestion","DAOPrivacy","Member","Public","disabledBtn","disabledWalletInput","remove","myAddress","setDefaultValue","nextMembers","onChangeMember","splice","privacy","setPrivacy","formatMetaData","nextMetaData","imgBase64","Upload","accept","listType","maxCount","file","fileList","callBack","reader","FileReader","readAsDataURL","onload","result","fileToBase64","originFileObj","itemRender","eml","uploadFile","uploadFiles","thumbUrl","onRemove","social","JSON","parse","stringify","onOptionalChange","CreateSteps","step","stepOne","stepTwo","stepThree","DAO_PROGRESS_TITLE","Progress","percent","steps","showInfo","onHandleStep","onConfirm","setStep","_mint","DEFAULT_EMPTY_ADDRESS","getAnchorProvider","node","web3","anchorProvider","AnchorProvider","signedTransactions","transaction","transactions","signedTransaction","commitment","skipPreflight","setProvider","initializeAccount","associatedTokenAccount","ix","sendAndConfirm","initializeMint","spl","Spl","createInstruction","rpc","rent","signers","getProvider","nodeUrl","createNewToken","isValidMint","mintToAccount","tokenAccount","mintTo","to","burnAccount","burn","getMintAddress","onNextStep","member","getMintAddr","multiSigWallet","MultisigWallet","onCreateDao","totalSupply","pow","initializeDao","getReceipts","receipt","parseReceiptData","receipts","setReceipts","fetchReceipts","listReceipt","useReceipts","authorities","execute","wordBreak","setVoteBidAmount","buildResult","useAccountBalance","accountAddress","lamports","getRemainingSeconds","nowDayjs","timestampDayjs","startWithZeros","diff","getRemainingMinutes","getRemainingHours","getRemainingDays","number","minLength","numberString","repeat","defaultRemainingTime","minutes","hours","days","seconds","LockedVoting","remainingTime","setRemainingTime","voteBid","voteAmount","voteNow","getTime","startTime","isLockedVote","remaining","votePower","updateRemainingTime","countdown","timestampMs","finishTime","dayjs","isBefore","getRemainingTime","intervalId","setInterval","clearInterval","loadingFor","setLoadingFor","loadingAgainst","setLoadingAgainst","setAccountAddress","deriveAssociatedAddress","useAccountBalanceByMintAddress","proposalFee","onVoteFor","actualAmount","nextAmount","voteFor","onVoteAgainst","voteAgainst","creator","authProposalAddress","consensus","_consensusMechanism","STROKE_COLOR","dark","default","agree","disagree","light","backGroundColor","setBackGroundColor","successColor","setSuccessColor","mintDecimal","theme","noVote","yesVote","totalVote","percentYes","percentNo","currentPower","actualYesVote","powerRequire","gte","percentSuccess","getColors","strokeColor","success","record","action","power","HISTORY_COLUMNS_FLEXIBLE","dataIndex","render","_","HISTORY_COLUMNS_MULTISIG","setListReceipt","historyColum","nextReceipts","actionType","existReceipt","_receipt","_action","_authority","_actionType","oldPower","Table","columns","dataSource","pagination","rowKey","lockedDate","initializeDAOEventId","updateDaoRegimeEventId","updateSupplyEventId","transferAuthorityEventId","reloadDaoData","daoPublicKey","fetchData","unwrap","watchData","addListener","removeListener","initializeProposalEventId","voteForEventId","voteAgainstEventId","executeProposalEventId","reloadProposalData","proposalPublicKey","authorityAddress","RECEIPT_DISCRIMINATOR","getReceipt","getReceiptData","upsetReceipt","deleteReceipt","closeEventId","reloadReceiptData","receiptPublicKey","receiptAddress","setBackground","Switch","Route","exact","path","component","Dao","DaoInitialization","Proposal","ProposalInitialization","ProposalDetails","Redirect","configureStore","middleware","getDefaultMiddleware","bigintSerializationMiddleware","devTools","reducer","Page","UIProvider","antd","prefixCls","WalletProvider","AccountProvider","PoolProvider","MintProvider","Provider","store","model","DEFAULT_CACHE_CONFIG","ttl","DEFAULT_SINGLE_FLIGHT_CONFIG","calls","time","cache","RequestQueue","resolveQueue","rejectQueue","resolve","reject","resolves","shift","rejects","SingleFlightCache","mapCache","delete","DataLoader","instanceKey","mapInstance","instance","newSingleFlight","SingleFlight","requestKey","callback","singleFlight","getSingleFlight","newRequest","load","config","intervalRequest","timeLogs","mapRequestCalling","requestQueue","cacheData","isFetch","request","fetch","validateLimit","addRequestQueue","createTimeLogs","then","response","catch","finally","fetchRequestQueue","now","appName","prototype","toJSON","serializableCheck","isSerializable","isArray","obj","proto","getPrototypeOf","isPlainObject","dbName","driver","localForage","storeName","dropInstance","clear","appIds","flat","concat","iterate","backup","restore","_ipfs","create","isCID","stream","cat","timeout","raw","chunk","isIPFS","storage","getNetwork","chainId","getChainId","KEY","localStorage","convert","ms","num","delimiter","addressOrTxId","numbro","opacity","hash","charCodeAt","rgb","randChoose","arr","el"],"sourceRoot":""}