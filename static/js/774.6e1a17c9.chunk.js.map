{"version":3,"file":"static/js/774.6e1a17c9.chunk.js","mappings":"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OAAO,SAAUE,GACf,GAAIA,GAASsE,EAAMtE,EAAMnjB,cAAgBmjB,EAAMnjB,WAAY,OAAOmjB,IAiBtEzE,EAAKK,eAAiBL,EAAK6I,uBAAuB,CAChD,IACA,OACA,QACA,SACA,QACA,MACA,SACA,OACA,KACA,QACA,KACA,MACA,MACA,MACA,KACA,KACA,KACA,UACA,OACA,MACA,KACA,MACA,SACA,QACA,OACA,MACA,KACA,OACA,SACA,OACA,OACA,QACA,MACA,OACA,MACA,MACA,MACA,MACA,OACA,KACA,MACA,OACA,MACA,MACA,MACA,UACA,IACA,KACA,KACA,OACA,KACA,KACA,MACA,OACA,QACA,MACA,OACA,SACA,MACA,KACA,QACA,OACA,OACA,KACA,UACA,KACA,MACA,MACA,KACA,MACA,QACA,KACA,OACA,KACA,QACA,MACA,MACA,SACA,OACA,MACA,OACA,MACA,SACA,QACA,KACA,OACA,OACA,OACA,MACA,QACA,OACA,OACA,QACA,QACA,OACA,OACA,MACA,KACA,MACA,OACA,KACA,QACA,MACA,KACA,OACA,OACA,OACA,QACA,QACA,QACA,MACA,OACA,MACA,OACA,OACA,QACA,MACA,MACA,SAGF7I,EAAKoD,SAASG,iBAAiBvD,EAAKK,eAAgB,kBAqBpDL,EAAKI,QAAU,SAAUqE,GACvB,OAAOA,EAAMhC,QAAO,SAAUze,GAC5B,OAAOA,EAAEga,QAAQ,OAAQ,IAAIA,QAAQ,OAAQ,QAIjDgC,EAAKoD,SAASG,iBAAiBvD,EAAKI,QAAS,WA2B7CJ,EAAKkJ,SAAW,WACd/hB,KAAKgiB,OAAQ,EACbhiB,KAAKiiB,MAAQ,GACbjiB,KAAK3G,GAAKwf,EAAKkJ,SAASG,QACxBrJ,EAAKkJ,SAASG,SAAW,GAW3BrJ,EAAKkJ,SAASG,QAAU,EASxBrJ,EAAKkJ,SAASI,UAAY,SAAU3b,GAGlC,IAFA,IAAI5B,EAAU,IAAIiU,EAAKkJ,SAASjJ,QAEvBvb,EAAI,EAAGqC,EAAM4G,EAAI5I,OAAQL,EAAIqC,EAAKrC,IACzCqH,EAAQsZ,OAAO1X,EAAIjJ,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","sources":["../../../src/index.ts","../node_modules/localforage/dist/localforage.js","../node_modules/lunr/lunr.js"],"sourcesContent":[null,"/*!\n    localForage -- Offline Storage, Improved\n    Version 1.10.0\n    https://localforage.github.io/localForage\n    (c) 2013-2017 Mozilla, Apache License 2.0\n*/\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.localforage = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw (f.code=\"MODULE_NOT_FOUND\", f)}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nvar Mutation = global.MutationObserver || global.WebKitMutationObserver;\n\nvar scheduleDrain;\n\n{\n  if (Mutation) {\n    var called = 0;\n    var observer = new Mutation(nextTick);\n    var element = global.document.createTextNode('');\n    observer.observe(element, {\n      characterData: true\n    });\n    scheduleDrain = function () {\n      element.data = (called = ++called % 2);\n    };\n  } else if (!global.setImmediate && typeof global.MessageChannel !== 'undefined') {\n    var channel = new global.MessageChannel();\n    channel.port1.onmessage = nextTick;\n    scheduleDrain = function () {\n      channel.port2.postMessage(0);\n    };\n  } else if ('document' in global && 'onreadystatechange' in global.document.createElement('script')) {\n    scheduleDrain = function () {\n\n      // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n      // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n      var scriptEl = global.document.createElement('script');\n      scriptEl.onreadystatechange = function () {\n        nextTick();\n\n        scriptEl.onreadystatechange = null;\n        scriptEl.parentNode.removeChild(scriptEl);\n        scriptEl = null;\n      };\n      global.document.documentElement.appendChild(scriptEl);\n    };\n  } else {\n    scheduleDrain = function () {\n      setTimeout(nextTick, 0);\n    };\n  }\n}\n\nvar draining;\nvar queue = [];\n//named nextTick for less confusing stack traces\nfunction nextTick() {\n  draining = true;\n  var i, oldQueue;\n  var len = queue.length;\n  while (len) {\n    oldQueue = queue;\n    queue = [];\n    i = -1;\n    while (++i < len) {\n      oldQueue[i]();\n    }\n    len = queue.length;\n  }\n  draining = false;\n}\n\nmodule.exports = immediate;\nfunction immediate(task) {\n  if (queue.push(task) === 1 && !draining) {\n    scheduleDrain();\n  }\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{}],2:[function(_dereq_,module,exports){\n'use strict';\nvar immediate = _dereq_(1);\n\n/* istanbul ignore next */\nfunction INTERNAL() {}\n\nvar handlers = {};\n\nvar REJECTED = ['REJECTED'];\nvar FULFILLED = ['FULFILLED'];\nvar PENDING = ['PENDING'];\n\nmodule.exports = Promise;\n\nfunction Promise(resolver) {\n  if (typeof resolver !== 'function') {\n    throw new TypeError('resolver must be a function');\n  }\n  this.state = PENDING;\n  this.queue = [];\n  this.outcome = void 0;\n  if (resolver !== INTERNAL) {\n    safelyResolveThenable(this, resolver);\n  }\n}\n\nPromise.prototype[\"catch\"] = function (onRejected) {\n  return this.then(null, onRejected);\n};\nPromise.prototype.then = function (onFulfilled, onRejected) {\n  if (typeof onFulfilled !== 'function' && this.state === FULFILLED ||\n    typeof onRejected !== 'function' && this.state === REJECTED) {\n    return this;\n  }\n  var promise = new this.constructor(INTERNAL);\n  if (this.state !== PENDING) {\n    var resolver = this.state === FULFILLED ? onFulfilled : onRejected;\n    unwrap(promise, resolver, this.outcome);\n  } else {\n    this.queue.push(new QueueItem(promise, onFulfilled, onRejected));\n  }\n\n  return promise;\n};\nfunction QueueItem(promise, onFulfilled, onRejected) {\n  this.promise = promise;\n  if (typeof onFulfilled === 'function') {\n    this.onFulfilled = onFulfilled;\n    this.callFulfilled = this.otherCallFulfilled;\n  }\n  if (typeof onRejected === 'function') {\n    this.onRejected = onRejected;\n    this.callRejected = this.otherCallRejected;\n  }\n}\nQueueItem.prototype.callFulfilled = function (value) {\n  handlers.resolve(this.promise, value);\n};\nQueueItem.prototype.otherCallFulfilled = function (value) {\n  unwrap(this.promise, this.onFulfilled, value);\n};\nQueueItem.prototype.callRejected = function (value) {\n  handlers.reject(this.promise, value);\n};\nQueueItem.prototype.otherCallRejected = function (value) {\n  unwrap(this.promise, this.onRejected, value);\n};\n\nfunction unwrap(promise, func, value) {\n  immediate(function () {\n    var returnValue;\n    try {\n      returnValue = func(value);\n    } catch (e) {\n      return handlers.reject(promise, e);\n    }\n    if (returnValue === promise) {\n      handlers.reject(promise, new TypeError('Cannot resolve promise with itself'));\n    } else {\n      handlers.resolve(promise, returnValue);\n    }\n  });\n}\n\nhandlers.resolve = function (self, value) {\n  var result = tryCatch(getThen, value);\n  if (result.status === 'error') {\n    return handlers.reject(self, result.value);\n  }\n  var thenable = result.value;\n\n  if (thenable) {\n    safelyResolveThenable(self, thenable);\n  } else {\n    self.state = FULFILLED;\n    self.outcome = value;\n    var i = -1;\n    var len = self.queue.length;\n    while (++i < len) {\n      self.queue[i].callFulfilled(value);\n    }\n  }\n  return self;\n};\nhandlers.reject = function (self, error) {\n  self.state = REJECTED;\n  self.outcome = error;\n  var i = -1;\n  var len = self.queue.length;\n  while (++i < len) {\n    self.queue[i].callRejected(error);\n  }\n  return self;\n};\n\nfunction getThen(obj) {\n  // Make sure we only access the accessor once as required by the spec\n  var then = obj && obj.then;\n  if (obj && (typeof obj === 'object' || typeof obj === 'function') && typeof then === 'function') {\n    return function appyThen() {\n      then.apply(obj, arguments);\n    };\n  }\n}\n\nfunction safelyResolveThenable(self, thenable) {\n  // Either fulfill, reject or reject with error\n  var called = false;\n  function onError(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.reject(self, value);\n  }\n\n  function onSuccess(value) {\n    if (called) {\n      return;\n    }\n    called = true;\n    handlers.resolve(self, value);\n  }\n\n  function tryToUnwrap() {\n    thenable(onSuccess, onError);\n  }\n\n  var result = tryCatch(tryToUnwrap);\n  if (result.status === 'error') {\n    onError(result.value);\n  }\n}\n\nfunction tryCatch(func, value) {\n  var out = {};\n  try {\n    out.value = func(value);\n    out.status = 'success';\n  } catch (e) {\n    out.status = 'error';\n    out.value = e;\n  }\n  return out;\n}\n\nPromise.resolve = resolve;\nfunction resolve(value) {\n  if (value instanceof this) {\n    return value;\n  }\n  return handlers.resolve(new this(INTERNAL), value);\n}\n\nPromise.reject = reject;\nfunction reject(reason) {\n  var promise = new this(INTERNAL);\n  return handlers.reject(promise, reason);\n}\n\nPromise.all = all;\nfunction all(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var values = new Array(len);\n  var resolved = 0;\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    allResolver(iterable[i], i);\n  }\n  return promise;\n  function allResolver(value, i) {\n    self.resolve(value).then(resolveFromAll, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n    function resolveFromAll(outValue) {\n      values[i] = outValue;\n      if (++resolved === len && !called) {\n        called = true;\n        handlers.resolve(promise, values);\n      }\n    }\n  }\n}\n\nPromise.race = race;\nfunction race(iterable) {\n  var self = this;\n  if (Object.prototype.toString.call(iterable) !== '[object Array]') {\n    return this.reject(new TypeError('must be an array'));\n  }\n\n  var len = iterable.length;\n  var called = false;\n  if (!len) {\n    return this.resolve([]);\n  }\n\n  var i = -1;\n  var promise = new this(INTERNAL);\n\n  while (++i < len) {\n    resolver(iterable[i]);\n  }\n  return promise;\n  function resolver(value) {\n    self.resolve(value).then(function (response) {\n      if (!called) {\n        called = true;\n        handlers.resolve(promise, response);\n      }\n    }, function (error) {\n      if (!called) {\n        called = true;\n        handlers.reject(promise, error);\n      }\n    });\n  }\n}\n\n},{\"1\":1}],3:[function(_dereq_,module,exports){\n(function (global){\n'use strict';\nif (typeof global.Promise !== 'function') {\n  global.Promise = _dereq_(2);\n}\n\n}).call(this,typeof global !== \"undefined\" ? global : typeof self !== \"undefined\" ? self : typeof window !== \"undefined\" ? window : {})\n},{\"2\":2}],4:[function(_dereq_,module,exports){\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction getIDB() {\n    /* global indexedDB,webkitIndexedDB,mozIndexedDB,OIndexedDB,msIndexedDB */\n    try {\n        if (typeof indexedDB !== 'undefined') {\n            return indexedDB;\n        }\n        if (typeof webkitIndexedDB !== 'undefined') {\n            return webkitIndexedDB;\n        }\n        if (typeof mozIndexedDB !== 'undefined') {\n            return mozIndexedDB;\n        }\n        if (typeof OIndexedDB !== 'undefined') {\n            return OIndexedDB;\n        }\n        if (typeof msIndexedDB !== 'undefined') {\n            return msIndexedDB;\n        }\n    } catch (e) {\n        return;\n    }\n}\n\nvar idb = getIDB();\n\nfunction isIndexedDBValid() {\n    try {\n        // Initialize IndexedDB; fall back to vendor-prefixed versions\n        // if needed.\n        if (!idb || !idb.open) {\n            return false;\n        }\n        // We mimic PouchDB here;\n        //\n        // We test for openDatabase because IE Mobile identifies itself\n        // as Safari. Oh the lulz...\n        var isSafari = typeof openDatabase !== 'undefined' && /(Safari|iPhone|iPad|iPod)/.test(navigator.userAgent) && !/Chrome/.test(navigator.userAgent) && !/BlackBerry/.test(navigator.platform);\n\n        var hasFetch = typeof fetch === 'function' && fetch.toString().indexOf('[native code') !== -1;\n\n        // Safari <10.1 does not meet our requirements for IDB support\n        // (see: https://github.com/pouchdb/pouchdb/issues/5572).\n        // Safari 10.1 shipped with fetch, we can use that to detect it.\n        // Note: this creates issues with `window.fetch` polyfills and\n        // overrides; see:\n        // https://github.com/localForage/localForage/issues/856\n        return (!isSafari || hasFetch) && typeof indexedDB !== 'undefined' &&\n        // some outdated implementations of IDB that appear on Samsung\n        // and HTC Android devices <4.4 are missing IDBKeyRange\n        // See: https://github.com/mozilla/localForage/issues/128\n        // See: https://github.com/mozilla/localForage/issues/272\n        typeof IDBKeyRange !== 'undefined';\n    } catch (e) {\n        return false;\n    }\n}\n\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\n// Abstracts constructing a Blob object, so it also works in older\n// browsers that don't support the native Blob constructor. (i.e.\n// old QtWebKit versions, at least).\nfunction createBlob(parts, properties) {\n    /* global BlobBuilder,MSBlobBuilder,MozBlobBuilder,WebKitBlobBuilder */\n    parts = parts || [];\n    properties = properties || {};\n    try {\n        return new Blob(parts, properties);\n    } catch (e) {\n        if (e.name !== 'TypeError') {\n            throw e;\n        }\n        var Builder = typeof BlobBuilder !== 'undefined' ? BlobBuilder : typeof MSBlobBuilder !== 'undefined' ? MSBlobBuilder : typeof MozBlobBuilder !== 'undefined' ? MozBlobBuilder : WebKitBlobBuilder;\n        var builder = new Builder();\n        for (var i = 0; i < parts.length; i += 1) {\n            builder.append(parts[i]);\n        }\n        return builder.getBlob(properties.type);\n    }\n}\n\n// This is CommonJS because lie is an external dependency, so Rollup\n// can just ignore it.\nif (typeof Promise === 'undefined') {\n    // In the \"nopromises\" build this will just throw if you don't have\n    // a global promise object, but it would throw anyway later.\n    _dereq_(3);\n}\nvar Promise$1 = Promise;\n\nfunction executeCallback(promise, callback) {\n    if (callback) {\n        promise.then(function (result) {\n            callback(null, result);\n        }, function (error) {\n            callback(error);\n        });\n    }\n}\n\nfunction executeTwoCallbacks(promise, callback, errorCallback) {\n    if (typeof callback === 'function') {\n        promise.then(callback);\n    }\n\n    if (typeof errorCallback === 'function') {\n        promise[\"catch\"](errorCallback);\n    }\n}\n\nfunction normalizeKey(key) {\n    // Cast the key to a string, as that's all we can set as a key.\n    if (typeof key !== 'string') {\n        console.warn(key + ' used as a key, but it is not a string.');\n        key = String(key);\n    }\n\n    return key;\n}\n\nfunction getCallback() {\n    if (arguments.length && typeof arguments[arguments.length - 1] === 'function') {\n        return arguments[arguments.length - 1];\n    }\n}\n\n// Some code originally from async_storage.js in\n// [Gaia](https://github.com/mozilla-b2g/gaia).\n\nvar DETECT_BLOB_SUPPORT_STORE = 'local-forage-detect-blob-support';\nvar supportsBlobs = void 0;\nvar dbContexts = {};\nvar toString = Object.prototype.toString;\n\n// Transaction Modes\nvar READ_ONLY = 'readonly';\nvar READ_WRITE = 'readwrite';\n\n// Transform a binary string to an array buffer, because otherwise\n// weird stuff happens when you try to work with the binary string directly.\n// It is known.\n// From http://stackoverflow.com/questions/14967647/ (continues on next line)\n// encode-decode-image-with-base64-breaks-image (2013-04-21)\nfunction _binStringToArrayBuffer(bin) {\n    var length = bin.length;\n    var buf = new ArrayBuffer(length);\n    var arr = new Uint8Array(buf);\n    for (var i = 0; i < length; i++) {\n        arr[i] = bin.charCodeAt(i);\n    }\n    return buf;\n}\n\n//\n// Blobs are not supported in all versions of IndexedDB, notably\n// Chrome <37 and Android <5. In those versions, storing a blob will throw.\n//\n// Various other blob bugs exist in Chrome v37-42 (inclusive).\n// Detecting them is expensive and confusing to users, and Chrome 37-42\n// is at very low usage worldwide, so we do a hacky userAgent check instead.\n//\n// content-type bug: https://code.google.com/p/chromium/issues/detail?id=408120\n// 404 bug: https://code.google.com/p/chromium/issues/detail?id=447916\n// FileReader bug: https://code.google.com/p/chromium/issues/detail?id=447836\n//\n// Code borrowed from PouchDB. See:\n// https://github.com/pouchdb/pouchdb/blob/master/packages/node_modules/pouchdb-adapter-idb/src/blobSupport.js\n//\nfunction _checkBlobSupportWithoutCaching(idb) {\n    return new Promise$1(function (resolve) {\n        var txn = idb.transaction(DETECT_BLOB_SUPPORT_STORE, READ_WRITE);\n        var blob = createBlob(['']);\n        txn.objectStore(DETECT_BLOB_SUPPORT_STORE).put(blob, 'key');\n\n        txn.onabort = function (e) {\n            // If the transaction aborts now its due to not being able to\n            // write to the database, likely due to the disk being full\n            e.preventDefault();\n            e.stopPropagation();\n            resolve(false);\n        };\n\n        txn.oncomplete = function () {\n            var matchedChrome = navigator.userAgent.match(/Chrome\\/(\\d+)/);\n            var matchedEdge = navigator.userAgent.match(/Edge\\//);\n            // MS Edge pretends to be Chrome 42:\n            // https://msdn.microsoft.com/en-us/library/hh869301%28v=vs.85%29.aspx\n            resolve(matchedEdge || !matchedChrome || parseInt(matchedChrome[1], 10) >= 43);\n        };\n    })[\"catch\"](function () {\n        return false; // error, so assume unsupported\n    });\n}\n\nfunction _checkBlobSupport(idb) {\n    if (typeof supportsBlobs === 'boolean') {\n        return Promise$1.resolve(supportsBlobs);\n    }\n    return _checkBlobSupportWithoutCaching(idb).then(function (value) {\n        supportsBlobs = value;\n        return supportsBlobs;\n    });\n}\n\nfunction _deferReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Create a deferred object representing the current database operation.\n    var deferredOperation = {};\n\n    deferredOperation.promise = new Promise$1(function (resolve, reject) {\n        deferredOperation.resolve = resolve;\n        deferredOperation.reject = reject;\n    });\n\n    // Enqueue the deferred operation.\n    dbContext.deferredOperations.push(deferredOperation);\n\n    // Chain its promise to the database readiness.\n    if (!dbContext.dbReady) {\n        dbContext.dbReady = deferredOperation.promise;\n    } else {\n        dbContext.dbReady = dbContext.dbReady.then(function () {\n            return deferredOperation.promise;\n        });\n    }\n}\n\nfunction _advanceReadiness(dbInfo) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Resolve its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.resolve();\n        return deferredOperation.promise;\n    }\n}\n\nfunction _rejectReadiness(dbInfo, err) {\n    var dbContext = dbContexts[dbInfo.name];\n\n    // Dequeue a deferred operation.\n    var deferredOperation = dbContext.deferredOperations.pop();\n\n    // Reject its promise (which is part of the database readiness\n    // chain of promises).\n    if (deferredOperation) {\n        deferredOperation.reject(err);\n        return deferredOperation.promise;\n    }\n}\n\nfunction _getConnection(dbInfo, upgradeNeeded) {\n    return new Promise$1(function (resolve, reject) {\n        dbContexts[dbInfo.name] = dbContexts[dbInfo.name] || createDbContext();\n\n        if (dbInfo.db) {\n            if (upgradeNeeded) {\n                _deferReadiness(dbInfo);\n                dbInfo.db.close();\n            } else {\n                return resolve(dbInfo.db);\n            }\n        }\n\n        var dbArgs = [dbInfo.name];\n\n        if (upgradeNeeded) {\n            dbArgs.push(dbInfo.version);\n        }\n\n        var openreq = idb.open.apply(idb, dbArgs);\n\n        if (upgradeNeeded) {\n            openreq.onupgradeneeded = function (e) {\n                var db = openreq.result;\n                try {\n                    db.createObjectStore(dbInfo.storeName);\n                    if (e.oldVersion <= 1) {\n                        // Added when support for blob shims was added\n                        db.createObjectStore(DETECT_BLOB_SUPPORT_STORE);\n                    }\n                } catch (ex) {\n                    if (ex.name === 'ConstraintError') {\n                        console.warn('The database \"' + dbInfo.name + '\"' + ' has been upgraded from version ' + e.oldVersion + ' to version ' + e.newVersion + ', but the storage \"' + dbInfo.storeName + '\" already exists.');\n                    } else {\n                        throw ex;\n                    }\n                }\n            };\n        }\n\n        openreq.onerror = function (e) {\n            e.preventDefault();\n            reject(openreq.error);\n        };\n\n        openreq.onsuccess = function () {\n            var db = openreq.result;\n            db.onversionchange = function (e) {\n                // Triggered when the database is modified (e.g. adding an objectStore) or\n                // deleted (even when initiated by other sessions in different tabs).\n                // Closing the connection here prevents those operations from being blocked.\n                // If the database is accessed again later by this instance, the connection\n                // will be reopened or the database recreated as needed.\n                e.target.close();\n            };\n            resolve(db);\n            _advanceReadiness(dbInfo);\n        };\n    });\n}\n\nfunction _getOriginalConnection(dbInfo) {\n    return _getConnection(dbInfo, false);\n}\n\nfunction _getUpgradedConnection(dbInfo) {\n    return _getConnection(dbInfo, true);\n}\n\nfunction _isUpgradeNeeded(dbInfo, defaultVersion) {\n    if (!dbInfo.db) {\n        return true;\n    }\n\n    var isNewStore = !dbInfo.db.objectStoreNames.contains(dbInfo.storeName);\n    var isDowngrade = dbInfo.version < dbInfo.db.version;\n    var isUpgrade = dbInfo.version > dbInfo.db.version;\n\n    if (isDowngrade) {\n        // If the version is not the default one\n        // then warn for impossible downgrade.\n        if (dbInfo.version !== defaultVersion) {\n            console.warn('The database \"' + dbInfo.name + '\"' + \" can't be downgraded from version \" + dbInfo.db.version + ' to version ' + dbInfo.version + '.');\n        }\n        // Align the versions to prevent errors.\n        dbInfo.version = dbInfo.db.version;\n    }\n\n    if (isUpgrade || isNewStore) {\n        // If the store is new then increment the version (if needed).\n        // This will trigger an \"upgradeneeded\" event which is required\n        // for creating a store.\n        if (isNewStore) {\n            var incVersion = dbInfo.db.version + 1;\n            if (incVersion > dbInfo.version) {\n                dbInfo.version = incVersion;\n            }\n        }\n\n        return true;\n    }\n\n    return false;\n}\n\n// encode a blob for indexeddb engines that don't support blobs\nfunction _encodeBlob(blob) {\n    return new Promise$1(function (resolve, reject) {\n        var reader = new FileReader();\n        reader.onerror = reject;\n        reader.onloadend = function (e) {\n            var base64 = btoa(e.target.result || '');\n            resolve({\n                __local_forage_encoded_blob: true,\n                data: base64,\n                type: blob.type\n            });\n        };\n        reader.readAsBinaryString(blob);\n    });\n}\n\n// decode an encoded blob\nfunction _decodeBlob(encodedBlob) {\n    var arrayBuff = _binStringToArrayBuffer(atob(encodedBlob.data));\n    return createBlob([arrayBuff], { type: encodedBlob.type });\n}\n\n// is this one of our fancy encoded blobs?\nfunction _isEncodedBlob(value) {\n    return value && value.__local_forage_encoded_blob;\n}\n\n// Specialize the default `ready()` function by making it dependent\n// on the current database operations. Thus, the driver will be actually\n// ready when it's been initialized (default) *and* there are no pending\n// operations on the database (initiated by some other instances).\nfunction _fullyReady(callback) {\n    var self = this;\n\n    var promise = self._initReady().then(function () {\n        var dbContext = dbContexts[self._dbInfo.name];\n\n        if (dbContext && dbContext.dbReady) {\n            return dbContext.dbReady;\n        }\n    });\n\n    executeTwoCallbacks(promise, callback, callback);\n    return promise;\n}\n\n// Try to establish a new db connection to replace the\n// current one which is broken (i.e. experiencing\n// InvalidStateError while creating a transaction).\nfunction _tryReconnect(dbInfo) {\n    _deferReadiness(dbInfo);\n\n    var dbContext = dbContexts[dbInfo.name];\n    var forages = dbContext.forages;\n\n    for (var i = 0; i < forages.length; i++) {\n        var forage = forages[i];\n        if (forage._dbInfo.db) {\n            forage._dbInfo.db.close();\n            forage._dbInfo.db = null;\n        }\n    }\n    dbInfo.db = null;\n\n    return _getOriginalConnection(dbInfo).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        // store the latest db reference\n        // in case the db was upgraded\n        dbInfo.db = dbContext.db = db;\n        for (var i = 0; i < forages.length; i++) {\n            forages[i]._dbInfo.db = db;\n        }\n    })[\"catch\"](function (err) {\n        _rejectReadiness(dbInfo, err);\n        throw err;\n    });\n}\n\n// FF doesn't like Promises (micro-tasks) and IDDB store operations,\n// so we have to do it with callbacks\nfunction createTransaction(dbInfo, mode, callback, retries) {\n    if (retries === undefined) {\n        retries = 1;\n    }\n\n    try {\n        var tx = dbInfo.db.transaction(dbInfo.storeName, mode);\n        callback(null, tx);\n    } catch (err) {\n        if (retries > 0 && (!dbInfo.db || err.name === 'InvalidStateError' || err.name === 'NotFoundError')) {\n            return Promise$1.resolve().then(function () {\n                if (!dbInfo.db || err.name === 'NotFoundError' && !dbInfo.db.objectStoreNames.contains(dbInfo.storeName) && dbInfo.version <= dbInfo.db.version) {\n                    // increase the db version, to create the new ObjectStore\n                    if (dbInfo.db) {\n                        dbInfo.version = dbInfo.db.version + 1;\n                    }\n                    // Reopen the database for upgrading.\n                    return _getUpgradedConnection(dbInfo);\n                }\n            }).then(function () {\n                return _tryReconnect(dbInfo).then(function () {\n                    createTransaction(dbInfo, mode, callback, retries - 1);\n                });\n            })[\"catch\"](callback);\n        }\n\n        callback(err);\n    }\n}\n\nfunction createDbContext() {\n    return {\n        // Running localForages sharing a database.\n        forages: [],\n        // Shared database.\n        db: null,\n        // Database readiness (promise).\n        dbReady: null,\n        // Deferred operations on the database.\n        deferredOperations: []\n    };\n}\n\n// Open the IndexedDB database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    // Get the current context of the database;\n    var dbContext = dbContexts[dbInfo.name];\n\n    // ...or create a new context.\n    if (!dbContext) {\n        dbContext = createDbContext();\n        // Register the new context in the global container.\n        dbContexts[dbInfo.name] = dbContext;\n    }\n\n    // Register itself as a running localForage in the current context.\n    dbContext.forages.push(self);\n\n    // Replace the default `ready()` function with the specialized one.\n    if (!self._initReady) {\n        self._initReady = self.ready;\n        self.ready = _fullyReady;\n    }\n\n    // Create an array of initialization states of the related localForages.\n    var initPromises = [];\n\n    function ignoreErrors() {\n        // Don't handle errors here,\n        // just makes sure related localForages aren't pending.\n        return Promise$1.resolve();\n    }\n\n    for (var j = 0; j < dbContext.forages.length; j++) {\n        var forage = dbContext.forages[j];\n        if (forage !== self) {\n            // Don't wait for itself...\n            initPromises.push(forage._initReady()[\"catch\"](ignoreErrors));\n        }\n    }\n\n    // Take a snapshot of the related localForages.\n    var forages = dbContext.forages.slice(0);\n\n    // Initialize the connection process only when\n    // all the related localForages aren't pending.\n    return Promise$1.all(initPromises).then(function () {\n        dbInfo.db = dbContext.db;\n        // Get the connection or open a new one without upgrade.\n        return _getOriginalConnection(dbInfo);\n    }).then(function (db) {\n        dbInfo.db = db;\n        if (_isUpgradeNeeded(dbInfo, self._defaultConfig.version)) {\n            // Reopen the database for upgrading.\n            return _getUpgradedConnection(dbInfo);\n        }\n        return db;\n    }).then(function (db) {\n        dbInfo.db = dbContext.db = db;\n        self._dbInfo = dbInfo;\n        // Share the final connection amongst related localForages.\n        for (var k = 0; k < forages.length; k++) {\n            var forage = forages[k];\n            if (forage !== self) {\n                // Self is already up-to-date.\n                forage._dbInfo.db = dbInfo.db;\n                forage._dbInfo.version = dbInfo.version;\n            }\n        }\n    });\n}\n\nfunction getItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.get(key);\n\n                    req.onsuccess = function () {\n                        var value = req.result;\n                        if (value === undefined) {\n                            value = null;\n                        }\n                        if (_isEncodedBlob(value)) {\n                            value = _decodeBlob(value);\n                        }\n                        resolve(value);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items stored in database.\nfunction iterate(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openCursor();\n                    var iterationNumber = 1;\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (cursor) {\n                            var value = cursor.value;\n                            if (_isEncodedBlob(value)) {\n                                value = _decodeBlob(value);\n                            }\n                            var result = iterator(value, cursor.key, iterationNumber++);\n\n                            // when the iterator callback returns any\n                            // (non-`undefined`) value, then we stop\n                            // the iteration immediately\n                            if (result !== void 0) {\n                                resolve(result);\n                            } else {\n                                cursor[\"continue\"]();\n                            }\n                        } else {\n                            resolve();\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n\n    return promise;\n}\n\nfunction setItem(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        var dbInfo;\n        self.ready().then(function () {\n            dbInfo = self._dbInfo;\n            if (toString.call(value) === '[object Blob]') {\n                return _checkBlobSupport(dbInfo.db).then(function (blobSupport) {\n                    if (blobSupport) {\n                        return value;\n                    }\n                    return _encodeBlob(value);\n                });\n            }\n            return value;\n        }).then(function (value) {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n\n                    // The reason we don't _save_ null is because IE 10 does\n                    // not support saving the `null` type in IndexedDB. How\n                    // ironic, given the bug below!\n                    // See: https://github.com/mozilla/localForage/issues/161\n                    if (value === null) {\n                        value = undefined;\n                    }\n\n                    var req = store.put(value, key);\n\n                    transaction.oncomplete = function () {\n                        // Cast to undefined so the value passed to\n                        // callback/promise is the same as what one would get out\n                        // of `getItem()` later. This leads to some weirdness\n                        // (setItem('foo', undefined) will return `null`), but\n                        // it's not my fault localStorage is our baseline and that\n                        // it's weird.\n                        if (value === undefined) {\n                            value = null;\n                        }\n\n                        resolve(value);\n                    };\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction removeItem(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    // We use a Grunt task to make this safe for IE and some\n                    // versions of Android (including those used by Cordova).\n                    // Normally IE won't like `.delete()` and will insist on\n                    // using `['delete']()`, but we have a build step that\n                    // fixes this for us now.\n                    var req = store[\"delete\"](key);\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onerror = function () {\n                        reject(req.error);\n                    };\n\n                    // The request will be also be aborted if we've exceeded our storage\n                    // space.\n                    transaction.onabort = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction clear(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_WRITE, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.clear();\n\n                    transaction.oncomplete = function () {\n                        resolve();\n                    };\n\n                    transaction.onabort = transaction.onerror = function () {\n                        var err = req.error ? req.error : req.transaction.error;\n                        reject(err);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction length(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.count();\n\n                    req.onsuccess = function () {\n                        resolve(req.result);\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction key(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        if (n < 0) {\n            resolve(null);\n\n            return;\n        }\n\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var advanced = false;\n                    var req = store.openKeyCursor();\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n                        if (!cursor) {\n                            // this means there weren't enough keys\n                            resolve(null);\n\n                            return;\n                        }\n\n                        if (n === 0) {\n                            // We have the first key, return it if that's what they\n                            // wanted.\n                            resolve(cursor.key);\n                        } else {\n                            if (!advanced) {\n                                // Otherwise, ask the cursor to skip ahead n\n                                // records.\n                                advanced = true;\n                                cursor.advance(n);\n                            } else {\n                                // When we get here, we've got the nth key.\n                                resolve(cursor.key);\n                            }\n                        }\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            createTransaction(self._dbInfo, READ_ONLY, function (err, transaction) {\n                if (err) {\n                    return reject(err);\n                }\n\n                try {\n                    var store = transaction.objectStore(self._dbInfo.storeName);\n                    var req = store.openKeyCursor();\n                    var keys = [];\n\n                    req.onsuccess = function () {\n                        var cursor = req.result;\n\n                        if (!cursor) {\n                            resolve(keys);\n                            return;\n                        }\n\n                        keys.push(cursor.key);\n                        cursor[\"continue\"]();\n                    };\n\n                    req.onerror = function () {\n                        reject(req.error);\n                    };\n                } catch (e) {\n                    reject(e);\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        var isCurrentDb = options.name === currentConfig.name && self._dbInfo.db;\n\n        var dbPromise = isCurrentDb ? Promise$1.resolve(self._dbInfo.db) : _getOriginalConnection(options).then(function (db) {\n            var dbContext = dbContexts[options.name];\n            var forages = dbContext.forages;\n            dbContext.db = db;\n            for (var i = 0; i < forages.length; i++) {\n                forages[i]._dbInfo.db = db;\n            }\n            return db;\n        });\n\n        if (!options.storeName) {\n            promise = dbPromise.then(function (db) {\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                }\n\n                var dropDBPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.deleteDatabase(options.name);\n\n                    req.onerror = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        reject(req.error);\n                    };\n\n                    req.onblocked = function () {\n                        // Closing all open connections in onversionchange handler should prevent this situation, but if\n                        // we do get here, it just means the request remains pending - eventually it will succeed or error\n                        console.warn('dropInstance blocked for database \"' + options.name + '\" until all open connections are closed');\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        if (db) {\n                            db.close();\n                        }\n                        resolve(db);\n                    };\n                });\n\n                return dropDBPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var i = 0; i < forages.length; i++) {\n                        var _forage = forages[i];\n                        _advanceReadiness(_forage._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        } else {\n            promise = dbPromise.then(function (db) {\n                if (!db.objectStoreNames.contains(options.storeName)) {\n                    return;\n                }\n\n                var newVersion = db.version + 1;\n\n                _deferReadiness(options);\n\n                var dbContext = dbContexts[options.name];\n                var forages = dbContext.forages;\n\n                db.close();\n                for (var i = 0; i < forages.length; i++) {\n                    var forage = forages[i];\n                    forage._dbInfo.db = null;\n                    forage._dbInfo.version = newVersion;\n                }\n\n                var dropObjectPromise = new Promise$1(function (resolve, reject) {\n                    var req = idb.open(options.name, newVersion);\n\n                    req.onerror = function (err) {\n                        var db = req.result;\n                        db.close();\n                        reject(err);\n                    };\n\n                    req.onupgradeneeded = function () {\n                        var db = req.result;\n                        db.deleteObjectStore(options.storeName);\n                    };\n\n                    req.onsuccess = function () {\n                        var db = req.result;\n                        db.close();\n                        resolve(db);\n                    };\n                });\n\n                return dropObjectPromise.then(function (db) {\n                    dbContext.db = db;\n                    for (var j = 0; j < forages.length; j++) {\n                        var _forage2 = forages[j];\n                        _forage2._dbInfo.db = db;\n                        _advanceReadiness(_forage2._dbInfo);\n                    }\n                })[\"catch\"](function (err) {\n                    (_rejectReadiness(options, err) || Promise$1.resolve())[\"catch\"](function () {});\n                    throw err;\n                });\n            });\n        }\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar asyncStorage = {\n    _driver: 'asyncStorage',\n    _initStorage: _initStorage,\n    _support: isIndexedDBValid(),\n    iterate: iterate,\n    getItem: getItem,\n    setItem: setItem,\n    removeItem: removeItem,\n    clear: clear,\n    length: length,\n    key: key,\n    keys: keys,\n    dropInstance: dropInstance\n};\n\nfunction isWebSQLValid() {\n    return typeof openDatabase === 'function';\n}\n\n// Sadly, the best way to save binary data in WebSQL/localStorage is serializing\n// it to Base64, so this is how we store it to prevent very strange errors with less\n// verbose ways of binary <-> string data storage.\nvar BASE_CHARS = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nvar BLOB_TYPE_PREFIX = '~~local_forage_type~';\nvar BLOB_TYPE_PREFIX_REGEX = /^~~local_forage_type~([^~]+)~/;\n\nvar SERIALIZED_MARKER = '__lfsc__:';\nvar SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER.length;\n\n// OMG the serializations!\nvar TYPE_ARRAYBUFFER = 'arbf';\nvar TYPE_BLOB = 'blob';\nvar TYPE_INT8ARRAY = 'si08';\nvar TYPE_UINT8ARRAY = 'ui08';\nvar TYPE_UINT8CLAMPEDARRAY = 'uic8';\nvar TYPE_INT16ARRAY = 'si16';\nvar TYPE_INT32ARRAY = 'si32';\nvar TYPE_UINT16ARRAY = 'ur16';\nvar TYPE_UINT32ARRAY = 'ui32';\nvar TYPE_FLOAT32ARRAY = 'fl32';\nvar TYPE_FLOAT64ARRAY = 'fl64';\nvar TYPE_SERIALIZED_MARKER_LENGTH = SERIALIZED_MARKER_LENGTH + TYPE_ARRAYBUFFER.length;\n\nvar toString$1 = Object.prototype.toString;\n\nfunction stringToBuffer(serializedString) {\n    // Fill the string into a ArrayBuffer.\n    var bufferLength = serializedString.length * 0.75;\n    var len = serializedString.length;\n    var i;\n    var p = 0;\n    var encoded1, encoded2, encoded3, encoded4;\n\n    if (serializedString[serializedString.length - 1] === '=') {\n        bufferLength--;\n        if (serializedString[serializedString.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n\n    var buffer = new ArrayBuffer(bufferLength);\n    var bytes = new Uint8Array(buffer);\n\n    for (i = 0; i < len; i += 4) {\n        encoded1 = BASE_CHARS.indexOf(serializedString[i]);\n        encoded2 = BASE_CHARS.indexOf(serializedString[i + 1]);\n        encoded3 = BASE_CHARS.indexOf(serializedString[i + 2]);\n        encoded4 = BASE_CHARS.indexOf(serializedString[i + 3]);\n\n        /*jslint bitwise: true */\n        bytes[p++] = encoded1 << 2 | encoded2 >> 4;\n        bytes[p++] = (encoded2 & 15) << 4 | encoded3 >> 2;\n        bytes[p++] = (encoded3 & 3) << 6 | encoded4 & 63;\n    }\n    return buffer;\n}\n\n// Converts a buffer to a string to store, serialized, in the backend\n// storage library.\nfunction bufferToString(buffer) {\n    // base64-arraybuffer\n    var bytes = new Uint8Array(buffer);\n    var base64String = '';\n    var i;\n\n    for (i = 0; i < bytes.length; i += 3) {\n        /*jslint bitwise: true */\n        base64String += BASE_CHARS[bytes[i] >> 2];\n        base64String += BASE_CHARS[(bytes[i] & 3) << 4 | bytes[i + 1] >> 4];\n        base64String += BASE_CHARS[(bytes[i + 1] & 15) << 2 | bytes[i + 2] >> 6];\n        base64String += BASE_CHARS[bytes[i + 2] & 63];\n    }\n\n    if (bytes.length % 3 === 2) {\n        base64String = base64String.substring(0, base64String.length - 1) + '=';\n    } else if (bytes.length % 3 === 1) {\n        base64String = base64String.substring(0, base64String.length - 2) + '==';\n    }\n\n    return base64String;\n}\n\n// Serialize a value, afterwards executing a callback (which usually\n// instructs the `setItem()` callback/promise to be executed). This is how\n// we store binary data with localStorage.\nfunction serialize(value, callback) {\n    var valueType = '';\n    if (value) {\n        valueType = toString$1.call(value);\n    }\n\n    // Cannot use `value instanceof ArrayBuffer` or such here, as these\n    // checks fail when running the tests using casper.js...\n    //\n    // TODO: See why those tests fail and use a better solution.\n    if (value && (valueType === '[object ArrayBuffer]' || value.buffer && toString$1.call(value.buffer) === '[object ArrayBuffer]')) {\n        // Convert binary arrays to a string and prefix the string with\n        // a special marker.\n        var buffer;\n        var marker = SERIALIZED_MARKER;\n\n        if (value instanceof ArrayBuffer) {\n            buffer = value;\n            marker += TYPE_ARRAYBUFFER;\n        } else {\n            buffer = value.buffer;\n\n            if (valueType === '[object Int8Array]') {\n                marker += TYPE_INT8ARRAY;\n            } else if (valueType === '[object Uint8Array]') {\n                marker += TYPE_UINT8ARRAY;\n            } else if (valueType === '[object Uint8ClampedArray]') {\n                marker += TYPE_UINT8CLAMPEDARRAY;\n            } else if (valueType === '[object Int16Array]') {\n                marker += TYPE_INT16ARRAY;\n            } else if (valueType === '[object Uint16Array]') {\n                marker += TYPE_UINT16ARRAY;\n            } else if (valueType === '[object Int32Array]') {\n                marker += TYPE_INT32ARRAY;\n            } else if (valueType === '[object Uint32Array]') {\n                marker += TYPE_UINT32ARRAY;\n            } else if (valueType === '[object Float32Array]') {\n                marker += TYPE_FLOAT32ARRAY;\n            } else if (valueType === '[object Float64Array]') {\n                marker += TYPE_FLOAT64ARRAY;\n            } else {\n                callback(new Error('Failed to get type for BinaryArray'));\n            }\n        }\n\n        callback(marker + bufferToString(buffer));\n    } else if (valueType === '[object Blob]') {\n        // Conver the blob to a binaryArray and then to a string.\n        var fileReader = new FileReader();\n\n        fileReader.onload = function () {\n            // Backwards-compatible prefix for the blob type.\n            var str = BLOB_TYPE_PREFIX + value.type + '~' + bufferToString(this.result);\n\n            callback(SERIALIZED_MARKER + TYPE_BLOB + str);\n        };\n\n        fileReader.readAsArrayBuffer(value);\n    } else {\n        try {\n            callback(JSON.stringify(value));\n        } catch (e) {\n            console.error(\"Couldn't convert value into a JSON string: \", value);\n\n            callback(null, e);\n        }\n    }\n}\n\n// Deserialize data we've inserted into a value column/field. We place\n// special markers into our strings to mark them as encoded; this isn't\n// as nice as a meta field, but it's the only sane thing we can do whilst\n// keeping localStorage support intact.\n//\n// Oftentimes this will just deserialize JSON content, but if we have a\n// special marker (SERIALIZED_MARKER, defined above), we will extract\n// some kind of arraybuffer/binary data/typed array out of the string.\nfunction deserialize(value) {\n    // If we haven't marked this string as being specially serialized (i.e.\n    // something other than serialized JSON), we can just return it and be\n    // done with it.\n    if (value.substring(0, SERIALIZED_MARKER_LENGTH) !== SERIALIZED_MARKER) {\n        return JSON.parse(value);\n    }\n\n    // The following code deals with deserializing some kind of Blob or\n    // TypedArray. First we separate out the type of data we're dealing\n    // with from the data itself.\n    var serializedString = value.substring(TYPE_SERIALIZED_MARKER_LENGTH);\n    var type = value.substring(SERIALIZED_MARKER_LENGTH, TYPE_SERIALIZED_MARKER_LENGTH);\n\n    var blobType;\n    // Backwards-compatible blob type serialization strategy.\n    // DBs created with older versions of localForage will simply not have the blob type.\n    if (type === TYPE_BLOB && BLOB_TYPE_PREFIX_REGEX.test(serializedString)) {\n        var matcher = serializedString.match(BLOB_TYPE_PREFIX_REGEX);\n        blobType = matcher[1];\n        serializedString = serializedString.substring(matcher[0].length);\n    }\n    var buffer = stringToBuffer(serializedString);\n\n    // Return the right type based on the code/type set during\n    // serialization.\n    switch (type) {\n        case TYPE_ARRAYBUFFER:\n            return buffer;\n        case TYPE_BLOB:\n            return createBlob([buffer], { type: blobType });\n        case TYPE_INT8ARRAY:\n            return new Int8Array(buffer);\n        case TYPE_UINT8ARRAY:\n            return new Uint8Array(buffer);\n        case TYPE_UINT8CLAMPEDARRAY:\n            return new Uint8ClampedArray(buffer);\n        case TYPE_INT16ARRAY:\n            return new Int16Array(buffer);\n        case TYPE_UINT16ARRAY:\n            return new Uint16Array(buffer);\n        case TYPE_INT32ARRAY:\n            return new Int32Array(buffer);\n        case TYPE_UINT32ARRAY:\n            return new Uint32Array(buffer);\n        case TYPE_FLOAT32ARRAY:\n            return new Float32Array(buffer);\n        case TYPE_FLOAT64ARRAY:\n            return new Float64Array(buffer);\n        default:\n            throw new Error('Unkown type: ' + type);\n    }\n}\n\nvar localforageSerializer = {\n    serialize: serialize,\n    deserialize: deserialize,\n    stringToBuffer: stringToBuffer,\n    bufferToString: bufferToString\n};\n\n/*\n * Includes code from:\n *\n * base64-arraybuffer\n * https://github.com/niklasvh/base64-arraybuffer\n *\n * Copyright (c) 2012 Niklas von Hertzen\n * Licensed under the MIT license.\n */\n\nfunction createDbTable(t, dbInfo, callback, errorCallback) {\n    t.executeSql('CREATE TABLE IF NOT EXISTS ' + dbInfo.storeName + ' ' + '(id INTEGER PRIMARY KEY, key unique, value)', [], callback, errorCallback);\n}\n\n// Open the WebSQL database (automatically creates one if one didn't\n// previously exist), using any options set in the config.\nfunction _initStorage$1(options) {\n    var self = this;\n    var dbInfo = {\n        db: null\n    };\n\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = typeof options[i] !== 'string' ? options[i].toString() : options[i];\n        }\n    }\n\n    var dbInfoPromise = new Promise$1(function (resolve, reject) {\n        // Open the database; the openDatabase API will automatically\n        // create it for us if it doesn't exist.\n        try {\n            dbInfo.db = openDatabase(dbInfo.name, String(dbInfo.version), dbInfo.description, dbInfo.size);\n        } catch (e) {\n            return reject(e);\n        }\n\n        // Create our key/value table if it doesn't exist.\n        dbInfo.db.transaction(function (t) {\n            createDbTable(t, dbInfo, function () {\n                self._dbInfo = dbInfo;\n                resolve();\n            }, function (t, error) {\n                reject(error);\n            });\n        }, reject);\n    });\n\n    dbInfo.serializer = localforageSerializer;\n    return dbInfoPromise;\n}\n\nfunction tryExecuteSql(t, dbInfo, sqlStatement, args, callback, errorCallback) {\n    t.executeSql(sqlStatement, args, callback, function (t, error) {\n        if (error.code === error.SYNTAX_ERR) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name = ?\", [dbInfo.storeName], function (t, results) {\n                if (!results.rows.length) {\n                    // if the table is missing (was deleted)\n                    // re-create it table and retry\n                    createDbTable(t, dbInfo, function () {\n                        t.executeSql(sqlStatement, args, callback, errorCallback);\n                    }, errorCallback);\n                } else {\n                    errorCallback(t, error);\n                }\n            }, errorCallback);\n        } else {\n            errorCallback(t, error);\n        }\n    }, errorCallback);\n}\n\nfunction getItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName + ' WHERE key = ? LIMIT 1', [key], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).value : null;\n\n                    // Check to see if this is serialized content we need to\n                    // unpack.\n                    if (result) {\n                        result = dbInfo.serializer.deserialize(result);\n                    }\n\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction iterate$1(iterator, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT * FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var rows = results.rows;\n                    var length = rows.length;\n\n                    for (var i = 0; i < length; i++) {\n                        var item = rows.item(i);\n                        var result = item.value;\n\n                        // Check to see if this is serialized content\n                        // we need to unpack.\n                        if (result) {\n                            result = dbInfo.serializer.deserialize(result);\n                        }\n\n                        result = iterator(result, item.key, i + 1);\n\n                        // void(0) prevents problems with redefinition\n                        // of `undefined`.\n                        if (result !== void 0) {\n                            resolve(result);\n                            return;\n                        }\n                    }\n\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction _setItem(key, value, callback, retriesLeft) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            // The localStorage API doesn't return undefined values in an\n            // \"expected\" way, so undefined is always cast to null in all\n            // drivers. See: https://github.com/mozilla/localForage/pull/42\n            if (value === undefined) {\n                value = null;\n            }\n\n            // Save the original value to pass to the callback.\n            var originalValue = value;\n\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    dbInfo.db.transaction(function (t) {\n                        tryExecuteSql(t, dbInfo, 'INSERT OR REPLACE INTO ' + dbInfo.storeName + ' ' + '(key, value) VALUES (?, ?)', [key, value], function () {\n                            resolve(originalValue);\n                        }, function (t, error) {\n                            reject(error);\n                        });\n                    }, function (sqlError) {\n                        // The transaction failed; check\n                        // to see if it's a quota error.\n                        if (sqlError.code === sqlError.QUOTA_ERR) {\n                            // We reject the callback outright for now, but\n                            // it's worth trying to re-run the transaction.\n                            // Even if the user accepts the prompt to use\n                            // more storage on Safari, this error will\n                            // be called.\n                            //\n                            // Try to re-run the transaction.\n                            if (retriesLeft > 0) {\n                                resolve(_setItem.apply(self, [key, originalValue, callback, retriesLeft - 1]));\n                                return;\n                            }\n                            reject(sqlError);\n                        }\n                    });\n                }\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction setItem$1(key, value, callback) {\n    return _setItem.apply(this, [key, value, callback, 1]);\n}\n\nfunction removeItem$1(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName + ' WHERE key = ?', [key], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Deletes every item in the table.\n// TODO: Find out if this resets the AUTO_INCREMENT number.\nfunction clear$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'DELETE FROM ' + dbInfo.storeName, [], function () {\n                    resolve();\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Does a simple `COUNT(key)` to get the number of items stored in\n// localForage.\nfunction length$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                // Ahhh, SQL makes this one soooooo easy.\n                tryExecuteSql(t, dbInfo, 'SELECT COUNT(key) as c FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var result = results.rows.item(0).c;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Return the key located at key index X; essentially gets the key from a\n// `WHERE id = ?`. This is the most efficient way I can think to implement\n// this rarely-used (in my experience) part of the API, but it can seem\n// inconsistent, because we do `INSERT OR REPLACE INTO` on `setItem()`, so\n// the ID of each key will change every time it's updated. Perhaps a stored\n// procedure for the `setItem()` SQL would solve this problem?\n// TODO: Don't change ID on `setItem()`.\nfunction key$1(n, callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName + ' WHERE id = ? LIMIT 1', [n + 1], function (t, results) {\n                    var result = results.rows.length ? results.rows.item(0).key : null;\n                    resolve(result);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$1(callback) {\n    var self = this;\n\n    var promise = new Promise$1(function (resolve, reject) {\n        self.ready().then(function () {\n            var dbInfo = self._dbInfo;\n            dbInfo.db.transaction(function (t) {\n                tryExecuteSql(t, dbInfo, 'SELECT key FROM ' + dbInfo.storeName, [], function (t, results) {\n                    var keys = [];\n\n                    for (var i = 0; i < results.rows.length; i++) {\n                        keys.push(results.rows.item(i).key);\n                    }\n\n                    resolve(keys);\n                }, function (t, error) {\n                    reject(error);\n                });\n            });\n        })[\"catch\"](reject);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// https://www.w3.org/TR/webdatabase/#databases\n// > There is no way to enumerate or delete the databases available for an origin from this API.\nfunction getAllStoreNames(db) {\n    return new Promise$1(function (resolve, reject) {\n        db.transaction(function (t) {\n            t.executeSql('SELECT name FROM sqlite_master ' + \"WHERE type='table' AND name <> '__WebKitDatabaseInfoTable__'\", [], function (t, results) {\n                var storeNames = [];\n\n                for (var i = 0; i < results.rows.length; i++) {\n                    storeNames.push(results.rows.item(i).name);\n                }\n\n                resolve({\n                    db: db,\n                    storeNames: storeNames\n                });\n            }, function (t, error) {\n                reject(error);\n            });\n        }, function (sqlError) {\n            reject(sqlError);\n        });\n    });\n}\n\nfunction dropInstance$1(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    var currentConfig = this.config();\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            var db;\n            if (options.name === currentConfig.name) {\n                // use the db reference of the current instance\n                db = self._dbInfo.db;\n            } else {\n                db = openDatabase(options.name, '', '', 0);\n            }\n\n            if (!options.storeName) {\n                // drop all database tables\n                resolve(getAllStoreNames(db));\n            } else {\n                resolve({\n                    db: db,\n                    storeNames: [options.storeName]\n                });\n            }\n        }).then(function (operationInfo) {\n            return new Promise$1(function (resolve, reject) {\n                operationInfo.db.transaction(function (t) {\n                    function dropTable(storeName) {\n                        return new Promise$1(function (resolve, reject) {\n                            t.executeSql('DROP TABLE IF EXISTS ' + storeName, [], function () {\n                                resolve();\n                            }, function (t, error) {\n                                reject(error);\n                            });\n                        });\n                    }\n\n                    var operations = [];\n                    for (var i = 0, len = operationInfo.storeNames.length; i < len; i++) {\n                        operations.push(dropTable(operationInfo.storeNames[i]));\n                    }\n\n                    Promise$1.all(operations).then(function () {\n                        resolve();\n                    })[\"catch\"](function (e) {\n                        reject(e);\n                    });\n                }, function (sqlError) {\n                    reject(sqlError);\n                });\n            });\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar webSQLStorage = {\n    _driver: 'webSQLStorage',\n    _initStorage: _initStorage$1,\n    _support: isWebSQLValid(),\n    iterate: iterate$1,\n    getItem: getItem$1,\n    setItem: setItem$1,\n    removeItem: removeItem$1,\n    clear: clear$1,\n    length: length$1,\n    key: key$1,\n    keys: keys$1,\n    dropInstance: dropInstance$1\n};\n\nfunction isLocalStorageValid() {\n    try {\n        return typeof localStorage !== 'undefined' && 'setItem' in localStorage &&\n        // in IE8 typeof localStorage.setItem === 'object'\n        !!localStorage.setItem;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction _getKeyPrefix(options, defaultConfig) {\n    var keyPrefix = options.name + '/';\n\n    if (options.storeName !== defaultConfig.storeName) {\n        keyPrefix += options.storeName + '/';\n    }\n    return keyPrefix;\n}\n\n// Check if localStorage throws when saving an item\nfunction checkIfLocalStorageThrows() {\n    var localStorageTestKey = '_localforage_support_test';\n\n    try {\n        localStorage.setItem(localStorageTestKey, true);\n        localStorage.removeItem(localStorageTestKey);\n\n        return false;\n    } catch (e) {\n        return true;\n    }\n}\n\n// Check if localStorage is usable and allows to save an item\n// This method checks if localStorage is usable in Safari Private Browsing\n// mode, or in any other case where the available quota for localStorage\n// is 0 and there wasn't any saved items yet.\nfunction _isLocalStorageUsable() {\n    return !checkIfLocalStorageThrows() || localStorage.length > 0;\n}\n\n// Config the localStorage backend, using options set in the config.\nfunction _initStorage$2(options) {\n    var self = this;\n    var dbInfo = {};\n    if (options) {\n        for (var i in options) {\n            dbInfo[i] = options[i];\n        }\n    }\n\n    dbInfo.keyPrefix = _getKeyPrefix(options, self._defaultConfig);\n\n    if (!_isLocalStorageUsable()) {\n        return Promise$1.reject();\n    }\n\n    self._dbInfo = dbInfo;\n    dbInfo.serializer = localforageSerializer;\n\n    return Promise$1.resolve();\n}\n\n// Remove all keys from the datastore, effectively destroying all data in\n// the app's key/value store!\nfunction clear$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var keyPrefix = self._dbInfo.keyPrefix;\n\n        for (var i = localStorage.length - 1; i >= 0; i--) {\n            var key = localStorage.key(i);\n\n            if (key.indexOf(keyPrefix) === 0) {\n                localStorage.removeItem(key);\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Retrieve an item from the store. Unlike the original async_storage\n// library in Gaia, we don't modify return values at all. If a key's value\n// is `undefined`, we pass that value to the callback function.\nfunction getItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result = localStorage.getItem(dbInfo.keyPrefix + key);\n\n        // If a result was found, parse it from the serialized\n        // string into a JS object. If result isn't truthy, the key\n        // is likely undefined and we'll pass it straight to the\n        // callback.\n        if (result) {\n            result = dbInfo.serializer.deserialize(result);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Iterate over all items in the store.\nfunction iterate$2(iterator, callback) {\n    var self = this;\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var keyPrefix = dbInfo.keyPrefix;\n        var keyPrefixLength = keyPrefix.length;\n        var length = localStorage.length;\n\n        // We use a dedicated iterator instead of the `i` variable below\n        // so other keys we fetch in localStorage aren't counted in\n        // the `iterationNumber` argument passed to the `iterate()`\n        // callback.\n        //\n        // See: github.com/mozilla/localForage/pull/435#discussion_r38061530\n        var iterationNumber = 1;\n\n        for (var i = 0; i < length; i++) {\n            var key = localStorage.key(i);\n            if (key.indexOf(keyPrefix) !== 0) {\n                continue;\n            }\n            var value = localStorage.getItem(key);\n\n            // If a result was found, parse it from the serialized\n            // string into a JS object. If result isn't truthy, the\n            // key is likely undefined and we'll pass it straight\n            // to the iterator.\n            if (value) {\n                value = dbInfo.serializer.deserialize(value);\n            }\n\n            value = iterator(value, key.substring(keyPrefixLength), iterationNumber++);\n\n            if (value !== void 0) {\n                return value;\n            }\n        }\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Same as localStorage's key() method, except takes a callback.\nfunction key$2(n, callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var result;\n        try {\n            result = localStorage.key(n);\n        } catch (error) {\n            result = null;\n        }\n\n        // Remove the prefix from the key, if a key is found.\n        if (result) {\n            result = result.substring(dbInfo.keyPrefix.length);\n        }\n\n        return result;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction keys$2(callback) {\n    var self = this;\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        var length = localStorage.length;\n        var keys = [];\n\n        for (var i = 0; i < length; i++) {\n            var itemKey = localStorage.key(i);\n            if (itemKey.indexOf(dbInfo.keyPrefix) === 0) {\n                keys.push(itemKey.substring(dbInfo.keyPrefix.length));\n            }\n        }\n\n        return keys;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Supply the number of keys in the datastore to the callback function.\nfunction length$2(callback) {\n    var self = this;\n    var promise = self.keys().then(function (keys) {\n        return keys.length;\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Remove an item from the store, nice and simple.\nfunction removeItem$2(key, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        var dbInfo = self._dbInfo;\n        localStorage.removeItem(dbInfo.keyPrefix + key);\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\n// Set a key's value and run an optional callback once the value is set.\n// Unlike Gaia's implementation, the callback function is passed the value,\n// in case you want to operate on that value only after you're sure it\n// saved, or something like that.\nfunction setItem$2(key, value, callback) {\n    var self = this;\n\n    key = normalizeKey(key);\n\n    var promise = self.ready().then(function () {\n        // Convert undefined values to null.\n        // https://github.com/mozilla/localForage/pull/42\n        if (value === undefined) {\n            value = null;\n        }\n\n        // Save the original value to pass to the callback.\n        var originalValue = value;\n\n        return new Promise$1(function (resolve, reject) {\n            var dbInfo = self._dbInfo;\n            dbInfo.serializer.serialize(value, function (value, error) {\n                if (error) {\n                    reject(error);\n                } else {\n                    try {\n                        localStorage.setItem(dbInfo.keyPrefix + key, value);\n                        resolve(originalValue);\n                    } catch (e) {\n                        // localStorage capacity exceeded.\n                        // TODO: Make this a specific error/event.\n                        if (e.name === 'QuotaExceededError' || e.name === 'NS_ERROR_DOM_QUOTA_REACHED') {\n                            reject(e);\n                        }\n                        reject(e);\n                    }\n                }\n            });\n        });\n    });\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nfunction dropInstance$2(options, callback) {\n    callback = getCallback.apply(this, arguments);\n\n    options = typeof options !== 'function' && options || {};\n    if (!options.name) {\n        var currentConfig = this.config();\n        options.name = options.name || currentConfig.name;\n        options.storeName = options.storeName || currentConfig.storeName;\n    }\n\n    var self = this;\n    var promise;\n    if (!options.name) {\n        promise = Promise$1.reject('Invalid arguments');\n    } else {\n        promise = new Promise$1(function (resolve) {\n            if (!options.storeName) {\n                resolve(options.name + '/');\n            } else {\n                resolve(_getKeyPrefix(options, self._defaultConfig));\n            }\n        }).then(function (keyPrefix) {\n            for (var i = localStorage.length - 1; i >= 0; i--) {\n                var key = localStorage.key(i);\n\n                if (key.indexOf(keyPrefix) === 0) {\n                    localStorage.removeItem(key);\n                }\n            }\n        });\n    }\n\n    executeCallback(promise, callback);\n    return promise;\n}\n\nvar localStorageWrapper = {\n    _driver: 'localStorageWrapper',\n    _initStorage: _initStorage$2,\n    _support: isLocalStorageValid(),\n    iterate: iterate$2,\n    getItem: getItem$2,\n    setItem: setItem$2,\n    removeItem: removeItem$2,\n    clear: clear$2,\n    length: length$2,\n    key: key$2,\n    keys: keys$2,\n    dropInstance: dropInstance$2\n};\n\nvar sameValue = function sameValue(x, y) {\n    return x === y || typeof x === 'number' && typeof y === 'number' && isNaN(x) && isNaN(y);\n};\n\nvar includes = function includes(array, searchElement) {\n    var len = array.length;\n    var i = 0;\n    while (i < len) {\n        if (sameValue(array[i], searchElement)) {\n            return true;\n        }\n        i++;\n    }\n\n    return false;\n};\n\nvar isArray = Array.isArray || function (arg) {\n    return Object.prototype.toString.call(arg) === '[object Array]';\n};\n\n// Drivers are stored here when `defineDriver()` is called.\n// They are shared across all instances of localForage.\nvar DefinedDrivers = {};\n\nvar DriverSupport = {};\n\nvar DefaultDrivers = {\n    INDEXEDDB: asyncStorage,\n    WEBSQL: webSQLStorage,\n    LOCALSTORAGE: localStorageWrapper\n};\n\nvar DefaultDriverOrder = [DefaultDrivers.INDEXEDDB._driver, DefaultDrivers.WEBSQL._driver, DefaultDrivers.LOCALSTORAGE._driver];\n\nvar OptionalDriverMethods = ['dropInstance'];\n\nvar LibraryMethods = ['clear', 'getItem', 'iterate', 'key', 'keys', 'length', 'removeItem', 'setItem'].concat(OptionalDriverMethods);\n\nvar DefaultConfig = {\n    description: '',\n    driver: DefaultDriverOrder.slice(),\n    name: 'localforage',\n    // Default DB size is _JUST UNDER_ 5MB, as it's the highest size\n    // we can use without a prompt.\n    size: 4980736,\n    storeName: 'keyvaluepairs',\n    version: 1.0\n};\n\nfunction callWhenReady(localForageInstance, libraryMethod) {\n    localForageInstance[libraryMethod] = function () {\n        var _args = arguments;\n        return localForageInstance.ready().then(function () {\n            return localForageInstance[libraryMethod].apply(localForageInstance, _args);\n        });\n    };\n}\n\nfunction extend() {\n    for (var i = 1; i < arguments.length; i++) {\n        var arg = arguments[i];\n\n        if (arg) {\n            for (var _key in arg) {\n                if (arg.hasOwnProperty(_key)) {\n                    if (isArray(arg[_key])) {\n                        arguments[0][_key] = arg[_key].slice();\n                    } else {\n                        arguments[0][_key] = arg[_key];\n                    }\n                }\n            }\n        }\n    }\n\n    return arguments[0];\n}\n\nvar LocalForage = function () {\n    function LocalForage(options) {\n        _classCallCheck(this, LocalForage);\n\n        for (var driverTypeKey in DefaultDrivers) {\n            if (DefaultDrivers.hasOwnProperty(driverTypeKey)) {\n                var driver = DefaultDrivers[driverTypeKey];\n                var driverName = driver._driver;\n                this[driverTypeKey] = driverName;\n\n                if (!DefinedDrivers[driverName]) {\n                    // we don't need to wait for the promise,\n                    // since the default drivers can be defined\n                    // in a blocking manner\n                    this.defineDriver(driver);\n                }\n            }\n        }\n\n        this._defaultConfig = extend({}, DefaultConfig);\n        this._config = extend({}, this._defaultConfig, options);\n        this._driverSet = null;\n        this._initDriver = null;\n        this._ready = false;\n        this._dbInfo = null;\n\n        this._wrapLibraryMethodsWithReady();\n        this.setDriver(this._config.driver)[\"catch\"](function () {});\n    }\n\n    // Set any config values for localForage; can be called anytime before\n    // the first API call (e.g. `getItem`, `setItem`).\n    // We loop through options so we don't overwrite existing config\n    // values.\n\n\n    LocalForage.prototype.config = function config(options) {\n        // If the options argument is an object, we use it to set values.\n        // Otherwise, we return either a specified config value or all\n        // config values.\n        if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n            // If localforage is ready and fully initialized, we can't set\n            // any new configuration values. Instead, we return an error.\n            if (this._ready) {\n                return new Error(\"Can't call config() after localforage \" + 'has been used.');\n            }\n\n            for (var i in options) {\n                if (i === 'storeName') {\n                    options[i] = options[i].replace(/\\W/g, '_');\n                }\n\n                if (i === 'version' && typeof options[i] !== 'number') {\n                    return new Error('Database version must be a number.');\n                }\n\n                this._config[i] = options[i];\n            }\n\n            // after all config options are set and\n            // the driver option is used, try setting it\n            if ('driver' in options && options.driver) {\n                return this.setDriver(this._config.driver);\n            }\n\n            return true;\n        } else if (typeof options === 'string') {\n            return this._config[options];\n        } else {\n            return this._config;\n        }\n    };\n\n    // Used to define a custom driver, shared across all instances of\n    // localForage.\n\n\n    LocalForage.prototype.defineDriver = function defineDriver(driverObject, callback, errorCallback) {\n        var promise = new Promise$1(function (resolve, reject) {\n            try {\n                var driverName = driverObject._driver;\n                var complianceError = new Error('Custom driver not compliant; see ' + 'https://mozilla.github.io/localForage/#definedriver');\n\n                // A driver name should be defined and not overlap with the\n                // library-defined, default drivers.\n                if (!driverObject._driver) {\n                    reject(complianceError);\n                    return;\n                }\n\n                var driverMethods = LibraryMethods.concat('_initStorage');\n                for (var i = 0, len = driverMethods.length; i < len; i++) {\n                    var driverMethodName = driverMethods[i];\n\n                    // when the property is there,\n                    // it should be a method even when optional\n                    var isRequired = !includes(OptionalDriverMethods, driverMethodName);\n                    if ((isRequired || driverObject[driverMethodName]) && typeof driverObject[driverMethodName] !== 'function') {\n                        reject(complianceError);\n                        return;\n                    }\n                }\n\n                var configureMissingMethods = function configureMissingMethods() {\n                    var methodNotImplementedFactory = function methodNotImplementedFactory(methodName) {\n                        return function () {\n                            var error = new Error('Method ' + methodName + ' is not implemented by the current driver');\n                            var promise = Promise$1.reject(error);\n                            executeCallback(promise, arguments[arguments.length - 1]);\n                            return promise;\n                        };\n                    };\n\n                    for (var _i = 0, _len = OptionalDriverMethods.length; _i < _len; _i++) {\n                        var optionalDriverMethod = OptionalDriverMethods[_i];\n                        if (!driverObject[optionalDriverMethod]) {\n                            driverObject[optionalDriverMethod] = methodNotImplementedFactory(optionalDriverMethod);\n                        }\n                    }\n                };\n\n                configureMissingMethods();\n\n                var setDriverSupport = function setDriverSupport(support) {\n                    if (DefinedDrivers[driverName]) {\n                        console.info('Redefining LocalForage driver: ' + driverName);\n                    }\n                    DefinedDrivers[driverName] = driverObject;\n                    DriverSupport[driverName] = support;\n                    // don't use a then, so that we can define\n                    // drivers that have simple _support methods\n                    // in a blocking manner\n                    resolve();\n                };\n\n                if ('_support' in driverObject) {\n                    if (driverObject._support && typeof driverObject._support === 'function') {\n                        driverObject._support().then(setDriverSupport, reject);\n                    } else {\n                        setDriverSupport(!!driverObject._support);\n                    }\n                } else {\n                    setDriverSupport(true);\n                }\n            } catch (e) {\n                reject(e);\n            }\n        });\n\n        executeTwoCallbacks(promise, callback, errorCallback);\n        return promise;\n    };\n\n    LocalForage.prototype.driver = function driver() {\n        return this._driver || null;\n    };\n\n    LocalForage.prototype.getDriver = function getDriver(driverName, callback, errorCallback) {\n        var getDriverPromise = DefinedDrivers[driverName] ? Promise$1.resolve(DefinedDrivers[driverName]) : Promise$1.reject(new Error('Driver not found.'));\n\n        executeTwoCallbacks(getDriverPromise, callback, errorCallback);\n        return getDriverPromise;\n    };\n\n    LocalForage.prototype.getSerializer = function getSerializer(callback) {\n        var serializerPromise = Promise$1.resolve(localforageSerializer);\n        executeTwoCallbacks(serializerPromise, callback);\n        return serializerPromise;\n    };\n\n    LocalForage.prototype.ready = function ready(callback) {\n        var self = this;\n\n        var promise = self._driverSet.then(function () {\n            if (self._ready === null) {\n                self._ready = self._initDriver();\n            }\n\n            return self._ready;\n        });\n\n        executeTwoCallbacks(promise, callback, callback);\n        return promise;\n    };\n\n    LocalForage.prototype.setDriver = function setDriver(drivers, callback, errorCallback) {\n        var self = this;\n\n        if (!isArray(drivers)) {\n            drivers = [drivers];\n        }\n\n        var supportedDrivers = this._getSupportedDrivers(drivers);\n\n        function setDriverToConfig() {\n            self._config.driver = self.driver();\n        }\n\n        function extendSelfWithDriver(driver) {\n            self._extend(driver);\n            setDriverToConfig();\n\n            self._ready = self._initStorage(self._config);\n            return self._ready;\n        }\n\n        function initDriver(supportedDrivers) {\n            return function () {\n                var currentDriverIndex = 0;\n\n                function driverPromiseLoop() {\n                    while (currentDriverIndex < supportedDrivers.length) {\n                        var driverName = supportedDrivers[currentDriverIndex];\n                        currentDriverIndex++;\n\n                        self._dbInfo = null;\n                        self._ready = null;\n\n                        return self.getDriver(driverName).then(extendSelfWithDriver)[\"catch\"](driverPromiseLoop);\n                    }\n\n                    setDriverToConfig();\n                    var error = new Error('No available storage method found.');\n                    self._driverSet = Promise$1.reject(error);\n                    return self._driverSet;\n                }\n\n                return driverPromiseLoop();\n            };\n        }\n\n        // There might be a driver initialization in progress\n        // so wait for it to finish in order to avoid a possible\n        // race condition to set _dbInfo\n        var oldDriverSetDone = this._driverSet !== null ? this._driverSet[\"catch\"](function () {\n            return Promise$1.resolve();\n        }) : Promise$1.resolve();\n\n        this._driverSet = oldDriverSetDone.then(function () {\n            var driverName = supportedDrivers[0];\n            self._dbInfo = null;\n            self._ready = null;\n\n            return self.getDriver(driverName).then(function (driver) {\n                self._driver = driver._driver;\n                setDriverToConfig();\n                self._wrapLibraryMethodsWithReady();\n                self._initDriver = initDriver(supportedDrivers);\n            });\n        })[\"catch\"](function () {\n            setDriverToConfig();\n            var error = new Error('No available storage method found.');\n            self._driverSet = Promise$1.reject(error);\n            return self._driverSet;\n        });\n\n        executeTwoCallbacks(this._driverSet, callback, errorCallback);\n        return this._driverSet;\n    };\n\n    LocalForage.prototype.supports = function supports(driverName) {\n        return !!DriverSupport[driverName];\n    };\n\n    LocalForage.prototype._extend = function _extend(libraryMethodsAndProperties) {\n        extend(this, libraryMethodsAndProperties);\n    };\n\n    LocalForage.prototype._getSupportedDrivers = function _getSupportedDrivers(drivers) {\n        var supportedDrivers = [];\n        for (var i = 0, len = drivers.length; i < len; i++) {\n            var driverName = drivers[i];\n            if (this.supports(driverName)) {\n                supportedDrivers.push(driverName);\n            }\n        }\n        return supportedDrivers;\n    };\n\n    LocalForage.prototype._wrapLibraryMethodsWithReady = function _wrapLibraryMethodsWithReady() {\n        // Add a stub for each driver API method that delays the call to the\n        // corresponding driver method until localForage is ready. These stubs\n        // will be replaced by the driver methods as soon as the driver is\n        // loaded, so there is no performance impact.\n        for (var i = 0, len = LibraryMethods.length; i < len; i++) {\n            callWhenReady(this, LibraryMethods[i]);\n        }\n    };\n\n    LocalForage.prototype.createInstance = function createInstance(options) {\n        return new LocalForage(options);\n    };\n\n    return LocalForage;\n}();\n\n// The actual localForage object that we expose as a module or via a\n// global. It's extended by pulling in one of our other libraries.\n\n\nvar localforage_js = new LocalForage();\n\nmodule.exports = localforage_js;\n\n},{\"3\":3}]},{},[4])(4)\n});\n","/**\n * lunr - http://lunrjs.com - A bit like Solr, but much smaller and not as bright - 2.3.9\n * Copyright (C) 2020 Oliver Nightingale\n * @license MIT\n */\n\n;(function(){\n\n/**\n * A convenience function for configuring and constructing\n * a new lunr Index.\n *\n * A lunr.Builder instance is created and the pipeline setup\n * with a trimmer, stop word filter and stemmer.\n *\n * This builder object is yielded to the configuration function\n * that is passed as a parameter, allowing the list of fields\n * and other builder parameters to be customised.\n *\n * All documents _must_ be added within the passed config function.\n *\n * @example\n * var idx = lunr(function () {\n *   this.field('title')\n *   this.field('body')\n *   this.ref('id')\n *\n *   documents.forEach(function (doc) {\n *     this.add(doc)\n *   }, this)\n * })\n *\n * @see {@link lunr.Builder}\n * @see {@link lunr.Pipeline}\n * @see {@link lunr.trimmer}\n * @see {@link lunr.stopWordFilter}\n * @see {@link lunr.stemmer}\n * @namespace {function} lunr\n */\nvar lunr = function (config) {\n  var builder = new lunr.Builder\n\n  builder.pipeline.add(\n    lunr.trimmer,\n    lunr.stopWordFilter,\n    lunr.stemmer\n  )\n\n  builder.searchPipeline.add(\n    lunr.stemmer\n  )\n\n  config.call(builder, builder)\n  return builder.build()\n}\n\nlunr.version = \"2.3.9\"\n/*!\n * lunr.utils\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A namespace containing utils for the rest of the lunr library\n * @namespace lunr.utils\n */\nlunr.utils = {}\n\n/**\n * Print a warning message to the console.\n *\n * @param {String} message The message to be printed.\n * @memberOf lunr.utils\n * @function\n */\nlunr.utils.warn = (function (global) {\n  /* eslint-disable no-console */\n  return function (message) {\n    if (global.console && console.warn) {\n      console.warn(message)\n    }\n  }\n  /* eslint-enable no-console */\n})(this)\n\n/**\n * Convert an object to a string.\n *\n * In the case of `null` and `undefined` the function returns\n * the empty string, in all other cases the result of calling\n * `toString` on the passed object is returned.\n *\n * @param {Any} obj The object to convert to a string.\n * @return {String} string representation of the passed object.\n * @memberOf lunr.utils\n */\nlunr.utils.asString = function (obj) {\n  if (obj === void 0 || obj === null) {\n    return \"\"\n  } else {\n    return obj.toString()\n  }\n}\n\n/**\n * Clones an object.\n *\n * Will create a copy of an existing object such that any mutations\n * on the copy cannot affect the original.\n *\n * Only shallow objects are supported, passing a nested object to this\n * function will cause a TypeError.\n *\n * Objects with primitives, and arrays of primitives are supported.\n *\n * @param {Object} obj The object to clone.\n * @return {Object} a clone of the passed object.\n * @throws {TypeError} when a nested object is passed.\n * @memberOf Utils\n */\nlunr.utils.clone = function (obj) {\n  if (obj === null || obj === undefined) {\n    return obj\n  }\n\n  var clone = Object.create(null),\n      keys = Object.keys(obj)\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i],\n        val = obj[key]\n\n    if (Array.isArray(val)) {\n      clone[key] = val.slice()\n      continue\n    }\n\n    if (typeof val === 'string' ||\n        typeof val === 'number' ||\n        typeof val === 'boolean') {\n      clone[key] = val\n      continue\n    }\n\n    throw new TypeError(\"clone is not deep and does not support nested objects\")\n  }\n\n  return clone\n}\nlunr.FieldRef = function (docRef, fieldName, stringValue) {\n  this.docRef = docRef\n  this.fieldName = fieldName\n  this._stringValue = stringValue\n}\n\nlunr.FieldRef.joiner = \"/\"\n\nlunr.FieldRef.fromString = function (s) {\n  var n = s.indexOf(lunr.FieldRef.joiner)\n\n  if (n === -1) {\n    throw \"malformed field ref string\"\n  }\n\n  var fieldRef = s.slice(0, n),\n      docRef = s.slice(n + 1)\n\n  return new lunr.FieldRef (docRef, fieldRef, s)\n}\n\nlunr.FieldRef.prototype.toString = function () {\n  if (this._stringValue == undefined) {\n    this._stringValue = this.fieldName + lunr.FieldRef.joiner + this.docRef\n  }\n\n  return this._stringValue\n}\n/*!\n * lunr.Set\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A lunr set.\n *\n * @constructor\n */\nlunr.Set = function (elements) {\n  this.elements = Object.create(null)\n\n  if (elements) {\n    this.length = elements.length\n\n    for (var i = 0; i < this.length; i++) {\n      this.elements[elements[i]] = true\n    }\n  } else {\n    this.length = 0\n  }\n}\n\n/**\n * A complete set that contains all elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.complete = {\n  intersect: function (other) {\n    return other\n  },\n\n  union: function () {\n    return this\n  },\n\n  contains: function () {\n    return true\n  }\n}\n\n/**\n * An empty set that contains no elements.\n *\n * @static\n * @readonly\n * @type {lunr.Set}\n */\nlunr.Set.empty = {\n  intersect: function () {\n    return this\n  },\n\n  union: function (other) {\n    return other\n  },\n\n  contains: function () {\n    return false\n  }\n}\n\n/**\n * Returns true if this set contains the specified object.\n *\n * @param {object} object - Object whose presence in this set is to be tested.\n * @returns {boolean} - True if this set contains the specified object.\n */\nlunr.Set.prototype.contains = function (object) {\n  return !!this.elements[object]\n}\n\n/**\n * Returns a new set containing only the elements that are present in both\n * this set and the specified set.\n *\n * @param {lunr.Set} other - set to intersect with this set.\n * @returns {lunr.Set} a new set that is the intersection of this and the specified set.\n */\n\nlunr.Set.prototype.intersect = function (other) {\n  var a, b, elements, intersection = []\n\n  if (other === lunr.Set.complete) {\n    return this\n  }\n\n  if (other === lunr.Set.empty) {\n    return other\n  }\n\n  if (this.length < other.length) {\n    a = this\n    b = other\n  } else {\n    a = other\n    b = this\n  }\n\n  elements = Object.keys(a.elements)\n\n  for (var i = 0; i < elements.length; i++) {\n    var element = elements[i]\n    if (element in b.elements) {\n      intersection.push(element)\n    }\n  }\n\n  return new lunr.Set (intersection)\n}\n\n/**\n * Returns a new set combining the elements of this and the specified set.\n *\n * @param {lunr.Set} other - set to union with this set.\n * @return {lunr.Set} a new set that is the union of this and the specified set.\n */\n\nlunr.Set.prototype.union = function (other) {\n  if (other === lunr.Set.complete) {\n    return lunr.Set.complete\n  }\n\n  if (other === lunr.Set.empty) {\n    return this\n  }\n\n  return new lunr.Set(Object.keys(this.elements).concat(Object.keys(other.elements)))\n}\n/**\n * A function to calculate the inverse document frequency for\n * a posting. This is shared between the builder and the index\n *\n * @private\n * @param {object} posting - The posting for a given term\n * @param {number} documentCount - The total number of documents.\n */\nlunr.idf = function (posting, documentCount) {\n  var documentsWithTerm = 0\n\n  for (var fieldName in posting) {\n    if (fieldName == '_index') continue // Ignore the term index, its not a field\n    documentsWithTerm += Object.keys(posting[fieldName]).length\n  }\n\n  var x = (documentCount - documentsWithTerm + 0.5) / (documentsWithTerm + 0.5)\n\n  return Math.log(1 + Math.abs(x))\n}\n\n/**\n * A token wraps a string representation of a token\n * as it is passed through the text processing pipeline.\n *\n * @constructor\n * @param {string} [str=''] - The string token being wrapped.\n * @param {object} [metadata={}] - Metadata associated with this token.\n */\nlunr.Token = function (str, metadata) {\n  this.str = str || \"\"\n  this.metadata = metadata || {}\n}\n\n/**\n * Returns the token string that is being wrapped by this object.\n *\n * @returns {string}\n */\nlunr.Token.prototype.toString = function () {\n  return this.str\n}\n\n/**\n * A token update function is used when updating or optionally\n * when cloning a token.\n *\n * @callback lunr.Token~updateFunction\n * @param {string} str - The string representation of the token.\n * @param {Object} metadata - All metadata associated with this token.\n */\n\n/**\n * Applies the given function to the wrapped string token.\n *\n * @example\n * token.update(function (str, metadata) {\n *   return str.toUpperCase()\n * })\n *\n * @param {lunr.Token~updateFunction} fn - A function to apply to the token string.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.update = function (fn) {\n  this.str = fn(this.str, this.metadata)\n  return this\n}\n\n/**\n * Creates a clone of this token. Optionally a function can be\n * applied to the cloned token.\n *\n * @param {lunr.Token~updateFunction} [fn] - An optional function to apply to the cloned token.\n * @returns {lunr.Token}\n */\nlunr.Token.prototype.clone = function (fn) {\n  fn = fn || function (s) { return s }\n  return new lunr.Token (fn(this.str, this.metadata), this.metadata)\n}\n/*!\n * lunr.tokenizer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A function for splitting a string into tokens ready to be inserted into\n * the search index. Uses `lunr.tokenizer.separator` to split strings, change\n * the value of this property to change how strings are split into tokens.\n *\n * This tokenizer will convert its parameter to a string by calling `toString` and\n * then will split this string on the character in `lunr.tokenizer.separator`.\n * Arrays will have their elements converted to strings and wrapped in a lunr.Token.\n *\n * Optional metadata can be passed to the tokenizer, this metadata will be cloned and\n * added as metadata to every token that is created from the object to be tokenized.\n *\n * @static\n * @param {?(string|object|object[])} obj - The object to convert into tokens\n * @param {?object} metadata - Optional metadata to associate with every token\n * @returns {lunr.Token[]}\n * @see {@link lunr.Pipeline}\n */\nlunr.tokenizer = function (obj, metadata) {\n  if (obj == null || obj == undefined) {\n    return []\n  }\n\n  if (Array.isArray(obj)) {\n    return obj.map(function (t) {\n      return new lunr.Token(\n        lunr.utils.asString(t).toLowerCase(),\n        lunr.utils.clone(metadata)\n      )\n    })\n  }\n\n  var str = obj.toString().toLowerCase(),\n      len = str.length,\n      tokens = []\n\n  for (var sliceEnd = 0, sliceStart = 0; sliceEnd <= len; sliceEnd++) {\n    var char = str.charAt(sliceEnd),\n        sliceLength = sliceEnd - sliceStart\n\n    if ((char.match(lunr.tokenizer.separator) || sliceEnd == len)) {\n\n      if (sliceLength > 0) {\n        var tokenMetadata = lunr.utils.clone(metadata) || {}\n        tokenMetadata[\"position\"] = [sliceStart, sliceLength]\n        tokenMetadata[\"index\"] = tokens.length\n\n        tokens.push(\n          new lunr.Token (\n            str.slice(sliceStart, sliceEnd),\n            tokenMetadata\n          )\n        )\n      }\n\n      sliceStart = sliceEnd + 1\n    }\n\n  }\n\n  return tokens\n}\n\n/**\n * The separator used to split a string into tokens. Override this property to change the behaviour of\n * `lunr.tokenizer` behaviour when tokenizing strings. By default this splits on whitespace and hyphens.\n *\n * @static\n * @see lunr.tokenizer\n */\nlunr.tokenizer.separator = /[\\s\\-]+/\n/*!\n * lunr.Pipeline\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Pipelines maintain an ordered list of functions to be applied to all\n * tokens in documents entering the search index and queries being ran against\n * the index.\n *\n * An instance of lunr.Index created with the lunr shortcut will contain a\n * pipeline with a stop word filter and an English language stemmer. Extra\n * functions can be added before or after either of these functions or these\n * default functions can be removed.\n *\n * When run the pipeline will call each function in turn, passing a token, the\n * index of that token in the original list of all tokens and finally a list of\n * all the original tokens.\n *\n * The output of functions in the pipeline will be passed to the next function\n * in the pipeline. To exclude a token from entering the index the function\n * should return undefined, the rest of the pipeline will not be called with\n * this token.\n *\n * For serialisation of pipelines to work, all functions used in an instance of\n * a pipeline should be registered with lunr.Pipeline. Registered functions can\n * then be loaded. If trying to load a serialised pipeline that uses functions\n * that are not registered an error will be thrown.\n *\n * If not planning on serialising the pipeline then registering pipeline functions\n * is not necessary.\n *\n * @constructor\n */\nlunr.Pipeline = function () {\n  this._stack = []\n}\n\nlunr.Pipeline.registeredFunctions = Object.create(null)\n\n/**\n * A pipeline function maps lunr.Token to lunr.Token. A lunr.Token contains the token\n * string as well as all known metadata. A pipeline function can mutate the token string\n * or mutate (or add) metadata for a given token.\n *\n * A pipeline function can indicate that the passed token should be discarded by returning\n * null, undefined or an empty string. This token will not be passed to any downstream pipeline\n * functions and will not be added to the index.\n *\n * Multiple tokens can be returned by returning an array of tokens. Each token will be passed\n * to any downstream pipeline functions and all will returned tokens will be added to the index.\n *\n * Any number of pipeline functions may be chained together using a lunr.Pipeline.\n *\n * @interface lunr.PipelineFunction\n * @param {lunr.Token} token - A token from the document being processed.\n * @param {number} i - The index of this token in the complete list of tokens for this document/field.\n * @param {lunr.Token[]} tokens - All tokens for this document/field.\n * @returns {(?lunr.Token|lunr.Token[])}\n */\n\n/**\n * Register a function with the pipeline.\n *\n * Functions that are used in the pipeline should be registered if the pipeline\n * needs to be serialised, or a serialised pipeline needs to be loaded.\n *\n * Registering a function does not add it to a pipeline, functions must still be\n * added to instances of the pipeline for them to be used when running a pipeline.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @param {String} label - The label to register this function with\n */\nlunr.Pipeline.registerFunction = function (fn, label) {\n  if (label in this.registeredFunctions) {\n    lunr.utils.warn('Overwriting existing registered function: ' + label)\n  }\n\n  fn.label = label\n  lunr.Pipeline.registeredFunctions[fn.label] = fn\n}\n\n/**\n * Warns if the function is not registered as a Pipeline function.\n *\n * @param {lunr.PipelineFunction} fn - The function to check for.\n * @private\n */\nlunr.Pipeline.warnIfFunctionNotRegistered = function (fn) {\n  var isRegistered = fn.label && (fn.label in this.registeredFunctions)\n\n  if (!isRegistered) {\n    lunr.utils.warn('Function is not registered with pipeline. This may cause problems when serialising the index.\\n', fn)\n  }\n}\n\n/**\n * Loads a previously serialised pipeline.\n *\n * All functions to be loaded must already be registered with lunr.Pipeline.\n * If any function from the serialised data has not been registered then an\n * error will be thrown.\n *\n * @param {Object} serialised - The serialised pipeline to load.\n * @returns {lunr.Pipeline}\n */\nlunr.Pipeline.load = function (serialised) {\n  var pipeline = new lunr.Pipeline\n\n  serialised.forEach(function (fnName) {\n    var fn = lunr.Pipeline.registeredFunctions[fnName]\n\n    if (fn) {\n      pipeline.add(fn)\n    } else {\n      throw new Error('Cannot load unregistered function: ' + fnName)\n    }\n  })\n\n  return pipeline\n}\n\n/**\n * Adds new functions to the end of the pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction[]} functions - Any number of functions to add to the pipeline.\n */\nlunr.Pipeline.prototype.add = function () {\n  var fns = Array.prototype.slice.call(arguments)\n\n  fns.forEach(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n    this._stack.push(fn)\n  }, this)\n}\n\n/**\n * Adds a single function after a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.after = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  pos = pos + 1\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Adds a single function before a function that already exists in the\n * pipeline.\n *\n * Logs a warning if the function has not been registered.\n *\n * @param {lunr.PipelineFunction} existingFn - A function that already exists in the pipeline.\n * @param {lunr.PipelineFunction} newFn - The new function to add to the pipeline.\n */\nlunr.Pipeline.prototype.before = function (existingFn, newFn) {\n  lunr.Pipeline.warnIfFunctionNotRegistered(newFn)\n\n  var pos = this._stack.indexOf(existingFn)\n  if (pos == -1) {\n    throw new Error('Cannot find existingFn')\n  }\n\n  this._stack.splice(pos, 0, newFn)\n}\n\n/**\n * Removes a function from the pipeline.\n *\n * @param {lunr.PipelineFunction} fn The function to remove from the pipeline.\n */\nlunr.Pipeline.prototype.remove = function (fn) {\n  var pos = this._stack.indexOf(fn)\n  if (pos == -1) {\n    return\n  }\n\n  this._stack.splice(pos, 1)\n}\n\n/**\n * Runs the current list of functions that make up the pipeline against the\n * passed tokens.\n *\n * @param {Array} tokens The tokens to run through the pipeline.\n * @returns {Array}\n */\nlunr.Pipeline.prototype.run = function (tokens) {\n  var stackLength = this._stack.length\n\n  for (var i = 0; i < stackLength; i++) {\n    var fn = this._stack[i]\n    var memo = []\n\n    for (var j = 0; j < tokens.length; j++) {\n      var result = fn(tokens[j], j, tokens)\n\n      if (result === null || result === void 0 || result === '') continue\n\n      if (Array.isArray(result)) {\n        for (var k = 0; k < result.length; k++) {\n          memo.push(result[k])\n        }\n      } else {\n        memo.push(result)\n      }\n    }\n\n    tokens = memo\n  }\n\n  return tokens\n}\n\n/**\n * Convenience method for passing a string through a pipeline and getting\n * strings out. This method takes care of wrapping the passed string in a\n * token and mapping the resulting tokens back to strings.\n *\n * @param {string} str - The string to pass through the pipeline.\n * @param {?object} metadata - Optional metadata to associate with the token\n * passed to the pipeline.\n * @returns {string[]}\n */\nlunr.Pipeline.prototype.runString = function (str, metadata) {\n  var token = new lunr.Token (str, metadata)\n\n  return this.run([token]).map(function (t) {\n    return t.toString()\n  })\n}\n\n/**\n * Resets the pipeline by removing any existing processors.\n *\n */\nlunr.Pipeline.prototype.reset = function () {\n  this._stack = []\n}\n\n/**\n * Returns a representation of the pipeline ready for serialisation.\n *\n * Logs a warning if the function has not been registered.\n *\n * @returns {Array}\n */\nlunr.Pipeline.prototype.toJSON = function () {\n  return this._stack.map(function (fn) {\n    lunr.Pipeline.warnIfFunctionNotRegistered(fn)\n\n    return fn.label\n  })\n}\n/*!\n * lunr.Vector\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A vector is used to construct the vector space of documents and queries. These\n * vectors support operations to determine the similarity between two documents or\n * a document and a query.\n *\n * Normally no parameters are required for initializing a vector, but in the case of\n * loading a previously dumped vector the raw elements can be provided to the constructor.\n *\n * For performance reasons vectors are implemented with a flat array, where an elements\n * index is immediately followed by its value. E.g. [index, value, index, value]. This\n * allows the underlying array to be as sparse as possible and still offer decent\n * performance when being used for vector calculations.\n *\n * @constructor\n * @param {Number[]} [elements] - The flat list of element index and element value pairs.\n */\nlunr.Vector = function (elements) {\n  this._magnitude = 0\n  this.elements = elements || []\n}\n\n\n/**\n * Calculates the position within the vector to insert a given index.\n *\n * This is used internally by insert and upsert. If there are duplicate indexes then\n * the position is returned as if the value for that index were to be updated, but it\n * is the callers responsibility to check whether there is a duplicate at that index\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @returns {Number}\n */\nlunr.Vector.prototype.positionForIndex = function (index) {\n  // For an empty vector the tuple can be inserted at the beginning\n  if (this.elements.length == 0) {\n    return 0\n  }\n\n  var start = 0,\n      end = this.elements.length / 2,\n      sliceLength = end - start,\n      pivotPoint = Math.floor(sliceLength / 2),\n      pivotIndex = this.elements[pivotPoint * 2]\n\n  while (sliceLength > 1) {\n    if (pivotIndex < index) {\n      start = pivotPoint\n    }\n\n    if (pivotIndex > index) {\n      end = pivotPoint\n    }\n\n    if (pivotIndex == index) {\n      break\n    }\n\n    sliceLength = end - start\n    pivotPoint = start + Math.floor(sliceLength / 2)\n    pivotIndex = this.elements[pivotPoint * 2]\n  }\n\n  if (pivotIndex == index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex > index) {\n    return pivotPoint * 2\n  }\n\n  if (pivotIndex < index) {\n    return (pivotPoint + 1) * 2\n  }\n}\n\n/**\n * Inserts an element at an index within the vector.\n *\n * Does not allow duplicates, will throw an error if there is already an entry\n * for this index.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n */\nlunr.Vector.prototype.insert = function (insertIdx, val) {\n  this.upsert(insertIdx, val, function () {\n    throw \"duplicate index\"\n  })\n}\n\n/**\n * Inserts or updates an existing index within the vector.\n *\n * @param {Number} insertIdx - The index at which the element should be inserted.\n * @param {Number} val - The value to be inserted into the vector.\n * @param {function} fn - A function that is called for updates, the existing value and the\n * requested value are passed as arguments\n */\nlunr.Vector.prototype.upsert = function (insertIdx, val, fn) {\n  this._magnitude = 0\n  var position = this.positionForIndex(insertIdx)\n\n  if (this.elements[position] == insertIdx) {\n    this.elements[position + 1] = fn(this.elements[position + 1], val)\n  } else {\n    this.elements.splice(position, 0, insertIdx, val)\n  }\n}\n\n/**\n * Calculates the magnitude of this vector.\n *\n * @returns {Number}\n */\nlunr.Vector.prototype.magnitude = function () {\n  if (this._magnitude) return this._magnitude\n\n  var sumOfSquares = 0,\n      elementsLength = this.elements.length\n\n  for (var i = 1; i < elementsLength; i += 2) {\n    var val = this.elements[i]\n    sumOfSquares += val * val\n  }\n\n  return this._magnitude = Math.sqrt(sumOfSquares)\n}\n\n/**\n * Calculates the dot product of this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The vector to compute the dot product with.\n * @returns {Number}\n */\nlunr.Vector.prototype.dot = function (otherVector) {\n  var dotProduct = 0,\n      a = this.elements, b = otherVector.elements,\n      aLen = a.length, bLen = b.length,\n      aVal = 0, bVal = 0,\n      i = 0, j = 0\n\n  while (i < aLen && j < bLen) {\n    aVal = a[i], bVal = b[j]\n    if (aVal < bVal) {\n      i += 2\n    } else if (aVal > bVal) {\n      j += 2\n    } else if (aVal == bVal) {\n      dotProduct += a[i + 1] * b[j + 1]\n      i += 2\n      j += 2\n    }\n  }\n\n  return dotProduct\n}\n\n/**\n * Calculates the similarity between this vector and another vector.\n *\n * @param {lunr.Vector} otherVector - The other vector to calculate the\n * similarity with.\n * @returns {Number}\n */\nlunr.Vector.prototype.similarity = function (otherVector) {\n  return this.dot(otherVector) / this.magnitude() || 0\n}\n\n/**\n * Converts the vector to an array of the elements within the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toArray = function () {\n  var output = new Array (this.elements.length / 2)\n\n  for (var i = 1, j = 0; i < this.elements.length; i += 2, j++) {\n    output[j] = this.elements[i]\n  }\n\n  return output\n}\n\n/**\n * A JSON serializable representation of the vector.\n *\n * @returns {Number[]}\n */\nlunr.Vector.prototype.toJSON = function () {\n  return this.elements\n}\n/* eslint-disable */\n/*!\n * lunr.stemmer\n * Copyright (C) 2020 Oliver Nightingale\n * Includes code from - http://tartarus.org/~martin/PorterStemmer/js.txt\n */\n\n/**\n * lunr.stemmer is an english language stemmer, this is a JavaScript\n * implementation of the PorterStemmer taken from http://tartarus.org/~martin\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token - The string to stem\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n * @function\n */\nlunr.stemmer = (function(){\n  var step2list = {\n      \"ational\" : \"ate\",\n      \"tional\" : \"tion\",\n      \"enci\" : \"ence\",\n      \"anci\" : \"ance\",\n      \"izer\" : \"ize\",\n      \"bli\" : \"ble\",\n      \"alli\" : \"al\",\n      \"entli\" : \"ent\",\n      \"eli\" : \"e\",\n      \"ousli\" : \"ous\",\n      \"ization\" : \"ize\",\n      \"ation\" : \"ate\",\n      \"ator\" : \"ate\",\n      \"alism\" : \"al\",\n      \"iveness\" : \"ive\",\n      \"fulness\" : \"ful\",\n      \"ousness\" : \"ous\",\n      \"aliti\" : \"al\",\n      \"iviti\" : \"ive\",\n      \"biliti\" : \"ble\",\n      \"logi\" : \"log\"\n    },\n\n    step3list = {\n      \"icate\" : \"ic\",\n      \"ative\" : \"\",\n      \"alize\" : \"al\",\n      \"iciti\" : \"ic\",\n      \"ical\" : \"ic\",\n      \"ful\" : \"\",\n      \"ness\" : \"\"\n    },\n\n    c = \"[^aeiou]\",          // consonant\n    v = \"[aeiouy]\",          // vowel\n    C = c + \"[^aeiouy]*\",    // consonant sequence\n    V = v + \"[aeiou]*\",      // vowel sequence\n\n    mgr0 = \"^(\" + C + \")?\" + V + C,               // [C]VC... is m>0\n    meq1 = \"^(\" + C + \")?\" + V + C + \"(\" + V + \")?$\",  // [C]VC[V] is m=1\n    mgr1 = \"^(\" + C + \")?\" + V + C + V + C,       // [C]VCVC... is m>1\n    s_v = \"^(\" + C + \")?\" + v;                   // vowel in stem\n\n  var re_mgr0 = new RegExp(mgr0);\n  var re_mgr1 = new RegExp(mgr1);\n  var re_meq1 = new RegExp(meq1);\n  var re_s_v = new RegExp(s_v);\n\n  var re_1a = /^(.+?)(ss|i)es$/;\n  var re2_1a = /^(.+?)([^s])s$/;\n  var re_1b = /^(.+?)eed$/;\n  var re2_1b = /^(.+?)(ed|ing)$/;\n  var re_1b_2 = /.$/;\n  var re2_1b_2 = /(at|bl|iz)$/;\n  var re3_1b_2 = new RegExp(\"([^aeiouylsz])\\\\1$\");\n  var re4_1b_2 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var re_1c = /^(.+?[^aeiou])y$/;\n  var re_2 = /^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/;\n\n  var re_3 = /^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/;\n\n  var re_4 = /^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/;\n  var re2_4 = /^(.+?)(s|t)(ion)$/;\n\n  var re_5 = /^(.+?)e$/;\n  var re_5_1 = /ll$/;\n  var re3_5 = new RegExp(\"^\" + C + v + \"[^aeiouwxy]$\");\n\n  var porterStemmer = function porterStemmer(w) {\n    var stem,\n      suffix,\n      firstch,\n      re,\n      re2,\n      re3,\n      re4;\n\n    if (w.length < 3) { return w; }\n\n    firstch = w.substr(0,1);\n    if (firstch == \"y\") {\n      w = firstch.toUpperCase() + w.substr(1);\n    }\n\n    // Step 1a\n    re = re_1a\n    re2 = re2_1a;\n\n    if (re.test(w)) { w = w.replace(re,\"$1$2\"); }\n    else if (re2.test(w)) { w = w.replace(re2,\"$1$2\"); }\n\n    // Step 1b\n    re = re_1b;\n    re2 = re2_1b;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      re = re_mgr0;\n      if (re.test(fp[1])) {\n        re = re_1b_2;\n        w = w.replace(re,\"\");\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1];\n      re2 = re_s_v;\n      if (re2.test(stem)) {\n        w = stem;\n        re2 = re2_1b_2;\n        re3 = re3_1b_2;\n        re4 = re4_1b_2;\n        if (re2.test(w)) { w = w + \"e\"; }\n        else if (re3.test(w)) { re = re_1b_2; w = w.replace(re,\"\"); }\n        else if (re4.test(w)) { w = w + \"e\"; }\n      }\n    }\n\n    // Step 1c - replace suffix y or Y by i if preceded by a non-vowel which is not the first letter of the word (so cry -> cri, by -> by, say -> say)\n    re = re_1c;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      w = stem + \"i\";\n    }\n\n    // Step 2\n    re = re_2;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step2list[suffix];\n      }\n    }\n\n    // Step 3\n    re = re_3;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      suffix = fp[2];\n      re = re_mgr0;\n      if (re.test(stem)) {\n        w = stem + step3list[suffix];\n      }\n    }\n\n    // Step 4\n    re = re_4;\n    re2 = re2_4;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      if (re.test(stem)) {\n        w = stem;\n      }\n    } else if (re2.test(w)) {\n      var fp = re2.exec(w);\n      stem = fp[1] + fp[2];\n      re2 = re_mgr1;\n      if (re2.test(stem)) {\n        w = stem;\n      }\n    }\n\n    // Step 5\n    re = re_5;\n    if (re.test(w)) {\n      var fp = re.exec(w);\n      stem = fp[1];\n      re = re_mgr1;\n      re2 = re_meq1;\n      re3 = re3_5;\n      if (re.test(stem) || (re2.test(stem) && !(re3.test(stem)))) {\n        w = stem;\n      }\n    }\n\n    re = re_5_1;\n    re2 = re_mgr1;\n    if (re.test(w) && re2.test(w)) {\n      re = re_1b_2;\n      w = w.replace(re,\"\");\n    }\n\n    // and turn initial Y back to y\n\n    if (firstch == \"y\") {\n      w = firstch.toLowerCase() + w.substr(1);\n    }\n\n    return w;\n  };\n\n  return function (token) {\n    return token.update(porterStemmer);\n  }\n})();\n\nlunr.Pipeline.registerFunction(lunr.stemmer, 'stemmer')\n/*!\n * lunr.stopWordFilter\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.generateStopWordFilter builds a stopWordFilter function from the provided\n * list of stop words.\n *\n * The built in lunr.stopWordFilter is built using this generator and can be used\n * to generate custom stopWordFilters for applications or non English languages.\n *\n * @function\n * @param {Array} token The token to pass through the filter\n * @returns {lunr.PipelineFunction}\n * @see lunr.Pipeline\n * @see lunr.stopWordFilter\n */\nlunr.generateStopWordFilter = function (stopWords) {\n  var words = stopWords.reduce(function (memo, stopWord) {\n    memo[stopWord] = stopWord\n    return memo\n  }, {})\n\n  return function (token) {\n    if (token && words[token.toString()] !== token.toString()) return token\n  }\n}\n\n/**\n * lunr.stopWordFilter is an English language stop word list filter, any words\n * contained in the list will not be passed through the filter.\n *\n * This is intended to be used in the Pipeline. If the token does not pass the\n * filter then undefined will be returned.\n *\n * @function\n * @implements {lunr.PipelineFunction}\n * @params {lunr.Token} token - A token to check for being a stop word.\n * @returns {lunr.Token}\n * @see {@link lunr.Pipeline}\n */\nlunr.stopWordFilter = lunr.generateStopWordFilter([\n  'a',\n  'able',\n  'about',\n  'across',\n  'after',\n  'all',\n  'almost',\n  'also',\n  'am',\n  'among',\n  'an',\n  'and',\n  'any',\n  'are',\n  'as',\n  'at',\n  'be',\n  'because',\n  'been',\n  'but',\n  'by',\n  'can',\n  'cannot',\n  'could',\n  'dear',\n  'did',\n  'do',\n  'does',\n  'either',\n  'else',\n  'ever',\n  'every',\n  'for',\n  'from',\n  'get',\n  'got',\n  'had',\n  'has',\n  'have',\n  'he',\n  'her',\n  'hers',\n  'him',\n  'his',\n  'how',\n  'however',\n  'i',\n  'if',\n  'in',\n  'into',\n  'is',\n  'it',\n  'its',\n  'just',\n  'least',\n  'let',\n  'like',\n  'likely',\n  'may',\n  'me',\n  'might',\n  'most',\n  'must',\n  'my',\n  'neither',\n  'no',\n  'nor',\n  'not',\n  'of',\n  'off',\n  'often',\n  'on',\n  'only',\n  'or',\n  'other',\n  'our',\n  'own',\n  'rather',\n  'said',\n  'say',\n  'says',\n  'she',\n  'should',\n  'since',\n  'so',\n  'some',\n  'than',\n  'that',\n  'the',\n  'their',\n  'them',\n  'then',\n  'there',\n  'these',\n  'they',\n  'this',\n  'tis',\n  'to',\n  'too',\n  'twas',\n  'us',\n  'wants',\n  'was',\n  'we',\n  'were',\n  'what',\n  'when',\n  'where',\n  'which',\n  'while',\n  'who',\n  'whom',\n  'why',\n  'will',\n  'with',\n  'would',\n  'yet',\n  'you',\n  'your'\n])\n\nlunr.Pipeline.registerFunction(lunr.stopWordFilter, 'stopWordFilter')\n/*!\n * lunr.trimmer\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.trimmer is a pipeline function for trimming non word\n * characters from the beginning and end of tokens before they\n * enter the index.\n *\n * This implementation may not work correctly for non latin\n * characters and should either be removed or adapted for use\n * with languages with non-latin characters.\n *\n * @static\n * @implements {lunr.PipelineFunction}\n * @param {lunr.Token} token The token to pass through the filter\n * @returns {lunr.Token}\n * @see lunr.Pipeline\n */\nlunr.trimmer = function (token) {\n  return token.update(function (s) {\n    return s.replace(/^\\W+/, '').replace(/\\W+$/, '')\n  })\n}\n\nlunr.Pipeline.registerFunction(lunr.trimmer, 'trimmer')\n/*!\n * lunr.TokenSet\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * A token set is used to store the unique list of all tokens\n * within an index. Token sets are also used to represent an\n * incoming query to the index, this query token set and index\n * token set are then intersected to find which tokens to look\n * up in the inverted index.\n *\n * A token set can hold multiple tokens, as in the case of the\n * index token set, or it can hold a single token as in the\n * case of a simple query token set.\n *\n * Additionally token sets are used to perform wildcard matching.\n * Leading, contained and trailing wildcards are supported, and\n * from this edit distance matching can also be provided.\n *\n * Token sets are implemented as a minimal finite state automata,\n * where both common prefixes and suffixes are shared between tokens.\n * This helps to reduce the space used for storing the token set.\n *\n * @constructor\n */\nlunr.TokenSet = function () {\n  this.final = false\n  this.edges = {}\n  this.id = lunr.TokenSet._nextId\n  lunr.TokenSet._nextId += 1\n}\n\n/**\n * Keeps track of the next, auto increment, identifier to assign\n * to a new tokenSet.\n *\n * TokenSets require a unique identifier to be correctly minimised.\n *\n * @private\n */\nlunr.TokenSet._nextId = 1\n\n/**\n * Creates a TokenSet instance from the given sorted array of words.\n *\n * @param {String[]} arr - A sorted array of strings to create the set from.\n * @returns {lunr.TokenSet}\n * @throws Will throw an error if the input array is not sorted.\n */\nlunr.TokenSet.fromArray = function (arr) {\n  var builder = new lunr.TokenSet.Builder\n\n  for (var i = 0, len = arr.length; i < len; i++) {\n    builder.insert(arr[i])\n  }\n\n  builder.finish()\n  return builder.root\n}\n\n/**\n * Creates a token set from a query clause.\n *\n * @private\n * @param {Object} clause - A single clause from lunr.Query.\n * @param {string} clause.term - The query clause term.\n * @param {number} [clause.editDistance] - The optional edit distance for the term.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromClause = function (clause) {\n  if ('editDistance' in clause) {\n    return lunr.TokenSet.fromFuzzyString(clause.term, clause.editDistance)\n  } else {\n    return lunr.TokenSet.fromString(clause.term)\n  }\n}\n\n/**\n * Creates a token set representing a single string with a specified\n * edit distance.\n *\n * Insertions, deletions, substitutions and transpositions are each\n * treated as an edit distance of 1.\n *\n * Increasing the allowed edit distance will have a dramatic impact\n * on the performance of both creating and intersecting these TokenSets.\n * It is advised to keep the edit distance less than 3.\n *\n * @param {string} str - The string to create the token set from.\n * @param {number} editDistance - The allowed edit distance to match.\n * @returns {lunr.Vector}\n */\nlunr.TokenSet.fromFuzzyString = function (str, editDistance) {\n  var root = new lunr.TokenSet\n\n  var stack = [{\n    node: root,\n    editsRemaining: editDistance,\n    str: str\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop()\n\n    // no edit\n    if (frame.str.length > 0) {\n      var char = frame.str.charAt(0),\n          noEditNode\n\n      if (char in frame.node.edges) {\n        noEditNode = frame.node.edges[char]\n      } else {\n        noEditNode = new lunr.TokenSet\n        frame.node.edges[char] = noEditNode\n      }\n\n      if (frame.str.length == 1) {\n        noEditNode.final = true\n      }\n\n      stack.push({\n        node: noEditNode,\n        editsRemaining: frame.editsRemaining,\n        str: frame.str.slice(1)\n      })\n    }\n\n    if (frame.editsRemaining == 0) {\n      continue\n    }\n\n    // insertion\n    if (\"*\" in frame.node.edges) {\n      var insertionNode = frame.node.edges[\"*\"]\n    } else {\n      var insertionNode = new lunr.TokenSet\n      frame.node.edges[\"*\"] = insertionNode\n    }\n\n    if (frame.str.length == 0) {\n      insertionNode.final = true\n    }\n\n    stack.push({\n      node: insertionNode,\n      editsRemaining: frame.editsRemaining - 1,\n      str: frame.str\n    })\n\n    // deletion\n    // can only do a deletion if we have enough edits remaining\n    // and if there are characters left to delete in the string\n    if (frame.str.length > 1) {\n      stack.push({\n        node: frame.node,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // deletion\n    // just removing the last character from the str\n    if (frame.str.length == 1) {\n      frame.node.final = true\n    }\n\n    // substitution\n    // can only do a substitution if we have enough edits remaining\n    // and if there are characters left to substitute\n    if (frame.str.length >= 1) {\n      if (\"*\" in frame.node.edges) {\n        var substitutionNode = frame.node.edges[\"*\"]\n      } else {\n        var substitutionNode = new lunr.TokenSet\n        frame.node.edges[\"*\"] = substitutionNode\n      }\n\n      if (frame.str.length == 1) {\n        substitutionNode.final = true\n      }\n\n      stack.push({\n        node: substitutionNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: frame.str.slice(1)\n      })\n    }\n\n    // transposition\n    // can only do a transposition if there are edits remaining\n    // and there are enough characters to transpose\n    if (frame.str.length > 1) {\n      var charA = frame.str.charAt(0),\n          charB = frame.str.charAt(1),\n          transposeNode\n\n      if (charB in frame.node.edges) {\n        transposeNode = frame.node.edges[charB]\n      } else {\n        transposeNode = new lunr.TokenSet\n        frame.node.edges[charB] = transposeNode\n      }\n\n      if (frame.str.length == 1) {\n        transposeNode.final = true\n      }\n\n      stack.push({\n        node: transposeNode,\n        editsRemaining: frame.editsRemaining - 1,\n        str: charA + frame.str.slice(2)\n      })\n    }\n  }\n\n  return root\n}\n\n/**\n * Creates a TokenSet from a string.\n *\n * The string may contain one or more wildcard characters (*)\n * that will allow wildcard matching when intersecting with\n * another TokenSet.\n *\n * @param {string} str - The string to create a TokenSet from.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.fromString = function (str) {\n  var node = new lunr.TokenSet,\n      root = node\n\n  /*\n   * Iterates through all characters within the passed string\n   * appending a node for each character.\n   *\n   * When a wildcard character is found then a self\n   * referencing edge is introduced to continually match\n   * any number of any characters.\n   */\n  for (var i = 0, len = str.length; i < len; i++) {\n    var char = str[i],\n        final = (i == len - 1)\n\n    if (char == \"*\") {\n      node.edges[char] = node\n      node.final = final\n\n    } else {\n      var next = new lunr.TokenSet\n      next.final = final\n\n      node.edges[char] = next\n      node = next\n    }\n  }\n\n  return root\n}\n\n/**\n * Converts this TokenSet into an array of strings\n * contained within the TokenSet.\n *\n * This is not intended to be used on a TokenSet that\n * contains wildcards, in these cases the results are\n * undefined and are likely to cause an infinite loop.\n *\n * @returns {string[]}\n */\nlunr.TokenSet.prototype.toArray = function () {\n  var words = []\n\n  var stack = [{\n    prefix: \"\",\n    node: this\n  }]\n\n  while (stack.length) {\n    var frame = stack.pop(),\n        edges = Object.keys(frame.node.edges),\n        len = edges.length\n\n    if (frame.node.final) {\n      /* In Safari, at this point the prefix is sometimes corrupted, see:\n       * https://github.com/olivernn/lunr.js/issues/279 Calling any\n       * String.prototype method forces Safari to \"cast\" this string to what\n       * it's supposed to be, fixing the bug. */\n      frame.prefix.charAt(0)\n      words.push(frame.prefix)\n    }\n\n    for (var i = 0; i < len; i++) {\n      var edge = edges[i]\n\n      stack.push({\n        prefix: frame.prefix.concat(edge),\n        node: frame.node.edges[edge]\n      })\n    }\n  }\n\n  return words\n}\n\n/**\n * Generates a string representation of a TokenSet.\n *\n * This is intended to allow TokenSets to be used as keys\n * in objects, largely to aid the construction and minimisation\n * of a TokenSet. As such it is not designed to be a human\n * friendly representation of the TokenSet.\n *\n * @returns {string}\n */\nlunr.TokenSet.prototype.toString = function () {\n  // NOTE: Using Object.keys here as this.edges is very likely\n  // to enter 'hash-mode' with many keys being added\n  //\n  // avoiding a for-in loop here as it leads to the function\n  // being de-optimised (at least in V8). From some simple\n  // benchmarks the performance is comparable, but allowing\n  // V8 to optimize may mean easy performance wins in the future.\n\n  if (this._str) {\n    return this._str\n  }\n\n  var str = this.final ? '1' : '0',\n      labels = Object.keys(this.edges).sort(),\n      len = labels.length\n\n  for (var i = 0; i < len; i++) {\n    var label = labels[i],\n        node = this.edges[label]\n\n    str = str + label + node.id\n  }\n\n  return str\n}\n\n/**\n * Returns a new TokenSet that is the intersection of\n * this TokenSet and the passed TokenSet.\n *\n * This intersection will take into account any wildcards\n * contained within the TokenSet.\n *\n * @param {lunr.TokenSet} b - An other TokenSet to intersect with.\n * @returns {lunr.TokenSet}\n */\nlunr.TokenSet.prototype.intersect = function (b) {\n  var output = new lunr.TokenSet,\n      frame = undefined\n\n  var stack = [{\n    qNode: b,\n    output: output,\n    node: this\n  }]\n\n  while (stack.length) {\n    frame = stack.pop()\n\n    // NOTE: As with the #toString method, we are using\n    // Object.keys and a for loop instead of a for-in loop\n    // as both of these objects enter 'hash' mode, causing\n    // the function to be de-optimised in V8\n    var qEdges = Object.keys(frame.qNode.edges),\n        qLen = qEdges.length,\n        nEdges = Object.keys(frame.node.edges),\n        nLen = nEdges.length\n\n    for (var q = 0; q < qLen; q++) {\n      var qEdge = qEdges[q]\n\n      for (var n = 0; n < nLen; n++) {\n        var nEdge = nEdges[n]\n\n        if (nEdge == qEdge || qEdge == '*') {\n          var node = frame.node.edges[nEdge],\n              qNode = frame.qNode.edges[qEdge],\n              final = node.final && qNode.final,\n              next = undefined\n\n          if (nEdge in frame.output.edges) {\n            // an edge already exists for this character\n            // no need to create a new node, just set the finality\n            // bit unless this node is already final\n            next = frame.output.edges[nEdge]\n            next.final = next.final || final\n\n          } else {\n            // no edge exists yet, must create one\n            // set the finality bit and insert it\n            // into the output\n            next = new lunr.TokenSet\n            next.final = final\n            frame.output.edges[nEdge] = next\n          }\n\n          stack.push({\n            qNode: qNode,\n            output: next,\n            node: node\n          })\n        }\n      }\n    }\n  }\n\n  return output\n}\nlunr.TokenSet.Builder = function () {\n  this.previousWord = \"\"\n  this.root = new lunr.TokenSet\n  this.uncheckedNodes = []\n  this.minimizedNodes = {}\n}\n\nlunr.TokenSet.Builder.prototype.insert = function (word) {\n  var node,\n      commonPrefix = 0\n\n  if (word < this.previousWord) {\n    throw new Error (\"Out of order word insertion\")\n  }\n\n  for (var i = 0; i < word.length && i < this.previousWord.length; i++) {\n    if (word[i] != this.previousWord[i]) break\n    commonPrefix++\n  }\n\n  this.minimize(commonPrefix)\n\n  if (this.uncheckedNodes.length == 0) {\n    node = this.root\n  } else {\n    node = this.uncheckedNodes[this.uncheckedNodes.length - 1].child\n  }\n\n  for (var i = commonPrefix; i < word.length; i++) {\n    var nextNode = new lunr.TokenSet,\n        char = word[i]\n\n    node.edges[char] = nextNode\n\n    this.uncheckedNodes.push({\n      parent: node,\n      char: char,\n      child: nextNode\n    })\n\n    node = nextNode\n  }\n\n  node.final = true\n  this.previousWord = word\n}\n\nlunr.TokenSet.Builder.prototype.finish = function () {\n  this.minimize(0)\n}\n\nlunr.TokenSet.Builder.prototype.minimize = function (downTo) {\n  for (var i = this.uncheckedNodes.length - 1; i >= downTo; i--) {\n    var node = this.uncheckedNodes[i],\n        childKey = node.child.toString()\n\n    if (childKey in this.minimizedNodes) {\n      node.parent.edges[node.char] = this.minimizedNodes[childKey]\n    } else {\n      // Cache the key for this node since\n      // we know it can't change anymore\n      node.child._str = childKey\n\n      this.minimizedNodes[childKey] = node.child\n    }\n\n    this.uncheckedNodes.pop()\n  }\n}\n/*!\n * lunr.Index\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * An index contains the built index of all documents and provides a query interface\n * to the index.\n *\n * Usually instances of lunr.Index will not be created using this constructor, instead\n * lunr.Builder should be used to construct new indexes, or lunr.Index.load should be\n * used to load previously built and serialized indexes.\n *\n * @constructor\n * @param {Object} attrs - The attributes of the built search index.\n * @param {Object} attrs.invertedIndex - An index of term/field to document reference.\n * @param {Object<string, lunr.Vector>} attrs.fieldVectors - Field vectors\n * @param {lunr.TokenSet} attrs.tokenSet - An set of all corpus tokens.\n * @param {string[]} attrs.fields - The names of indexed document fields.\n * @param {lunr.Pipeline} attrs.pipeline - The pipeline to use for search terms.\n */\nlunr.Index = function (attrs) {\n  this.invertedIndex = attrs.invertedIndex\n  this.fieldVectors = attrs.fieldVectors\n  this.tokenSet = attrs.tokenSet\n  this.fields = attrs.fields\n  this.pipeline = attrs.pipeline\n}\n\n/**\n * A result contains details of a document matching a search query.\n * @typedef {Object} lunr.Index~Result\n * @property {string} ref - The reference of the document this result represents.\n * @property {number} score - A number between 0 and 1 representing how similar this document is to the query.\n * @property {lunr.MatchData} matchData - Contains metadata about this match including which term(s) caused the match.\n */\n\n/**\n * Although lunr provides the ability to create queries using lunr.Query, it also provides a simple\n * query language which itself is parsed into an instance of lunr.Query.\n *\n * For programmatically building queries it is advised to directly use lunr.Query, the query language\n * is best used for human entered text rather than program generated text.\n *\n * At its simplest queries can just be a single term, e.g. `hello`, multiple terms are also supported\n * and will be combined with OR, e.g `hello world` will match documents that contain either 'hello'\n * or 'world', though those that contain both will rank higher in the results.\n *\n * Wildcards can be included in terms to match one or more unspecified characters, these wildcards can\n * be inserted anywhere within the term, and more than one wildcard can exist in a single term. Adding\n * wildcards will increase the number of documents that will be found but can also have a negative\n * impact on query performance, especially with wildcards at the beginning of a term.\n *\n * Terms can be restricted to specific fields, e.g. `title:hello`, only documents with the term\n * hello in the title field will match this query. Using a field not present in the index will lead\n * to an error being thrown.\n *\n * Modifiers can also be added to terms, lunr supports edit distance and boost modifiers on terms. A term\n * boost will make documents matching that term score higher, e.g. `foo^5`. Edit distance is also supported\n * to provide fuzzy matching, e.g. 'hello~2' will match documents with hello with an edit distance of 2.\n * Avoid large values for edit distance to improve query performance.\n *\n * Each term also supports a presence modifier. By default a term's presence in document is optional, however\n * this can be changed to either required or prohibited. For a term's presence to be required in a document the\n * term should be prefixed with a '+', e.g. `+foo bar` is a search for documents that must contain 'foo' and\n * optionally contain 'bar'. Conversely a leading '-' sets the terms presence to prohibited, i.e. it must not\n * appear in a document, e.g. `-foo bar` is a search for documents that do not contain 'foo' but may contain 'bar'.\n *\n * To escape special characters the backslash character '\\' can be used, this allows searches to include\n * characters that would normally be considered modifiers, e.g. `foo\\~2` will search for a term \"foo~2\" instead\n * of attempting to apply a boost of 2 to the search term \"foo\".\n *\n * @typedef {string} lunr.Index~QueryString\n * @example <caption>Simple single term query</caption>\n * hello\n * @example <caption>Multiple term query</caption>\n * hello world\n * @example <caption>term scoped to a field</caption>\n * title:hello\n * @example <caption>term with a boost of 10</caption>\n * hello^10\n * @example <caption>term with an edit distance of 2</caption>\n * hello~2\n * @example <caption>terms with presence modifiers</caption>\n * -foo +bar baz\n */\n\n/**\n * Performs a search against the index using lunr query syntax.\n *\n * Results will be returned sorted by their score, the most relevant results\n * will be returned first.  For details on how the score is calculated, please see\n * the {@link https://lunrjs.com/guides/searching.html#scoring|guide}.\n *\n * For more programmatic querying use lunr.Index#query.\n *\n * @param {lunr.Index~QueryString} queryString - A string containing a lunr query.\n * @throws {lunr.QueryParseError} If the passed query string cannot be parsed.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.search = function (queryString) {\n  return this.query(function (query) {\n    var parser = new lunr.QueryParser(queryString, query)\n    parser.parse()\n  })\n}\n\n/**\n * A query builder callback provides a query object to be used to express\n * the query to perform on the index.\n *\n * @callback lunr.Index~queryBuilder\n * @param {lunr.Query} query - The query object to build up.\n * @this lunr.Query\n */\n\n/**\n * Performs a query against the index using the yielded lunr.Query object.\n *\n * If performing programmatic queries against the index, this method is preferred\n * over lunr.Index#search so as to avoid the additional query parsing overhead.\n *\n * A query object is yielded to the supplied function which should be used to\n * express the query to be run against the index.\n *\n * Note that although this function takes a callback parameter it is _not_ an\n * asynchronous operation, the callback is just yielded a query object to be\n * customized.\n *\n * @param {lunr.Index~queryBuilder} fn - A function that is used to build the query.\n * @returns {lunr.Index~Result[]}\n */\nlunr.Index.prototype.query = function (fn) {\n  // for each query clause\n  // * process terms\n  // * expand terms from token set\n  // * find matching documents and metadata\n  // * get document vectors\n  // * score documents\n\n  var query = new lunr.Query(this.fields),\n      matchingFields = Object.create(null),\n      queryVectors = Object.create(null),\n      termFieldCache = Object.create(null),\n      requiredMatches = Object.create(null),\n      prohibitedMatches = Object.create(null)\n\n  /*\n   * To support field level boosts a query vector is created per\n   * field. An empty vector is eagerly created to support negated\n   * queries.\n   */\n  for (var i = 0; i < this.fields.length; i++) {\n    queryVectors[this.fields[i]] = new lunr.Vector\n  }\n\n  fn.call(query, query)\n\n  for (var i = 0; i < query.clauses.length; i++) {\n    /*\n     * Unless the pipeline has been disabled for this term, which is\n     * the case for terms with wildcards, we need to pass the clause\n     * term through the search pipeline. A pipeline returns an array\n     * of processed terms. Pipeline functions may expand the passed\n     * term, which means we may end up performing multiple index lookups\n     * for a single query term.\n     */\n    var clause = query.clauses[i],\n        terms = null,\n        clauseMatches = lunr.Set.empty\n\n    if (clause.usePipeline) {\n      terms = this.pipeline.runString(clause.term, {\n        fields: clause.fields\n      })\n    } else {\n      terms = [clause.term]\n    }\n\n    for (var m = 0; m < terms.length; m++) {\n      var term = terms[m]\n\n      /*\n       * Each term returned from the pipeline needs to use the same query\n       * clause object, e.g. the same boost and or edit distance. The\n       * simplest way to do this is to re-use the clause object but mutate\n       * its term property.\n       */\n      clause.term = term\n\n      /*\n       * From the term in the clause we create a token set which will then\n       * be used to intersect the indexes token set to get a list of terms\n       * to lookup in the inverted index\n       */\n      var termTokenSet = lunr.TokenSet.fromClause(clause),\n          expandedTerms = this.tokenSet.intersect(termTokenSet).toArray()\n\n      /*\n       * If a term marked as required does not exist in the tokenSet it is\n       * impossible for the search to return any matches. We set all the field\n       * scoped required matches set to empty and stop examining any further\n       * clauses.\n       */\n      if (expandedTerms.length === 0 && clause.presence === lunr.Query.presence.REQUIRED) {\n        for (var k = 0; k < clause.fields.length; k++) {\n          var field = clause.fields[k]\n          requiredMatches[field] = lunr.Set.empty\n        }\n\n        break\n      }\n\n      for (var j = 0; j < expandedTerms.length; j++) {\n        /*\n         * For each term get the posting and termIndex, this is required for\n         * building the query vector.\n         */\n        var expandedTerm = expandedTerms[j],\n            posting = this.invertedIndex[expandedTerm],\n            termIndex = posting._index\n\n        for (var k = 0; k < clause.fields.length; k++) {\n          /*\n           * For each field that this query term is scoped by (by default\n           * all fields are in scope) we need to get all the document refs\n           * that have this term in that field.\n           *\n           * The posting is the entry in the invertedIndex for the matching\n           * term from above.\n           */\n          var field = clause.fields[k],\n              fieldPosting = posting[field],\n              matchingDocumentRefs = Object.keys(fieldPosting),\n              termField = expandedTerm + \"/\" + field,\n              matchingDocumentsSet = new lunr.Set(matchingDocumentRefs)\n\n          /*\n           * if the presence of this term is required ensure that the matching\n           * documents are added to the set of required matches for this clause.\n           *\n           */\n          if (clause.presence == lunr.Query.presence.REQUIRED) {\n            clauseMatches = clauseMatches.union(matchingDocumentsSet)\n\n            if (requiredMatches[field] === undefined) {\n              requiredMatches[field] = lunr.Set.complete\n            }\n          }\n\n          /*\n           * if the presence of this term is prohibited ensure that the matching\n           * documents are added to the set of prohibited matches for this field,\n           * creating that set if it does not yet exist.\n           */\n          if (clause.presence == lunr.Query.presence.PROHIBITED) {\n            if (prohibitedMatches[field] === undefined) {\n              prohibitedMatches[field] = lunr.Set.empty\n            }\n\n            prohibitedMatches[field] = prohibitedMatches[field].union(matchingDocumentsSet)\n\n            /*\n             * Prohibited matches should not be part of the query vector used for\n             * similarity scoring and no metadata should be extracted so we continue\n             * to the next field\n             */\n            continue\n          }\n\n          /*\n           * The query field vector is populated using the termIndex found for\n           * the term and a unit value with the appropriate boost applied.\n           * Using upsert because there could already be an entry in the vector\n           * for the term we are working with. In that case we just add the scores\n           * together.\n           */\n          queryVectors[field].upsert(termIndex, clause.boost, function (a, b) { return a + b })\n\n          /**\n           * If we've already seen this term, field combo then we've already collected\n           * the matching documents and metadata, no need to go through all that again\n           */\n          if (termFieldCache[termField]) {\n            continue\n          }\n\n          for (var l = 0; l < matchingDocumentRefs.length; l++) {\n            /*\n             * All metadata for this term/field/document triple\n             * are then extracted and collected into an instance\n             * of lunr.MatchData ready to be returned in the query\n             * results\n             */\n            var matchingDocumentRef = matchingDocumentRefs[l],\n                matchingFieldRef = new lunr.FieldRef (matchingDocumentRef, field),\n                metadata = fieldPosting[matchingDocumentRef],\n                fieldMatch\n\n            if ((fieldMatch = matchingFields[matchingFieldRef]) === undefined) {\n              matchingFields[matchingFieldRef] = new lunr.MatchData (expandedTerm, field, metadata)\n            } else {\n              fieldMatch.add(expandedTerm, field, metadata)\n            }\n\n          }\n\n          termFieldCache[termField] = true\n        }\n      }\n    }\n\n    /**\n     * If the presence was required we need to update the requiredMatches field sets.\n     * We do this after all fields for the term have collected their matches because\n     * the clause terms presence is required in _any_ of the fields not _all_ of the\n     * fields.\n     */\n    if (clause.presence === lunr.Query.presence.REQUIRED) {\n      for (var k = 0; k < clause.fields.length; k++) {\n        var field = clause.fields[k]\n        requiredMatches[field] = requiredMatches[field].intersect(clauseMatches)\n      }\n    }\n  }\n\n  /**\n   * Need to combine the field scoped required and prohibited\n   * matching documents into a global set of required and prohibited\n   * matches\n   */\n  var allRequiredMatches = lunr.Set.complete,\n      allProhibitedMatches = lunr.Set.empty\n\n  for (var i = 0; i < this.fields.length; i++) {\n    var field = this.fields[i]\n\n    if (requiredMatches[field]) {\n      allRequiredMatches = allRequiredMatches.intersect(requiredMatches[field])\n    }\n\n    if (prohibitedMatches[field]) {\n      allProhibitedMatches = allProhibitedMatches.union(prohibitedMatches[field])\n    }\n  }\n\n  var matchingFieldRefs = Object.keys(matchingFields),\n      results = [],\n      matches = Object.create(null)\n\n  /*\n   * If the query is negated (contains only prohibited terms)\n   * we need to get _all_ fieldRefs currently existing in the\n   * index. This is only done when we know that the query is\n   * entirely prohibited terms to avoid any cost of getting all\n   * fieldRefs unnecessarily.\n   *\n   * Additionally, blank MatchData must be created to correctly\n   * populate the results.\n   */\n  if (query.isNegated()) {\n    matchingFieldRefs = Object.keys(this.fieldVectors)\n\n    for (var i = 0; i < matchingFieldRefs.length; i++) {\n      var matchingFieldRef = matchingFieldRefs[i]\n      var fieldRef = lunr.FieldRef.fromString(matchingFieldRef)\n      matchingFields[matchingFieldRef] = new lunr.MatchData\n    }\n  }\n\n  for (var i = 0; i < matchingFieldRefs.length; i++) {\n    /*\n     * Currently we have document fields that match the query, but we\n     * need to return documents. The matchData and scores are combined\n     * from multiple fields belonging to the same document.\n     *\n     * Scores are calculated by field, using the query vectors created\n     * above, and combined into a final document score using addition.\n     */\n    var fieldRef = lunr.FieldRef.fromString(matchingFieldRefs[i]),\n        docRef = fieldRef.docRef\n\n    if (!allRequiredMatches.contains(docRef)) {\n      continue\n    }\n\n    if (allProhibitedMatches.contains(docRef)) {\n      continue\n    }\n\n    var fieldVector = this.fieldVectors[fieldRef],\n        score = queryVectors[fieldRef.fieldName].similarity(fieldVector),\n        docMatch\n\n    if ((docMatch = matches[docRef]) !== undefined) {\n      docMatch.score += score\n      docMatch.matchData.combine(matchingFields[fieldRef])\n    } else {\n      var match = {\n        ref: docRef,\n        score: score,\n        matchData: matchingFields[fieldRef]\n      }\n      matches[docRef] = match\n      results.push(match)\n    }\n  }\n\n  /*\n   * Sort the results objects by score, highest first.\n   */\n  return results.sort(function (a, b) {\n    return b.score - a.score\n  })\n}\n\n/**\n * Prepares the index for JSON serialization.\n *\n * The schema for this JSON blob will be described in a\n * separate JSON schema file.\n *\n * @returns {Object}\n */\nlunr.Index.prototype.toJSON = function () {\n  var invertedIndex = Object.keys(this.invertedIndex)\n    .sort()\n    .map(function (term) {\n      return [term, this.invertedIndex[term]]\n    }, this)\n\n  var fieldVectors = Object.keys(this.fieldVectors)\n    .map(function (ref) {\n      return [ref, this.fieldVectors[ref].toJSON()]\n    }, this)\n\n  return {\n    version: lunr.version,\n    fields: this.fields,\n    fieldVectors: fieldVectors,\n    invertedIndex: invertedIndex,\n    pipeline: this.pipeline.toJSON()\n  }\n}\n\n/**\n * Loads a previously serialized lunr.Index\n *\n * @param {Object} serializedIndex - A previously serialized lunr.Index\n * @returns {lunr.Index}\n */\nlunr.Index.load = function (serializedIndex) {\n  var attrs = {},\n      fieldVectors = {},\n      serializedVectors = serializedIndex.fieldVectors,\n      invertedIndex = Object.create(null),\n      serializedInvertedIndex = serializedIndex.invertedIndex,\n      tokenSetBuilder = new lunr.TokenSet.Builder,\n      pipeline = lunr.Pipeline.load(serializedIndex.pipeline)\n\n  if (serializedIndex.version != lunr.version) {\n    lunr.utils.warn(\"Version mismatch when loading serialised index. Current version of lunr '\" + lunr.version + \"' does not match serialized index '\" + serializedIndex.version + \"'\")\n  }\n\n  for (var i = 0; i < serializedVectors.length; i++) {\n    var tuple = serializedVectors[i],\n        ref = tuple[0],\n        elements = tuple[1]\n\n    fieldVectors[ref] = new lunr.Vector(elements)\n  }\n\n  for (var i = 0; i < serializedInvertedIndex.length; i++) {\n    var tuple = serializedInvertedIndex[i],\n        term = tuple[0],\n        posting = tuple[1]\n\n    tokenSetBuilder.insert(term)\n    invertedIndex[term] = posting\n  }\n\n  tokenSetBuilder.finish()\n\n  attrs.fields = serializedIndex.fields\n\n  attrs.fieldVectors = fieldVectors\n  attrs.invertedIndex = invertedIndex\n  attrs.tokenSet = tokenSetBuilder.root\n  attrs.pipeline = pipeline\n\n  return new lunr.Index(attrs)\n}\n/*!\n * lunr.Builder\n * Copyright (C) 2020 Oliver Nightingale\n */\n\n/**\n * lunr.Builder performs indexing on a set of documents and\n * returns instances of lunr.Index ready for querying.\n *\n * All configuration of the index is done via the builder, the\n * fields to index, the document reference, the text processing\n * pipeline and document scoring parameters are all set on the\n * builder before indexing.\n *\n * @constructor\n * @property {string} _ref - Internal reference to the document reference field.\n * @property {string[]} _fields - Internal reference to the document fields to index.\n * @property {object} invertedIndex - The inverted index maps terms to document fields.\n * @property {object} documentTermFrequencies - Keeps track of document term frequencies.\n * @property {object} documentLengths - Keeps track of the length of documents added to the index.\n * @property {lunr.tokenizer} tokenizer - Function for splitting strings into tokens for indexing.\n * @property {lunr.Pipeline} pipeline - The pipeline performs text processing on tokens before indexing.\n * @property {lunr.Pipeline} searchPipeline - A pipeline for processing search terms before querying the index.\n * @property {number} documentCount - Keeps track of the total number of documents indexed.\n * @property {number} _b - A parameter to control field length normalization, setting this to 0 disabled normalization, 1 fully normalizes field lengths, the default value is 0.75.\n * @property {number} _k1 - A parameter to control how quickly an increase in term frequency results in term frequency saturation, the default value is 1.2.\n * @property {number} termIndex - A counter incremented for each unique term, used to identify a terms position in the vector space.\n * @property {array} metadataWhitelist - A list of metadata keys that have been whitelisted for entry in the index.\n */\nlunr.Builder = function () {\n  this._ref = \"id\"\n  this._fields = Object.create(null)\n  this._documents = Object.create(null)\n  this.invertedIndex = Object.create(null)\n  this.fieldTermFrequencies = {}\n  this.fieldLengths = {}\n  this.tokenizer = lunr.tokenizer\n  this.pipeline = new lunr.Pipeline\n  this.searchPipeline = new lunr.Pipeline\n  this.documentCount = 0\n  this._b = 0.75\n  this._k1 = 1.2\n  this.termIndex = 0\n  this.metadataWhitelist = []\n}\n\n/**\n * Sets the document field used as the document reference. Every document must have this field.\n * The type of this field in the document should be a string, if it is not a string it will be\n * coerced into a string by calling toString.\n *\n * The default ref is 'id'.\n *\n * The ref should _not_ be changed during indexing, it should be set before any documents are\n * added to the index. Changing it during indexing can lead to inconsistent results.\n *\n * @param {string} ref - The name of the reference field in the document.\n */\nlunr.Builder.prototype.ref = function (ref) {\n  this._ref = ref\n}\n\n/**\n * A function that is used to extract a field from a document.\n *\n * Lunr expects a field to be at the top level of a document, if however the field\n * is deeply nested within a document an extractor function can be used to extract\n * the right field for indexing.\n *\n * @callback fieldExtractor\n * @param {object} doc - The document being added to the index.\n * @returns {?(string|object|object[])} obj - The object that will be indexed for this field.\n * @example <caption>Extracting a nested field</caption>\n * function (doc) { return doc.nested.field }\n */\n\n/**\n * Adds a field to the list of document fields that will be indexed. Every document being\n * indexed should have this field. Null values for this field in indexed documents will\n * not cause errors but will limit the chance of that document being retrieved by searches.\n *\n * All fields should be added before adding documents to the index. Adding fields after\n * a document has been indexed will have no effect on already indexed documents.\n *\n * Fields can be boosted at build time. This allows terms within that field to have more\n * importance when ranking search results. Use a field boost to specify that matches within\n * one field are more important than other fields.\n *\n * @param {string} fieldName - The name of a field to index in all documents.\n * @param {object} attributes - Optional attributes associated with this field.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this field.\n * @param {fieldExtractor} [attributes.extractor] - Function to extract a field from a document.\n * @throws {RangeError} fieldName cannot contain unsupported characters '/'\n */\nlunr.Builder.prototype.field = function (fieldName, attributes) {\n  if (/\\//.test(fieldName)) {\n    throw new RangeError (\"Field '\" + fieldName + \"' contains illegal character '/'\")\n  }\n\n  this._fields[fieldName] = attributes || {}\n}\n\n/**\n * A parameter to tune the amount of field length normalisation that is applied when\n * calculating relevance scores. A value of 0 will completely disable any normalisation\n * and a value of 1 will fully normalise field lengths. The default is 0.75. Values of b\n * will be clamped to the range 0 - 1.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.b = function (number) {\n  if (number < 0) {\n    this._b = 0\n  } else if (number > 1) {\n    this._b = 1\n  } else {\n    this._b = number\n  }\n}\n\n/**\n * A parameter that controls the speed at which a rise in term frequency results in term\n * frequency saturation. The default value is 1.2. Setting this to a higher value will give\n * slower saturation levels, a lower value will result in quicker saturation.\n *\n * @param {number} number - The value to set for this tuning parameter.\n */\nlunr.Builder.prototype.k1 = function (number) {\n  this._k1 = number\n}\n\n/**\n * Adds a document to the index.\n *\n * Before adding fields to the index the index should have been fully setup, with the document\n * ref and all fields to index already having been specified.\n *\n * The document must have a field name as specified by the ref (by default this is 'id') and\n * it should have all fields defined for indexing, though null or undefined values will not\n * cause errors.\n *\n * Entire documents can be boosted at build time. Applying a boost to a document indicates that\n * this document should rank higher in search results than other documents.\n *\n * @param {object} doc - The document to add to the index.\n * @param {object} attributes - Optional attributes associated with this document.\n * @param {number} [attributes.boost=1] - Boost applied to all terms within this document.\n */\nlunr.Builder.prototype.add = function (doc, attributes) {\n  var docRef = doc[this._ref],\n      fields = Object.keys(this._fields)\n\n  this._documents[docRef] = attributes || {}\n  this.documentCount += 1\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i],\n        extractor = this._fields[fieldName].extractor,\n        field = extractor ? extractor(doc) : doc[fieldName],\n        tokens = this.tokenizer(field, {\n          fields: [fieldName]\n        }),\n        terms = this.pipeline.run(tokens),\n        fieldRef = new lunr.FieldRef (docRef, fieldName),\n        fieldTerms = Object.create(null)\n\n    this.fieldTermFrequencies[fieldRef] = fieldTerms\n    this.fieldLengths[fieldRef] = 0\n\n    // store the length of this field for this document\n    this.fieldLengths[fieldRef] += terms.length\n\n    // calculate term frequencies for this field\n    for (var j = 0; j < terms.length; j++) {\n      var term = terms[j]\n\n      if (fieldTerms[term] == undefined) {\n        fieldTerms[term] = 0\n      }\n\n      fieldTerms[term] += 1\n\n      // add to inverted index\n      // create an initial posting if one doesn't exist\n      if (this.invertedIndex[term] == undefined) {\n        var posting = Object.create(null)\n        posting[\"_index\"] = this.termIndex\n        this.termIndex += 1\n\n        for (var k = 0; k < fields.length; k++) {\n          posting[fields[k]] = Object.create(null)\n        }\n\n        this.invertedIndex[term] = posting\n      }\n\n      // add an entry for this term/fieldName/docRef to the invertedIndex\n      if (this.invertedIndex[term][fieldName][docRef] == undefined) {\n        this.invertedIndex[term][fieldName][docRef] = Object.create(null)\n      }\n\n      // store all whitelisted metadata about this token in the\n      // inverted index\n      for (var l = 0; l < this.metadataWhitelist.length; l++) {\n        var metadataKey = this.metadataWhitelist[l],\n            metadata = term.metadata[metadataKey]\n\n        if (this.invertedIndex[term][fieldName][docRef][metadataKey] == undefined) {\n          this.invertedIndex[term][fieldName][docRef][metadataKey] = []\n        }\n\n        this.invertedIndex[term][fieldName][docRef][metadataKey].push(metadata)\n      }\n    }\n\n  }\n}\n\n/**\n * Calculates the average document length for this index\n *\n * @private\n */\nlunr.Builder.prototype.calculateAverageFieldLengths = function () {\n\n  var fieldRefs = Object.keys(this.fieldLengths),\n      numberOfFields = fieldRefs.length,\n      accumulator = {},\n      documentsWithField = {}\n\n  for (var i = 0; i < numberOfFields; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        field = fieldRef.fieldName\n\n    documentsWithField[field] || (documentsWithField[field] = 0)\n    documentsWithField[field] += 1\n\n    accumulator[field] || (accumulator[field] = 0)\n    accumulator[field] += this.fieldLengths[fieldRef]\n  }\n\n  var fields = Object.keys(this._fields)\n\n  for (var i = 0; i < fields.length; i++) {\n    var fieldName = fields[i]\n    accumulator[fieldName] = accumulator[fieldName] / documentsWithField[fieldName]\n  }\n\n  this.averageFieldLength = accumulator\n}\n\n/**\n * Builds a vector space model of every document using lunr.Vector\n *\n * @private\n */\nlunr.Builder.prototype.createFieldVectors = function () {\n  var fieldVectors = {},\n      fieldRefs = Object.keys(this.fieldTermFrequencies),\n      fieldRefsLength = fieldRefs.length,\n      termIdfCache = Object.create(null)\n\n  for (var i = 0; i < fieldRefsLength; i++) {\n    var fieldRef = lunr.FieldRef.fromString(fieldRefs[i]),\n        fieldName = fieldRef.fieldName,\n        fieldLength = this.fieldLengths[fieldRef],\n        fieldVector = new lunr.Vector,\n        termFrequencies = this.fieldTermFrequencies[fieldRef],\n        terms = Object.keys(termFrequencies),\n        termsLength = terms.length\n\n\n    var fieldBoost = this._fields[fieldName].boost || 1,\n        docBoost = this._documents[fieldRef.docRef].boost || 1\n\n    for (var j = 0; j < termsLength; j++) {\n      var term = terms[j],\n          tf = termFrequencies[term],\n          termIndex = this.invertedIndex[term]._index,\n          idf, score, scoreWithPrecision\n\n      if (termIdfCache[term] === undefined) {\n        idf = lunr.idf(this.invertedIndex[term], this.documentCount)\n        termIdfCache[term] = idf\n      } else {\n        idf = termIdfCache[term]\n      }\n\n      score = idf * ((this._k1 + 1) * tf) / (this._k1 * (1 - this._b + this._b * (fieldLength / this.averageFieldLength[fieldName])) + tf)\n      score *= fieldBoost\n      score *= docBoost\n      scoreWithPrecision = Math.round(score * 1000) / 1000\n      // Converts 1.23456789 to 1.234.\n      // Reducing the precision so that the vectors take up less\n      // space when serialised. Doing it now so that they behave\n      // the same before and after serialisation. Also, this is\n      // the fastest approach to reducing a number's precision in\n      // JavaScript.\n\n      fieldVector.insert(termIndex, scoreWithPrecision)\n    }\n\n    fieldVectors[fieldRef] = fieldVector\n  }\n\n  this.fieldVectors = fieldVectors\n}\n\n/**\n * Creates a token set of all tokens in the index using lunr.TokenSet\n *\n * @private\n */\nlunr.Builder.prototype.createTokenSet = function () {\n  this.tokenSet = lunr.TokenSet.fromArray(\n    Object.keys(this.invertedIndex).sort()\n  )\n}\n\n/**\n * Builds the index, creating an instance of lunr.Index.\n *\n * This completes the indexing process and should only be called\n * once all documents have been added to the index.\n *\n * @returns {lunr.Index}\n */\nlunr.Builder.prototype.build = function () {\n  this.calculateAverageFieldLengths()\n  this.createFieldVectors()\n  this.createTokenSet()\n\n  return new lunr.Index({\n    invertedIndex: this.invertedIndex,\n    fieldVectors: this.fieldVectors,\n    tokenSet: this.tokenSet,\n    fields: Object.keys(this._fields),\n    pipeline: this.searchPipeline\n  })\n}\n\n/**\n * Applies a plugin to the index builder.\n *\n * A plugin is a function that is called with the index builder as its context.\n * Plugins can be used to customise or extend the behaviour of the index\n * in some way. A plugin is just a function, that encapsulated the custom\n * behaviour that should be applied when building the index.\n *\n * The plugin function will be called with the index builder as its argument, additional\n * arguments can also be passed when calling use. The function will be called\n * with the index builder as its context.\n *\n * @param {Function} plugin The plugin to apply.\n */\nlunr.Builder.prototype.use = function (fn) {\n  var args = Array.prototype.slice.call(arguments, 1)\n  args.unshift(this)\n  fn.apply(this, args)\n}\n/**\n * Contains and collects metadata about a matching document.\n * A single instance of lunr.MatchData is returned as part of every\n * lunr.Index~Result.\n *\n * @constructor\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n * @property {object} metadata - A cloned collection of metadata associated with this document.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData = function (term, field, metadata) {\n  var clonedMetadata = Object.create(null),\n      metadataKeys = Object.keys(metadata || {})\n\n  // Cloning the metadata to prevent the original\n  // being mutated during match data combination.\n  // Metadata is kept in an array within the inverted\n  // index so cloning the data can be done with\n  // Array#slice\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n    clonedMetadata[key] = metadata[key].slice()\n  }\n\n  this.metadata = Object.create(null)\n\n  if (term !== undefined) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = clonedMetadata\n  }\n}\n\n/**\n * An instance of lunr.MatchData will be created for every term that matches a\n * document. However only one instance is required in a lunr.Index~Result. This\n * method combines metadata from another instance of lunr.MatchData with this\n * objects metadata.\n *\n * @param {lunr.MatchData} otherMatchData - Another instance of match data to merge with this one.\n * @see {@link lunr.Index~Result}\n */\nlunr.MatchData.prototype.combine = function (otherMatchData) {\n  var terms = Object.keys(otherMatchData.metadata)\n\n  for (var i = 0; i < terms.length; i++) {\n    var term = terms[i],\n        fields = Object.keys(otherMatchData.metadata[term])\n\n    if (this.metadata[term] == undefined) {\n      this.metadata[term] = Object.create(null)\n    }\n\n    for (var j = 0; j < fields.length; j++) {\n      var field = fields[j],\n          keys = Object.keys(otherMatchData.metadata[term][field])\n\n      if (this.metadata[term][field] == undefined) {\n        this.metadata[term][field] = Object.create(null)\n      }\n\n      for (var k = 0; k < keys.length; k++) {\n        var key = keys[k]\n\n        if (this.metadata[term][field][key] == undefined) {\n          this.metadata[term][field][key] = otherMatchData.metadata[term][field][key]\n        } else {\n          this.metadata[term][field][key] = this.metadata[term][field][key].concat(otherMatchData.metadata[term][field][key])\n        }\n\n      }\n    }\n  }\n}\n\n/**\n * Add metadata for a term/field pair to this instance of match data.\n *\n * @param {string} term - The term this match data is associated with\n * @param {string} field - The field in which the term was found\n * @param {object} metadata - The metadata recorded about this term in this field\n */\nlunr.MatchData.prototype.add = function (term, field, metadata) {\n  if (!(term in this.metadata)) {\n    this.metadata[term] = Object.create(null)\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  if (!(field in this.metadata[term])) {\n    this.metadata[term][field] = metadata\n    return\n  }\n\n  var metadataKeys = Object.keys(metadata)\n\n  for (var i = 0; i < metadataKeys.length; i++) {\n    var key = metadataKeys[i]\n\n    if (key in this.metadata[term][field]) {\n      this.metadata[term][field][key] = this.metadata[term][field][key].concat(metadata[key])\n    } else {\n      this.metadata[term][field][key] = metadata[key]\n    }\n  }\n}\n/**\n * A lunr.Query provides a programmatic way of defining queries to be performed\n * against a {@link lunr.Index}.\n *\n * Prefer constructing a lunr.Query using the {@link lunr.Index#query} method\n * so the query object is pre-initialized with the right index fields.\n *\n * @constructor\n * @property {lunr.Query~Clause[]} clauses - An array of query clauses.\n * @property {string[]} allFields - An array of all available fields in a lunr.Index.\n */\nlunr.Query = function (allFields) {\n  this.clauses = []\n  this.allFields = allFields\n}\n\n/**\n * Constants for indicating what kind of automatic wildcard insertion will be used when constructing a query clause.\n *\n * This allows wildcards to be added to the beginning and end of a term without having to manually do any string\n * concatenation.\n *\n * The wildcard constants can be bitwise combined to select both leading and trailing wildcards.\n *\n * @constant\n * @default\n * @property {number} wildcard.NONE - The term will have no wildcards inserted, this is the default behaviour\n * @property {number} wildcard.LEADING - Prepend the term with a wildcard, unless a leading wildcard already exists\n * @property {number} wildcard.TRAILING - Append a wildcard to the term, unless a trailing wildcard already exists\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with trailing wildcard</caption>\n * query.term('foo', { wildcard: lunr.Query.wildcard.TRAILING })\n * @example <caption>query term with leading and trailing wildcard</caption>\n * query.term('foo', {\n *   wildcard: lunr.Query.wildcard.LEADING | lunr.Query.wildcard.TRAILING\n * })\n */\n\nlunr.Query.wildcard = new String (\"*\")\nlunr.Query.wildcard.NONE = 0\nlunr.Query.wildcard.LEADING = 1\nlunr.Query.wildcard.TRAILING = 2\n\n/**\n * Constants for indicating what kind of presence a term must have in matching documents.\n *\n * @constant\n * @enum {number}\n * @see lunr.Query~Clause\n * @see lunr.Query#clause\n * @see lunr.Query#term\n * @example <caption>query term with required presence</caption>\n * query.term('foo', { presence: lunr.Query.presence.REQUIRED })\n */\nlunr.Query.presence = {\n  /**\n   * Term's presence in a document is optional, this is the default value.\n   */\n  OPTIONAL: 1,\n\n  /**\n   * Term's presence in a document is required, documents that do not contain\n   * this term will not be returned.\n   */\n  REQUIRED: 2,\n\n  /**\n   * Term's presence in a document is prohibited, documents that do contain\n   * this term will not be returned.\n   */\n  PROHIBITED: 3\n}\n\n/**\n * A single clause in a {@link lunr.Query} contains a term and details on how to\n * match that term against a {@link lunr.Index}.\n *\n * @typedef {Object} lunr.Query~Clause\n * @property {string[]} fields - The fields in an index this clause should be matched against.\n * @property {number} [boost=1] - Any boost that should be applied when matching this clause.\n * @property {number} [editDistance] - Whether the term should have fuzzy matching applied, and how fuzzy the match should be.\n * @property {boolean} [usePipeline] - Whether the term should be passed through the search pipeline.\n * @property {number} [wildcard=lunr.Query.wildcard.NONE] - Whether the term should have wildcards appended or prepended.\n * @property {number} [presence=lunr.Query.presence.OPTIONAL] - The terms presence in any matching documents.\n */\n\n/**\n * Adds a {@link lunr.Query~Clause} to this query.\n *\n * Unless the clause contains the fields to be matched all fields will be matched. In addition\n * a default boost of 1 is applied to the clause.\n *\n * @param {lunr.Query~Clause} clause - The clause to add to this query.\n * @see lunr.Query~Clause\n * @returns {lunr.Query}\n */\nlunr.Query.prototype.clause = function (clause) {\n  if (!('fields' in clause)) {\n    clause.fields = this.allFields\n  }\n\n  if (!('boost' in clause)) {\n    clause.boost = 1\n  }\n\n  if (!('usePipeline' in clause)) {\n    clause.usePipeline = true\n  }\n\n  if (!('wildcard' in clause)) {\n    clause.wildcard = lunr.Query.wildcard.NONE\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.LEADING) && (clause.term.charAt(0) != lunr.Query.wildcard)) {\n    clause.term = \"*\" + clause.term\n  }\n\n  if ((clause.wildcard & lunr.Query.wildcard.TRAILING) && (clause.term.slice(-1) != lunr.Query.wildcard)) {\n    clause.term = \"\" + clause.term + \"*\"\n  }\n\n  if (!('presence' in clause)) {\n    clause.presence = lunr.Query.presence.OPTIONAL\n  }\n\n  this.clauses.push(clause)\n\n  return this\n}\n\n/**\n * A negated query is one in which every clause has a presence of\n * prohibited. These queries require some special processing to return\n * the expected results.\n *\n * @returns boolean\n */\nlunr.Query.prototype.isNegated = function () {\n  for (var i = 0; i < this.clauses.length; i++) {\n    if (this.clauses[i].presence != lunr.Query.presence.PROHIBITED) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * Adds a term to the current query, under the covers this will create a {@link lunr.Query~Clause}\n * to the list of clauses that make up this query.\n *\n * The term is used as is, i.e. no tokenization will be performed by this method. Instead conversion\n * to a token or token-like string should be done before calling this method.\n *\n * The term will be converted to a string by calling `toString`. Multiple terms can be passed as an\n * array, each term in the array will share the same options.\n *\n * @param {object|object[]} term - The term(s) to add to the query.\n * @param {object} [options] - Any additional properties to add to the query clause.\n * @returns {lunr.Query}\n * @see lunr.Query#clause\n * @see lunr.Query~Clause\n * @example <caption>adding a single term to a query</caption>\n * query.term(\"foo\")\n * @example <caption>adding a single term to a query and specifying search fields, term boost and automatic trailing wildcard</caption>\n * query.term(\"foo\", {\n *   fields: [\"title\"],\n *   boost: 10,\n *   wildcard: lunr.Query.wildcard.TRAILING\n * })\n * @example <caption>using lunr.tokenizer to convert a string to tokens before using them as terms</caption>\n * query.term(lunr.tokenizer(\"foo bar\"))\n */\nlunr.Query.prototype.term = function (term, options) {\n  if (Array.isArray(term)) {\n    term.forEach(function (t) { this.term(t, lunr.utils.clone(options)) }, this)\n    return this\n  }\n\n  var clause = options || {}\n  clause.term = term.toString()\n\n  this.clause(clause)\n\n  return this\n}\nlunr.QueryParseError = function (message, start, end) {\n  this.name = \"QueryParseError\"\n  this.message = message\n  this.start = start\n  this.end = end\n}\n\nlunr.QueryParseError.prototype = new Error\nlunr.QueryLexer = function (str) {\n  this.lexemes = []\n  this.str = str\n  this.length = str.length\n  this.pos = 0\n  this.start = 0\n  this.escapeCharPositions = []\n}\n\nlunr.QueryLexer.prototype.run = function () {\n  var state = lunr.QueryLexer.lexText\n\n  while (state) {\n    state = state(this)\n  }\n}\n\nlunr.QueryLexer.prototype.sliceString = function () {\n  var subSlices = [],\n      sliceStart = this.start,\n      sliceEnd = this.pos\n\n  for (var i = 0; i < this.escapeCharPositions.length; i++) {\n    sliceEnd = this.escapeCharPositions[i]\n    subSlices.push(this.str.slice(sliceStart, sliceEnd))\n    sliceStart = sliceEnd + 1\n  }\n\n  subSlices.push(this.str.slice(sliceStart, this.pos))\n  this.escapeCharPositions.length = 0\n\n  return subSlices.join('')\n}\n\nlunr.QueryLexer.prototype.emit = function (type) {\n  this.lexemes.push({\n    type: type,\n    str: this.sliceString(),\n    start: this.start,\n    end: this.pos\n  })\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.escapeCharacter = function () {\n  this.escapeCharPositions.push(this.pos - 1)\n  this.pos += 1\n}\n\nlunr.QueryLexer.prototype.next = function () {\n  if (this.pos >= this.length) {\n    return lunr.QueryLexer.EOS\n  }\n\n  var char = this.str.charAt(this.pos)\n  this.pos += 1\n  return char\n}\n\nlunr.QueryLexer.prototype.width = function () {\n  return this.pos - this.start\n}\n\nlunr.QueryLexer.prototype.ignore = function () {\n  if (this.start == this.pos) {\n    this.pos += 1\n  }\n\n  this.start = this.pos\n}\n\nlunr.QueryLexer.prototype.backup = function () {\n  this.pos -= 1\n}\n\nlunr.QueryLexer.prototype.acceptDigitRun = function () {\n  var char, charCode\n\n  do {\n    char = this.next()\n    charCode = char.charCodeAt(0)\n  } while (charCode > 47 && charCode < 58)\n\n  if (char != lunr.QueryLexer.EOS) {\n    this.backup()\n  }\n}\n\nlunr.QueryLexer.prototype.more = function () {\n  return this.pos < this.length\n}\n\nlunr.QueryLexer.EOS = 'EOS'\nlunr.QueryLexer.FIELD = 'FIELD'\nlunr.QueryLexer.TERM = 'TERM'\nlunr.QueryLexer.EDIT_DISTANCE = 'EDIT_DISTANCE'\nlunr.QueryLexer.BOOST = 'BOOST'\nlunr.QueryLexer.PRESENCE = 'PRESENCE'\n\nlunr.QueryLexer.lexField = function (lexer) {\n  lexer.backup()\n  lexer.emit(lunr.QueryLexer.FIELD)\n  lexer.ignore()\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexTerm = function (lexer) {\n  if (lexer.width() > 1) {\n    lexer.backup()\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n\n  lexer.ignore()\n\n  if (lexer.more()) {\n    return lunr.QueryLexer.lexText\n  }\n}\n\nlunr.QueryLexer.lexEditDistance = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.EDIT_DISTANCE)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexBoost = function (lexer) {\n  lexer.ignore()\n  lexer.acceptDigitRun()\n  lexer.emit(lunr.QueryLexer.BOOST)\n  return lunr.QueryLexer.lexText\n}\n\nlunr.QueryLexer.lexEOS = function (lexer) {\n  if (lexer.width() > 0) {\n    lexer.emit(lunr.QueryLexer.TERM)\n  }\n}\n\n// This matches the separator used when tokenising fields\n// within a document. These should match otherwise it is\n// not possible to search for some tokens within a document.\n//\n// It is possible for the user to change the separator on the\n// tokenizer so it _might_ clash with any other of the special\n// characters already used within the search string, e.g. :.\n//\n// This means that it is possible to change the separator in\n// such a way that makes some words unsearchable using a search\n// string.\nlunr.QueryLexer.termSeparator = lunr.tokenizer.separator\n\nlunr.QueryLexer.lexText = function (lexer) {\n  while (true) {\n    var char = lexer.next()\n\n    if (char == lunr.QueryLexer.EOS) {\n      return lunr.QueryLexer.lexEOS\n    }\n\n    // Escape character is '\\'\n    if (char.charCodeAt(0) == 92) {\n      lexer.escapeCharacter()\n      continue\n    }\n\n    if (char == \":\") {\n      return lunr.QueryLexer.lexField\n    }\n\n    if (char == \"~\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexEditDistance\n    }\n\n    if (char == \"^\") {\n      lexer.backup()\n      if (lexer.width() > 0) {\n        lexer.emit(lunr.QueryLexer.TERM)\n      }\n      return lunr.QueryLexer.lexBoost\n    }\n\n    // \"+\" indicates term presence is required\n    // checking for length to ensure that only\n    // leading \"+\" are considered\n    if (char == \"+\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    // \"-\" indicates term presence is prohibited\n    // checking for length to ensure that only\n    // leading \"-\" are considered\n    if (char == \"-\" && lexer.width() === 1) {\n      lexer.emit(lunr.QueryLexer.PRESENCE)\n      return lunr.QueryLexer.lexText\n    }\n\n    if (char.match(lunr.QueryLexer.termSeparator)) {\n      return lunr.QueryLexer.lexTerm\n    }\n  }\n}\n\nlunr.QueryParser = function (str, query) {\n  this.lexer = new lunr.QueryLexer (str)\n  this.query = query\n  this.currentClause = {}\n  this.lexemeIdx = 0\n}\n\nlunr.QueryParser.prototype.parse = function () {\n  this.lexer.run()\n  this.lexemes = this.lexer.lexemes\n\n  var state = lunr.QueryParser.parseClause\n\n  while (state) {\n    state = state(this)\n  }\n\n  return this.query\n}\n\nlunr.QueryParser.prototype.peekLexeme = function () {\n  return this.lexemes[this.lexemeIdx]\n}\n\nlunr.QueryParser.prototype.consumeLexeme = function () {\n  var lexeme = this.peekLexeme()\n  this.lexemeIdx += 1\n  return lexeme\n}\n\nlunr.QueryParser.prototype.nextClause = function () {\n  var completedClause = this.currentClause\n  this.query.clause(completedClause)\n  this.currentClause = {}\n}\n\nlunr.QueryParser.parseClause = function (parser) {\n  var lexeme = parser.peekLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.type) {\n    case lunr.QueryLexer.PRESENCE:\n      return lunr.QueryParser.parsePresence\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expected either a field or a term, found \" + lexeme.type\n\n      if (lexeme.str.length >= 1) {\n        errorMessage += \" with value '\" + lexeme.str + \"'\"\n      }\n\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n}\n\nlunr.QueryParser.parsePresence = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  switch (lexeme.str) {\n    case \"-\":\n      parser.currentClause.presence = lunr.Query.presence.PROHIBITED\n      break\n    case \"+\":\n      parser.currentClause.presence = lunr.Query.presence.REQUIRED\n      break\n    default:\n      var errorMessage = \"unrecognised presence operator'\" + lexeme.str + \"'\"\n      throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term or field, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.FIELD:\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term or field, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseField = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  if (parser.query.allFields.indexOf(lexeme.str) == -1) {\n    var possibleFields = parser.query.allFields.map(function (f) { return \"'\" + f + \"'\" }).join(', '),\n        errorMessage = \"unrecognised field '\" + lexeme.str + \"', possible fields: \" + possibleFields\n\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.fields = [lexeme.str]\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    var errorMessage = \"expecting term, found nothing\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      return lunr.QueryParser.parseTerm\n    default:\n      var errorMessage = \"expecting term, found '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseTerm = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  parser.currentClause.term = lexeme.str.toLowerCase()\n\n  if (lexeme.str.indexOf(\"*\") != -1) {\n    parser.currentClause.usePipeline = false\n  }\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseEditDistance = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var editDistance = parseInt(lexeme.str, 10)\n\n  if (isNaN(editDistance)) {\n    var errorMessage = \"edit distance must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.editDistance = editDistance\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\nlunr.QueryParser.parseBoost = function (parser) {\n  var lexeme = parser.consumeLexeme()\n\n  if (lexeme == undefined) {\n    return\n  }\n\n  var boost = parseInt(lexeme.str, 10)\n\n  if (isNaN(boost)) {\n    var errorMessage = \"boost must be numeric\"\n    throw new lunr.QueryParseError (errorMessage, lexeme.start, lexeme.end)\n  }\n\n  parser.currentClause.boost = boost\n\n  var nextLexeme = parser.peekLexeme()\n\n  if (nextLexeme == undefined) {\n    parser.nextClause()\n    return\n  }\n\n  switch (nextLexeme.type) {\n    case lunr.QueryLexer.TERM:\n      parser.nextClause()\n      return lunr.QueryParser.parseTerm\n    case lunr.QueryLexer.FIELD:\n      parser.nextClause()\n      return lunr.QueryParser.parseField\n    case lunr.QueryLexer.EDIT_DISTANCE:\n      return lunr.QueryParser.parseEditDistance\n    case lunr.QueryLexer.BOOST:\n      return lunr.QueryParser.parseBoost\n    case lunr.QueryLexer.PRESENCE:\n      parser.nextClause()\n      return lunr.QueryParser.parsePresence\n    default:\n      var errorMessage = \"Unexpected lexeme type '\" + nextLexeme.type + \"'\"\n      throw new lunr.QueryParseError (errorMessage, nextLexeme.start, nextLexeme.end)\n  }\n}\n\n  /**\n   * export the module via AMD, CommonJS or as a browser global\n   * Export code from https://github.com/umdjs/umd/blob/master/returnExports.js\n   */\n  ;(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n      // AMD. Register as an anonymous module.\n      define(factory)\n    } else if (typeof exports === 'object') {\n      /**\n       * Node. Does not work with strict CommonJS, but\n       * only CommonJS-like enviroments that support module.exports,\n       * like Node.\n       */\n      module.exports = factory()\n    } else {\n      // Browser globals (root is window)\n      root.lunr = factory()\n    }\n  }(this, function () {\n    /**\n     * Just return a value to define the module export.\n     * This example returns an object, but the module\n     * can return a function as the exported value.\n     */\n    return lunr\n  }))\n})();\n"],"names":["Wallet","EventEmitter","constructor","provider","_network","Map","e","_injectedProvider","source","window","origin","_providerUrl","_a","_popup","data","method","newPublicKey","PublicKey","params","publicKey","_publicKey","equals","handleDisconnect","_autoApprove","autoApprove","emit","result","error","promises","_responsePromises","get","id","resolve","reject","Error","disconnect","a","isObject","postMessage","isString","URL","hash","URLSearchParams","location","network","toString","handleConnect","_handlerAdded","addEventListener","handleMessage","_beforeUnload","Promise","sendRequest","name","open","once","removeEventListener","forEach","delete","connected","requestId","_nextRequestId","set","jsonrpc","_b","_c","_d","focus","connect","close","sign","display","Uint8Array","response","signature","bs58","signTransaction","transaction","message","serializeMessage","addSignature","signAllTransactions","transactions","messages","map","tx","signatures","s","idx","diffieHellman","module","exports","t","n","r","o","u","i","f","code","l","call","length","_dereq_","global","scheduleDrain","draining","Mutation","MutationObserver","WebKitMutationObserver","called","observer","nextTick","element","document","createTextNode","observe","characterData","setImmediate","MessageChannel","createElement","scriptEl","onreadystatechange","parentNode","removeChild","documentElement","appendChild","setTimeout","channel","port1","onmessage","port2","queue","oldQueue","len","immediate","task","push","this","self","INTERNAL","handlers","REJECTED","FULFILLED","PENDING","resolver","TypeError","state","outcome","safelyResolveThenable","QueueItem","promise","onFulfilled","onRejected","callFulfilled","otherCallFulfilled","callRejected","otherCallRejected","unwrap","func","value","returnValue","getThen","obj","then","apply","arguments","thenable","onError","onSuccess","tryToUnwrap","tryCatch","status","out","reason","all","iterable","Object","prototype","values","Array","resolved","allResolver","resolveFromAll","outValue","race","_typeof","Symbol","iterator","_classCallCheck","instance","Constructor","getIDB","indexedDB","webkitIndexedDB","mozIndexedDB","OIndexedDB","msIndexedDB","idb","isIndexedDBValid","isSafari","openDatabase","test","navigator","userAgent","platform","hasFetch","fetch","indexOf","IDBKeyRange","createBlob","parts","properties","Blob","builder","BlobBuilder","MSBlobBuilder","MozBlobBuilder","WebKitBlobBuilder","append","getBlob","type","Promise$1","executeCallback","callback","executeTwoCallbacks","errorCallback","normalizeKey","key","console","warn","String","getCallback","DETECT_BLOB_SUPPORT_STORE","supportsBlobs","dbContexts","READ_ONLY","READ_WRITE","_binStringToArrayBuffer","bin","buf","ArrayBuffer","arr","charCodeAt","_checkBlobSupportWithoutCaching","txn","blob","objectStore","put","onabort","preventDefault","stopPropagation","oncomplete","matchedChrome","match","matchedEdge","parseInt","_checkBlobSupport","_deferReadiness","dbInfo","dbContext","deferredOperation","deferredOperations","dbReady","_advanceReadiness","pop","_rejectReadiness","err","_getConnection","upgradeNeeded","createDbContext","db","dbArgs","version","openreq","onupgradeneeded","createObjectStore","storeName","oldVersion","ex","newVersion","onerror","onsuccess","onversionchange","target","_getOriginalConnection","_getUpgradedConnection","_isUpgradeNeeded","defaultVersion","isNewStore","objectStoreNames","contains","isDowngrade","isUpgrade","incVersion","_encodeBlob","reader","FileReader","onloadend","base64","btoa","__local_forage_encoded_blob","readAsBinaryString","_decodeBlob","encodedBlob","atob","_isEncodedBlob","_fullyReady","_initReady","_dbInfo","_tryReconnect","forages","forage","createTransaction","mode","retries","undefined","_initStorage","options","ready","initPromises","ignoreErrors","j","slice","_defaultConfig","k","getItem","req","iterate","openCursor","iterationNumber","cursor","setItem","blobSupport","store","removeItem","clear","count","advanced","openKeyCursor","advance","keys","dropInstance","currentConfig","config","dbPromise","dropObjectPromise","deleteObjectStore","_forage2","dropDBPromise","deleteDatabase","onblocked","asyncStorage","_driver","_support","isWebSQLValid","BASE_CHARS","BLOB_TYPE_PREFIX","BLOB_TYPE_PREFIX_REGEX","SERIALIZED_MARKER","SERIALIZED_MARKER_LENGTH","TYPE_ARRAYBUFFER","TYPE_BLOB","TYPE_INT8ARRAY","TYPE_UINT8ARRAY","TYPE_UINT8CLAMPEDARRAY","TYPE_INT16ARRAY","TYPE_INT32ARRAY","TYPE_UINT16ARRAY","TYPE_UINT32ARRAY","TYPE_FLOAT32ARRAY","TYPE_FLOAT64ARRAY","TYPE_SERIALIZED_MARKER_LENGTH","toString$1","stringToBuffer","serializedString","encoded1","encoded2","encoded3","encoded4","bufferLength","p","buffer","bytes","bufferToString","base64String","substring","serialize","valueType","marker","fileReader","onload","str","readAsArrayBuffer","JSON","stringify","deserialize","parse","blobType","matcher","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","localforageSerializer","createDbTable","executeSql","_initStorage$1","dbInfoPromise","description","size","serializer","tryExecuteSql","sqlStatement","args","SYNTAX_ERR","results","rows","getItem$1","item","iterate$1","_setItem","retriesLeft","originalValue","sqlError","QUOTA_ERR","setItem$1","removeItem$1","clear$1","length$1","c","key$1","keys$1","getAllStoreNames","storeNames","dropInstance$1","operationInfo","dropTable","operations","webSQLStorage","isLocalStorageValid","localStorage","_getKeyPrefix","defaultConfig","keyPrefix","checkIfLocalStorageThrows","localStorageTestKey","_isLocalStorageUsable","_initStorage$2","clear$2","getItem$2","iterate$2","keyPrefixLength","key$2","keys$2","itemKey","length$2","removeItem$2","setItem$2","dropInstance$2","localStorageWrapper","sameValue","x","y","isNaN","includes","array","searchElement","isArray","arg","DefinedDrivers","DriverSupport","DefaultDrivers","INDEXEDDB","WEBSQL","LOCALSTORAGE","DefaultDriverOrder","OptionalDriverMethods","LibraryMethods","concat","DefaultConfig","driver","callWhenReady","localForageInstance","libraryMethod","_args","extend","_key","hasOwnProperty","LocalForage","driverTypeKey","driverName","defineDriver","_config","_driverSet","_initDriver","_ready","_wrapLibraryMethodsWithReady","setDriver","replace","driverObject","complianceError","driverMethods","driverMethodName","configureMissingMethods","methodNotImplementedFactory","methodName","_i","_len","optionalDriverMethod","setDriverSupport","support","info","getDriver","getDriverPromise","getSerializer","serializerPromise","drivers","supportedDrivers","_getSupportedDrivers","setDriverToConfig","extendSelfWithDriver","_extend","initDriver","currentDriverIndex","driverPromiseLoop","oldDriverSetDone","supports","libraryMethodsAndProperties","createInstance","localforage_js","lunr","Builder","pipeline","add","trimmer","stopWordFilter","stemmer","searchPipeline","build","utils","asString","clone","create","val","FieldRef","docRef","fieldName","stringValue","_stringValue","joiner","fromString","fieldRef","Set","elements","complete","intersect","other","union","empty","object","b","intersection","idf","posting","documentCount","documentsWithTerm","Math","log","abs","Token","metadata","update","fn","tokenizer","toLowerCase","tokens","sliceEnd","sliceStart","sliceLength","charAt","separator","tokenMetadata","Pipeline","_stack","registeredFunctions","registerFunction","label","warnIfFunctionNotRegistered","load","serialised","fnName","fns","after","existingFn","newFn","pos","splice","before","remove","run","stackLength","memo","runString","token","reset","toJSON","Vector","_magnitude","positionForIndex","index","start","end","pivotPoint","floor","pivotIndex","insert","insertIdx","upsert","position","magnitude","sumOfSquares","elementsLength","sqrt","dot","otherVector","dotProduct","aLen","bLen","aVal","bVal","similarity","toArray","output","step2list","step3list","v","C","re_mgr0","RegExp","re_mgr1","re_meq1","re_s_v","re_1a","re2_1a","re_1b","re2_1b","re_1b_2","re2_1b_2","re3_1b_2","re4_1b_2","re_1c","re_2","re_3","re_4","re2_4","re_5","re_5_1","re3_5","porterStemmer","w","stem","suffix","firstch","re","re2","re3","re4","substr","toUpperCase","fp","exec","generateStopWordFilter","stopWords","words","reduce","stopWord","TokenSet","final","edges","_nextId","fromArray","finish","root","fromClause","clause","fromFuzzyString","term","editDistance","stack","node","editsRemaining","frame","noEditNode","char","insertionNode","substitutionNode","transposeNode","charA","charB","next","prefix","edge","_str","labels","sort","qNode","qEdges","qLen","nEdges","nLen","q","qEdge","nEdge","previousWord","uncheckedNodes","minimizedNodes","word","commonPrefix","minimize","child","nextNode","parent","downTo","childKey","Index","attrs","invertedIndex","fieldVectors","tokenSet","fields","search","queryString","query","QueryParser","Query","matchingFields","queryVectors","termFieldCache","requiredMatches","prohibitedMatches","clauses","terms","clauseMatches","usePipeline","m","termTokenSet","expandedTerms","presence","REQUIRED","field","expandedTerm","termIndex","_index","fieldPosting","matchingDocumentRefs","termField","matchingDocumentsSet","PROHIBITED","boost","fieldMatch","matchingDocumentRef","matchingFieldRef","MatchData","allRequiredMatches","allProhibitedMatches","matchingFieldRefs","matches","isNegated","docMatch","fieldVector","score","matchData","combine","ref","serializedIndex","serializedVectors","serializedInvertedIndex","tokenSetBuilder","tuple","_ref","_fields","_documents","fieldTermFrequencies","fieldLengths","_k1","metadataWhitelist","attributes","RangeError","number","k1","doc","extractor","fieldTerms","metadataKey","calculateAverageFieldLengths","fieldRefs","numberOfFields","accumulator","documentsWithField","averageFieldLength","createFieldVectors","fieldRefsLength","termIdfCache","fieldLength","termFrequencies","termsLength","fieldBoost","docBoost","scoreWithPrecision","tf","round","createTokenSet","use","unshift","clonedMetadata","metadataKeys","otherMatchData","allFields","wildcard","NONE","LEADING","TRAILING","OPTIONAL","QueryParseError","QueryLexer","lexemes","escapeCharPositions","lexText","sliceString","subSlices","join","escapeCharacter","EOS","width","ignore","backup","acceptDigitRun","charCode","more","FIELD","TERM","EDIT_DISTANCE","BOOST","PRESENCE","lexField","lexer","lexTerm","lexEditDistance","lexBoost","lexEOS","termSeparator","currentClause","lexemeIdx","parseClause","peekLexeme","consumeLexeme","lexeme","nextClause","completedClause","parser","parsePresence","parseField","parseTerm","errorMessage","nextLexeme","possibleFields","parseEditDistance","parseBoost","define"],"sourceRoot":""}