{"version":3,"file":"static/js/src_app_templates_spl-approve_proposal_tsx.c5a8afbd.chunk.js","mappings":"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","sources":["app/templates/components/proposalTemplateCard.tsx","app/templates/hooks/useTemplateDataWithProposal.ts","app/templates/spl-approve/proposal.tsx"],"sourcesContent":["import { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\n\nimport { Card, CardProps, Col, Row, Typography } from 'antd'\n\nimport useProposalMetaData from 'app/hooks/proposal/useProposalMetaData'\nimport { AppState } from 'app/model'\nimport configs from 'app/configs'\nimport ProposalStatus from 'app/components/proposalStatus'\nimport useProposalStatus from 'app/hooks/proposal/useProposalStatus'\nimport { shortenAddress } from 'shared/util'\n\nconst {\n  manifest: { appId },\n} = configs\n\ntype PropProposalTemplateCard = {\n  proposalAddress: string\n} & CardProps\n\nconst ProposalTemplateCard: React.FC<PropProposalTemplateCard> = ({\n  proposalAddress,\n  ...rest\n}) => {\n  const history = useHistory()\n  const proposalData = useSelector(\n    (state: AppState) => state.proposal[proposalAddress],\n  )\n  const { metaData } = useProposalMetaData(proposalAddress)\n  const { status } = useProposalStatus(proposalAddress)\n  const daoAddress = proposalData.dao.toBase58()\n  return (\n    <Card\n      bordered={false}\n      onClick={() =>\n        history.push(\n          `/app/${appId}/dao/${daoAddress}/proposal/${proposalAddress}`,\n        )\n      }\n      className=\"proposal-card\"\n      bodyStyle={{ padding: '24px 0', minHeight: 150 }}\n      hoverable\n      {...rest}\n    >\n      <Row gutter={[8, 8]}>\n        <Col span={24}>\n          <Row>\n            <Col flex=\"auto\">\n              <Typography.Title level={4}>\n                {metaData?.title\n                  ? metaData.title\n                  : shortenAddress(proposalAddress)}\n              </Typography.Title>\n            </Col>\n            <Col>\n              <ProposalStatus status={status} />\n            </Col>\n          </Row>\n        </Col>\n        <Col xs={24} md={20}>\n          {rest.children}\n        </Col>\n        <Col span={24}>\n          <Typography.Paragraph\n            style={{ margin: 0 }}\n            type=\"secondary\"\n            ellipsis={{ rows: 2 }}\n          >\n            {metaData?.description}\n          </Typography.Paragraph>\n        </Col>\n      </Row>\n    </Card>\n  )\n}\n\nexport default ProposalTemplateCard\n","import { useCallback, useEffect, useState } from 'react'\nimport useProposalMetaData from 'app/hooks/proposal/useProposalMetaData'\n\nexport const useTemplateDataWithProposal = <T>(proposalAddress: string) => {\n  const [templateData, setTemplateData] = useState<T>({} as T)\n  const { metaData, loading } = useProposalMetaData(proposalAddress)\n\n  const getTemplateName = useCallback(() => {\n    if (!metaData || loading || !metaData.templateData)\n      return setTemplateData({} as T)\n    return setTemplateData(metaData.templateData)\n  }, [loading, metaData])\n\n  useEffect(() => {\n    getTemplateName()\n  }, [getTemplateName])\n\n  return templateData\n}\n","import { useSelector } from 'react-redux'\nimport moment from 'moment'\n\nimport { Col, Row, Space, Typography } from 'antd'\nimport { MintAvatar, MintSymbol } from 'shared/antd/mint'\nimport RowSpaceVertical from 'app/components/rowSpaceVertical'\nimport { PropsTemplateProposalLoader } from '../templateLoader'\nimport ProposalTemplateCard from '../components/proposalTemplateCard'\n\nimport { AppState } from 'app/model'\nimport { useTemplateDataWithProposal } from '../hooks/useTemplateDataWithProposal'\nimport { SplApproveIds } from './configs'\n\nimport BG_SOLANA from 'app/static/images/templates/bg-spl.png'\n\nconst Proposal = ({ proposalAddress }: PropsTemplateProposalLoader) => {\n  const proposalData = useSelector(\n    (state: AppState) => state.proposal[proposalAddress],\n  )\n  const templateData =\n    useTemplateDataWithProposal<Record<SplApproveIds, string>>(proposalAddress)\n\n  const endTime = proposalData.endDate.toNumber() * 1000\n  const mint = templateData.mint\n\n  return (\n    <ProposalTemplateCard\n      proposalAddress={proposalAddress}\n      style={{\n        background: `url(${BG_SOLANA})`,\n      }}\n    >\n      <Row gutter={[12, 12]}>\n        <Col xs={12} md={6}>\n          <RowSpaceVertical\n            label=\"Template\"\n            value={\n              <Typography.Text className=\"t-16\">SPL/Approve</Typography.Text>\n            }\n          />\n        </Col>\n        <Col xs={12} md={6}>\n          <RowSpaceVertical\n            label=\"Token\"\n            value={\n              <Typography.Text className=\"t-16\">\n                <Space>\n                  <MintAvatar mintAddress={mint} />\n                  <MintSymbol mintAddress={mint} />\n                </Space>\n              </Typography.Text>\n            }\n          />\n        </Col>\n        <Col xs={12} md={6}>\n          <RowSpaceVertical\n            className=\"t-16\"\n            label=\"Amount\"\n            value={templateData?.amount || '--'}\n          />\n        </Col>\n        <Col xs={12} md={6}>\n          <RowSpaceVertical\n            label=\"End time\"\n            value={\n              endTime && (\n                <Typography.Text className=\"t-16\">\n                  {moment(endTime).format('hh:mm A, MMM Do, YYYY')}\n                </Typography.Text>\n              )\n            }\n          />\n        </Col>\n      </Row>\n    </ProposalTemplateCard>\n  )\n}\n\nexport default Proposal\n"],"names":["manifest","appId","configs","proposalAddress","rest","history","useHistory","proposalData","useSelector","state","proposal","metaData","useProposalMetaData","status","useProposalStatus","daoAddress","dao","toBase58","Card","bordered","onClick","push","className","bodyStyle","padding","minHeight","hoverable","Row","gutter","Col","span","flex","Typography","level","title","shortenAddress","xs","md","children","style","margin","type","ellipsis","rows","description","useTemplateDataWithProposal","templateData","setTemplateData","useState","loading","getTemplateName","useCallback","useEffect","endTime","endDate","toNumber","mint","background","BG_SOLANA","label","value","Space","mintAddress","amount","moment","format"],"sourceRoot":""}