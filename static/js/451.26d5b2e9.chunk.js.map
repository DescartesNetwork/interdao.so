{"version":3,"file":"static/js/451.26d5b2e9.chunk.js","mappings":"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","sources":["shared/antd/ionicon/assets/icon-telegram.svg","shared/antd/ionicon/customs.tsx","shared/antd/ionicon/index.tsx","app/configs/manifest.config.ts","app/helpers/safeWallet.ts","app/configs/sol.config.ts","app/configs/index.ts","app/model/dao.controller.tsx","app/view/watcher/dao.watcher.tsx","app/view/index.tsx","app/model/index.ts","app/bootstrap.app.tsx","shared/devTools.ts","shared/storage.ts","shared/runtime.ts"],"sourcesContent":["var _path;\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport * as React from \"react\";\n\nfunction SvgIconTelegram(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"inherit\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 50 50\",\n    width: \"50px\",\n    height: \"50px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M46.137,6.552c-0.75-0.636-1.928-0.727-3.146-0.238l-0.002,0C41.708,6.828,6.728,21.832,5.304,22.445 c-0.259,0.09-2.521,0.934-2.288,2.814c0.208,1.695,2.026,2.397,2.248,2.478l8.893,3.045c0.59,1.964,2.765,9.21,3.246,10.758 c0.3,0.965,0.789,2.233,1.646,2.494c0.752,0.29,1.5,0.025,1.984-0.355l5.437-5.043l8.777,6.845l0.209,0.125 c0.596,0.264,1.167,0.396,1.712,0.396c0.421,0,0.825-0.079,1.211-0.237c1.315-0.54,1.841-1.793,1.896-1.935l6.556-34.077 C47.231,7.933,46.675,7.007,46.137,6.552z M22,32l-3,8l-3-10l23-17L22,32z\"\n  })));\n}\n\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgIconTelegram);\nexport default __webpack_public_path__ + \"static/media/icon-telegram.2450489f40d03000fe65fc1c6f238d85.svg\";\nexport { ForwardRef as ReactComponent };","import IconTele from './assets/icon-telegram.svg'\n\nexport const CUSTOM_ICONS: Record<string, string> = {\n  'logo-telegram': IconTele,\n}\n","/**\n * IonIcon 5\n * Credit https://ionic.io/ionicons\n */\n\nimport { forwardRef } from 'react'\nimport { CUSTOM_ICONS } from './customs'\n\n/**\n * IonIcon\n * @param name The icon name. You can find it here https://ionic.io/ionicons\n * @param className To modify the span class\n */\nconst IonIcon = forwardRef<\n  HTMLElement,\n  { name: string; className?: string } & any\n>(({ name, className, ...props }, ref) => {\n  const cln = className ? 'anticon ' + className : 'anticon'\n\n  return (\n    <span className={cln} {...props}>\n      {CUSTOM_ICONS[name] ? (\n        <ion-icon ref={ref} src={CUSTOM_ICONS[name]} />\n      ) : (\n        <ion-icon ref={ref} name={name} />\n      )}\n    </span>\n  )\n})\n\nexport default IonIcon\n","import { Env } from 'shared/runtime'\n\nif (\n  typeof process.env.REACT_APP_ID !== 'string' ||\n  typeof process.env.REACT_APP_URL !== 'string'\n)\n  throw new Error('Please add REACT_APP_ID, REACT_APP_URL in .env!')\n\n/**\n * Contructor\n */\n\ntype Conf = {\n  appId: string\n  url: string\n}\n\nconst shared = {\n  appId: process.env.REACT_APP_ID,\n  url: process.env.REACT_APP_URL,\n}\n\nconst conf: Record<Env, Conf> = {\n  /**\n   * Development configurations\n   */\n  development: {\n    ...shared,\n  },\n\n  /**\n   * Staging configurations\n   */\n  staging: {\n    ...shared,\n  },\n\n  /**\n   * Production configurations\n   */\n  production: {\n    ...shared,\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { Transaction, PublicKey } from '@solana/web3.js'\nimport { AnchorWallet } from '@interdao/core'\nimport { WalletInterface } from '@senswap/sen-js'\n\nclass SafeWallet implements AnchorWallet {\n  private _wallet: WalletInterface = window.sentre.wallet\n  private _publicKey: PublicKey = new PublicKey(\n    'GuestAccount11111111111111111111111111111111',\n  )\n\n  constructor() {\n    this._init()\n  }\n\n  private _init = async () => {\n    const address = await this._wallet.getAddress()\n    this._publicKey = new PublicKey(address)\n  }\n\n  signTransaction = async (tx: Transaction): Promise<Transaction> => {\n    return this._wallet.signTransaction(tx)\n  }\n\n  signAllTransactions = async (txs: Transaction[]): Promise<Transaction[]> => {\n    let signedTxs: Transaction[] = []\n    for (const tx of txs) {\n      const signedTx = await this.signTransaction(tx)\n      signedTxs.push(signedTx)\n    }\n    return signedTxs\n  }\n\n  get publicKey() {\n    console.warn(\n      'This is an async getter for interface consistency. Please do not fully rely on this function.',\n    )\n    return this._publicKey\n  }\n}\n\nexport default SafeWallet\n","import InterDAO from '@interdao/core'\nimport SafeWallet from 'app/helpers/safeWallet'\nimport { Net } from 'shared/runtime'\n\n/**\n * Contructor\n */\ntype Conf = {\n  rpc: string\n  interDao: InterDAO\n}\n\nconst conf: Record<Net, Conf> = {\n  /**\n   * Development configurations\n   */\n  devnet: {\n    rpc: 'https://api.devnet.solana.com',\n    interDao: new InterDAO(new SafeWallet()),\n  },\n\n  /**\n   * Staging configurations\n   */\n  testnet: {\n    rpc: 'https://api.testnet.solana.com',\n    interDao: new InterDAO(new SafeWallet()),\n  },\n\n  /**\n   * Production configurations\n   */\n  mainnet: {\n    rpc: 'https://ssc-dao.genesysgo.net',\n    interDao: new InterDAO(new SafeWallet()),\n  },\n}\n\n/**\n * Module exports\n */\nexport default conf\n","import { env, net } from 'shared/runtime'\nimport manifest from './manifest.config'\nimport sol from './sol.config'\n\nconst configs = {\n  manifest: manifest[env],\n  sol: sol[net],\n}\n\n/**\n * Module exports\n */\nexport default configs\n","import { AccountInfo, PublicKey } from '@solana/web3.js'\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit'\nimport { DaoData } from '@interdao/core'\n\nimport configs from 'app/configs'\n\nconst {\n  sol: { interDao },\n} = configs\n\n/**\n * Interface & Utility\n */\n\nexport type DaoState = Record<string, DaoData>\n\n/**\n * Store constructor\n */\n\nconst NAME = 'dao'\nconst initialState: DaoState = {}\n\n/**\n * Actions\n */\n\nexport const getDaos = createAsyncThunk(`${NAME}/getDaos`, async () => {\n  const {\n    provider: { connection },\n    programId,\n    account,\n  } = interDao.program\n  const value: Array<{ pubkey: PublicKey; account: AccountInfo<Buffer> }> =\n    await connection.getProgramAccounts(programId, {\n      filters: [{ dataSize: account.dao.size }],\n    })\n  let bulk: DaoState = {}\n  value.forEach(({ pubkey, account: { data: buf } }) => {\n    const address = pubkey.toBase58()\n    const data = interDao.parseDaoData(buf)\n    bulk[address] = data\n  })\n  return bulk\n})\n\n/**\n * Usual procedure\n */\n\nconst slice = createSlice({\n  name: NAME,\n  initialState,\n  reducers: {},\n  extraReducers: (builder) =>\n    void builder.addCase(\n      getDaos.fulfilled,\n      (state, { payload }) => void Object.assign(state, payload),\n    ),\n})\n\nexport default slice.reducer\n","import { Fragment, useCallback, useEffect } from 'react'\nimport { useDispatch } from 'react-redux'\nimport { account } from '@senswap/sen-js'\nimport { useWallet } from '@senhub/providers'\n\nimport { getDaos } from 'app/model/dao.controller'\nimport { AppDispatch } from 'app/model'\n\nconst DaoWatcher = () => {\n  const {\n    wallet: { address: walletAddress },\n  } = useWallet()\n  const dispatch = useDispatch<AppDispatch>()\n\n  // First-time fetching\n  const fetchData = useCallback(async () => {\n    try {\n      if (!account.isAddress(walletAddress)) return\n      await dispatch(getDaos()).unwrap()\n    } catch (er) {\n      return window.notify({\n        type: 'error',\n        description: 'Cannot fetch data of DAOs',\n      })\n    }\n  }, [dispatch, walletAddress])\n\n  useEffect(() => {\n    fetchData()\n  }, [fetchData])\n\n  return <Fragment />\n}\n\nexport default DaoWatcher\n","import { useSelector } from 'react-redux'\n\nimport { Row, Col, Typography, Space } from 'antd'\nimport IonIcon from 'shared/antd/ionicon'\nimport DaoWatcher from './watcher/dao.watcher'\n\nimport { AppState } from 'app/model'\n\nconst View = () => {\n  const { dao } = useSelector((state: AppState) => state)\n\n  console.log(dao)\n\n  return (\n    <Row gutter={[24, 24]} align=\"middle\">\n      <Col span={24}>\n        <Space align=\"center\">\n          <IonIcon name=\"newspaper-outline\" />\n          <Typography.Title level={4}>App View</Typography.Title>\n        </Space>\n      </Col>\n      <DaoWatcher />\n    </Row>\n  )\n}\n\nexport default View\n","import { configureStore } from '@reduxjs/toolkit'\nimport { devTools, bigintSerializationMiddleware } from 'shared/devTools'\n\nimport dao from 'app/model/dao.controller'\n\n/**\n * Isolated store\n */\nconst model = configureStore({\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware(bigintSerializationMiddleware),\n  devTools: devTools(process.env.REACT_APP_ID as string),\n  reducer: {\n    dao,\n  },\n})\n\nexport type AppState = ReturnType<typeof model.getState>\nexport type AppDispatch = typeof model.dispatch\nexport default model\n","import { Provider } from 'react-redux'\nimport { WalletProvider, UIProvider } from '@senhub/providers'\n\nimport View from 'app/view'\n\nimport model from 'app/model'\nimport configs from 'app/configs'\n\nconst {\n  manifest: { appId },\n} = configs\n\nexport const Page = () => {\n  return (\n    <UIProvider appId={appId} antd>\n      <WalletProvider>\n        <Provider store={model}>\n          <View />\n        </Provider>\n      </WalletProvider>\n    </UIProvider>\n  )\n}\n","import { PublicKey } from '@solana/web3.js'\nimport BN from 'bn.js'\n\n// Bugfix performance\n// https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/Troubleshooting.md#excessive-use-of-memory-and-cpu\nexport const devTools = (appName: string): any => {\n  if (process.env.REACT_APP_ENV !== 'development') return false\n  return {\n    name: appName,\n    actionSanitizer: ({ payload, type }: { payload: any; type: string }) => ({\n      payload,\n      type,\n    }),\n  }\n}\n\n// BigInt Serialization Middleware\n// https://redux-toolkit.js.org/api/serializabilityMiddleware\nconst isPlain = (val: any): boolean => {\n  const isPlainObject = (obj: object): boolean => {\n    if (obj === null) return false\n    const proto = Object.getPrototypeOf(obj)\n    return proto !== null && Object.getPrototypeOf(proto) === null\n  }\n  return (\n    typeof val === 'undefined' ||\n    val === null ||\n    typeof val === 'string' ||\n    typeof val === 'boolean' ||\n    typeof val === 'number' ||\n    Array.isArray(val) ||\n    isPlainObject(val) ||\n    typeof val === 'bigint' ||\n    val instanceof PublicKey ||\n    val instanceof BN\n  )\n}\nBigInt.prototype.toJSON = function () {\n  return this.toString() // https://github.com/GoogleChromeLabs/jsbi/issues/30\n}\nexport const bigintSerializationMiddleware = {\n  serializableCheck: {\n    isSerializable: isPlain,\n  },\n}\n","const KEY = 'sentre'\nconst driver = window.localStorage\n\nconst convert = (value: string | null) => {\n  try {\n    if (!value) return null\n    return JSON.parse(value)\n  } catch (e) {\n    return null\n  }\n}\n\nconst storage = {\n  set: (key: string, value: any) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') data = {}\n    data[key] = value\n    driver.setItem(KEY, JSON.stringify(data))\n  },\n  get: (key: string) => {\n    let data = convert(driver.getItem(KEY))\n    if (!data || typeof data !== 'object') return null\n    return data[key]\n  },\n  clear: (key: string) => {\n    storage.set(key, null)\n  },\n}\n\nexport default storage\n","import storage from './storage'\n\n/**\n * Environment\n */\nconst getEnv = () => {\n  switch (process.env.REACT_APP_ENV) {\n    case 'development':\n      return 'development'\n    case 'staging':\n      return 'staging'\n    case 'production':\n      return 'production'\n    default:\n      return 'development'\n  }\n}\nexport type Env = 'development' | 'staging' | 'production'\nexport const env: Env = getEnv()\n\n/**\n * Network\n */\nconst getNetwork = () => {\n  switch (storage.get('network')) {\n    case 'devnet':\n      return 'devnet'\n    case 'testnet':\n      return 'testnet'\n    case 'mainnet':\n      return 'mainnet'\n    default:\n      return 'mainnet'\n  }\n}\nexport type Net = 'devnet' | 'testnet' | 'mainnet'\nexport const net: Net = getNetwork()\n\nexport const onSwitchNetwork = (value: Net) => {\n  storage.set('network', value)\n  return window.location.reload()\n}\n\n/**\n * Chain ID\n */\nconst getChainId = () => {\n  switch (net) {\n    case 'devnet':\n      return 103\n    case 'testnet':\n      return 102\n    case 'mainnet':\n      return 101\n    default:\n      return 101\n  }\n}\nexport type ChainId = 101 | 102 | 103\nexport const chainId: ChainId = getChainId()\n"],"names":["CUSTOM_ICONS","forwardRef","ref","name","className","props","cln","src","shared","appId","process","url","development","staging","production","constructor","_wallet","window","sentre","wallet","_publicKey","PublicKey","_init","async","address","this","getAddress","signTransaction","tx","signAllTransactions","signedTxs","txs","signedTx","push","publicKey","console","warn","devnet","rpc","interDao","InterDAO","SafeWallet","testnet","mainnet","manifest","env","sol","net","configs","getDaos","createAsyncThunk","provider","connection","programId","account","program","value","getProgramAccounts","filters","dataSize","dao","size","bulk","forEach","pubkey","data","buf","toBase58","parseDaoData","createSlice","initialState","reducers","extraReducers","builder","addCase","fulfilled","state","payload","Object","assign","walletAddress","useWallet","dispatch","useDispatch","fetchData","useCallback","unwrap","er","notify","type","description","useEffect","Fragment","useSelector","log","Row","gutter","align","Col","span","Space","Typography","level","configureStore","middleware","getDefaultMiddleware","bigintSerializationMiddleware","devTools","reducer","Page","UIProvider","antd","WalletProvider","Provider","store","model","appName","BigInt","prototype","toJSON","toString","serializableCheck","isSerializable","val","Array","isArray","obj","proto","getPrototypeOf","isPlainObject","BN","KEY","driver","localStorage","convert","JSON","parse","e","storage","set","key","getItem","setItem","stringify","get","clear","getNetwork","chainId","getChainId"],"sourceRoot":""}